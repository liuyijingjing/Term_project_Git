<strings>
<string id="gmstrftime" value="<div id='function.gmstrftime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gmstrftime.php'>gmstrftime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gmstrftime</span> &amp;mdash; <span class='dc-title'>Format a GMT/UTC time/date according to locale settings</span></p> </div> <a name='function.gmstrftime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>gmstrftime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt><span class='initializer'> = time()</span></span> ] )</div> <p class='para rdfs-comment'> Behaves the same as <a href='http://www.php.net/manual/en/function.strftime.php' class='function'>strftime()</a> except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints &amp;quot;Dec 31 1998 20:00:00&amp;quot;, while the second prints &amp;quot;Jan 01 1999 01:00:00&amp;quot;. </p> </div> <a name='function.gmstrftime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See description in <a href='http://www.php.net/manual/en/function.strftime.php' class='function'>strftime()</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>timestamp</tt></i> parameter is an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp that defaults to the current local time if a <i><tt class='parameter'>timestamp</tt></i> is not given. In other words, it defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p></dd> </dl> <p> </p> </div> <a name='function.gmstrftime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string formatted according to the given format string using the given <i><tt class='parameter'>timestamp</tt></i> or the current local time if no timestamp is given. Month and weekday names and other language dependent strings respect the current locale set with <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a>. </p> </div> <a name='function.gmstrftime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gmstrftime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_TIME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'en_US'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%b&amp;nbsp;%d&amp;nbsp;%Y&amp;nbsp;%H:%M:%S'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>20</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>31</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>98</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>gmstrftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%b&amp;nbsp;%d&amp;nbsp;%Y&amp;nbsp;%H:%M:%S'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>20</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>31</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>98</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.gmstrftime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strftime.php' class='function' rel='rdfs-seeAlso'>strftime()</a> - Format a local time/date according to locale settings</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gmmktime" value="<div id='function.gmmktime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gmmktime.php'>gmmktime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gmmktime</span> &amp;mdash; <span class='dc-title'>Get Unix timestamp for a GMT date</span></p> </div> <a name='function.gmmktime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>gmmktime</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$hour</tt><span class='initializer'> = gmdate(&amp;quot;H&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$minute</tt><span class='initializer'> = gmdate(&amp;quot;i&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$second</tt><span class='initializer'> = gmdate(&amp;quot;s&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$month</tt><span class='initializer'> = gmdate(&amp;quot;n&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt><span class='initializer'> = gmdate(&amp;quot;j&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt><span class='initializer'> = gmdate(&amp;quot;Y&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$is_dst</tt><span class='initializer'> = -1</span></span> ]]]]]]] )</div> <p class='para rdfs-comment'> Identical to <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a> except the passed parameters represents a GMT date. <b>gmmktime()</b> internally uses <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a> so only times valid in derived local time can be used. </p> <p class='para'> Like <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a>, arguments may be left out in order from right to left, with any omitted arguments being set to the current corresponding GMT value. </p> </div> <a name='function.gmmktime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>hour</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The hour </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>minute</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The minute </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>second</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>month</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The month </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>day</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The day </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>year</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The year </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>is_dst</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Parameters always represent a GMT date so <i><tt class='parameter'>is_dst</tt></i> doesn&amp;#039;t influence the result. </p> </dd> </dl> <p> </p> </div> <a name='function.gmmktime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp. </p> </div> <a name='function.gmmktime.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> As of PHP 5.1.0, the <i><tt class='parameter'>is_dst</tt></i> parameter became deprecated. As a result, the new timezone handling features should be used instead. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.gmmktime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gmmktime()</b> on Windows boundary</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />gmmktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1970</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;valid&amp;nbsp;in&amp;nbsp;GMT&amp;nbsp;and&amp;nbsp;west,&amp;nbsp;invalid&amp;nbsp;in&amp;nbsp;east<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.gmmktime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.mktime.php' class='function' rel='rdfs-seeAlso'>mktime()</a> - Get Unix timestamp for a date</li> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> <li class='member'><a href='http://www.php.net/manual/en/function.time.php' class='function' rel='rdfs-seeAlso'>time()</a> - Return current Unix timestamp</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gmdate" value="<div id='function.gmdate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gmdate.php'>gmdate</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gmdate</span> &amp;mdash; <span class='dc-title'>Format a GMT/UTC date/time</span></p> </div> <a name='function.gmdate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>gmdate</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt></span> ] )</div> <p class='para rdfs-comment'> Identical to the <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a> function except that the time returned is Greenwich Mean Time (GMT). </p> </div> <a name='function.gmdate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The format of the outputted date <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. See the formatting options for the <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a> function. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>timestamp</tt></i> parameter is an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp that defaults to the current local time if a <i><tt class='parameter'>timestamp</tt></i> is not given. In other words, it defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p></dd> </dl> <p> </p> </div> <a name='function.gmdate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a formatted date string. If a non-numeric value is used for <i><tt class='parameter'>timestamp</tt></i> , <b><tt class='constant'>FALSE</tt></b> is returned and an <b><tt class='constant'>E_WARNING</tt></b> level error is emitted. </p> </div> <a name='function.gmdate.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer). However, before PHP 5.1.0 this range was limited from 01-01-1970 to 19-01-2038 on some systems (e.g. Windows). </td> </tr> <tr valign='middle'> <td align='left'>5.1.1</td> <td align='left'> There are useful <a href='http://www.php.net/manual/en/datetime.constants.php' class='link'>constants</a> of standard date/time formats that can be used to specify the <i><tt class='parameter'>format</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.gmdate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gmdate()</b> example</b></p> <div class='example-contents para'><p> When run in Finland (GMT +0200), the first line below prints &amp;quot;Jan 01 1998 00:00:00&amp;quot;, while the second prints &amp;quot;Dec 31 1997 22:00:00&amp;quot;. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'M&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1998</span><span style='color: #007700'>));<br />echo&amp;nbsp;</span><span style='color: #0000BB'>gmdate</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'M&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1998</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.gmdate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> <li class='member'><a href='http://www.php.net/manual/en/function.mktime.php' class='function' rel='rdfs-seeAlso'>mktime()</a> - Get Unix timestamp for a date</li> <li class='member'><a href='http://www.php.net/manual/en/function.gmmktime.php' class='function' rel='rdfs-seeAlso'>gmmktime()</a> - Get Unix timestamp for a GMT date</li> <li class='member'><a href='http://www.php.net/manual/en/function.strftime.php' class='function' rel='rdfs-seeAlso'>strftime()</a> - Format a local time/date according to locale settings</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="glob" value="<div id='function.glob' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.glob.php'>glob</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>glob</span> &amp;mdash; <span class='dc-title'>Find pathnames matching a pattern</span></p> </div> <a name='function.glob.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>glob</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> The <b>glob()</b> function searches for all the pathnames matching <i><tt class='parameter'>pattern</tt></i> according to the rules used by the libc glob() function, which is similar to the rules used by common shells. </p> </div> <a name='function.glob.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern. No tilde expansion or parameter substitution is done. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Valid flags: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_MARK</tt></b> - Adds a slash to each directory returned </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_NOSORT</tt></b> - Return files as they appear in the directory (no sorting) </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_NOCHECK</tt></b> - Return the search pattern if no files matching it were found </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_NOESCAPE</tt></b> - Backslashes do not quote metacharacters </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_BRACE</tt></b> - Expands {a,b,c} to match &amp;#039;a&amp;#039;, &amp;#039;b&amp;#039;, or &amp;#039;c&amp;#039; </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_ONLYDIR</tt></b> - Return only directory entries which match the pattern </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>GLOB_ERR</tt></b> - Stop on read errors (like unreadable directories), by default errors are ignored. </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.glob.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing the matched files/directories, an empty array if no file matched or <b><tt class='constant'>FALSE</tt></b> on error. </p> <blockquote><p><b class='note'>Note</b>: On some systems it is impossible to distinguish between empty match and an error. <br /> </p></blockquote> </div> <a name='function.glob.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> <b><tt class='constant'>GLOB_ERR</tt></b> was added </td> </tr> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> <b><tt class='constant'>GLOB_ONLYDIR</tt></b> became available on Windows and other systems not using the GNU C library </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.glob.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Convenient way how <b>glob()</b> can replace <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a> and friends. </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>glob</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'*.txt'</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;size&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> funclist.txt size 44686 funcsummary.txt size 267625 quickref.txt size 137820 </pre></div> </div> </div><p> </p> </div> <a name='function.glob.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function isn&amp;#039;t available on some systems (e.g. old Sun OS). </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> The <b><tt class='constant'>GLOB_BRACE</tt></b> flag is not available on some non GNU systems, like Solaris. </span> </p></blockquote> </div> <a name='function.glob.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.opendir.php' class='function' rel='rdfs-seeAlso'>opendir()</a> - Open directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.readdir.php' class='function' rel='rdfs-seeAlso'>readdir()</a> - Read entry from directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.closedir.php' class='function' rel='rdfs-seeAlso'>closedir()</a> - Close directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.fnmatch.php' class='function' rel='rdfs-seeAlso'>fnmatch()</a> - Match filename against a pattern</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_resource_type" value="<div id='function.get-resource-type' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-resource-type.php'>get_resource_type</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>get_resource_type</span> &amp;mdash; <span class='dc-title'> Returns the resource type </span></p> </div> <a name='function.get-resource-type.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_resource_type</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> This function gets the type of the given resource. </p> </div> <a name='function.get-resource-type.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The evaluated resource handle. </p> </dd> </dl> <p> </p> </div> <a name='function.get-resource-type.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the given <i><tt class='parameter'>handle</tt></i> is a resource, this function will return a string representing its type. If the type is not identified by this function, the return value will be the string <i>Unknown</i>. </p> <p class='para'> This function will return <b><tt class='constant'>FALSE</tt></b> and generate an error if <i><tt class='parameter'>handle</tt></i> is not a <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>. </p> </div> <a name='function.get-resource-type.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_resource_type()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;prints:&amp;nbsp;mysql&amp;nbsp;link<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>mysql_connect</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>get_resource_type</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;prints:&amp;nbsp;file<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>get_resource_type</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;prints:&amp;nbsp;domxml&amp;nbsp;document<br /></span><span style='color: #0000BB'>$doc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>new_xmldoc</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'1.0'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>get_resource_type</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$doc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>doc</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_required_files" value="<div id='function.get-required-files' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-required-files.php'>get_required_files</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_required_files</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.get-included-files.php' class='function'>get_included_files()</a></span></p> </div> <a name='function.get-required-files.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.get-included-files.php' class='function'>get_included_files()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_parent_class" value="<div id='function.get-parent-class' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-parent-class.php'>get_parent_class</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_parent_class</span> &amp;mdash; <span class='dc-title'>Retrieves the parent class name for object or class</span></p> </div> <a name='function.get-parent-class.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_parent_class</b></span> ([ <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$object</tt></span> ] )</div> <p class='para rdfs-comment'> Retrieves the parent class name for object or class. </p> </div> <a name='function.get-parent-class.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested object or class name </p> </dd> </dl> <p> </p> </div> <a name='function.get-parent-class.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the parent class of the class of which <i><tt class='parameter'>object</tt></i> is an instance or the name. </p> <blockquote><p><b class='note'>Note</b>: If the object does not have a parent <b><tt class='constant'>FALSE</tt></b> will be returned. <br /> </p></blockquote> <p class='para'> If called without parameter outside object, this function returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.get-parent-class.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Before 5.1.0</td> <td align='left'> If called without parameter outside object, this function would have returned <b><tt class='constant'>NULL</tt></b> with a warning. </td> </tr> <tr valign='middle'> <td align='left'>Since 5.0.0</td> <td align='left'> The <i><tt class='parameter'>object</tt></i> parameter is optional if called from the object&amp;#039;s method. </td> </tr> <tr valign='middle'> <td align='left'>Since 4.0.5</td> <td align='left'> If <i><tt class='parameter'>object</tt></i> is a string, returns the name of the parent class of the class with that name. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-parent-class.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>get_parent_class()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>dad&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>dad</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;implements&amp;nbsp;some&amp;nbsp;logic<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>}<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>child&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>dad&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>child</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I'm&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>get_parent_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>)&amp;nbsp;,&amp;nbsp;</span><span style='color: #DD0000'>''s&amp;nbsp;son\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>child2&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>dad&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>child2</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I'm&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>get_parent_class</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'child2'</span><span style='color: #007700'>)&amp;nbsp;,&amp;nbsp;</span><span style='color: #DD0000'>''s&amp;nbsp;son&amp;nbsp;too\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>child</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>child2</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> I&amp;#039;m dad&amp;#039;s son I&amp;#039;m dad&amp;#039;s son too </pre></div> </div> </div><p> </p> </div> <a name='function.get-parent-class.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-class.php' class='function' rel='rdfs-seeAlso'>get_class()</a> - Returns the name of the class of an object</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-subclass-of.php' class='function' rel='rdfs-seeAlso'>is_subclass_of()</a> - Checks if the object has this class as one of its parents</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_object_vars" value="<div id='function.get-object-vars' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-object-vars.php'>get_object_vars</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_object_vars</span> &amp;mdash; <span class='dc-title'>Gets the properties of the given object</span></p> </div> <a name='function.get-object-vars.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_object_vars</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <p class='para rdfs-comment'> Gets the accessible non-static properties of the given <i><tt class='parameter'>object</tt></i> according to scope. </p> </div> <a name='function.get-object-vars.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An object instance. </p> </dd> </dl> <p> </p> </div> <a name='function.get-object-vars.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array of defined object accessible non-static properties for the specified <i><tt class='parameter'>object</tt></i> in scope. If a property have not been assigned a value, it will be returned with a <b><tt class='constant'>NULL</tt></b> value. </p> </div> <a name='function.get-object-vars.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>prior to 4.2.0</td> <td align='left'> If the variables declared in the class of which the <i><tt class='parameter'>object</tt></i> is an instance, have not been assigned a value, those will not be returned in the array </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-object-vars.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Use of <b>get_object_vars()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_object_vars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_object_vars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$test</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$test</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [&amp;quot;b&amp;quot;]=&amp;gt; int(1) [&amp;quot;c&amp;quot;]=&amp;gt; NULL } array(4) { [&amp;quot;a&amp;quot;]=&amp;gt; NULL [&amp;quot;b&amp;quot;]=&amp;gt; int(1) [&amp;quot;c&amp;quot;]=&amp;gt; NULL [&amp;quot;d&amp;quot;]=&amp;gt; NULL } </pre></div> </div> </div><p> </p> </div> <a name='function.get-object-vars.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-class-methods.php' class='function' rel='rdfs-seeAlso'>get_class_methods()</a> - Gets the class methods' names</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-class-vars.php' class='function' rel='rdfs-seeAlso'>get_class_vars()</a> - Get the default properties of the class</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_meta_tags" value="<div id='function.get-meta-tags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-meta-tags.php'>get_meta_tags</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_meta_tags</span> &amp;mdash; <span class='dc-title'>Extracts all meta tag content attributes from a file and returns an array</span></p> </div> <a name='function.get-meta-tags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_meta_tags</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Opens <i><tt class='parameter'>filename</tt></i> and parses it line by line for &amp;lt;meta&amp;gt; tags in the file. The parsing stops at <i>&amp;lt;/head&amp;gt;</i>. </p> </div> <a name='function.get-meta-tags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The path to the HTML file, as a string. This can be a local file or an <acronym title='Uniform Resource Locator'>URL</acronym>. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 What <b>get_meta_tags()</b> parses</b></p> <div class='example-contents programlisting'> <div class='htmlcode'><pre class='htmlcode'>&amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;name&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;keywords&amp;quot; content=&amp;quot;php documentation&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;DESCRIPTION&amp;quot; content=&amp;quot;a php manual&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;geo.position&amp;quot; content=&amp;quot;49.33;-86.59&amp;quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;!-- parsing stops here --&amp;gt;</pre> </div> </div> </div><p> (pay attention to line endings - PHP uses a native function to parse the input, so a Mac file won&amp;#039;t work on Unix). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>use_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting <i><tt class='parameter'>use_include_path</tt></i> to <b><tt class='constant'>TRUE</tt></b> will result in PHP trying to open the file along the standard include path as per the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> directive. This is used for local files, not URLs. </p> </dd> </dl> <p> </p> </div> <a name='function.get-meta-tags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with all the parsed meta tags. </p> <p class='para'> The value of the name property becomes the key, the value of the content property becomes the value of the returned array, so you can easily use standard array functions to traverse it or access single values. Special characters in the value of the name property are substituted with &amp;#039;_&amp;#039;, the rest is converted to lower case. If two meta tags have the same name, only the last one is returned. </p> </div> <a name='function.get-meta-tags.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> Support for unquoted HTML attributes was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-meta-tags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #2 What <b>get_meta_tags()</b> returns</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Assuming&amp;nbsp;the&amp;nbsp;above&amp;nbsp;tags&amp;nbsp;are&amp;nbsp;at&amp;nbsp;www.example.com<br /></span><span style='color: #0000BB'>$tags&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_meta_tags</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Notice&amp;nbsp;how&amp;nbsp;the&amp;nbsp;keys&amp;nbsp;are&amp;nbsp;all&amp;nbsp;lowercase&amp;nbsp;now,&amp;nbsp;and<br />//&amp;nbsp;how&amp;nbsp;.&amp;nbsp;was&amp;nbsp;replaced&amp;nbsp;by&amp;nbsp;_&amp;nbsp;in&amp;nbsp;the&amp;nbsp;key.<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$tags</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'author'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;name<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$tags</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'keywords'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;php&amp;nbsp;documentation<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$tags</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'description'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;a&amp;nbsp;php&amp;nbsp;manual<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$tags</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'geo_position'</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;49.33;-86.59<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.get-meta-tags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.htmlentities.php' class='function' rel='rdfs-seeAlso'>htmlentities()</a> - Convert all applicable characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.urlencode.php' class='function' rel='rdfs-seeAlso'>urlencode()</a> - URL-encodes string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_magic_quotes_runtime" value="<div id='function.get-magic-quotes-runtime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-magic-quotes-runtime.php'>get_magic_quotes_runtime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_magic_quotes_runtime</span> &amp;mdash; <span class='dc-title'>Gets the current active configuration setting of magic_quotes_runtime</span></p> </div> <a name='function.get-magic-quotes-runtime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>get_magic_quotes_runtime</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns the current active configuration setting of <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-runtime' class='link'>magic_quotes_runtime</a>. </p> </div> <a name='function.get-magic-quotes-runtime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 0 if magic quotes runtime is off, 1 otherwise. </p> </div> <a name='function.get-magic-quotes-runtime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_magic_quotes_runtime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;magic_quotes_runtime&amp;nbsp;is&amp;nbsp;active<br /></span><span style='color: #007700'>if(</span><span style='color: #0000BB'>get_magic_quotes_runtime</span><span style='color: #007700'>())<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Deactive<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>set_magic_quotes_runtime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.get-magic-quotes-runtime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_gpc()</a> - Gets the current configuration setting of magic quotes gpc</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-magic-quotes-runtime.php' class='function' rel='rdfs-seeAlso'>set_magic_quotes_runtime()</a> - Sets the current active configuration setting of magic_quotes_runtime</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_magic_quotes_gpc" value="<div id='function.get-magic-quotes-gpc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php'>get_magic_quotes_gpc</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_magic_quotes_gpc</span> &amp;mdash; <span class='dc-title'>Gets the current configuration setting of magic quotes gpc</span></p> </div> <a name='function.get-magic-quotes-gpc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>get_magic_quotes_gpc</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the current configuration setting of <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'>magic_quotes_gpc</a> </p> <p class='para'> Keep in mind that the setting <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'> magic_quotes_gpc</a> will not work at runtime. </p> <p class='para'> For more information about magic_quotes, see this <a href='http://www.php.net/manual/en/security.magicquotes.php' class='link'>security section</a>. </p> </div> <a name='function.get-magic-quotes-gpc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 0 if magic quotes gpc are off, 1 otherwise. </p> </div> <a name='function.get-magic-quotes-gpc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_magic_quotes_gpc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>get_magic_quotes_gpc</span><span style='color: #007700'>();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$_POST</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'lastname'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;O\'reilly<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>addslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_POST</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'lastname'</span><span style='color: #007700'>]);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;O\\\'reilly<br /><br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>get_magic_quotes_gpc</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$lastname&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>addslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_POST</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'lastname'</span><span style='color: #007700'>]);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$lastname&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$_POST</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'lastname'</span><span style='color: #007700'>];<br />}<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$lastname</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;O\'reilly<br /></span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;lastnames&amp;nbsp;(lastname)&amp;nbsp;VALUES&amp;nbsp;('</span><span style='color: #0000BB'>$lastname</span><span style='color: #DD0000'>')'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.get-magic-quotes-gpc.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If the directive <a href='http://www.php.net/manual/en/sybase.configuration.php#ini.magic-quotes-sybase' class='link'> magic_quotes_sybase</a> is ON it will completely override <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'>magic_quotes_gpc</a>. So even when <b>get_magic_quotes_gpc()</b> returns <b><tt class='constant'>TRUE</tt></b> neither double quotes, backslashes or NUL&amp;#039;s will be escaped. Only single quotes will be escaped. In this case they&amp;#039;ll look like: <em class='emphasis'>&amp;#039;&amp;#039;</em> <br /> </p></blockquote> </div> <a name='function.get-magic-quotes-gpc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.addslashes.php' class='function' rel='rdfs-seeAlso'>addslashes()</a> - Quote string with slashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripslashes.php' class='function' rel='rdfs-seeAlso'>stripslashes()</a> - Un-quotes a quoted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-runtime.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_runtime()</a> - Gets the current active configuration setting of magic_quotes_runtime</li> <li class='member'><a href='http://www.php.net/manual/en/function.ini-get.php' class='function' rel='rdfs-seeAlso'>ini_get()</a> - Gets the value of a configuration option</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_loaded_extensions" value="<div id='function.get-loaded-extensions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-loaded-extensions.php'>get_loaded_extensions</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_loaded_extensions</span> &amp;mdash; <span class='dc-title'>Returns an array with the names of all modules compiled and loaded</span></p> </div> <a name='function.get-loaded-extensions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_loaded_extensions</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$zend_extensions</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> This function returns the names of all the modules compiled and loaded in the PHP interpreter. </p> </div> <a name='function.get-loaded-extensions.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>zend_extensions</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Return zend_extensions or not, defaults to <b><tt class='constant'>FALSE</tt></b> (do not list zend_extensions). </p> </dd> </dl> <p> </p> </div> <a name='function.get-loaded-extensions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array of all the modules names. </p> </div> <a name='function.get-loaded-extensions.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.4</td> <td align='left'> The optional <i><tt class='parameter'>zend_extensions</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-loaded-extensions.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_loaded_extensions()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_loaded_extensions</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; xml [1] =&amp;gt; wddx [2] =&amp;gt; standard [3] =&amp;gt; session [4] =&amp;gt; posix [5] =&amp;gt; pgsql [6] =&amp;gt; pcre [7] =&amp;gt; gd [8] =&amp;gt; ftp [9] =&amp;gt; db [10] =&amp;gt; calendar [11] =&amp;gt; bcmath ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-loaded-extensions.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-extension-funcs.php' class='function' rel='rdfs-seeAlso'>get_extension_funcs()</a> - Returns an array with the names of the functions of a module</li> <li class='member'><a href='http://www.php.net/manual/en/function.extension-loaded.php' class='function' rel='rdfs-seeAlso'>extension_loaded()</a> - Find out whether an extension is loaded</li> <li class='member'><a href='http://www.php.net/manual/en/function.dl.php' class='function' rel='rdfs-seeAlso'>dl()</a> - Loads a PHP extension at runtime</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_include_path" value="<div id='function.get-include-path' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-include-path.php'>get_include_path</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>get_include_path</span> &amp;mdash; <span class='dc-title'>Gets the current include_path configuration option</span></p> </div> <a name='function.get-include-path.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_include_path</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Gets the current <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> configuration option value. </p> </div> <a name='function.get-include-path.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path, as a string. </p> </div> <a name='function.get-include-path.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_include_path()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>get_include_path</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;in&amp;nbsp;all&amp;nbsp;PHP&amp;nbsp;versions<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>ini_get</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'include_path'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.get-include-path.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ini-get.php' class='function' rel='rdfs-seeAlso'>ini_get()</a> - Gets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-include-path.php' class='function' rel='rdfs-seeAlso'>restore_include_path()</a> - Restores the value of the include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-include-path.php' class='function' rel='rdfs-seeAlso'>set_include_path()</a> - Sets the include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_included_files" value="<div id='function.get-included-files' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-included-files.php'>get_included_files</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_included_files</span> &amp;mdash; <span class='dc-title'>Returns an array with the names of included or required files</span></p> </div> <a name='function.get-included-files.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_included_files</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the names of all files that have been included using <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a>, <a href='http://www.php.net/manual/en/function.include-once.php' class='function'>include_once()</a>, <a href='http://www.php.net/manual/en/function.require.php' class='function'>require()</a> or <a href='http://www.php.net/manual/en/function.require-once.php' class='function'>require_once()</a>. </p> </div> <a name='function.get-included-files.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the names of all files. </p> <p class='para'> The script originally called is considered an &amp;quot;included file,&amp;quot; so it will be listed together with the files referenced by <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a> and family. </p> <p class='para'> Files that are included or required multiple times only show up once in the returned array. </p> </div> <a name='function.get-included-files.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.1</td> <td align='left'> In PHP 4.0.1 and previous versions this function assumed that the required files ended in the extension <i>.php</i>; other extensions would not be returned. The array returned by <b>get_included_files()</b> was an associative array and only listed files included by <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a> and <a href='http://www.php.net/manual/en/function.include-once.php' class='function'>include_once()</a>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-included-files.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_included_files()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;file&amp;nbsp;is&amp;nbsp;abc.php<br /><br /></span><span style='color: #007700'>include&amp;nbsp;</span><span style='color: #DD0000'>'test1.php'</span><span style='color: #007700'>;<br />include_once&amp;nbsp;</span><span style='color: #DD0000'>'test2.php'</span><span style='color: #007700'>;<br />require&amp;nbsp;</span><span style='color: #DD0000'>'test3.php'</span><span style='color: #007700'>;<br />require_once&amp;nbsp;</span><span style='color: #DD0000'>'test4.php'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$included_files&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_included_files</span><span style='color: #007700'>();<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$included_files&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> abc.php test1.php test2.php test3.php test4.php </pre></div> </div> </div><p> </p> </div> <a name='function.get-included-files.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Files included using the <i>auto_prepend_file</i> configuration directive are not included in the returned array. <br /> </p></blockquote> </div> <a name='function.get-included-files.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> <li class='member'><a href='http://www.php.net/manual/en/function.include-once.php' class='function' rel='rdfs-seeAlso'>include_once()</a> - include_once</li> <li class='member'><a href='http://www.php.net/manual/en/function.require.php' class='function' rel='rdfs-seeAlso'>require()</a> - require</li> <li class='member'><a href='http://www.php.net/manual/en/function.require-once.php' class='function' rel='rdfs-seeAlso'>require_once()</a> - require_once</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-required-files.php' class='function' rel='rdfs-seeAlso'>get_required_files()</a> - Alias of get_included_files</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_html_translation_table" value="<div id='function.get-html-translation-table' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-html-translation-table.php'>get_html_translation_table</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_html_translation_table</span> &amp;mdash; <span class='dc-title'>Returns the translation table used by <a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function'>htmlspecialchars()</a> and <a href='http://www.php.net/manual/en/function.htmlentities.php' class='function'>htmlentities()</a></span></p> </div> <a name='function.get-html-translation-table.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_html_translation_table</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$table</tt><span class='initializer'> = HTML_SPECIALCHARS</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$quote_style</tt><span class='initializer'> = ENT_COMPAT</span></span> ]] )</div> <p class='para rdfs-comment'> <b>get_html_translation_table()</b> will return the translation table that is used internally for <a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function'>htmlspecialchars()</a> and <a href='http://www.php.net/manual/en/function.htmlentities.php' class='function'>htmlentities()</a>. </p> <blockquote><p><b class='note'>Note</b>: Special characters can be encoded in several ways. E.g. <i>&amp;quot;</i> can be encoded as <i>&amp;amp;quot;</i>, <i>&amp;amp;#34;</i> or <i>&amp;amp;#x22</i>. <b>get_html_translation_table()</b> returns only the most common form for them. <br /> </p></blockquote> </div> <a name='function.get-html-translation-table.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>table</tt></i> </span> </dt><dd class='listitem'> <p class='para'> There are two new constants (<b><tt class='constant'>HTML_ENTITIES</tt></b>, <b><tt class='constant'>HTML_SPECIALCHARS</tt></b>) that allow you to specify the table you want. Default value for <i><tt class='parameter'>table</tt></i> is <b><tt class='constant'>HTML_SPECIALCHARS</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>quote_style</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Like the <a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function'>htmlspecialchars()</a> and <a href='http://www.php.net/manual/en/function.htmlentities.php' class='function'>htmlentities()</a> functions you can optionally specify the <i><tt class='parameter'>quote_style</tt></i> you are working with. The default is <b><tt class='constant'>ENT_COMPAT</tt></b> mode. See the description of these modes in <a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function'>htmlspecialchars()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.get-html-translation-table.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the translation table as an array. </p> </div> <a name='function.get-html-translation-table.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Translation Table Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$trans&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_html_translation_table</span><span style='color: #007700'>(</span><span style='color: #0000BB'>HTML_ENTITIES</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hallo&amp;nbsp;&amp;amp;&amp;nbsp;&amp;lt;Frau&amp;gt;&amp;nbsp;&amp;amp;&amp;nbsp;Kr&amp;Atilde;&amp;curren;mer'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$encoded&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$encoded</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hallo &amp;amp;amp;amp; &amp;amp;amp;lt;Frau&amp;amp;amp;gt; &amp;amp;amp;amp; Kr&amp;amp;amp;auml;mer </pre></div> </div> </div><p> </p> </div> <a name='function.get-html-translation-table.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlentities.php' class='function' rel='rdfs-seeAlso'>htmlentities()</a> - Convert all applicable characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.html-entity-decode.php' class='function' rel='rdfs-seeAlso'>html_entity_decode()</a> - Convert all HTML entities to their applicable characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_headers" value="<div id='function.get-headers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-headers.php'>get_headers</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>get_headers</span> &amp;mdash; <span class='dc-title'>Fetches all the headers sent by the server in response to a HTTP request</span></p> </div> <a name='function.get-headers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_headers</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$url</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$format</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> <b>get_headers()</b> returns an array with the headers sent by the server in response to a HTTP request. </p> </div> <a name='function.get-headers.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>url</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The target URL. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>format</tt></i> parameter is set to non-zero, <b>get_headers()</b> parses the response and sets the array&amp;#039;s keys. </p> </dd> </dl> <p> </p> </div> <a name='function.get-headers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed or associative array with the headers, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.get-headers.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.3</td> <td align='left'> This function now uses the default stream context, which can be set/changed with the <a href='http://www.php.net/manual/en/function.stream-context-get-default.php' class='function'>stream_context_get_default()</a> function. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-headers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_headers()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$url&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_headers</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$url</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_headers</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$url</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; HTTP/1.1 200 OK [1] =&amp;gt; Date: Sat, 29 May 2004 12:28:13 GMT [2] =&amp;gt; Server: Apache/1.3.27 (Unix) (Red-Hat/Linux) [3] =&amp;gt; Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT [4] =&amp;gt; ETag: &amp;quot;3f80f-1b6-3e1cb03b&amp;quot; [5] =&amp;gt; Accept-Ranges: bytes [6] =&amp;gt; Content-Length: 438 [7] =&amp;gt; Connection: close [8] =&amp;gt; Content-Type: text/html ) Array ( [0] =&amp;gt; HTTP/1.1 200 OK [Date] =&amp;gt; Sat, 29 May 2004 12:28:14 GMT [Server] =&amp;gt; Apache/1.3.27 (Unix) (Red-Hat/Linux) [Last-Modified] =&amp;gt; Wed, 08 Jan 2003 23:11:55 GMT [ETag] =&amp;gt; &amp;quot;3f80f-1b6-3e1cb03b&amp;quot; [Accept-Ranges] =&amp;gt; bytes [Content-Length] =&amp;gt; 438 [Connection] =&amp;gt; close [Content-Type] =&amp;gt; text/html ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_extension_funcs" value="<div id='function.get-extension-funcs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-extension-funcs.php'>get_extension_funcs</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_extension_funcs</span> &amp;mdash; <span class='dc-title'>Returns an array with the names of the functions of a module</span></p> </div> <a name='function.get-extension-funcs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_extension_funcs</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$module_name</tt></span> )</div> <p class='para rdfs-comment'> This function returns the names of all the functions defined in the module indicated by <i><tt class='parameter'>module_name</tt></i> . </p> </div> <a name='function.get-extension-funcs.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>module_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The module name. </p> <blockquote><p><b class='note'>Note</b>: This parameter must be in <em class='emphasis'>lowercase</em>. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.get-extension-funcs.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with all the functions, or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>module_name</tt></i> is not a valid extension. </p> </div> <a name='function.get-extension-funcs.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Prints the XML functions</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_extension_funcs</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'xml'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; xml_parser_create [1] =&amp;gt; xml_parser_create_ns [2] =&amp;gt; xml_set_object [3] =&amp;gt; xml_set_element_handler [4] =&amp;gt; xml_set_character_data_handler [5] =&amp;gt; xml_set_processing_instruction_handler [6] =&amp;gt; xml_set_default_handler [7] =&amp;gt; xml_set_unparsed_entity_decl_handler [8] =&amp;gt; xml_set_notation_decl_handler [9] =&amp;gt; xml_set_external_entity_ref_handler [10] =&amp;gt; xml_set_start_namespace_decl_handler [11] =&amp;gt; xml_set_end_namespace_decl_handler [12] =&amp;gt; xml_parse [13] =&amp;gt; xml_parse_into_struct [14] =&amp;gt; xml_get_error_code [15] =&amp;gt; xml_error_string [16] =&amp;gt; xml_get_current_line_number [17] =&amp;gt; xml_get_current_column_number [18] =&amp;gt; xml_get_current_byte_index [19] =&amp;gt; xml_parser_free [20] =&amp;gt; xml_parser_set_option [21] =&amp;gt; xml_parser_get_option [22] =&amp;gt; utf8_encode [23] =&amp;gt; utf8_decode ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-extension-funcs.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-loaded-extensions.php' class='function' rel='rdfs-seeAlso'>get_loaded_extensions()</a> - Returns an array with the names of all modules compiled and loaded</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_defined_vars" value="<div id='function.get-defined-vars' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-defined-vars.php'>get_defined_vars</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_defined_vars</span> &amp;mdash; <span class='dc-title'> Returns an array of all defined variables </span></p> </div> <a name='function.get-defined-vars.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_defined_vars</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns a multidimensional array containing a list of all defined variables, be them environment, server or user-defined variables, within the scope that <b>get_defined_vars()</b> is called. </p> </div> <a name='function.get-defined-vars.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A multidimensional array with all the variables. </p> </div> <a name='function.get-defined-vars.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_defined_vars()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_defined_vars</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;$b<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;print&amp;nbsp;path&amp;nbsp;to&amp;nbsp;the&amp;nbsp;PHP&amp;nbsp;interpreter&amp;nbsp;(if&amp;nbsp;used&amp;nbsp;as&amp;nbsp;a&amp;nbsp;CGI)<br />&amp;nbsp;*&amp;nbsp;e.g.&amp;nbsp;/usr/local/bin/php&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'_'</span><span style='color: #007700'>];<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;the&amp;nbsp;command-line&amp;nbsp;parameters&amp;nbsp;if&amp;nbsp;any<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'argv'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;the&amp;nbsp;server&amp;nbsp;vars<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'_SERVER'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;the&amp;nbsp;available&amp;nbsp;keys&amp;nbsp;for&amp;nbsp;the&amp;nbsp;arrays&amp;nbsp;of&amp;nbsp;variables<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_defined_vars</span><span style='color: #007700'>()));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.get-defined-vars.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.globals.php' class='classname'>$GLOBALS</a></var> variable is included in the results of the array returned. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-defined-vars.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.isset.php' class='function' rel='rdfs-seeAlso'>isset()</a> - Determine if a variable is set and is not NULL</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-functions.php' class='function' rel='rdfs-seeAlso'>get_defined_functions()</a> - Returns an array of all defined functions</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-constants.php' class='function' rel='rdfs-seeAlso'>get_defined_constants()</a> - Returns an associative array with the names of all the constants and their values</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_defined_functions" value="<div id='function.get-defined-functions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-defined-functions.php'>get_defined_functions</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_defined_functions</span> &amp;mdash; <span class='dc-title'>Returns an array of all defined functions</span></p> </div> <a name='function.get-defined-functions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_defined_functions</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets an array of all defined functions. </p> </div> <a name='function.get-defined-functions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an multidimensional array containing a list of all defined functions, both built-in (internal) and user-defined. The internal functions will be accessible via <var class='varname'>$arr['internal']</var>, and the user defined ones using <var class='varname'>$arr['user']</var> (see example below). </p> </div> <a name='function.get-defined-functions.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_defined_functions()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myrow</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;</span><span style='color: #0000BB'>$id</span><span style='color: #DD0000'>&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;</span><span style='color: #0000BB'>$data</span><span style='color: #DD0000'>&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_defined_functions</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [internal] =&amp;gt; Array ( [0] =&amp;gt; zend_version [1] =&amp;gt; func_num_args [2] =&amp;gt; func_get_arg [3] =&amp;gt; func_get_args [4] =&amp;gt; strlen [5] =&amp;gt; strcmp [6] =&amp;gt; strncmp ... [750] =&amp;gt; bcscale [751] =&amp;gt; bccomp ) [user] =&amp;gt; Array ( [0] =&amp;gt; myrow ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-defined-functions.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.function-exists.php' class='function' rel='rdfs-seeAlso'>function_exists()</a> - Return TRUE if the given function has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-vars.php' class='function' rel='rdfs-seeAlso'>get_defined_vars()</a> - Returns an array of all defined variables</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-constants.php' class='function' rel='rdfs-seeAlso'>get_defined_constants()</a> - Returns an associative array with the names of all the constants and their values</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-declared-classes.php' class='function' rel='rdfs-seeAlso'>get_declared_classes()</a> - Returns an array with the name of the defined classes</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_defined_constants" value="<div id='function.get-defined-constants' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-defined-constants.php'>get_defined_constants</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>get_defined_constants</span> &amp;mdash; <span class='dc-title'>Returns an associative array with the names of all the constants and their values</span></p> </div> <a name='function.get-defined-constants.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_defined_constants</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$categorize</tt></span> ] )</div> <p class='para rdfs-comment'> Returns the names and values of all the constants currently defined. This includes those created by extensions as well as those created with the <a href='http://www.php.net/manual/en/function.define.php' class='function'>define()</a> function. </p> </div> <a name='function.get-defined-constants.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>categorize</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Causing this function to return a multi-dimensional array with categories in the keys of the first dimension and constants and their values in the second dimension. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MY_CONSTANT'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_defined_constants</span><span style='color: #007700'>(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'>The above example will output something similar to:</p> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [internal] =&amp;gt; Array ( [E_ERROR] =&amp;gt; 1 [E_WARNING] =&amp;gt; 2 [E_PARSE] =&amp;gt; 4 [E_NOTICE] =&amp;gt; 8 [E_CORE_ERROR] =&amp;gt; 16 [E_CORE_WARNING] =&amp;gt; 32 [E_COMPILE_ERROR] =&amp;gt; 64 [E_COMPILE_WARNING] =&amp;gt; 128 [E_USER_ERROR] =&amp;gt; 256 [E_USER_WARNING] =&amp;gt; 512 [E_USER_NOTICE] =&amp;gt; 1024 [E_ALL] =&amp;gt; 2047 [TRUE] =&amp;gt; 1 ) [pcre] =&amp;gt; Array ( [PREG_PATTERN_ORDER] =&amp;gt; 1 [PREG_SET_ORDER] =&amp;gt; 2 [PREG_OFFSET_CAPTURE] =&amp;gt; 256 [PREG_SPLIT_NO_EMPTY] =&amp;gt; 1 [PREG_SPLIT_DELIM_CAPTURE] =&amp;gt; 2 [PREG_SPLIT_OFFSET_CAPTURE] =&amp;gt; 4 [PREG_GREP_INVERT] =&amp;gt; 1 ) [user] =&amp;gt; Array ( [MY_CONSTANT] =&amp;gt; 1 ) ) </pre></div> </div> </div><p> </p> </dd> </dl> <p> </p> </div> <a name='function.get-defined-constants.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='function.get-defined-constants.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>categorize</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-defined-constants.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_defined_constants()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_defined_constants</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [E_ERROR] =&amp;gt; 1 [E_WARNING] =&amp;gt; 2 [E_PARSE] =&amp;gt; 4 [E_NOTICE] =&amp;gt; 8 [E_CORE_ERROR] =&amp;gt; 16 [E_CORE_WARNING] =&amp;gt; 32 [E_COMPILE_ERROR] =&amp;gt; 64 [E_COMPILE_WARNING] =&amp;gt; 128 [E_USER_ERROR] =&amp;gt; 256 [E_USER_WARNING] =&amp;gt; 512 [E_USER_NOTICE] =&amp;gt; 1024 [E_ALL] =&amp;gt; 2047 [TRUE] =&amp;gt; 1 ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-defined-constants.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.defined.php' class='function' rel='rdfs-seeAlso'>defined()</a> - Checks whether a given named constant exists</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-loaded-extensions.php' class='function' rel='rdfs-seeAlso'>get_loaded_extensions()</a> - Returns an array with the names of all modules compiled and loaded</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-functions.php' class='function' rel='rdfs-seeAlso'>get_defined_functions()</a> - Returns an array of all defined functions</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-vars.php' class='function' rel='rdfs-seeAlso'>get_defined_vars()</a> - Returns an array of all defined variables</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_declared_interfaces" value="<div id='function.get-declared-interfaces' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-declared-interfaces.php'>get_declared_interfaces</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>get_declared_interfaces</span> &amp;mdash; <span class='dc-title'>Returns an array of all declared interfaces</span></p> </div> <a name='function.get-declared-interfaces.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_declared_interfaces</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declared interfaces. </p> </div> <a name='function.get-declared-interfaces.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the names of the declared interfaces in the current script. </p> </div> <a name='function.get-declared-interfaces.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_declared_interfaces()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_declared_interfaces</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Traversable [1] =&amp;gt; IteratorAggregate [2] =&amp;gt; Iterator [3] =&amp;gt; ArrayAccess [4] =&amp;gt; reflector [5] =&amp;gt; RecursiveIterator [6] =&amp;gt; SeekableIterator ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-declared-interfaces.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-declared-classes.php' class='function' rel='rdfs-seeAlso'>get_declared_classes()</a> - Returns an array with the name of the defined classes</li> <li class='member'><a href='http://www.php.net/manual/en/function.class-implements.php' class='function' rel='rdfs-seeAlso'>class_implements()</a> - Return the interfaces which are implemented by the given class</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_declared_classes" value="<div id='function.get-declared-classes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-declared-classes.php'>get_declared_classes</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_declared_classes</span> &amp;mdash; <span class='dc-title'>Returns an array with the name of the defined classes</span></p> </div> <a name='function.get-declared-classes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_declared_classes</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declared classes. </p> </div> <a name='function.get-declared-classes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the names of the declared classes in the current script. </p> <blockquote><p><b class='note'>Note</b>: Note that depending on what extensions you have compiled or loaded into PHP, additional classes could be present. This means that you will not be able to define your own classes using these names. There is a list of predefined classes in the <a href='http://www.php.net/manual/en/reserved.classes.php' class='link'>Predefined Classes</a> section of the appendices. <br /> </p></blockquote> </div> <a name='function.get-declared-classes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_declared_classes()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_declared_classes</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; stdClass [1] =&amp;gt; __PHP_Incomplete_Class [2] =&amp;gt; Directory ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-declared-classes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.class-exists.php' class='function' rel='rdfs-seeAlso'>class_exists()</a> - Checks if the class has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-declared-interfaces.php' class='function' rel='rdfs-seeAlso'>get_declared_interfaces()</a> - Returns an array of all declared interfaces</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-functions.php' class='function' rel='rdfs-seeAlso'>get_defined_functions()</a> - Returns an array of all defined functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_current_user" value="<div id='function.get-current-user' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-current-user.php'>get_current_user</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_current_user</span> &amp;mdash; <span class='dc-title'>Gets the name of the owner of the current PHP script</span></p> </div> <a name='function.get-current-user.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_current_user</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns the name of the owner of the current PHP script. </p> </div> <a name='function.get-current-user.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the username as a string. </p> </div> <a name='function.get-current-user.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_current_user()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Current&amp;nbsp;script&amp;nbsp;owner:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>get_current_user</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Current script owner: SYSTEM </pre></div> </div> </div><p> </p> </div> <a name='function.get-current-user.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmyuid.php' class='function' rel='rdfs-seeAlso'>getmyuid()</a> - Gets PHP script owner's UID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmygid.php' class='function' rel='rdfs-seeAlso'>getmygid()</a> - Get PHP script owner's GID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmypid.php' class='function' rel='rdfs-seeAlso'>getmypid()</a> - Gets PHP's process ID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_class_vars" value="<div id='function.get-class-vars' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-class-vars.php'>get_class_vars</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_class_vars</span> &amp;mdash; <span class='dc-title'>Get the default properties of the class</span></p> </div> <a name='function.get-class-vars.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_class_vars</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> )</div> <p class='para rdfs-comment'> Get the default properties of the given class. </p> </div> <a name='function.get-class-vars.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name </p> </dd> </dl> <p> </p> </div> <a name='function.get-class-vars.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array of default public properties of the class. The resulting array elements are in the form of <i>varname =&amp;gt; value</i>. </p> </div> <a name='function.get-class-vars.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.3</td> <td align='left'> Depending on the scope, <b>get_class_vars()</b> will only return the properties that can be accessed from the current scope. </td> </tr> <tr valign='middle'> <td align='left'>5.0.2</td> <td align='left'> Calling <b>get_class_vars()</b> will now expose all the properties as an array, unlike previous behaviour where protected and private properties were prefixed with nul bytes. </td> </tr> <tr valign='middle'> <td align='left'>5.0.1</td> <td align='left'> Calling <b>get_class_vars()</b> will expose all properties, as when converting an object to a class. </td> </tr> <tr valign='middle'> <td align='left'>Prior to 4.2.0</td> <td align='left'> Uninitialized class variables will not be reported by <b>get_class_vars()</b> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-class-vars.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_class_vars()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>myclass&amp;nbsp;</span><span style='color: #007700'>{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;has&amp;nbsp;no&amp;nbsp;default&amp;nbsp;value...<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>var&amp;nbsp;</span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'xyz'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;</span><span style='color: #0000BB'>$var3&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$var4</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;5<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;constructor<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myclass</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;change&amp;nbsp;some&amp;nbsp;properties<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />}<br /><br /></span><span style='color: #0000BB'>$my_class&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>myclass</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$class_vars&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_class_vars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$my_class</span><span style='color: #007700'>));<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$class_vars&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>&amp;nbsp;:&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> // Before PHP 4.2.0 var2 : xyz var3 : 100 // As of PHP 4.2.0 var1 : var2 : xyz var3 : 100 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>get_class_vars()</b> and scoping behaviour</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>implode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>array_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\r\n'</span><span style='color: #007700'>;<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>TestCase<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>expose</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_class_vars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__CLASS__</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>TestCase</span><span style='color: #007700'>::</span><span style='color: #0000BB'>expose</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_class_vars</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCase'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> // 5.0.0 a| * b| TestCase c a| * b| TestCase c // 5.0.1 - 5.0.2 a|b|c a|b|c // 5.0.3 + a|b|c a </pre></div> </div> </div><p> </p> </div> <a name='function.get-class-vars.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-class-methods.php' class='function' rel='rdfs-seeAlso'>get_class_methods()</a> - Gets the class methods' names</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-object-vars.php' class='function' rel='rdfs-seeAlso'>get_object_vars()</a> - Gets the properties of the given object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_class_methods" value="<div id='function.get-class-methods' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-class-methods.php'>get_class_methods</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_class_methods</span> &amp;mdash; <span class='dc-title'>Gets the class methods&amp;#039; names</span></p> </div> <a name='function.get-class-methods.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>get_class_methods</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class_name</tt></span> )</div> <p class='para rdfs-comment'> Gets the class methods names. </p> </div> <a name='function.get-class-methods.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name or an object instance </p> </dd> </dl> <p> </p> </div> <a name='function.get-class-methods.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of method names defined for the class specified by <i><tt class='parameter'>class_name</tt></i> . In case of an error, it returns <b><tt class='constant'>NULL</tt></b>. </p> </div> <a name='function.get-class-methods.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> As of PHP 5, this function returns the name of the methods as they were declared (case-sensitive). In PHP 4 they were lowercased. </td> </tr> <tr valign='middle'> <td align='left'>4.0.6</td> <td align='left'> The ability of specifying the object itself has been added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-class-methods.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>get_class_methods()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>myclass&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;constructor<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myclass</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;method&amp;nbsp;1<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myfunc1</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;method&amp;nbsp;2<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myfunc2</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$class_methods&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_class_methods</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myclass'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;or<br /></span><span style='color: #0000BB'>$class_methods&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_class_methods</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>myclass</span><span style='color: #007700'>());<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$class_methods&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$method_name</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$method_name</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> myclass myfunc1 myfunc2 </pre></div> </div> </div><p> </p> </div> <a name='function.get-class-methods.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-class.php' class='function' rel='rdfs-seeAlso'>get_class()</a> - Returns the name of the class of an object</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-class-vars.php' class='function' rel='rdfs-seeAlso'>get_class_vars()</a> - Get the default properties of the class</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-object-vars.php' class='function' rel='rdfs-seeAlso'>get_object_vars()</a> - Gets the properties of the given object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_class" value="<div id='function.get-class' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-class.php'>get_class</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_class</span> &amp;mdash; <span class='dc-title'>Returns the name of the class of an object</span></p> </div> <a name='function.get-class.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_class</b></span> ([ <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> ] )</div> <p class='para rdfs-comment'> Gets the name of the class of the given <i><tt class='parameter'>object</tt></i> . </p> </div> <a name='function.get-class.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested object </p> </dd> </dl> <p> </p> </div> <a name='function.get-class.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the class of which <i><tt class='parameter'>object</tt></i> is an instance. Returns <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>object</tt></i> is not an object. </p> </div> <a name='function.get-class.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Since 5.0.0</td> <td align='left'> The class name is returned in its original notation. </td> </tr> <tr valign='middle'> <td align='left'>Since 5.0.0</td> <td align='left'> The <i><tt class='parameter'>object</tt></i> parameter is optional if called from the object&amp;#039;s method. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-class.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>get_class()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>name</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>)&amp;nbsp;,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;an&amp;nbsp;object<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;external&amp;nbsp;call<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Its&amp;nbsp;name&amp;nbsp;is&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>)&amp;nbsp;,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;internal&amp;nbsp;call<br /></span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>name</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Its name is foo My name is foo </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Using <b>get_class()</b> in superclass</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>abstract&amp;nbsp;class&amp;nbsp;</span><span style='color: #0000BB'>bar&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>());<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>bar&amp;nbsp;</span><span style='color: #007700'>{<br />}<br /><br />new&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(3) &amp;quot;foo&amp;quot; string(3) &amp;quot;bar&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='function.get-class.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-parent-class.php' class='function' rel='rdfs-seeAlso'>get_parent_class()</a> - Retrieves the parent class name for object or class</li> <li class='member'><a href='http://www.php.net/manual/en/function.gettype.php' class='function' rel='rdfs-seeAlso'>gettype()</a> - Get the type of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-subclass-of.php' class='function' rel='rdfs-seeAlso'>is_subclass_of()</a> - Checks if the object has this class as one of its parents</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_cfg_var" value="<div id='function.get-cfg-var' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-cfg-var.php'>get_cfg_var</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_cfg_var</span> &amp;mdash; <span class='dc-title'>Gets the value of a PHP configuration option</span></p> </div> <a name='function.get-cfg-var.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>get_cfg_var</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$option</tt></span> )</div> <p class='para rdfs-comment'> Gets the value of a PHP configuration <i><tt class='parameter'>option</tt></i> . </p> <p class='para'> This function will not return configuration information set when the PHP was compiled, or read from an Apache configuration file. </p> <p class='para'> To check whether the system is using a <a href='http://www.php.net/manual/en/configuration.file.php' class='link'>configuration file</a>, try retrieving the value of the cfg_file_path configuration setting. If this is available, a configuration file is being used. </p> </div> <a name='function.get-cfg-var.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>option</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The configuration option name. </p> </dd> </dl> <p> </p> </div> <a name='function.get-cfg-var.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current value of the PHP configuration variable specified by <i><tt class='parameter'>option</tt></i> , or <b><tt class='constant'>FALSE</tt></b> if an error occurs. </p> </div> <a name='function.get-cfg-var.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> <b>get_cfg_var()</b> was fixed to be able to return &amp;quot;array&amp;quot; ini options. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-cfg-var.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ini-get.php' class='function' rel='rdfs-seeAlso'>ini_get()</a> - Gets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.ini-get-all.php' class='function' rel='rdfs-seeAlso'>ini_get_all()</a> - Gets all configuration options</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="get_browser" value="<div id='function.get-browser' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.get-browser.php'>get_browser</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>get_browser</span> &amp;mdash; <span class='dc-title'>Tells what the user&amp;#039;s browser is capable of</span></p> </div> <a name='function.get-browser.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>get_browser</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$user_agent</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return_array</tt><span class='initializer'> = false</span></span> ]] )</div> <p class='para rdfs-comment'> Attempts to determine the capabilities of the user&amp;#039;s browser, by looking up the browser&amp;#039;s information in the <var class='filename'>browscap.ini</var> file. </p> </div> <a name='function.get-browser.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>user_agent</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The User Agent to be analyzed. By default, the value of HTTP User-Agent header is used; however, you can alter this (i.e., look up another browser&amp;#039;s info) by passing this parameter. </p> <p class='para'> You can bypass this parameter with a <b><tt class='constant'>NULL</tt></b> value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return_array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b>, this function will return an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> instead of an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.get-browser.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The information is returned in an object or an array which will contain various data elements representing, for instance, the browser&amp;#039;s major and minor version numbers and ID string; <b><tt class='constant'>TRUE</tt></b>/<b><tt class='constant'>FALSE</tt></b> values for features such as frames, JavaScript, and cookies; and so forth. </p> <p class='para'> The <i>cookies</i> value simply means that the browser itself is capable of accepting cookies and does not mean the user has enabled the browser to accept cookies or not. The only way to test if cookies are accepted is to set one with <a href='http://www.php.net/manual/en/function.setcookie.php' class='function'>setcookie()</a>, reload, and check for the value. </p> </div> <a name='function.get-browser.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> The optional parameter <i><tt class='parameter'>return_array</tt></i> was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.get-browser.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Listing all information about the users browser</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'HTTP_USER_AGENT'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$browser&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>get_browser</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$browser</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7) Gecko/20040803 Firefox/0.9.3 Array ( [browser_name_regex] =&amp;gt; ^mozilla/5\.0 (windows; .; windows nt 5\.1; .*rv:.*) gecko/.* firefox/0\.9.*$ [browser_name_pattern] =&amp;gt; Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9* [parent] =&amp;gt; Firefox 0.9 [platform] =&amp;gt; WinXP [browser] =&amp;gt; Firefox [version] =&amp;gt; 0.9 [majorver] =&amp;gt; 0 [minorver] =&amp;gt; 9 [cssversion] =&amp;gt; 2 [frames] =&amp;gt; 1 [iframes] =&amp;gt; 1 [tables] =&amp;gt; 1 [cookies] =&amp;gt; 1 [backgroundsounds] =&amp;gt; [vbscript] =&amp;gt; [javascript] =&amp;gt; 1 [javaapplets] =&amp;gt; 1 [activexcontrols] =&amp;gt; [cdf] =&amp;gt; [aol] =&amp;gt; [beta] =&amp;gt; 1 [win16] =&amp;gt; [crawler] =&amp;gt; [stripper] =&amp;gt; [wap] =&amp;gt; [netclr] =&amp;gt; ) </pre></div> </div> </div><p> </p> </div> <a name='function.get-browser.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: In order for this to work, your <a href='http://www.php.net/manual/en/misc.configuration.php#ini.browscap' class='link'>browscap</a> configuration setting in <var class='filename'>php.ini</var> must point to the correct location of the <var class='filename'>browscap.ini</var> file on your system. <br /> <var class='filename'>browscap.ini</var> is not bundled with PHP, but you may find an up-to-date <a href='http://browsers.garykeith.com/downloads.asp' class='link external'>&amp;raquo; php_browscap.ini</a> file here. <br /> While <var class='filename'>browscap.ini</var> contains information on many browsers, it relies on user updates to keep the database current. The format of the file is fairly self-explanatory. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gettype" value="<div id='function.gettype' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gettype.php'>gettype</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gettype</span> &amp;mdash; <span class='dc-title'>Get the type of a variable</span></p> </div> <a name='function.gettype.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>gettype</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> )</div> <p class='para rdfs-comment'> Returns the type of the PHP variable <i><tt class='parameter'>var</tt></i> . </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> Never use <b>gettype()</b> to test for a certain type, since the returned string may be subject to change in a future version. In addition, it is slow too, as it involves string comparison. </p> <p class='simpara'> Instead, use the <i>is_*</i> functions. </p> </div> </div> <a name='function.gettype.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable being type checked. </p> </dd> </dl> <p> </p> </div> <a name='function.gettype.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Possibles values for the returned string are: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.float.php' class='type double'>double</a>&amp;quot; (for historical reasons &amp;quot;double&amp;quot; is returned in case of a <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, and not simply &amp;quot;float&amp;quot;) </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;<a href='http://www.php.net/manual/en/language.types.null.php' class='type NULL'>NULL</a>&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;unknown type&amp;quot; </span> </li> </ul><p> </p> </div> <a name='function.gettype.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gettype()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1.</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>,&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>stdClass</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>gettype</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> integer double NULL object string </pre></div> </div> </div><p> </p> </div> <a name='function.gettype.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.settype.php' class='function' rel='rdfs-seeAlso'>settype()</a> - Set the type of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-array.php' class='function' rel='rdfs-seeAlso'>is_array()</a> - Finds whether a variable is an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-bool.php' class='function' rel='rdfs-seeAlso'>is_bool()</a> - Finds out whether a variable is a boolean</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-float.php' class='function' rel='rdfs-seeAlso'>is_float()</a> - Finds whether the type of a variable is float</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-int.php' class='function' rel='rdfs-seeAlso'>is_int()</a> - Find whether the type of a variable is integer</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-null.php' class='function' rel='rdfs-seeAlso'>is_null()</a> - Finds whether a variable is NULL</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-numeric.php' class='function' rel='rdfs-seeAlso'>is_numeric()</a> - Finds whether a variable is a number or a numeric string</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-object.php' class='function' rel='rdfs-seeAlso'>is_object()</a> - Finds whether a variable is an object</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-resource.php' class='function' rel='rdfs-seeAlso'>is_resource()</a> - Finds whether a variable is a resource</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-scalar.php' class='function' rel='rdfs-seeAlso'>is_scalar()</a> - Finds whether a variable is a scalar</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-string.php' class='function' rel='rdfs-seeAlso'>is_string()</a> - Find whether the type of a variable is string</li> <li class='member'><a href='http://www.php.net/manual/en/function.function-exists.php' class='function' rel='rdfs-seeAlso'>function_exists()</a> - Return TRUE if the given function has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/function.method-exists.php' class='function' rel='rdfs-seeAlso'>method_exists()</a> - Checks if the class method exists</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gettimeofday" value="<div id='function.gettimeofday' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gettimeofday.php'>gettimeofday</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gettimeofday</span> &amp;mdash; <span class='dc-title'>Get current time</span></p> </div> <a name='function.gettimeofday.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>gettimeofday</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return_float</tt></span> ] )</div> <p class='para rdfs-comment'> This is an interface to gettimeofday(2). It returns an associative array containing the data returned from the system call. </p> </div> <a name='function.gettimeofday.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return_float</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When set to <b><tt class='constant'>TRUE</tt></b>, a float instead of an array is returned. </p> </dd> </dl> <p> </p> </div> <a name='function.gettimeofday.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> By default an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> is returned. If <i><tt class='parameter'>return_float</tt></i> is set, then a <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> is returned. </p> <p class='para'> Array keys: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot;sec&amp;quot; - seconds since the Unix Epoch </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;usec&amp;quot; - microseconds </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;minuteswest&amp;quot; - minutes west of Greenwich </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;dsttime&amp;quot; - type of dst correction </span> </li> </ul><p> </p> </div> <a name='function.gettimeofday.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> The <i><tt class='parameter'>return_float</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.gettimeofday.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gettimeofday()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>gettimeofday</span><span style='color: #007700'>());<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>gettimeofday</span><span style='color: #007700'>(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [sec] =&amp;gt; 1073504408 [usec] =&amp;gt; 238215 [minuteswest] =&amp;gt; 0 [dsttime] =&amp;gt; 1 ) 1073504408.23910 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getservbyport" value="<div id='function.getservbyport' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getservbyport.php'>getservbyport</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getservbyport</span> &amp;mdash; <span class='dc-title'>Get Internet service which corresponds to port and protocol</span></p> </div> <a name='function.getservbyport.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>getservbyport</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$port</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$protocol</tt></span> )</div> <p class='para rdfs-comment'> <b>getservbyport()</b> returns the Internet service associated with <i><tt class='parameter'>port</tt></i> for the specified <i><tt class='parameter'>protocol</tt></i> as per <var class='filename'>/etc/services</var>. </p> </div> <a name='function.getservbyport.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>port</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The port number. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>protocol</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>protocol</tt></i> is either <i>&amp;quot;tcp&amp;quot;</i> or <i>&amp;quot;udp&amp;quot;</i> (in lowercase). </p> </dd> </dl> <p> </p> </div> <a name='function.getservbyport.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Internet service name as a string. </p> </div> <a name='function.getservbyport.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getservbyname.php' class='function' rel='rdfs-seeAlso'>getservbyname()</a> - Get port number associated with an Internet service and protocol</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getservbyname" value="<div id='function.getservbyname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getservbyname.php'>getservbyname</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getservbyname</span> &amp;mdash; <span class='dc-title'>Get port number associated with an Internet service and protocol</span></p> </div> <a name='function.getservbyname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getservbyname</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$service</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$protocol</tt></span> )</div> <p class='para rdfs-comment'> <b>getservbyname()</b> returns the Internet port which corresponds to <i><tt class='parameter'>service</tt></i> for the specified <i><tt class='parameter'>protocol</tt></i> as per <var class='filename'>/etc/services</var>. </p> </div> <a name='function.getservbyname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>service</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The Internet service name, as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>protocol</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>protocol</tt></i> is either <i>&amp;quot;tcp&amp;quot;</i> or <i>&amp;quot;udp&amp;quot;</i> (in lowercase). </p> </dd> </dl> <p> </p> </div> <a name='function.getservbyname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the port number, or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>service</tt></i> or <i><tt class='parameter'>protocol</tt></i> is not found. </p> </div> <a name='function.getservbyname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getservbyname()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$services&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'http'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ftp'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ssh'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'telnet'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'imap'</span><span style='color: #007700'>,<br /></span><span style='color: #DD0000'>'smtp'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'nicname'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'gopher'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'finger'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'pop3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'www'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$services&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$service</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$port&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getservbyname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$service</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'tcp'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$service&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>':&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$port&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.getservbyname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getservbyport.php' class='function' rel='rdfs-seeAlso'>getservbyport()</a> - Get Internet service which corresponds to port and protocol</li> <li class='member'> <a href='http://www.iana.org/assignments/port-numbers' class='link external'>&amp;raquo; http://www.iana.org/assignments/port-numbers</a> for a complete list of port numbers. </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getrandmax" value="<div id='function.getrandmax' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getrandmax.php'>getrandmax</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getrandmax</span> &amp;mdash; <span class='dc-title'>Show largest possible random value</span></p> </div> <a name='function.getrandmax.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getrandmax</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns the maximum value that can be returned by a call to <a href='http://www.php.net/manual/en/function.rand.php' class='function'>rand()</a>. </p> </div> <a name='function.getrandmax.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The largest possible random value returned by <a href='http://www.php.net/manual/en/function.rand.php' class='function'>rand()</a> </p> </div> <a name='function.getrandmax.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rand.php' class='function' rel='rdfs-seeAlso'>rand()</a> - Generate a random integer</li> <li class='member'><a href='http://www.php.net/manual/en/function.srand.php' class='function' rel='rdfs-seeAlso'>srand()</a> - Seed the random number generator</li> <li class='member'><a href='http://www.php.net/manual/en/function.mt-getrandmax.php' class='function' rel='rdfs-seeAlso'>mt_getrandmax()</a> - Show largest possible random value</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getprotobynumber" value="<div id='function.getprotobynumber' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getprotobynumber.php'>getprotobynumber</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getprotobynumber</span> &amp;mdash; <span class='dc-title'>Get protocol name associated with protocol number</span></p> </div> <a name='function.getprotobynumber.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>getprotobynumber</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> <b>getprotobynumber()</b> returns the protocol name associated with protocol <i><tt class='parameter'>number</tt></i> as per <var class='filename'>/etc/protocols</var>. </p> </div> <a name='function.getprotobynumber.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The protocol number. </p> </dd> </dl> <p> </p> </div> <a name='function.getprotobynumber.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the protocol name as a string. </p> </div> <a name='function.getprotobynumber.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getprotobyname.php' class='function' rel='rdfs-seeAlso'>getprotobyname()</a> - Get protocol number associated with protocol name</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getprotobyname" value="<div id='function.getprotobyname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getprotobyname.php'>getprotobyname</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getprotobyname</span> &amp;mdash; <span class='dc-title'>Get protocol number associated with protocol name</span></p> </div> <a name='function.getprotobyname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getprotobyname</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> <b>getprotobyname()</b> returns the protocol number associated with the protocol <i><tt class='parameter'>name</tt></i> as per <var class='filename'>/etc/protocols</var>. </p> </div> <a name='function.getprotobyname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The protocol name. </p> </dd> </dl> <p> </p> </div> <a name='function.getprotobyname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the protocol number or -1 if the protocol is not found. </p> </div> <a name='function.getprotobyname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getprotobyname()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$protocol&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'tcp'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$get_prot&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getprotobyname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$protocol</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$get_prot&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Invalid&amp;nbsp;Protocol'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Protocol&amp;nbsp;#'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$get_prot</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.getprotobyname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getprotobynumber.php' class='function' rel='rdfs-seeAlso'>getprotobynumber()</a> - Get protocol name associated with protocol number</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getmyuid" value="<div id='function.getmyuid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getmyuid.php'>getmyuid</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getmyuid</span> &amp;mdash; <span class='dc-title'>Gets PHP script owner&amp;#039;s UID</span></p> </div> <a name='function.getmyuid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getmyuid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Gets the user ID of the current script. </p> </div> <a name='function.getmyuid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the user ID of the current script, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.getmyuid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmygid.php' class='function' rel='rdfs-seeAlso'>getmygid()</a> - Get PHP script owner's GID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmypid.php' class='function' rel='rdfs-seeAlso'>getmypid()</a> - Gets PHP's process ID</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-current-user.php' class='function' rel='rdfs-seeAlso'>get_current_user()</a> - Gets the name of the owner of the current PHP script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getmypid" value="<div id='function.getmypid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getmypid.php'>getmypid</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getmypid</span> &amp;mdash; <span class='dc-title'>Gets PHP&amp;#039;s process ID</span></p> </div> <a name='function.getmypid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getmypid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the current PHP process ID. </p> </div> <a name='function.getmypid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current PHP process ID, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.getmypid.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Process IDs are not unique, thus they are a weak entropy source. We recommend against relying on pids in security-dependent contexts. </p> </div> </div> <a name='function.getmypid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmygid.php' class='function' rel='rdfs-seeAlso'>getmygid()</a> - Get PHP script owner's GID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyuid.php' class='function' rel='rdfs-seeAlso'>getmyuid()</a> - Gets PHP script owner's UID</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-current-user.php' class='function' rel='rdfs-seeAlso'>get_current_user()</a> - Gets the name of the owner of the current PHP script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getmyinode" value="<div id='function.getmyinode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getmyinode.php'>getmyinode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getmyinode</span> &amp;mdash; <span class='dc-title'>Gets the inode of the current script</span></p> </div> <a name='function.getmyinode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getmyinode</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the inode of the current script. </p> </div> <a name='function.getmyinode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current script&amp;#039;s inode as an integer, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.getmyinode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmygid.php' class='function' rel='rdfs-seeAlso'>getmygid()</a> - Get PHP script owner's GID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyuid.php' class='function' rel='rdfs-seeAlso'>getmyuid()</a> - Gets PHP script owner's UID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmypid.php' class='function' rel='rdfs-seeAlso'>getmypid()</a> - Gets PHP's process ID</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-current-user.php' class='function' rel='rdfs-seeAlso'>get_current_user()</a> - Gets the name of the owner of the current PHP script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getmygid" value="<div id='function.getmygid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getmygid.php'>getmygid</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>getmygid</span> &amp;mdash; <span class='dc-title'>Get PHP script owner&amp;#039;s GID</span></p> </div> <a name='function.getmygid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getmygid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Gets the group ID of the current script. </p> </div> <a name='function.getmygid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the group ID of the current script, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.getmygid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmyuid.php' class='function' rel='rdfs-seeAlso'>getmyuid()</a> - Gets PHP script owner's UID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmypid.php' class='function' rel='rdfs-seeAlso'>getmypid()</a> - Gets PHP's process ID</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-current-user.php' class='function' rel='rdfs-seeAlso'>get_current_user()</a> - Gets the name of the owner of the current PHP script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getlastmod" value="<div id='function.getlastmod' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getlastmod.php'>getlastmod</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getlastmod</span> &amp;mdash; <span class='dc-title'>Gets time of last page modification</span></p> </div> <a name='function.getlastmod.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>getlastmod</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the time of the last modification of the current page. </p> <p class='para'> If you&amp;#039;re interested in getting the last modification time of a different file, consider using <a href='http://www.php.net/manual/en/function.filemtime.php' class='function'>filemtime()</a>. </p> </div> <a name='function.getlastmod.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the time of the last modification of the current page. The value returned is a Unix timestamp, suitable for feeding to <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a>. Returns <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.getlastmod.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getlastmod()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;e.g.&amp;nbsp;'Last&amp;nbsp;modified:&amp;nbsp;March&amp;nbsp;04&amp;nbsp;1998&amp;nbsp;20:43:59.'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Last&amp;nbsp;modified:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'F&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>getlastmod</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.getlastmod.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyuid.php' class='function' rel='rdfs-seeAlso'>getmyuid()</a> - Gets PHP script owner's UID</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmygid.php' class='function' rel='rdfs-seeAlso'>getmygid()</a> - Get PHP script owner's GID</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-current-user.php' class='function' rel='rdfs-seeAlso'>get_current_user()</a> - Gets the name of the owner of the current PHP script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmypid.php' class='function' rel='rdfs-seeAlso'>getmypid()</a> - Gets PHP's process ID</li> <li class='member'><a href='http://www.php.net/manual/en/function.filemtime.php' class='function' rel='rdfs-seeAlso'>filemtime()</a> - Gets file modification time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getimagesize" value="<div id='function.getimagesize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getimagesize.php'>getimagesize</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getimagesize</span> &amp;mdash; <span class='dc-title'>Get the size of an image</span></p> </div> <a name='function.getimagesize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>getimagesize</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$imageinfo</tt></span> ] )</div> <p class='para rdfs-comment'> The <b>getimagesize()</b> function will determine the size of any given image file and return the dimensions along with the file type and a <i>height/width</i> text string to be used inside a normal <acronym title='Hyper Text Markup Language'>HTML</acronym> <code>&amp;lt;IMG&amp;gt;</code> tag and the correspondant <acronym title='Hypertext Transfer Protocol'>HTTP</acronym> content type. </p> <p class='para'> <b>getimagesize()</b> can also return some more information in <i><tt class='parameter'>imageinfo</tt></i> parameter. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for &amp;quot;bits&amp;quot; is the highest bit depth encountered. Also, JP2 files may contain <i>multiple JPEG 2000 codestreams</i>. In this case, <b>getimagesize()</b> returns the values for the first codestream it encounters in the root of the file. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> The information about icons are retrieved from the icon with the highest bitrate. </span> </p></blockquote> </div> <a name='function.getimagesize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This parameter specifies the file you wish to retrieve information about. It can reference a local file or (configuration permitting) a remote file using one of the supported streams. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>imageinfo</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This optional parameter allows you to extract some extended information from the image file. Currently, this will return the different <acronym>JPG</acronym> APP markers as an associative array. Some programs use these APP markers to embed text information in images. A very common one is to embed <a href='http://www.iptc.org/' class='link external'>&amp;raquo; IPTC</a> information in the APP13 marker. You can use the <a href='http://www.php.net/manual/en/function.iptcparse.php' class='function'>iptcparse()</a> function to parse the binary APP13 marker into something readable. </p> </dd> </dl> <p> </p> </div> <a name='function.getimagesize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with 7 elements. </p> <p class='para'> Index 0 and 1 contains respectively the width and the height of the image. </p> <blockquote><p><b class='note'>Note</b>: Some formats may contain no image or may contain multiple images. In these cases, <b>getimagesize()</b> might not be able to properly determine the image size. <b>getimagesize()</b> will return zero for width and height in these cases. <br /> </p></blockquote> <p class='para'> Index 2 is one of the <i>IMAGETYPE_XXX</i> constants indicating the type of the image. </p> <p class='para'> Index 3 is a text string with the correct <i>height=&amp;quot;yyy&amp;quot; width=&amp;quot;xxx&amp;quot;</i> string that can be used directly in an <acronym>IMG</acronym> tag. </p> <p class='para'> <i>mime</i> is the correspondant MIME type of the image. This information can be used to deliver images with correct the HTTP <i>Content-type</i> header: </p><div class='example'> <p><b>Example #1 <b>getimagesize()</b> and MIME types</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$size&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$size&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-type:&amp;nbsp;</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$size</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'mime'</span><span style='color: #007700'>]}</span><span style='color: #DD0000'>'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;error<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> <i>channels</i> will be 3 for RGB pictures and 4 for CMYK pictures. </p> <p class='para'> <i>bits</i> is the number of bits for each color. </p> <p class='para'> For some image types, the presence of <i>channels</i> and <i>bits</i> values can be a bit confusing. As an example, <acronym title='Graphic Interchange Format'>GIF</acronym> always uses 3 channels per pixel, but the number of bits per pixel cannot be calculated for an animated <acronym title='Graphic Interchange Format'>GIF</acronym> with a global color table. </p> <p class='para'> On failure, <b><tt class='constant'>FALSE</tt></b> is returned. </p> </div> <a name='function.getimagesize.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If accessing the <i><tt class='parameter'>filename</tt></i> image is impossible, or if it isn&amp;#039;t a valid picture, <b>getimagesize()</b> will generate an error of level <b><tt class='constant'>E_WARNING</tt></b>. On read error, <b>getimagesize()</b> will generate an error of level <b><tt class='constant'>E_NOTICE</tt></b>. </p> </div> <a name='function.getimagesize.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added icon support. </td> </tr> <tr valign='middle'> <td align='left'>5.2.3</td> <td align='left'> Read errors generated by this function downgraded to <b><tt class='constant'>E_NOTICE</tt></b> from <b><tt class='constant'>E_WARNING</tt></b>. </td> </tr> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> Support for <acronym title='Japan Picture'>JPC</acronym>, <acronym title='JPEG-2000'>JP2</acronym>, <acronym>JPX</acronym>, <acronym title='Joint Bilevel Image Experts Group'>JB2</acronym>, <acronym title='X Bitmap'>XBM</acronym>, and <acronym title='Wireless Bitmap'>WBMP</acronym> became available. </td> </tr> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> JPEG 2000 support was added for the <i><tt class='parameter'>imageinfo</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <i>bits</i> and <i>channels</i> are present for other image types, too. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <i>mime</i> was added. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Support for <acronym>SWC</acronym> and <acronym title='Interchange File Format'>IFF</acronym> was added. </td> </tr> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> Support for <acronym title='Tagged Image File Format'>TIFF</acronym> was added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.6</td> <td align='left'> Support for <acronym title='Bitmap'>BMP</acronym> and <acronym title='Photoshop Document'>PSD</acronym> was added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> URL support was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.getimagesize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>getimagesize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>list(</span><span style='color: #0000BB'>$width</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$height</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$attr</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'img/flag.jpg'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;img&amp;nbsp;src=\'img/flag.jpg\'&amp;nbsp;</span><span style='color: #0000BB'>$attr</span><span style='color: #DD0000'>&amp;nbsp;alt=\'getimagesize()&amp;nbsp;example\'&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 getimagesize (URL)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$size&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/gifs/logo.gif'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;if&amp;nbsp;the&amp;nbsp;file&amp;nbsp;name&amp;nbsp;has&amp;nbsp;space&amp;nbsp;in&amp;nbsp;it,&amp;nbsp;encode&amp;nbsp;it&amp;nbsp;properly<br /></span><span style='color: #0000BB'>$size&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/gifs/lo%20go.gif'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #4 getimagesize() returning IPTC</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$size&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'testimg.jpg'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>);<br />if&amp;nbsp;(isset(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'APP13'</span><span style='color: #007700'>]))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iptc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>iptcparse</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'APP13'</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$iptc</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.getimagesize.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function does not require the GD image library.<br /></p></blockquote> </div> <a name='function.getimagesize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.image-type-to-mime-type.php' class='function' rel='rdfs-seeAlso'>image_type_to_mime_type()</a> - Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype</li> <li class='member'><a href='http://www.php.net/manual/en/function.exif-imagetype.php' class='function' rel='rdfs-seeAlso'>exif_imagetype()</a> - Determine the type of an image</li> <li class='member'><a href='http://www.php.net/manual/en/function.exif-read-data.php' class='function' rel='rdfs-seeAlso'>exif_read_data()</a> - Reads the EXIF headers from JPEG or TIFF</li> <li class='member'><a href='http://www.php.net/manual/en/function.exif-thumbnail.php' class='function' rel='rdfs-seeAlso'>exif_thumbnail()</a> - Retrieve the embedded thumbnail of a TIFF or JPEG image</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gethostbynamel" value="<div id='function.gethostbynamel' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gethostbynamel.php'>gethostbynamel</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gethostbynamel</span> &amp;mdash; <span class='dc-title'> Get a list of IPv4 addresses corresponding to a given Internet host name </span></p> </div> <a name='function.gethostbynamel.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>gethostbynamel</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$hostname</tt></span> )</div> <p class='para rdfs-comment'> Returns a list of IPv4 addresses to which the Internet host specified by <i><tt class='parameter'>hostname</tt></i> resolves. </p> </div> <a name='function.gethostbynamel.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>hostname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The host name. </p> </dd> </dl> <p> </p> </div> <a name='function.gethostbynamel.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of IPv4 addresses or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>hostname</tt></i> could not be resolved. </p> </div> <a name='function.gethostbynamel.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>gethostbynamel()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$hosts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>gethostbynamel</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'www.example.com'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$hosts</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; 192.0.34.166 ) </pre></div> </div> </div><p> </p> </div> <a name='function.gethostbynamel.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbyname.php' class='function' rel='rdfs-seeAlso'>gethostbyname()</a> - Get the IPv4 address corresponding to a given Internet host name</li> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbyaddr.php' class='function' rel='rdfs-seeAlso'>gethostbyaddr()</a> - Get the Internet host name corresponding to a given IP address</li> <li class='member'><a href='http://www.php.net/manual/en/function.checkdnsrr.php' class='function' rel='rdfs-seeAlso'>checkdnsrr()</a> - Check DNS records corresponding to a given Internet host name or IP address</li> <li class='member'><a href='http://www.php.net/manual/en/function.getmxrr.php' class='function' rel='rdfs-seeAlso'>getmxrr()</a> - Get MX records corresponding to a given Internet host name</li> <li class='member'>the <i>named(8)</i> manual page</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gethostbyname" value="<div id='function.gethostbyname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gethostbyname.php'>gethostbyname</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gethostbyname</span> &amp;mdash; <span class='dc-title'> Get the IPv4 address corresponding to a given Internet host name </span></p> </div> <a name='function.gethostbyname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>gethostbyname</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$hostname</tt></span> )</div> <p class='para rdfs-comment'> Returns the IPv4 address of the Internet host specified by <i><tt class='parameter'>hostname</tt></i> . </p> </div> <a name='function.gethostbyname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>hostname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The host name. </p> </dd> </dl> <p> </p> </div> <a name='function.gethostbyname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the IPv4 address or a string containing the unmodified <i><tt class='parameter'>hostname</tt></i> on failure. </p> </div> <a name='function.gethostbyname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>gethostbyname()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ip&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>gethostbyname</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'www.example.com'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$ip</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.gethostbyname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbyaddr.php' class='function' rel='rdfs-seeAlso'>gethostbyaddr()</a> - Get the Internet host name corresponding to a given IP address</li> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbynamel.php' class='function' rel='rdfs-seeAlso'>gethostbynamel()</a> - Get a list of IPv4 addresses corresponding to a given Internet host name</li> <li class='member'><a href='http://www.php.net/manual/en/function.inet-pton.php' class='function' rel='rdfs-seeAlso'>inet_pton()</a> - Converts a human readable IP address to its packed in_addr representation</li> <li class='member'><a href='http://www.php.net/manual/en/function.inet-ntop.php' class='function' rel='rdfs-seeAlso'>inet_ntop()</a> - Converts a packed internet address to a human readable representation</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gethostbyaddr" value="<div id='function.gethostbyaddr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gethostbyaddr.php'>gethostbyaddr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>gethostbyaddr</span> &amp;mdash; <span class='dc-title'> Get the Internet host name corresponding to a given IP address </span></p> </div> <a name='function.gethostbyaddr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>gethostbyaddr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$ip_address</tt></span> )</div> <p class='para rdfs-comment'> Returns the host name of the Internet host specified by <i><tt class='parameter'>ip_address</tt></i> . </p> </div> <a name='function.gethostbyaddr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ip_address</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The host IP address. </p> </dd> </dl> <p> </p> </div> <a name='function.gethostbyaddr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the host name or the unmodified <i><tt class='parameter'>ip_address</tt></i> on failure. </p> </div> <a name='function.gethostbyaddr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>gethostbyaddr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$hostname&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>gethostbyaddr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'REMOTE_ADDR'</span><span style='color: #007700'>]);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$hostname</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.gethostbyaddr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbyname.php' class='function' rel='rdfs-seeAlso'>gethostbyname()</a> - Get the IPv4 address corresponding to a given Internet host name</li> <li class='member'><a href='http://www.php.net/manual/en/function.gethostbynamel.php' class='function' rel='rdfs-seeAlso'>gethostbynamel()</a> - Get a list of IPv4 addresses corresponding to a given Internet host name</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getenv" value="<div id='function.getenv' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getenv.php'>getenv</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getenv</span> &amp;mdash; <span class='dc-title'>Gets the value of an environment variable</span></p> </div> <a name='function.getenv.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>getenv</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$varname</tt></span> )</div> <p class='para rdfs-comment'> Gets the value of an environment variable. </p> <p class='para'> You can see a list of all the environmental variables by using <a href='http://www.php.net/manual/en/function.phpinfo.php' class='function'>phpinfo()</a>. You can find out what many of them mean by taking a look at the <a href='http://hoohoo.ncsa.uiuc.edu/cgi/' class='link external'>&amp;raquo; CGI specification</a>, specifically the <a href='http://hoohoo.ncsa.uiuc.edu/cgi/env.html' class='link external'>&amp;raquo; page on environmental variables</a>. </p> </div> <a name='function.getenv.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>varname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable name. </p> </dd> </dl> <p> </p> </div> <a name='function.getenv.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the value of the environment variable <i><tt class='parameter'>varname</tt></i> , or <b><tt class='constant'>FALSE</tt></b> on an error. </p> </div> <a name='function.getenv.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getenv()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Example&amp;nbsp;use&amp;nbsp;of&amp;nbsp;getenv()<br /></span><span style='color: #0000BB'>$ip&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getenv</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'REMOTE_ADDR'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Or&amp;nbsp;simply&amp;nbsp;use&amp;nbsp;a&amp;nbsp;Superglobal&amp;nbsp;($_SERVER&amp;nbsp;or&amp;nbsp;$_ENV)<br /></span><span style='color: #0000BB'>$ip&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'REMOTE_ADDR'</span><span style='color: #007700'>];<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.getenv.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.putenv.php' class='function' rel='rdfs-seeAlso'>putenv()</a> - Sets the value of an environment variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.apache-getenv.php' class='function' rel='rdfs-seeAlso'>apache_getenv()</a> - Get an Apache subprocess_env variable</li> <li class='member'><a href='http://www.php.net/manual/en/language.variables.superglobals.php' class='link'>Superglobals</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getdate" value="<div id='function.getdate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getdate.php'>getdate</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getdate</span> &amp;mdash; <span class='dc-title'>Get date/time information</span></p> </div> <a name='function.getdate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>getdate</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt><span class='initializer'> = time()</span></span> ] )</div> <p class='para rdfs-comment'> Returns an associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing the date information of the <i><tt class='parameter'>timestamp</tt></i> , or the current local time if no <i><tt class='parameter'>timestamp</tt></i> is given. </p> </div> <a name='function.getdate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>timestamp</tt></i> parameter is an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp that defaults to the current local time if a <i><tt class='parameter'>timestamp</tt></i> is not given. In other words, it defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p></dd> </dl> <p> </p> </div> <a name='function.getdate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of information related to the <i><tt class='parameter'>timestamp</tt></i> . Elements from the returned associative array are as follows: </p> <p class='para'> </p><table class='doctable table'> <caption><b>Key elements of the returned associative array</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Key</th> <th>Description</th> <th>Example returned values</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>&amp;quot;seconds&amp;quot;</i></td> <td align='left'>Numeric representation of seconds</td> <td align='left'><i>0</i> to <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;minutes&amp;quot;</i></td> <td align='left'>Numeric representation of minutes</td> <td align='left'><i>0</i> to <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;hours&amp;quot;</i></td> <td align='left'>Numeric representation of hours</td> <td align='left'><i>0</i> to <i>23</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;mday&amp;quot;</i></td> <td align='left'>Numeric representation of the day of the month</td> <td align='left'><i>1</i> to <i>31</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;wday&amp;quot;</i></td> <td align='left'>Numeric representation of the day of the week</td> <td align='left'><i>0</i> (for Sunday) through <i>6</i> (for Saturday)</td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;mon&amp;quot;</i></td> <td align='left'>Numeric representation of a month</td> <td align='left'><i>1</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;year&amp;quot;</i></td> <td align='left'>A full numeric representation of a year, 4 digits</td> <td align='left'>Examples: <i>1999</i> or <i>2003</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;yday&amp;quot;</i></td> <td align='left'>Numeric representation of the day of the year</td> <td align='left'><i>0</i> through <i>365</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;weekday&amp;quot;</i></td> <td align='left'>A full textual representation of the day of the week</td> <td align='left'><i>Sunday</i> through <i>Saturday</i></td> </tr> <tr valign='middle'> <td align='left'><i>&amp;quot;month&amp;quot;</i></td> <td align='left'>A full textual representation of a month, such as January or March</td> <td align='left'><i>January</i> through <i>December</i></td> </tr> <tr valign='middle'> <td align='left'><i>0</i></td> <td align='left'> Seconds since the Unix Epoch, similar to the values returned by <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a> and used by <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a>. </td> <td align='left'> System Dependent, typically <i>-2147483648</i> through <i>2147483647</i>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.getdate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getdate()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getdate</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$today</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [seconds] =&amp;gt; 40 [minutes] =&amp;gt; 58 [hours] =&amp;gt; 21 [mday] =&amp;gt; 17 [wday] =&amp;gt; 2 [mon] =&amp;gt; 6 [year] =&amp;gt; 2003 [yday] =&amp;gt; 167 [weekday] =&amp;gt; Tuesday [month] =&amp;gt; June [0] =&amp;gt; 1055901520 ) </pre></div> </div> </div><p> </p> </div> <a name='function.getdate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> <li class='member'><a href='http://www.php.net/manual/en/function.time.php' class='function' rel='rdfs-seeAlso'>time()</a> - Return current Unix timestamp</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="getcwd" value="<div id='function.getcwd' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.getcwd.php'>getcwd</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>getcwd</span> &amp;mdash; <span class='dc-title'>Gets the current working directory</span></p> </div> <a name='function.getcwd.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>getcwd</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the current working directory. </p> </div> <a name='function.getcwd.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current working directory on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <p class='para'> On some Unix variants, <b>getcwd()</b> will return <b><tt class='constant'>FALSE</tt></b> if any one of the parent directories does not have the readable or search mode set, even if the current directory does. See <a href='http://www.php.net/manual/en/function.chmod.php' class='function'>chmod()</a> for more information on modes and permissions. </p> </div> <a name='function.getcwd.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>getcwd()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;current&amp;nbsp;directory<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>getcwd</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>chdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cvs'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;current&amp;nbsp;directory<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>getcwd</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> /home/didou /home/didou/cvs </pre></div> </div> </div><p> </p> </div> <a name='function.getcwd.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chdir.php' class='function' rel='rdfs-seeAlso'>chdir()</a> - Change directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.chmod.php' class='function' rel='rdfs-seeAlso'>chmod()</a> - Changes file mode</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="gd_info" value="<div id='function.gd-info' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.gd-info.php'>gd_info</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>gd_info</span> &amp;mdash; <span class='dc-title'>Retrieve information about the currently installed GD library</span></p> </div> <a name='function.gd-info.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>gd_info</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets information about the version and capabilities of the installed GD library. </p> </div> <a name='function.gd-info.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array. </p> <p class='para'> </p><table class='doctable table'> <caption><b>Elements of array returned by <b>gd_info()</b></b></caption> <thead valign='middle'> <tr valign='middle'> <th>Attribute</th> <th>Meaning</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>GD Version</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> value describing the installed <i>libgd</i> version.</td> </tr> <tr valign='middle'> <td align='left'>Freetype Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if Freetype Support is installed.</td> </tr> <tr valign='middle'> <td align='left'>Freetype Linkage</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> value describing the way in which Freetype was linked. Expected values are: &amp;#039;with freetype&amp;#039;, &amp;#039;with TTF library&amp;#039;, and &amp;#039;with unknown library&amp;#039;. This element will only be defined if <i>Freetype Support</i> evaluated to <b><tt class='constant'>TRUE</tt></b>.</td> </tr> <tr valign='middle'> <td align='left'>T1Lib Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if <i>T1Lib</i> support is included.</td> </tr> <tr valign='middle'> <td align='left'>GIF Read Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if support for <em class='emphasis'>reading</em> <i>GIF</i> images is included.</td> </tr> <tr valign='middle'> <td align='left'>GIF Create Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if support for <em class='emphasis'>creating</em> <i>GIF</i> images is included.</td> </tr> <tr valign='middle'> <td align='left'>JPEG Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if <i>JPEG</i> support is included.</td> </tr> <tr valign='middle'> <td align='left'>PNG Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if <i>PNG</i> support is included.</td> </tr> <tr valign='middle'> <td align='left'>WBMP Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if <i>WBMP</i> support is included.</td> </tr> <tr valign='middle'> <td align='left'>XBM Support</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> value. <b><tt class='constant'>TRUE</tt></b> if <i>XBM</i> support is included.</td> </tr> </tbody> </table> <p> </p> <blockquote><p><b class='note'>Note</b>: Previous to PHP 5.3.0, the <i>JPEG Support</i> attribute was named <i>JPG Support</i>. <br /> </p></blockquote> </div> <a name='function.gd-info.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>gd_info()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>gd_info</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(9) { [&amp;quot;GD Version&amp;quot;]=&amp;gt; string(24) &amp;quot;bundled (2.0 compatible)&amp;quot; [&amp;quot;FreeType Support&amp;quot;]=&amp;gt; bool(false) [&amp;quot;T1Lib Support&amp;quot;]=&amp;gt; bool(false) [&amp;quot;GIF Read Support&amp;quot;]=&amp;gt; bool(true) [&amp;quot;GIF Create Support&amp;quot;]=&amp;gt; bool(false) [&amp;quot;JPEG Support&amp;quot;]=&amp;gt; bool(false) [&amp;quot;PNG Support&amp;quot;]=&amp;gt; bool(true) [&amp;quot;WBMP Support&amp;quot;]=&amp;gt; bool(true) [&amp;quot;XBM Support&amp;quot;]=&amp;gt; bool(false) } </pre></div> </div> </div><p> </p> </div> <a name='function.gd-info.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> <i>JPG Support</i> attribute renamed to <i>JPEG Support</i>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.gd-info.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.imagepng.php' class='function' rel='rdfs-seeAlso'>imagepng()</a> - Output a PNG image to either the browser or a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.imagejpeg.php' class='function' rel='rdfs-seeAlso'>imagejpeg()</a> - Output image to browser or file</li> <li class='member'><a href='http://www.php.net/manual/en/function.imagegif.php' class='function' rel='rdfs-seeAlso'>imagegif()</a> - Output image to browser or file</li> <li class='member'><a href='http://www.php.net/manual/en/function.imagewbmp.php' class='function' rel='rdfs-seeAlso'>imagewbmp()</a> - Output image to browser or file</li> <li class='member'><a href='http://www.php.net/manual/en/function.imagetypes.php' class='function' rel='rdfs-seeAlso'>imagetypes()</a> - Return the image types supported by this PHP build</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fwrite" value="<div id='function.fwrite' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fwrite.php'>fwrite</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fwrite</span> &amp;mdash; <span class='dc-title'>Binary-safe file write</span></p> </div> <a name='function.fwrite.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fwrite</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <p class='simpara'> <b>fwrite()</b> writes the contents of <i><tt class='parameter'>string</tt></i> to the file stream pointed to by <i><tt class='parameter'>handle</tt></i> . </p> </div> <a name='function.fwrite.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string that is to be written. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>length</tt></i> argument is given, writing will stop after <i><tt class='parameter'>length</tt></i> bytes have been written or the end of <i><tt class='parameter'>string</tt></i> is reached, whichever comes first. </p> <p class='para'> Note that if the <i><tt class='parameter'>length</tt></i> argument is given, then the <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-runtime' class='link'>magic_quotes_runtime</a> configuration option will be ignored and no slashes will be stripped from <i><tt class='parameter'>string</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.fwrite.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='simpara'> <b>fwrite()</b> returns the number of bytes written, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.fwrite.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Writing to a network stream may end before the whole string is written. Return value of <b>fwrite()</b> may be checked: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>fwrite_stream</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(</span><span style='color: #0000BB'>$written&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$written&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #0000BB'>$written&amp;nbsp;</span><span style='color: #007700'>+=&amp;nbsp;</span><span style='color: #0000BB'>$fwrite</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$fwrite&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$written</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$fwrite</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$fwrite</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$written</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: On systems which differentiate between binary and text files (i.e. Windows) the file must be opened with &amp;#039;b&amp;#039; included in <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> mode parameter. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>handle</tt></i> was <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>ed in append mode, <b>fwrite()</b>s are atomic (unless the size of <i><tt class='parameter'>string</tt></i> exceeds the filesystem&amp;#039;s block size, on some platforms, and as long as the file is on a local filesystem). That is, there is no need to <a href='http://www.php.net/manual/en/function.flock.php' class='function'>flock()</a> a resource before calling <b>fwrite()</b>; all of the data will be written without interruption. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If writing twice to the file pointer, then the data will be appended to the end of the file content: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'data.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'23'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;the&amp;nbsp;content&amp;nbsp;of&amp;nbsp;'data.txt'&amp;nbsp;is&amp;nbsp;now&amp;nbsp;123&amp;nbsp;and&amp;nbsp;not&amp;nbsp;23!<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> <br /> </p></blockquote> </div> <a name='function.fwrite.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>fwrite()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'test.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$somecontent&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Add&amp;nbsp;this&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Let's&amp;nbsp;make&amp;nbsp;sure&amp;nbsp;the&amp;nbsp;file&amp;nbsp;exists&amp;nbsp;and&amp;nbsp;is&amp;nbsp;writable&amp;nbsp;first.<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>is_writable</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;In&amp;nbsp;our&amp;nbsp;example&amp;nbsp;we're&amp;nbsp;opening&amp;nbsp;$filename&amp;nbsp;in&amp;nbsp;append&amp;nbsp;mode.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;The&amp;nbsp;file&amp;nbsp;pointer&amp;nbsp;is&amp;nbsp;at&amp;nbsp;the&amp;nbsp;bottom&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file&amp;nbsp;hence<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;that's&amp;nbsp;where&amp;nbsp;$somecontent&amp;nbsp;will&amp;nbsp;go&amp;nbsp;when&amp;nbsp;we&amp;nbsp;fwrite()&amp;nbsp;it.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Cannot&amp;nbsp;open&amp;nbsp;file&amp;nbsp;(</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Write&amp;nbsp;$somecontent&amp;nbsp;to&amp;nbsp;our&amp;nbsp;opened&amp;nbsp;file.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$somecontent</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>FALSE</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Cannot&amp;nbsp;write&amp;nbsp;to&amp;nbsp;file&amp;nbsp;(</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Success,&amp;nbsp;wrote&amp;nbsp;(</span><span style='color: #0000BB'>$somecontent</span><span style='color: #DD0000'>)&amp;nbsp;to&amp;nbsp;file&amp;nbsp;(</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /><br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;file&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;is&amp;nbsp;not&amp;nbsp;writable'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fwrite.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function' rel='rdfs-seeAlso'>file_get_contents()</a> - Reads entire file into a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="func_num_args" value="<div id='function.func-num-args' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.func-num-args.php'>func_num_args</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>func_num_args</span> &amp;mdash; <span class='dc-title'>Returns the number of arguments passed to the function</span></p> </div> <a name='function.func-num-args.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>func_num_args</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the number of arguments passed to the function. </p> <p class='para'> This function may be used in conjunction with <a href='http://www.php.net/manual/en/function.func-get-arg.php' class='function'>func_get_arg()</a> and <a href='http://www.php.net/manual/en/function.func-get-args.php' class='function'>func_get_args()</a> to allow user-defined functions to accept variable-length argument lists. </p> </div> <a name='function.func-num-args.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of arguments passed into the current user-defined function. </p> </div> <a name='function.func-num-args.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function can now be used in parameter lists. </td> </tr> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> If this function is called from the outtermost scope of a file which has been included by calling <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a> or <a href='http://www.php.net/manual/en/function.require.php' class='function'>require()</a> from within a function in the calling file, it now generates a warning and returns -1. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.func-num-args.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Generates a warning if called from outside of a user-defined function. </p> </div> <a name='function.func-num-args.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>func_num_args()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$numargs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_num_args</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;arguments:&amp;nbsp;</span><span style='color: #0000BB'>$numargs</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Number of arguments: 3 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>func_num_args()</b> example before and after PHP 5.3</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> test.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;</span><span style='color: #DD0000'>'./fga.inc'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'First&amp;nbsp;arg'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Second&amp;nbsp;arg'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span><br />fga.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /><br />$num_args&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_num_args</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$num_args</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Output previous to PHP 5.3: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> 2 </pre></div> </div> <div class='example-contents para'><p> Output in PHP 5.3 and later: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Warning: func_num_args(): Called from the global scope - no function context in /home/torben/Desktop/code/ml/fga.inc on line 3 -1 </pre></div> </div> </div><p> </p> </div> <a name='function.func-num-args.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.<br /></p></blockquote> </div> <a name='function.func-num-args.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.func-get-arg.php' class='function' rel='rdfs-seeAlso'>func_get_arg()</a> - Return an item from the argument list</li> <li class='member'><a href='http://www.php.net/manual/en/function.func-get-args.php' class='function' rel='rdfs-seeAlso'>func_get_args()</a> - Returns an array comprising a function's argument list</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="func_get_args" value="<div id='function.func-get-args' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.func-get-args.php'>func_get_args</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>func_get_args</span> &amp;mdash; <span class='dc-title'>Returns an array comprising a function&amp;#039;s argument list</span></p> </div> <a name='function.func-get-args.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>func_get_args</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets an array of the function&amp;#039;s argument list. </p> <p class='para'> This function may be used in conjunction with <a href='http://www.php.net/manual/en/function.func-get-arg.php' class='function'>func_get_arg()</a> and <a href='http://www.php.net/manual/en/function.func-num-args.php' class='function'>func_num_args()</a> to allow user-defined functions to accept variable-length argument lists. </p> </div> <a name='function.func-get-args.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array in which each element is a copy of the corresponding member of the current user-defined function&amp;#039;s argument list. </p> </div> <a name='function.func-get-args.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function can now be used in parameter lists. </td> </tr> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> If this function is called from the outtermost scope of a file which has been included by calling <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a> or <a href='http://www.php.net/manual/en/function.require.php' class='function'>require()</a> from within a function in the calling file, it now generates a warning and returns <b><tt class='constant'>FALSE</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.func-get-args.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Generates a warning if called from outside of a user-defined function. </p> </div> <a name='function.func-get-args.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>func_get_args()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$numargs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_num_args</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;arguments:&amp;nbsp;</span><span style='color: #0000BB'>$numargs</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$numargs&amp;nbsp;</span><span style='color: #007700'>&amp;gt;=&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Second&amp;nbsp;argument&amp;nbsp;is:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>func_get_arg</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$arg_list&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_get_args</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>$numargs</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>++)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Argument&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #DD0000'>&amp;nbsp;is:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$arg_list</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Number of arguments: 3&amp;lt;br /&amp;gt; Second argument is: 2&amp;lt;br /&amp;gt; Argument 0 is: 1&amp;lt;br /&amp;gt; Argument 1 is: 2&amp;lt;br /&amp;gt; Argument 2 is: 3&amp;lt;br /&amp;gt; </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>func_get_args()</b> example before and after PHP 5.3</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> test.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;</span><span style='color: #DD0000'>'./fga.inc'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'First&amp;nbsp;arg'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Second&amp;nbsp;arg'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span><br />fga.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /><br />$args&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_get_args</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$args</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Output previous to PHP 5.3: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> array ( 0 =&amp;gt; &amp;#039;First arg&amp;#039;, 1 =&amp;gt; &amp;#039;Second arg&amp;#039;, ) </pre></div> </div> <div class='example-contents para'><p> Output in PHP 5.3 and later: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Warning: func_get_args(): Called from the global scope - no function context in /home/torben/Desktop/code/ml/fga.inc on line 3 false </pre></div> </div> </div><p> </p> </div> <a name='function.func-get-args.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function returns a copy of the passed arguments only, and does not account for default (non-passed) arguments. </span> </p></blockquote> </div> <a name='function.func-get-args.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.func-get-arg.php' class='function' rel='rdfs-seeAlso'>func_get_arg()</a> - Return an item from the argument list</li> <li class='member'><a href='http://www.php.net/manual/en/function.func-num-args.php' class='function' rel='rdfs-seeAlso'>func_num_args()</a> - Returns the number of arguments passed to the function</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="func_get_arg" value="<div id='function.func-get-arg' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.func-get-arg.php'>func_get_arg</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>func_get_arg</span> &amp;mdash; <span class='dc-title'>Return an item from the argument list</span></p> </div> <a name='function.func-get-arg.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>func_get_arg</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$arg_num</tt></span> )</div> <p class='para rdfs-comment'> Gets the specified argument from a user-defined function&amp;#039;s argument list. </p> <p class='para'> This function may be used in conjunction with <a href='http://www.php.net/manual/en/function.func-get-args.php' class='function'>func_get_args()</a> and <a href='http://www.php.net/manual/en/function.func-num-args.php' class='function'>func_num_args()</a> to allow user-defined functions to accept variable-length argument lists. </p> </div> <a name='function.func-get-arg.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg_num</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument offset. Function arguments are counted starting from zero. </p> </dd> </dl> <p> </p> </div> <a name='function.func-get-arg.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the specified argument, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.func-get-arg.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function can now be used in parameter lists. </td> </tr> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> If this function is called from the outtermost scope of a file which has been included by calling <a href='http://www.php.net/manual/en/function.include.php' class='function'>include()</a> or <a href='http://www.php.net/manual/en/function.require.php' class='function'>require()</a> from within a function in the calling file, it now generates a warning and returns <b><tt class='constant'>FALSE</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.func-get-arg.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Generates a warning if called from outside of a user-defined function, or if <i><tt class='parameter'>arg_num</tt></i> is greater than the number of arguments actually passed. </p> </div> <a name='function.func-get-arg.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>func_get_arg()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$numargs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_num_args</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;arguments:&amp;nbsp;</span><span style='color: #0000BB'>$numargs</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$numargs&amp;nbsp;</span><span style='color: #007700'>&amp;gt;=&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Second&amp;nbsp;argument&amp;nbsp;is:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>func_get_arg</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>func_get_arg()</b> example before and after PHP 5.3</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> test.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;</span><span style='color: #DD0000'>'./fga.inc'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'First&amp;nbsp;arg'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Second&amp;nbsp;arg'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span><br />fga.php<br /><span style='color: #0000BB'>&amp;lt;?php<br /><br />$arg&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>func_get_arg1</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arg</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Output previous to PHP 5.3: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;#039;Second arg&amp;#039; </pre></div> </div> <div class='example-contents para'><p> Output in PHP 5.3 and later: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Warning: func_get_arg(): Called from the global scope - no function context in /home/torben/Desktop/code/ml/fga.inc on line 3 false </pre></div> </div> </div><p> </p> </div> <a name='function.func-get-arg.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function returns a copy of the passed arguments only, and does not account for default (non-passed) arguments. </span> </p></blockquote> </div> <a name='function.func-get-arg.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.func-get-args.php' class='function' rel='rdfs-seeAlso'>func_get_args()</a> - Returns an array comprising a function's argument list</li> <li class='member'><a href='http://www.php.net/manual/en/function.func-num-args.php' class='function' rel='rdfs-seeAlso'>func_num_args()</a> - Returns the number of arguments passed to the function</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="function_exists" value="<div id='function.function-exists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.function-exists.php'>function_exists</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>function_exists</span> &amp;mdash; <span class='dc-title'>Return <b><tt class='constant'>TRUE</tt></b> if the given function has been defined</span></p> </div> <a name='function.function-exists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>function_exists</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> )</div> <p class='para rdfs-comment'> Checks the list of defined functions, both built-in (internal) and user-defined, for <i><tt class='parameter'>function_name</tt></i> . </p> </div> <a name='function.function-exists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function name, as a string. </p> </dd> </dl> <p> </p> </div> <a name='function.function-exists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if <i><tt class='parameter'>function_name</tt></i> exists and is a function, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> <blockquote><p><b class='note'>Note</b>: This function will return <b><tt class='constant'>FALSE</tt></b> for constructs, such as <a href='http://www.php.net/manual/en/function.include-once.php' class='function'>include_once()</a> and <a href='http://www.php.net/manual/en/function.echo.php' class='function'>echo()</a>. <br /> </p></blockquote> </div> <a name='function.function-exists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>function_exists()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>function_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'imap_open'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'IMAP&amp;nbsp;functions&amp;nbsp;are&amp;nbsp;available.&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'IMAP&amp;nbsp;functions&amp;nbsp;are&amp;nbsp;not&amp;nbsp;available.&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.function-exists.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: A function name may exist even if the function itself is unusable due to configuration or compiling options (with the <a href='http://www.php.net/manual/en/ref.image.php' class='link'>image</a> functions being an example). <br /> </p></blockquote> </div> <a name='function.function-exists.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.method-exists.php' class='function' rel='rdfs-seeAlso'>method_exists()</a> - Checks if the class method exists</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-callable.php' class='function' rel='rdfs-seeAlso'>is_callable()</a> - Verify that the contents of a variable can be called as a function</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-functions.php' class='function' rel='rdfs-seeAlso'>get_defined_functions()</a> - Returns an array of all defined functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ftruncate" value="<div id='function.ftruncate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ftruncate.php'>ftruncate</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ftruncate</span> &amp;mdash; <span class='dc-title'>Truncates a file to a given length</span></p> </div> <a name='function.ftruncate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ftruncate</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$size</tt></span> )</div> <p class='para rdfs-comment'> Takes the filepointer, <i><tt class='parameter'>handle</tt></i> , and truncates the file to length, <i><tt class='parameter'>size</tt></i> . </p> </div> <a name='function.ftruncate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer. </p> <blockquote><p><b class='note'>Note</b>: The <i><tt class='parameter'>handle</tt></i> must be open for writing. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>size</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The size to truncate to. </p> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>size</tt></i> is larger than the file it is extended with null bytes. <br /> If <i><tt class='parameter'>size</tt></i> is smaller than the extra data will be lost. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.ftruncate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.ftruncate.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>PHP 4.3.3</td> <td align='left'> Prior to this release <b>ftruncate()</b> returned an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> value of 1 on success, instead of <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>TRUE</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ftruncate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 File truncation example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'lorem_ipsum.txt'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r+'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>rand</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ftruncate.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: The file pointer is <em class='emphasis'>not</em> changed. <br /> </p></blockquote> </div> <a name='function.ftruncate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fseek.php' class='function' rel='rdfs-seeAlso'>fseek()</a> - Seeks on a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ftell" value="<div id='function.ftell' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ftell.php'>ftell</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ftell</span> &amp;mdash; <span class='dc-title'>Returns the current position of the file read/write pointer</span></p> </div> <a name='function.ftell.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ftell</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Returns the position of the file pointer referenced by <i><tt class='parameter'>handle</tt></i> . </p> </div> <a name='function.ftell.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a>. <b>ftell()</b> gives undefined results for append-only streams (opened with &amp;quot;a&amp;quot; flag). </p> </dd> </dl> <p> </p> </div> <a name='function.ftell.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the position of the file pointer referenced by <i><tt class='parameter'>handle</tt></i> as an integer; i.e., its offset into the file stream. </p> <p class='para'> If an error occurs, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.ftell.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ftell()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;opens&amp;nbsp;a&amp;nbsp;file&amp;nbsp;and&amp;nbsp;read&amp;nbsp;some&amp;nbsp;data<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;where&amp;nbsp;are&amp;nbsp;we&amp;nbsp;?<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>ftell</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;11<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ftell.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fseek.php' class='function' rel='rdfs-seeAlso'>fseek()</a> - Seeks on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.rewind.php' class='function' rel='rdfs-seeAlso'>rewind()</a> - Rewind the position of a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fstat" value="<div id='function.fstat' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fstat.php'>fstat</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fstat</span> &amp;mdash; <span class='dc-title'>Gets information about a file using an open file pointer</span></p> </div> <a name='function.fstat.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fstat</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Gathers the statistics of the file opened by the file pointer <i><tt class='parameter'>handle</tt></i> . This function is similar to the <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> function except that it operates on an open file pointer instead of a filename. </p> </div> <a name='function.fstat.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> </dl> <p> </p> </div> <a name='function.fstat.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with the statistics of the file; the format of the array is described in detail on the <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> manual page. </p> </div> <a name='function.fstat.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fstat()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;open&amp;nbsp;a&amp;nbsp;file<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;gather&amp;nbsp;statistics<br /></span><span style='color: #0000BB'>$fstat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fstat</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;the&amp;nbsp;file<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;only&amp;nbsp;the&amp;nbsp;associative&amp;nbsp;part<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fstat</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>13</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [dev] =&amp;gt; 771 [ino] =&amp;gt; 488704 [mode] =&amp;gt; 33188 [nlink] =&amp;gt; 1 [uid] =&amp;gt; 0 [gid] =&amp;gt; 0 [rdev] =&amp;gt; 0 [size] =&amp;gt; 1114 [atime] =&amp;gt; 1061067181 [mtime] =&amp;gt; 1056136526 [ctime] =&amp;gt; 1056136526 [blksize] =&amp;gt; 4096 [blocks] =&amp;gt; 8 ) </pre></div> </div> </div><p> </p> </div> <a name='function.fstat.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fsockopen" value="<div id='function.fsockopen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fsockopen.php'>fsockopen</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fsockopen</span> &amp;mdash; <span class='dc-title'>Open Internet or Unix domain socket connection</span></p> </div> <a name='function.fsockopen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>fsockopen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$hostname</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$port</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$errno</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$errstr</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$timeout</tt><span class='initializer'> = ini_get(&amp;quot;default_socket_timeout&amp;quot;)</span></span> ]]]] )</div> <p class='para rdfs-comment'> Initiates a socket connection to the resource specified by <i><tt class='parameter'>hostname</tt></i> . </p> <p class='para'> PHP supports targets in the Internet and Unix domains as described in <a href='http://www.php.net/manual/en/transports.php' class='xref'>List of Supported Socket Transports</a>. A list of supported transports can also be retrieved using <a href='http://www.php.net/manual/en/function.stream-get-transports.php' class='function'>stream_get_transports()</a>. </p> <p class='para'> The socket will by default be opened in blocking mode. You can switch it to non-blocking mode by using <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a>. </p> </div> <a name='function.fsockopen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>hostname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If you have compiled in OpenSSL support, you may prefix the <i><tt class='parameter'>hostname</tt></i> with either <i>ssl://</i> or <i>tls://</i> to use an SSL or TLS client connection over TCP/IP to connect to the remote host. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>port</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The port number. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errno</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If provided, holds the system level error number that occurred in the system-level <i>connect()</i> call. </p> <p class='para'> If the value returned in <i><tt class='parameter'>errno</tt></i> is <i>0</i> and the function returned <b><tt class='constant'>FALSE</tt></b>, it is an indication that the error occurred before the <i>connect()</i> call. This is most likely due to a problem initializing the socket. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errstr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The error message as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timeout</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The connection timeout, in seconds. </p> <blockquote><p><b class='note'>Note</b>: If you need to set a timeout for reading/writing data over the socket, use <a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function'>stream_set_timeout()</a>, as the <i><tt class='parameter'>timeout</tt></i> parameter to <b>fsockopen()</b> only applies while connecting the socket. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.fsockopen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>fsockopen()</b> returns a file pointer which may be used together with the other file functions (such as <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a>, <a href='http://www.php.net/manual/en/function.fgetss.php' class='function'>fgetss()</a>, <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a>, <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>, and <a href='http://www.php.net/manual/en/function.feof.php' class='function'>feof()</a>). If the call fails, it will return <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='function.fsockopen.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <b><tt class='constant'>E_WARNING</tt></b> if <i><tt class='parameter'>hostname</tt></i> is not a valid domain. </p> </div> <a name='function.fsockopen.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Added support for the <i><tt class='parameter'>timeout</tt></i> parameter on win32. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> SSL and TLS over TCP/IP support was added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> UDP support was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fsockopen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fsockopen()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fsockopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>80</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>30</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>)&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$out&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'GET&amp;nbsp;/&amp;nbsp;HTTP/1.1\r\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$out&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #DD0000'>'Host:&amp;nbsp;www.example.com\r\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$out&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #DD0000'>'Connection:&amp;nbsp;Close\r\n\r\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>128</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Using UDP connection</b></p> <div class='example-contents para'><p> The example below shows how to retrieve the day and time from the UDP service &amp;quot;daytime&amp;quot; (port 13) in your own machine. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fsockopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'udp://127.0.0.1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>13</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'ERROR:&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>26</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fsockopen.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Depending on the environment, the Unix domain or the optional connect timeout may not be available. <br /> </p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='para'> UDP sockets will sometimes appear to have opened without an error, even if the remote host is unreachable. The error will only become apparent when you read or write data to/from the socket. The reason for this is because UDP is a &amp;quot;connectionless&amp;quot; protocol, which means that the operating system does not try to establish a link for the socket until it actually needs to send or receive data. </p> </div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When specifying a numerical IPv6 address (e.g. <i>fe80::1</i>), you must enclose the IP in square brackets&amp;acirc;&amp;#128;&amp;#148;for example, <i>tcp://[fe80::1]:80</i>.</span></p></blockquote> </div> <a name='function.fsockopen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pfsockopen.php' class='function' rel='rdfs-seeAlso'>pfsockopen()</a> - Open persistent Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function' rel='rdfs-seeAlso'>stream_set_blocking()</a> - Set blocking/non-blocking mode on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.feof.php' class='function' rel='rdfs-seeAlso'>feof()</a> - Tests for end-of-file on a file pointer</li> <li class='member'>The <a href='http://www.php.net/manual/en/ref.curl.php' class='link'>Curl extension</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fseek" value="<div id='function.fseek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fseek.php'>fseek</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fseek</span> &amp;mdash; <span class='dc-title'>Seeks on a file pointer</span></p> </div> <a name='function.fseek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fseek</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$whence</tt></span> ] )</div> <p class='para rdfs-comment'> Sets the file position indicator for the file referenced by <i><tt class='parameter'>handle</tt></i> . The new position, measured in bytes from the beginning of the file, is obtained by adding <i><tt class='parameter'>offset</tt></i> to the position specified by <i><tt class='parameter'>whence</tt></i> . </p> </div> <a name='function.fseek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset. </p> <p class='para'> To move to a position before the end-of-file, you need to pass a negative value in <i><tt class='parameter'>offset</tt></i> and set <i><tt class='parameter'>whence</tt></i> to <b><tt class='constant'>SEEK_END</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>whence</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>whence</tt></i> values are: </p><ul class='simplelist'> <li class='member'><b><tt class='constant'>SEEK_SET</tt></b> - Set position equal to <i><tt class='parameter'>offset</tt></i> bytes.</li> <li class='member'><b><tt class='constant'>SEEK_CUR</tt></b> - Set position to current location plus <i><tt class='parameter'>offset</tt></i> .</li> <li class='member'><b><tt class='constant'>SEEK_END</tt></b> - Set position to end-of-file plus <i><tt class='parameter'>offset</tt></i> .</li> </ul><p> </p> <p class='para'> If <i><tt class='parameter'>whence</tt></i> is not specified, it is assumed to be <b><tt class='constant'>SEEK_SET</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.fseek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Upon success, returns 0; otherwise, returns -1. Note that seeking past EOF is not considered an error. </p> </div> <a name='function.fseek.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fseek()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;read&amp;nbsp;some&amp;nbsp;data<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4096</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;move&amp;nbsp;back&amp;nbsp;to&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file<br />//&amp;nbsp;same&amp;nbsp;as&amp;nbsp;rewind($fp);<br /></span><span style='color: #0000BB'>fseek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fseek.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If you have opened the file in append (&amp;quot;a&amp;quot; or &amp;quot;a+&amp;quot;) mode, any data you write to the file will always be appended, regardless of the file position. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: May not be used on file pointers returned by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> if they use the &amp;quot;http://&amp;quot; or &amp;quot;ftp://&amp;quot; formats. <b>fseek()</b> gives also undefined results for append-only streams (opened with &amp;quot;a&amp;quot; flag). <br /> </p></blockquote> </div> <a name='function.fseek.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ftell.php' class='function' rel='rdfs-seeAlso'>ftell()</a> - Returns the current position of the file read/write pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.rewind.php' class='function' rel='rdfs-seeAlso'>rewind()</a> - Rewind the position of a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fscanf" value="<div id='function.fscanf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fscanf.php'>fscanf</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>fscanf</span> &amp;mdash; <span class='dc-title'>Parses input from a file according to a format</span></p> </div> <a name='function.fscanf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>fscanf</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$...</tt></span> ] )</div> <p class='para rdfs-comment'> The function <b>fscanf()</b> is similar to <a href='http://www.php.net/manual/en/function.sscanf.php' class='function'>sscanf()</a>, but it takes its input from a file associated with <i><tt class='parameter'>handle</tt></i> and interprets the input according to the specified <i><tt class='parameter'>format</tt></i> , which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>. </p> <p class='para'> Any whitespace in the format string matches any whitespace in the input stream. This means that even a tab <i>\t</i> in the format string can match a single space character in the input stream. </p> <p class='para'> Each call to <b>fscanf()</b> reads one line from the file. </p> </div> <a name='function.fscanf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The specified format as described in the <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> documentation. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional assigned values. </p> </dd> </dl> <p> </p> </div> <a name='function.fscanf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If only two parameters were passed to this function, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference. </p> </div> <a name='function.fscanf.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Before this time, the maximum number of characters read from the file was 512 (or up to the first \n, whichever came first). But now, arbitrarily long lines will be read and scanned. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fscanf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fscanf()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'users.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>$userinfo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fscanf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%s\t%s\t%s\n'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list&amp;nbsp;(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$profession</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$countrycode</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$userinfo</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//...&amp;nbsp;do&amp;nbsp;something&amp;nbsp;with&amp;nbsp;the&amp;nbsp;values<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Contents of users.txt</b></p> <div class='example-contents programlisting'> <div class='txtcode'><pre class='txtcode'>javier argonaut pe hiroshi sculptor jp robert slacker us luigi florist it</pre> </div> </div> </div><p> </p> </div> <a name='function.fscanf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fread" value="<div id='function.fread' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fread.php'>fread</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fread</span> &amp;mdash; <span class='dc-title'>Binary-safe file read</span></p> </div> <a name='function.fread.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fread</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> )</div> <p class='para rdfs-comment'> <b>fread()</b> reads up to <i><tt class='parameter'>length</tt></i> bytes from the file pointer referenced by <i><tt class='parameter'>handle</tt></i> . Reading stops as soon as one of the following conditions is met: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <i><tt class='parameter'>length</tt></i> bytes have been read </span> </li> <li class='listitem'> <span class='simpara'> EOF (end of file) is reached </span> </li> <li class='listitem'> <span class='simpara'> a packet becomes available (for network streams) </span> </li> <li class='listitem'> <span class='simpara'> 8192 bytes have been read (after opening userspace stream) </span> </li> </ul><p> </p> </div> <a name='function.fread.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Up to <i><tt class='parameter'>length</tt></i> number of bytes read. </p> </dd> </dl> <p> </p> </div> <a name='function.fread.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the read string or <b><tt class='constant'>FALSE</tt></b> in case of error. </p> </div> <a name='function.fread.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>fread()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;contents&amp;nbsp;of&amp;nbsp;a&amp;nbsp;file&amp;nbsp;into&amp;nbsp;a&amp;nbsp;string<br /></span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/usr/local/something.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$contents&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Binary <b>fread()</b> example</b></p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> On systems which differentiate between binary and text files (i.e. Windows) the file must be opened with &amp;#039;b&amp;#039; included in <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> mode parameter. </p> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'c:\\files\\somepic.gif'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$contents&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Remote <b>fread()</b> examples</b></p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> When reading from anything that is not a regular local file, such as streams returned when reading <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> or from <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a> and <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a>, reading will stop after a packet is available. This means that you should collect the data together in chunks as shown in the examples below. </p> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;For&amp;nbsp;PHP&amp;nbsp;5&amp;nbsp;and&amp;nbsp;up<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$contents&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$contents&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$contents&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8192</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fread.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If you just want to get the contents of a file into a string, use <a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function'>file_get_contents()</a> as it has much better performance than the code above. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Note that <b>fread()</b> reads from the current position of the file pointer. Use <a href='http://www.php.net/manual/en/function.ftell.php' class='function'>ftell()</a> to find the current position of the pointer and <a href='http://www.php.net/manual/en/function.rewind.php' class='function'>rewind()</a> to rewind the pointer position. <br /> </p></blockquote> </div> <a name='function.fread.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.fpassthru.php' class='function' rel='rdfs-seeAlso'>fpassthru()</a> - Output all remaining data on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ftell.php' class='function' rel='rdfs-seeAlso'>ftell()</a> - Returns the current position of the file read/write pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.rewind.php' class='function' rel='rdfs-seeAlso'>rewind()</a> - Rewind the position of a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fputs" value="<div id='function.fputs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fputs.php'>fputs</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fputs</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a></span></p> </div> <a name='function.fputs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fputcsv" value="<div id='function.fputcsv' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fputcsv.php'>fputcsv</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>fputcsv</span> &amp;mdash; <span class='dc-title'>Format line as CSV and write to file pointer</span></p> </div> <a name='function.fputcsv.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fputcsv</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$fields</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>fputcsv()</b> formats a line (passed as a <i><tt class='parameter'>fields</tt></i> array) as CSV and write it (terminated by a newline) to the specified file <i><tt class='parameter'>handle</tt></i> . </p> </div> <a name='function.fputcsv.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>fields</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array of values. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>delimiter</tt></i> parameter sets the field delimiter (one character only). Defaults as a comma: <i>,</i>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>enclosure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>enclosure</tt></i> parameter sets the field enclosure (one character only) and defaults to a double quotation mark: <i>&amp;quot;</i>. </p> </dd> </dl> <p> </p> </div> <a name='function.fputcsv.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the written string, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.fputcsv.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fputcsv()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$list&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'aaa,bbb,ccc,dddd'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'123,456,789'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>''aaa','bbb''<br /></span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.csv'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$list&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fputcsv</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>','</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fputcsv.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings' class='link'>auto_detect_line_endings</a> run-time configuration option may help resolve the problem.</span></p></blockquote> </div> <a name='function.fputcsv.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgetcsv.php' class='function' rel='rdfs-seeAlso'>fgetcsv()</a> - Gets line from file pointer and parse for CSV fields</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fprintf" value="<div id='function.fprintf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fprintf.php'>fprintf</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>fprintf</span> &amp;mdash; <span class='dc-title'>Write a formatted string to a stream</span></p> </div> <a name='function.fprintf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fprintf</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Write a string produced according to <i><tt class='parameter'>format</tt></i> to the stream resource specified by <i><tt class='parameter'>handle</tt></i> . </p> </div> <a name='function.fprintf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A file system pointer <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that is typically created using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> for a description of <i><tt class='parameter'>format</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.fprintf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the string written. </p> </div> <a name='function.fprintf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fprintf()</b>: zero-padded integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!(</span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'date.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;<br />}<br /><br /></span><span style='color: #0000BB'>fprintf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%04d-%02d-%02d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;will&amp;nbsp;write&amp;nbsp;the&amp;nbsp;formatted&amp;nbsp;ISO&amp;nbsp;date&amp;nbsp;to&amp;nbsp;date.txt<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>fprintf()</b>: formatting currency</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!(</span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'currency.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;<br />}<br /><br /></span><span style='color: #0000BB'>$money1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>68.75</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$money2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>54.35</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$money&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$money1&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>$money2</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;echo&amp;nbsp;$money&amp;nbsp;will&amp;nbsp;output&amp;nbsp;'123.1';<br /></span><span style='color: #0000BB'>$len&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fprintf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%01.2f'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$money</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;will&amp;nbsp;write&amp;nbsp;'123.10'&amp;nbsp;to&amp;nbsp;currency.txt<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'wrote&amp;nbsp;</span><span style='color: #0000BB'>$len</span><span style='color: #DD0000'>&amp;nbsp;bytes&amp;nbsp;to&amp;nbsp;currency.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;use&amp;nbsp;the&amp;nbsp;return&amp;nbsp;value&amp;nbsp;of&amp;nbsp;fprintf&amp;nbsp;to&amp;nbsp;determine&amp;nbsp;how&amp;nbsp;many&amp;nbsp;bytes&amp;nbsp;we&amp;nbsp;wrote<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fprintf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.vsprintf.php' class='function' rel='rdfs-seeAlso'>vsprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.number-format.php' class='function' rel='rdfs-seeAlso'>number_format()</a> - Format a number with grouped thousands</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fpassthru" value="<div id='function.fpassthru' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fpassthru.php'>fpassthru</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fpassthru</span> &amp;mdash; <span class='dc-title'>Output all remaining data on a file pointer</span></p> </div> <a name='function.fpassthru.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fpassthru</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Reads to EOF on the given file pointer from the current position and writes the results to the output buffer. </p> <p class='para'> You may need to call <a href='http://www.php.net/manual/en/function.rewind.php' class='function'>rewind()</a> to reset the file pointer to the beginning of the file if you have already written data to the file. </p> <p class='para'> If you just want to dump the contents of a file to the output buffer, without first modifying it or seeking to a particular offset, you may want to use the <a href='http://www.php.net/manual/en/function.readfile.php' class='function'>readfile()</a>, which saves you the <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> call. </p> </div> <a name='function.fpassthru.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> </dl> <p> </p> </div> <a name='function.fpassthru.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If an error occurs, <b>fpassthru()</b> returns <b><tt class='constant'>FALSE</tt></b>. Otherwise, <b>fpassthru()</b> returns the number of characters read from <i><tt class='parameter'>handle</tt></i> and passed through to the output. </p> </div> <a name='function.fpassthru.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>fpassthru()</b> with binary files</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;open&amp;nbsp;the&amp;nbsp;file&amp;nbsp;in&amp;nbsp;a&amp;nbsp;binary&amp;nbsp;mode<br /></span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'./img/ok.png'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;send&amp;nbsp;the&amp;nbsp;right&amp;nbsp;headers<br /></span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Type:&amp;nbsp;image/png'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Length:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;dump&amp;nbsp;the&amp;nbsp;picture&amp;nbsp;and&amp;nbsp;stop&amp;nbsp;the&amp;nbsp;script<br /></span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />exit;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fpassthru.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: When using <b>fpassthru()</b> on a binary file on Windows systems, you should make sure to open the file in binary mode by appending a <i>b</i> to the mode used in the call to <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>. <br /> You are encouraged to use the <i>b</i> flag when dealing with binary files, even if your system does not require it, so that your scripts will be more portable. <br /> </p></blockquote> </div> <a name='function.fpassthru.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.readfile.php' class='function' rel='rdfs-seeAlso'>readfile()</a> - Outputs a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fopen" value="<div id='function.fopen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fopen.php'>fopen</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fopen</span> &amp;mdash; <span class='dc-title'>Opens file or URL</span></p> </div> <a name='function.fopen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>fopen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$mode</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>fopen()</b> binds a named resource, specified by <i><tt class='parameter'>filename</tt></i> , to a stream. </p> </div> <a name='function.fopen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>filename</tt></i> is of the form &amp;quot;scheme://...&amp;quot;, it is assumed to be a URL and PHP will search for a protocol handler (also known as a wrapper) for that scheme. If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though <i><tt class='parameter'>filename</tt></i> specifies a regular file. </p> <p class='para'> If PHP has decided that <i><tt class='parameter'>filename</tt></i> specifies a local file, then it will try to open a stream on that file. The file must be accessible to PHP, so you need to ensure that the file access permissions allow this access. If you have enabled <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a>, or <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.open-basedir' class='link'>open_basedir</a> further restrictions may apply. </p> <p class='para'> If PHP has decided that <i><tt class='parameter'>filename</tt></i> specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>allow_url_fopen</a> is enabled. If it is switched off, PHP will emit a warning and the fopen call will fail. </p> <blockquote><p><b class='note'>Note</b>: The list of supported protocols can be found in <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a>. Some protocols (also referred to as <i>wrappers</i>) support <i>context</i> and/or <var class='filename'>php.ini</var> options. Refer to the specific page for the protocol in use for a list of options which can be set. (e.g. <var class='filename'>php.ini</var> value <i>user_agent</i> used by the <i>http</i> wrapper). <br /> </p></blockquote> <p class='para'> On the Windows platform, be careful to escape any backslashes used in the path to the file, or use forward slashes. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c:\\data\\info.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>mode</tt></i> parameter specifies the type of access you require to the stream. It may be any of the following: </p><table class='doctable table'> <caption><b> A list of possible modes for <b>fopen()</b> using <i><tt class='parameter'>mode</tt></i> </b></caption> <thead valign='middle'> <tr valign='middle'> <th><i><tt class='parameter'>mode</tt></i> </th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>&amp;#039;r&amp;#039;</i></td> <td align='left'> Open for reading only; place the file pointer at the beginning of the file. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;r+&amp;#039;</i></td> <td align='left'> Open for reading and writing; place the file pointer at the beginning of the file. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;w&amp;#039;</i></td> <td align='left'> Open for writing only; place the file pointer at the beginning of the file and truncate the file to zero length. If the file does not exist, attempt to create it. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;w+&amp;#039;</i></td> <td align='left'> Open for reading and writing; place the file pointer at the beginning of the file and truncate the file to zero length. If the file does not exist, attempt to create it. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;a&amp;#039;</i></td> <td align='left'> Open for writing only; place the file pointer at the end of the file. If the file does not exist, attempt to create it. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;a+&amp;#039;</i></td> <td align='left'> Open for reading and writing; place the file pointer at the end of the file. If the file does not exist, attempt to create it. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;x&amp;#039;</i></td> <td align='left'> Create and open for writing only; place the file pointer at the beginning of the file. If the file already exists, the <b>fopen()</b> call will fail by returning <b><tt class='constant'>FALSE</tt></b> and generating an error of level <b><tt class='constant'>E_WARNING</tt></b>. If the file does not exist, attempt to create it. This is equivalent to specifying <i>O_EXCL|O_CREAT</i> flags for the underlying <i>open(2)</i> system call. </td> </tr> <tr valign='middle'> <td align='left'><i>&amp;#039;x+&amp;#039;</i></td> <td align='left'> Create and open for reading and writing; place the file pointer at the beginning of the file. If the file already exists, the <b>fopen()</b> call will fail by returning <b><tt class='constant'>FALSE</tt></b> and generating an error of level <b><tt class='constant'>E_WARNING</tt></b>. If the file does not exist, attempt to create it. This is equivalent to specifying <i>O_EXCL|O_CREAT</i> flags for the underlying <i>open(2)</i> system call. </td> </tr> </tbody> </table> <p> </p> <blockquote><p><b class='note'>Note</b>: Different operating system families have different line-ending conventions. When you write a text file and want to insert a line break, you need to use the correct line-ending character(s) for your operating system. Unix based systems use <i>\n</i> as the line ending character, Windows based systems use <i>\r\n</i> as the line ending characters and Macintosh based systems use <i>\r</i> as the line ending character. <br /> If you use the wrong line ending characters when writing your files, you might find that other applications that open those files will &amp;quot;look funny&amp;quot;. <br /> Windows offers a text-mode translation flag (<i>&amp;#039;t&amp;#039;</i>) which will transparently translate <i>\n</i> to <i>\r\n</i> when working with the file. In contrast, you can also use <i>&amp;#039;b&amp;#039;</i> to force binary mode, which will not translate your data. To use these flags, specify either <i>&amp;#039;b&amp;#039;</i> or <i>&amp;#039;t&amp;#039;</i> as the last character of the <i><tt class='parameter'>mode</tt></i> parameter. <br /> The default translation mode depends on the SAPI and version of PHP that you are using, so you are encouraged to always specify the appropriate flag for portability reasons. You should use the <i>&amp;#039;t&amp;#039;</i> mode if you are working with plain-text files and you use <i>\n</i> to delimit your line endings in your script, but expect your files to be readable with applications such as notepad. You should use the <i>&amp;#039;b&amp;#039;</i> in all other cases. <br /> If you do not specify the &amp;#039;b&amp;#039; flag when working with binary files, you may experience strange problems with your data, including broken image files and strange problems with <i>\r\n</i> characters. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: For portability, it is strongly recommended that you always use the &amp;#039;b&amp;#039; flag when opening files with <b>fopen()</b>. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Again, for portability, it is also strongly recommended that you re-write code that uses or relies upon the <i>&amp;#039;t&amp;#039;</i> mode so that it uses the correct line endings and <i>&amp;#039;b&amp;#039;</i> mode instead. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>use_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional third <i><tt class='parameter'>use_include_path</tt></i> parameter can be set to &amp;#039;1&amp;#039; or <b><tt class='constant'>TRUE</tt></b> if you want to search for the file in the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a>, too. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.fopen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a file pointer resource on success, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.fopen.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If the open fails, an error of level <b><tt class='constant'>E_WARNING</tt></b> is generated. You may use <a href='http://www.php.net/manual/en/language.operators.errorcontrol.php' class='link'>@</a> to suppress this warning. </p> </div> <a name='function.fopen.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> As of PHP 4.3.2, the default mode is set to binary for all platforms that distinguish between binary and text mode. If you are having problems with your scripts after upgrading, try using the <i>&amp;#039;t&amp;#039;</i> flag as a workaround until you have made your script more portable as mentioned below </td> </tr> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> The <i>&amp;#039;x&amp;#039;</i> and <i>&amp;#039;x+&amp;#039;</i> option was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fopen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fopen()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/home/rasmus/file.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/home/rasmus/file.gif'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'wb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ftp://user:password@example.com/somefile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fopen.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='para'>When using SSL, Microsoft IIS will violate the protocol by closing the connection without sending a <i>close_notify</i> indicator. PHP will report this as &amp;quot;SSL: Fatal Protocol Error&amp;quot; when you reach the end of the data. To work around this, the value of <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> should be lowered to a level that does not include warnings. PHP 4.3.7 and higher can detect buggy IIS server software when you open the stream using the <i>https://</i> wrapper and will suppress the warning. When using <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> to create an <i>ssl://</i> socket, the developer is responsible for detecting and suppressing this warning.</p></div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</span></p></blockquote> <p class='para'> If you are experiencing problems with reading and writing to files and you&amp;#039;re using the server module version of PHP, remember to make sure that the files and directories you&amp;#039;re using are accessible to the server process. </p> </div> <a name='function.fopen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-exists.php' class='function' rel='rdfs-seeAlso'>file_exists()</a> - Checks whether a file or directory exists</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-readable.php' class='function' rel='rdfs-seeAlso'>is_readable()</a> - Tells whether the filename is readable</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fmod" value="<div id='function.fmod' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fmod.php'>fmod</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>fmod</span> &amp;mdash; <span class='dc-title'>Returns the floating point remainder (modulo) of the division of the arguments</span></p> </div> <a name='function.fmod.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>fmod</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$x</tt></span> , <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$y</tt></span> )</div> <p class='para rdfs-comment'> Returns the floating point remainder of dividing the dividend (<i><tt class='parameter'>x</tt></i> ) by the divisor (<i><tt class='parameter'>y</tt></i> ). The reminder (<var class='varname'>r</var>) is defined as: x = i * y + r, for some integer <var class='varname'>i</var>. If <i><tt class='parameter'>y</tt></i> is non-zero, <var class='varname'>r</var> has the same sign as <i><tt class='parameter'>x</tt></i> and a magnitude less than the magnitude of <i><tt class='parameter'>y</tt></i> . </p> </div> <a name='function.fmod.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>x</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The dividend </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>y</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The divisor </p> </dd> </dl> <p> </p> </div> <a name='function.fmod.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The floating point remainder of <i><tt class='parameter'>x</tt></i> /<i><tt class='parameter'>y</tt></i> </p> </div> <a name='function.fmod.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>fmod()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$x&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>5.7</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$y&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1.3</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$r&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fmod</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$r&amp;nbsp;equals&amp;nbsp;0.5,&amp;nbsp;because&amp;nbsp;4&amp;nbsp;*&amp;nbsp;1.3&amp;nbsp;+&amp;nbsp;0.5&amp;nbsp;=&amp;nbsp;5.7<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="flush" value="<div id='function.flush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.flush.php'>flush</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>flush</span> &amp;mdash; <span class='dc-title'>Flush the output buffer</span></p> </div> <a name='function.flush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>flush</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Flushes the write buffers of PHP and whatever backend PHP is using (CGI, a web server, etc). This attempts to push current output all the way to the browser with a few caveats. </p> <p class='para'> <b>flush()</b> may not be able to override the buffering scheme of your web server and it has no effect on any client-side buffering in the browser. It also doesn&amp;#039;t affect PHP&amp;#039;s userspace output buffering mechanism. This means you will have to call both <a href='http://www.php.net/manual/en/function.ob-flush.php' class='function'>ob_flush()</a> and <b>flush()</b> to flush the ob output buffers if you are using those. </p> <p class='para'> Several servers, especially on Win32, will still buffer the output from your script until it terminates before transmitting the results to the browser. </p> <p class='para'> Server modules for Apache like mod_gzip may do buffering of their own that will cause <b>flush()</b> to not result in data being sent immediately to the client. </p> <p class='para'> Even the browser may buffer its input before displaying it. Netscape, for example, buffers text until it receives an end-of-line or the beginning of a tag, and it won&amp;#039;t render tables until the &amp;lt;/table&amp;gt; tag of the outermost table is seen. </p> <p class='para'> Some versions of Microsoft Internet Explorer will only start to display the page after they have received 256 bytes of output, so you may need to send extra whitespace before flushing to get those browsers to display the page. </p> </div> <a name='function.flush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="floor" value="<div id='function.floor' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.floor.php'>floor</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>floor</span> &amp;mdash; <span class='dc-title'>Round fractions down</span></p> </div> <a name='function.floor.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>floor</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$value</tt></span> )</div> <p class='simpara'> Returns the next lowest integer value by rounding down <i><tt class='parameter'>value</tt></i> if necessary. </p> </div> <a name='function.floor.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The numeric value to round </p> </dd> </dl> <p> </p> </div> <a name='function.floor.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <i><tt class='parameter'>value</tt></i> rounded to the next lowest integer. The return value of <b>floor()</b> is still of type <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> because the value range of <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> is usually bigger than that of <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='function.floor.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>floor()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>floor</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4.3</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;4<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>floor</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9.999</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;9<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>floor</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>3.14</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-4<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.floor.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ceil.php' class='function' rel='rdfs-seeAlso'>ceil()</a> - Round fractions up</li> <li class='member'><a href='http://www.php.net/manual/en/function.round.php' class='function' rel='rdfs-seeAlso'>round()</a> - Rounds a float</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="flock" value="<div id='function.flock' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.flock.php'>flock</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>flock</span> &amp;mdash; <span class='dc-title'>Portable advisory file locking</span></p> </div> <a name='function.flock.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>flock</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$operation</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$wouldblock</tt></span> ] )</div> <p class='para rdfs-comment'> <b>flock()</b> allows you to perform a simple reader/writer model which can be used on virtually every platform (including most Unix derivatives and even Windows). </p> <p class='para'> The lock is released also by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a> (which is also called automatically when script finished). </p> <p class='para'> PHP supports a portable way of locking complete files in an advisory way (which means all accessing programs have to use the same way of locking or it will not work). By default, this function will block until the requested lock is acquired; this may be controlled (on non-Windows platforms) with the LOCK_NB option documented below. </p> </div> <a name='function.flock.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An open file pointer. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>operation</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>operation</tt></i> is one of the following: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_SH</tt></b> to acquire a shared lock (reader). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_EX</tt></b> to acquire an exclusive lock (writer). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_UN</tt></b> to release a lock (shared or exclusive). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_NB</tt></b> if you don&amp;#039;t want <b>flock()</b> to block while locking. (not supported on Windows) </span> </li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>wouldblock</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional third argument is set to <b><tt class='constant'>TRUE</tt></b> if the lock would block (EWOULDBLOCK errno condition). </p> </dd> </dl> <p> </p> </div> <a name='function.flock.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.flock.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.1</td> <td align='left'> The <i>LOCK_XXX</i> constants were added. Prior to that you must use 1 for <b><tt class='constant'>LOCK_SH</tt></b>, 2 for <b><tt class='constant'>LOCK_EX</tt></b>, 3 for <b><tt class='constant'>LOCK_UN</tt></b> and 4 for <b><tt class='constant'>LOCK_NB</tt></b> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.flock.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>flock()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/lock.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>flock</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>LOCK_EX</span><span style='color: #007700'>))&amp;nbsp;{&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;do&amp;nbsp;an&amp;nbsp;exclusive&amp;nbsp;lock<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;truncate&amp;nbsp;file<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Write&amp;nbsp;something&amp;nbsp;here\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>flock</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>LOCK_UN</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;release&amp;nbsp;the&amp;nbsp;lock<br /></span><span style='color: #007700'>}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Couldn't&amp;nbsp;get&amp;nbsp;the&amp;nbsp;lock!'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.flock.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>flock()</b> locks mandatory under Windows. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Because <b>flock()</b> requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a &amp;quot;w&amp;quot; or &amp;quot;w+&amp;quot; argument to <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>). <br /> </p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='para'> <b>flock()</b> will not work on NFS and many other networked file systems. Check your operating system documentation for more details. </p> <p class='para'> On some operating systems <b>flock()</b> is implemented at the process level. When using a multithreaded server API like ISAPI you may not be able to rely on <b>flock()</b> to protect files against other PHP scripts running in parallel threads of the same server instance! </p> <p class='para'> <b>flock()</b> is not supported on antiquated filesystems like <i>FAT</i> and its derivates and will therefore always return <b><tt class='constant'>FALSE</tt></b> under this environments (this is especially true for Windows 98 users). </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="floatval" value="<div id='function.floatval' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.floatval.php'>floatval</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>floatval</span> &amp;mdash; <span class='dc-title'>Get float value of a variable</span></p> </div> <a name='function.floatval.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>floatval</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> )</div> <p class='para rdfs-comment'> Gets the <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> value of <i><tt class='parameter'>var</tt></i> . </p> </div> <a name='function.floatval.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> May be any scalar type. You cannot use <b>floatval()</b> on arrays or objects. </p> </dd> </dl> <p> </p> </div> <a name='function.floatval.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The float value of the given variable. </p> </div> <a name='function.floatval.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>floatval()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'122.34343The'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$float_value_of_var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>floatval</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$float_value_of_var</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;122.34343<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.floatval.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.intval.php' class='function' rel='rdfs-seeAlso'>intval()</a> - Get the integer value of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.strval.php' class='function' rel='rdfs-seeAlso'>strval()</a> - Get string value of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.settype.php' class='function' rel='rdfs-seeAlso'>settype()</a> - Set the type of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/language.types.type-juggling.php' class='link'>Type juggling</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_var_array" value="<div id='function.filter-var-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-var-array.php'>filter_var_array</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_var_array</span> &amp;mdash; <span class='dc-title'>Gets multiple variables and optionally filters them</span></p> </div> <a name='function.filter-var-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>filter_var_array</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$data</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$definition</tt></span> ] )</div> <p class='para rdfs-comment'> This function is useful for retrieving many values without repetitively calling <a href='http://www.php.net/manual/en/function.filter-var.php' class='function'>filter_var()</a>. </p> </div> <a name='function.filter-var-array.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array with string keys containing the data to filter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>definition</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array defining the arguments. A valid key is a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> containing a variable name and a valid value is either a filter type, or an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> optionally specifying the filter, flags and options. If the value is an array, valid keys are <i>filter</i> which specifies the filter type, <i>flags</i> which specifies any flags that apply to the filter, and <i>options</i> which specifies any options that apply to the filter. See the example below for a better understanding. </p> <p class='para'> This parameter can be also an integer holding a <a href='http://www.php.net/manual/en/filter.constants.php' class='link'>filter constant</a>. Then all values in the input array are filtered by this filter. </p> </dd> </dl> <p> </p> </div> <a name='function.filter-var-array.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array containing the values of the requested variables on success, or <b><tt class='constant'>FALSE</tt></b> on failure. An array value will be <b><tt class='constant'>FALSE</tt></b> if the filter fails, or <b><tt class='constant'>NULL</tt></b> if the variable is not set. </p> </div> <a name='function.filter-var-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filter_var_array()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_STRICT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'product_id'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'libgd&amp;lt;script&amp;gt;'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'component'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'10'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'versions'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'2.0.33'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testscalar'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'23'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'10'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'12'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testarray'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'2'</span><span style='color: #007700'>,<br />);<br /><br /></span><span style='color: #0000BB'>$args&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'product_id'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_ENCODED</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'component'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'filter'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_FORCE_ARRAY</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'options'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'min_range'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_range'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'versions'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_ENCODED</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'doesnotexist'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testscalar'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'filter'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_REQUIRE_SCALAR</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testarray'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'filter'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_FORCE_ARRAY</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)<br /><br />);<br /><br /></span><span style='color: #0000BB'>$myinputs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$args</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$myinputs</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(6) { [&amp;quot;product_id&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(17) &amp;quot;libgd%3Cscript%3E&amp;quot; } [&amp;quot;component&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; int(10) } [&amp;quot;versions&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(6) &amp;quot;2.0.33&amp;quot; } [&amp;quot;doesnotexist&amp;quot;]=&amp;gt; NULL [&amp;quot;testscalar&amp;quot;]=&amp;gt; bool(false) [&amp;quot;testarray&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; int(2) } } </pre></div> </div> </div><p> </p> </div> <a name='function.filter-var-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input-array.php' class='function' rel='rdfs-seeAlso'>filter_input_array()</a> - Gets external variables and optionally filters them</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-var.php' class='function' rel='rdfs-seeAlso'>filter_var()</a> - Filters a variable with a specified filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input.php' class='function' rel='rdfs-seeAlso'>filter_input()</a> - Gets a specific external variable by name and optionally filters it</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_var" value="<div id='function.filter-var' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-var.php'>filter_var</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_var</span> &amp;mdash; <span class='dc-title'>Filters a variable with a specified filter</span></p> </div> <a name='function.filter-var.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>filter_var</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$variable</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$filter</tt><span class='initializer'> = FILTER_DEFAULT</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$options</tt></span> ]] )</div> </div> <a name='function.filter-var.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>variable</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Value to filter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> ID of a filter to use. Defaults to <b><tt class='constant'>FILTER_DEFAULT</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &amp;quot;flags&amp;quot; field of array. For the &amp;quot;callback&amp;quot; filter, <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a> type should be passed. The callback must accept one argument, the value to be filtered, and return the value after filtering/sanitizing it. </p> <p class='para'> </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;for&amp;nbsp;filters&amp;nbsp;that&amp;nbsp;accept&amp;nbsp;options,&amp;nbsp;use&amp;nbsp;this&amp;nbsp;format<br /></span><span style='color: #0000BB'>$options&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'options'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'default'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;value&amp;nbsp;to&amp;nbsp;return&amp;nbsp;if&amp;nbsp;the&amp;nbsp;filter&amp;nbsp;fails<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;other&amp;nbsp;options&amp;nbsp;here<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'min_range'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_FLAG_ALLOW_OCTAL</span><span style='color: #007700'>,<br />);<br /></span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'0755'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$options</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;for&amp;nbsp;filter&amp;nbsp;that&amp;nbsp;only&amp;nbsp;accept&amp;nbsp;flags,&amp;nbsp;you&amp;nbsp;can&amp;nbsp;pass&amp;nbsp;them&amp;nbsp;directly<br /></span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'oops'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_BOOLEAN</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_NULL_ON_FAILURE</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;for&amp;nbsp;filter&amp;nbsp;that&amp;nbsp;only&amp;nbsp;accept&amp;nbsp;flags,&amp;nbsp;you&amp;nbsp;can&amp;nbsp;also&amp;nbsp;pass&amp;nbsp;as&amp;nbsp;an&amp;nbsp;array<br /></span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'oops'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_BOOLEAN</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(</span><span style='color: #DD0000'>'flags'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_NULL_ON_FAILURE</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;callback&amp;nbsp;filter<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$ret&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>stdClass</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$ret</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_BOOLEAN</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(</span><span style='color: #DD0000'>'flags'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_NULL_ON_FAILURE</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$ret</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'yes'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_CALLBACK</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'options'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> </p> </dd> </dl> <p> </p> </div> <a name='function.filter-var.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filtered data, or <b><tt class='constant'>FALSE</tt></b> if the filter fails. </p> </div> <a name='function.filter-var.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filter_var()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bob@example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_EMAIL</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>filter_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_FLAG_SCHEME_REQUIRED</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(15) &amp;quot;bob@example.com&amp;quot; bool(false) </pre></div> </div> </div><p> </p> </div> <a name='function.filter-var.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filter-var-array.php' class='function' rel='rdfs-seeAlso'>filter_var_array()</a> - Gets multiple variables and optionally filters them</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input.php' class='function' rel='rdfs-seeAlso'>filter_input()</a> - Gets a specific external variable by name and optionally filters it</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input-array.php' class='function' rel='rdfs-seeAlso'>filter_input_array()</a> - Gets external variables and optionally filters them</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_list" value="<div id='function.filter-list' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-list.php'>filter_list</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_list</span> &amp;mdash; <span class='dc-title'>Returns a list of all supported filters</span></p> </div> <a name='function.filter-list.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>filter_list</b></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='function.filter-list.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of names of all supported filters, empty array if there are no such filters. Indexes of this array are not filter IDs, they can be obtained with <a href='http://www.php.net/manual/en/function.filter-id.php' class='function'>filter_id()</a> from a name instead. </p> </div> <a name='function.filter-list.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filter_list()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>filter_list</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; int [1] =&amp;gt; boolean [2] =&amp;gt; float [3] =&amp;gt; validate_regexp [4] =&amp;gt; validate_url [5] =&amp;gt; validate_email [6] =&amp;gt; validate_ip [7] =&amp;gt; string [8] =&amp;gt; stripped [9] =&amp;gt; encoded [10] =&amp;gt; special_chars [11] =&amp;gt; unsafe_raw [12] =&amp;gt; email [13] =&amp;gt; url [14] =&amp;gt; number_int [15] =&amp;gt; number_float [16] =&amp;gt; magic_quotes [17] =&amp;gt; callback ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_input_array" value="<div id='function.filter-input-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-input-array.php'>filter_input_array</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_input_array</span> &amp;mdash; <span class='dc-title'>Gets external variables and optionally filters them</span></p> </div> <a name='function.filter-input-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>filter_input_array</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$type</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$definition</tt></span> ] )</div> <p class='para rdfs-comment'> This function is useful for retrieving many values without repetitively calling <a href='http://www.php.net/manual/en/function.filter-input.php' class='function'>filter_input()</a>. </p> </div> <a name='function.filter-input-array.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <b><tt class='constant'>INPUT_GET</tt></b>, <b><tt class='constant'>INPUT_POST</tt></b>, <b><tt class='constant'>INPUT_COOKIE</tt></b>, <b><tt class='constant'>INPUT_SERVER</tt></b>, <b><tt class='constant'>INPUT_ENV</tt></b>, <b><tt class='constant'>INPUT_SESSION</tt></b>, or <b><tt class='constant'>INPUT_REQUEST</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>definition</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array defining the arguments. A valid key is a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> containing a variable name and a valid value is either a filter type, or an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> optionally specifying the filter, flags and options. If the value is an array, valid keys are <i>filter</i> which specifies the filter type, <i>flags</i> which specifies any flags that apply to the filter, and <i>options</i> which specifies any options that apply to the filter. See the example below for a better understanding. </p> <p class='para'> This parameter can be also an integer holding a <a href='http://www.php.net/manual/en/filter.constants.php' class='link'>filter constant</a>. Then all values in the input array are filtered by this filter. </p> </dd> </dl> <p> </p> </div> <a name='function.filter-input-array.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array containing the values of the requested variables on success, or <b><tt class='constant'>FALSE</tt></b> on failure. An array value will be <b><tt class='constant'>FALSE</tt></b> if the filter fails, or <b><tt class='constant'>NULL</tt></b> if the variable is not set. Or if the flag <b><tt class='constant'>FILTER_NULL_ON_FAILURE</tt></b> is used, it returns <b><tt class='constant'>FALSE</tt></b> if the variable is not set and <b><tt class='constant'>NULL</tt></b> if the filter fails. </p> </div> <a name='function.filter-input-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filter_input_array()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_STRICT</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>/*&amp;nbsp;data&amp;nbsp;actually&amp;nbsp;came&amp;nbsp;from&amp;nbsp;POST<br />$_POST&amp;nbsp;=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'product_id'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;gt;&amp;nbsp;'libgd&amp;lt;script&amp;gt;',<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'component'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;gt;&amp;nbsp;'10',<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'versions'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;gt;&amp;nbsp;'2.0.33',<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'testscalar'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;gt;&amp;nbsp;array('2',&amp;nbsp;'23',&amp;nbsp;'10',&amp;nbsp;'12'),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'testarray'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;gt;&amp;nbsp;'2',<br />);<br />*/<br /><br /></span><span style='color: #0000BB'>$args&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'product_id'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_ENCODED</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'component'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'filter'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_REQUIRE_ARRAY</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'options'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'min_range'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_range'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'versions'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_ENCODED</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'doesnotexist'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testscalar'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'filter'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_REQUIRE_SCALAR</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'testarray'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'filter'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_VALIDATE_INT</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'flags'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>FILTER_REQUIRE_ARRAY</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)<br /><br />);<br /><br /></span><span style='color: #0000BB'>$myinputs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_input_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>INPUT_POST</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$args</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$myinputs</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(6) { [&amp;quot;product_id&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(17) &amp;quot;libgd%3Cscript%3E&amp;quot; } [&amp;quot;component&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; int(10) } [&amp;quot;versions&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(6) &amp;quot;2.0.33&amp;quot; } [&amp;quot;doesnotexist&amp;quot;]=&amp;gt; NULL [&amp;quot;testscalar&amp;quot;]=&amp;gt; bool(false) [&amp;quot;testarray&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; int(2) } } </pre></div> </div> </div><p> </p> </div> <a name='function.filter-input-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input.php' class='function' rel='rdfs-seeAlso'>filter_input()</a> - Gets a specific external variable by name and optionally filters it</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-var-array.php' class='function' rel='rdfs-seeAlso'>filter_var_array()</a> - Gets multiple variables and optionally filters them</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_input" value="<div id='function.filter-input' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-input.php'>filter_input</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_input</span> &amp;mdash; <span class='dc-title'>Gets a specific external variable by name and optionally filters it</span></p> </div> <a name='function.filter-input.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>filter_input</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$type</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$variable_name</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$filter</tt><span class='initializer'> = FILTER_DEFAULT</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$options</tt></span> ]] )</div> </div> <a name='function.filter-input.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <b><tt class='constant'>INPUT_GET</tt></b>, <b><tt class='constant'>INPUT_POST</tt></b>, <b><tt class='constant'>INPUT_COOKIE</tt></b>, <b><tt class='constant'>INPUT_SERVER</tt></b>, <b><tt class='constant'>INPUT_ENV</tt></b>, <b><tt class='constant'>INPUT_SESSION</tt></b> (not implemented yet) and <b><tt class='constant'>INPUT_REQUEST</tt></b> (not implemented yet). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>variable_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of a variable to get. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Filter to apply. Defaults to <b><tt class='constant'>FILTER_DEFAULT</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &amp;quot;flags&amp;quot; field of array. </p> </dd> </dl> <p> </p> </div> <a name='function.filter-input.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Value of the requested variable on success, <b><tt class='constant'>FALSE</tt></b> if the filter fails, or <b><tt class='constant'>NULL</tt></b> if the <i><tt class='parameter'>variable_name</tt></i> variable is not set. If the flag <b><tt class='constant'>FILTER_NULL_ON_FAILURE</tt></b> is used, it returns <b><tt class='constant'>FALSE</tt></b> if the variable is not set and <b><tt class='constant'>NULL</tt></b> if the filter fails. </p> </div> <a name='function.filter-input.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filter_input()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$search_html&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_input</span><span style='color: #007700'>(</span><span style='color: #0000BB'>INPUT_GET</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'search'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_SPECIAL_CHARS</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$search_url&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>filter_input</span><span style='color: #007700'>(</span><span style='color: #0000BB'>INPUT_GET</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'search'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILTER_SANITIZE_ENCODED</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;have&amp;nbsp;searched&amp;nbsp;for&amp;nbsp;</span><span style='color: #0000BB'>$search_html</span><span style='color: #DD0000'>.\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/?search=</span><span style='color: #0000BB'>$search_url</span><span style='color: #DD0000'>'&amp;gt;Search&amp;nbsp;again.&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> You have searched for Me &amp;amp;#38; son. &amp;lt;a href=&amp;#039;?search=Me%20%26%20son&amp;#039;&amp;gt;Search again.&amp;lt;/a&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.filter-input.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filter-var.php' class='function' rel='rdfs-seeAlso'>filter_var()</a> - Filters a variable with a specified filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-input-array.php' class='function' rel='rdfs-seeAlso'>filter_input_array()</a> - Gets external variables and optionally filters them</li> <li class='member'><a href='http://www.php.net/manual/en/function.filter-var-array.php' class='function' rel='rdfs-seeAlso'>filter_var_array()</a> - Gets multiple variables and optionally filters them</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_id" value="<div id='function.filter-id' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-id.php'>filter_id</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_id</span> &amp;mdash; <span class='dc-title'>Returns the filter ID belonging to a named filter</span></p> </div> <a name='function.filter-id.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filter_id</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filtername</tt></span> )</div> </div> <a name='function.filter-id.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filtername</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of a filter to get. </p> </dd> </dl> <p> </p> </div> <a name='function.filter-id.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> ID of a filter on success or <b><tt class='constant'>NULL</tt></b> if filter doesn&amp;#039;t exist. </p> </div> <a name='function.filter-id.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filter-list.php' class='function' rel='rdfs-seeAlso'>filter_list()</a> - Returns a list of all supported filters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filter_has_var" value="<div id='function.filter-has-var' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filter-has-var.php'>filter_has_var</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>filter_has_var</span> &amp;mdash; <span class='dc-title'>Checks if variable of specified type exists</span></p> </div> <a name='function.filter-has-var.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>filter_has_var</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$type</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$variable_name</tt></span> )</div> </div> <a name='function.filter-has-var.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <b><tt class='constant'>INPUT_GET</tt></b>, <b><tt class='constant'>INPUT_POST</tt></b>, <b><tt class='constant'>INPUT_COOKIE</tt></b>, <b><tt class='constant'>INPUT_SERVER</tt></b>, <b><tt class='constant'>INPUT_ENV</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>variable_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of a variable to check. </p> </dd> </dl> <p> </p> </div> <a name='function.filter-has-var.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::valid" value="<div id='filteriterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.valid.php'>FilterIterator::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether the current element is valid</span></p> </div> <a name='filteriterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>FilterIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Checks whether the current element is valid. </p> </div> <a name='filteriterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the current element is valid, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::rewind" value="<div id='filteriterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.rewind.php'>FilterIterator::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the iterator</span></p> </div> <a name='filteriterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>FilterIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Rewind the iterator. </p> </div> <a name='filteriterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='filteriterator.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function' rel='rdfs-seeAlso'>FilterIterator::current()</a> - Get the current element value</li> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.key.php' class='function' rel='rdfs-seeAlso'>FilterIterator::key()</a> - Get the current key</li> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function' rel='rdfs-seeAlso'>FilterIterator::next()</a> - Move the iterator forward</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::next" value="<div id='filteriterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.next.php'>FilterIterator::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::next</span> &amp;mdash; <span class='dc-title'>Move the iterator forward</span></p> </div> <a name='filteriterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>FilterIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Move the iterator forward. </p> </div> <a name='filteriterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='filteriterator.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function' rel='rdfs-seeAlso'>FilterIterator::current()</a> - Get the current element value</li> <li class='member'><b>FilterIterator::next()</b></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::key" value="<div id='filteriterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.key.php'>FilterIterator::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::key</span> &amp;mdash; <span class='dc-title'>Get the current key</span></p> </div> <a name='filteriterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>FilterIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Get the current key. </p> </div> <a name='filteriterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current key. </p> </div> <a name='filteriterator.key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function' rel='rdfs-seeAlso'>FilterIterator::next()</a> - Move the iterator forward</li> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function' rel='rdfs-seeAlso'>FilterIterator::current()</a> - Get the current element value</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::getInnerIterator" value="<div id='filteriterator.getinneriterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.getinneriterator.php'>FilterIterator::getInnerIterator</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::getInnerIterator</span> &amp;mdash; <span class='dc-title'>Get the inner iterator</span></p> </div> <a name='filteriterator.getinneriterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <span class='methodname'><b>FilterIterator::getInnerIterator</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Get the inner iterator. </p> </div> <a name='filteriterator.getinneriterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.getinneriterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The inner iterator. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::current" value="<div id='filteriterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.current.php'>FilterIterator::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::current</span> &amp;mdash; <span class='dc-title'>Get the current element value</span></p> </div> <a name='filteriterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>FilterIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Get the current element value. </p> </div> <a name='filteriterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current element value. </p> </div> <a name='filteriterator.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.key.php' class='function' rel='rdfs-seeAlso'>FilterIterator::key()</a> - Get the current key</li> <li class='member'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function' rel='rdfs-seeAlso'>FilterIterator::next()</a> - Move the iterator forward</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator::accept" value="<div id='filteriterator.accept' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/filteriterator.accept.php'>FilterIterator::accept</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>FilterIterator::accept</span> &amp;mdash; <span class='dc-title'>Check whether the current element of the iterator is acceptable</span></p> </div> <a name='filteriterator.accept.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='type'>bool</span> <span class='methodname'><b>FilterIterator::accept</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns whether the current element of the iterator is acceptable through this filter. </p> </div> <a name='filteriterator.accept.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='filteriterator.accept.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the current element is acceptable, otherwise <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='filteriterator.accept.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>FilterIterator::accept()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;iterator&amp;nbsp;filters&amp;nbsp;all&amp;nbsp;values&amp;nbsp;with&amp;nbsp;less&amp;nbsp;than&amp;nbsp;10&amp;nbsp;characters<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>LengthFilterIterator&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>FilterIterator&amp;nbsp;</span><span style='color: #007700'>{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>accept</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Only&amp;nbsp;accept&amp;nbsp;strings&amp;nbsp;with&amp;nbsp;a&amp;nbsp;length&amp;nbsp;of&amp;nbsp;10&amp;nbsp;and&amp;nbsp;greater<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>parent</span><span style='color: #007700'>::</span><span style='color: #0000BB'>current</span><span style='color: #007700'>())&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />}<br /><br /></span><span style='color: #0000BB'>$arrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'more&amp;nbsp;than&amp;nbsp;10&amp;nbsp;characters'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$lengthFilter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>LengthFilterIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayIterator</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$lengthFilter&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> more than 10 characters </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="FilterIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.filteriterator.php'>The FilterIterator class</a></h1> <div class='partintro'> <div id='filteriterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This abstract iterator filters out unwanted values. This class should be extended to implement custom iterator filters. The <span class='methodname'><b>FilterIterator::accept()</b></span> must be implemented in the subclass. </p> </div> <div id='filteriterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>FilterIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <span class='modifier'>abstract</span> <b class='classname'>FilterIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iteratoriterator.php' class='classname'>IteratorIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.accept.php' class='function'>accept</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>Iterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.getinneriterator.php' class='function'>getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/filteriterator.accept.php'>FilterIterator::accept</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current element of the iterator is acceptable</li><li><a href='http://www.php.net/manual/en/filteriterator.current.php'>FilterIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Get the current element value</li><li><a href='http://www.php.net/manual/en/filteriterator.getinneriterator.php'>FilterIterator::getInnerIterator</a> &amp;acirc;&amp;#128;&amp;#148; Get the inner iterator</li><li><a href='http://www.php.net/manual/en/filteriterator.key.php'>FilterIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Get the current key</li><li><a href='http://www.php.net/manual/en/filteriterator.next.php'>FilterIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move the iterator forward</li><li><a href='http://www.php.net/manual/en/filteriterator.rewind.php'>FilterIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the iterator</li><li><a href='http://www.php.net/manual/en/filteriterator.valid.php'>FilterIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current element is valid</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="file_put_contents" value="<div id='function.file-put-contents' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.file-put-contents.php'>file_put_contents</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>file_put_contents</span> &amp;mdash; <span class='dc-title'>Write a string to a file</span></p> </div> <a name='function.file-put-contents.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>file_put_contents</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$data</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]] )</div> <p class='para rdfs-comment'> This function is identical to calling <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a> and <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a> successively to write data to a file. </p> <p class='para'> If <i><tt class='parameter'>filename</tt></i> does not exist, the file is created. Otherwise, the existing file is overwritten, unless the <b><tt class='constant'>FILE_APPEND</tt></b> flags is set. </p> </div> <a name='function.file-put-contents.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file where to write the data. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data to write. Can be either a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or a <span class='type stream'>stream</span> resource. </p> <p class='para'> If <i><tt class='parameter'>data</tt></i> is a <span class='type stream'>stream</span> resource, the remaining buffer of that stream will be copied to the specified file. This is similar with using <a href='http://www.php.net/manual/en/function.stream-copy-to-stream.php' class='function'>stream_copy_to_stream()</a>. </p> <p class='para'> You can also specify the <i><tt class='parameter'>data</tt></i> parameter as a single dimension array. This is equivalent to <i>file_put_contents($filename, implode(&amp;#039;&amp;#039;, $array))</i>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value of <i><tt class='parameter'>flags</tt></i> can be any combination of the following flags (with some restrictions), joined with the binary OR (<i>|</i>) operator. </p> <p class='para'> </p><table class='doctable table'> <caption><b>Available flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Flag</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_USE_INCLUDE_PATH</tt></b> </td> <td align='left'> Search for <i><tt class='parameter'>filename</tt></i> in the include directory. See <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> for more information. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_APPEND</tt></b> </td> <td align='left'> If file <i><tt class='parameter'>filename</tt></i> already exists, append the data to the file instead of overwriting it. Mutually exclusive with LOCK_EX since appends are atomic and thus there is no reason to lock. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>LOCK_EX</tt></b> </td> <td align='left'> Acquire an exclusive lock on the file while proceeding to the writing. Mutually exclusive with FILE_APPEND. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_TEXT</tt></b> </td> <td align='left'> <i><tt class='parameter'>data</tt></i> is written in text mode. If unicode semantics are enabled, the default encoding is UTF-8. You can specify a different encoding by creating a custom context or by using the <b>stream_default_encoding()</b> to change the default. This flag cannot be used with <b><tt class='constant'>FILE_BINARY</tt></b>. This flag is only available since PHP 6. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_BINARY</tt></b> </td> <td align='left'> <i><tt class='parameter'>data</tt></i> will be written in binary mode. This is the default setting and cannot be used with <b><tt class='constant'>FILE_TEXT</tt></b>. This flag is only available since PHP 6. </td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid context resource created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.file-put-contents.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The function returns the number of bytes that were written to the file, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.file-put-contents.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Simple usage example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'people.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;the&amp;nbsp;file&amp;nbsp;to&amp;nbsp;get&amp;nbsp;existing&amp;nbsp;content<br /></span><span style='color: #0000BB'>$current&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Append&amp;nbsp;a&amp;nbsp;new&amp;nbsp;person&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file<br /></span><span style='color: #0000BB'>$current&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #DD0000'>'John&amp;nbsp;Smith\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;Write&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;back&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file<br /></span><span style='color: #0000BB'>file_put_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$current</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Using flags</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'people.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;new&amp;nbsp;person&amp;nbsp;to&amp;nbsp;add&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file<br /></span><span style='color: #0000BB'>$person&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'John&amp;nbsp;Smith\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;Write&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file,&amp;nbsp;<br />//&amp;nbsp;using&amp;nbsp;the&amp;nbsp;FILE_APPEND&amp;nbsp;flag&amp;nbsp;to&amp;nbsp;append&amp;nbsp;the&amp;nbsp;content&amp;nbsp;to&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file<br />//&amp;nbsp;and&amp;nbsp;the&amp;nbsp;LOCK_EX&amp;nbsp;flag&amp;nbsp;to&amp;nbsp;prevent&amp;nbsp;anyone&amp;nbsp;else&amp;nbsp;writing&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file&amp;nbsp;at&amp;nbsp;the&amp;nbsp;same&amp;nbsp;time<br /></span><span style='color: #0000BB'>file_put_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$person</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILE_APPEND&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>LOCK_EX</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.file-put-contents.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Added context support </td> </tr> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added support for <b><tt class='constant'>LOCK_EX</tt></b> and the ability to pass a stream resource to the <i><tt class='parameter'>data</tt></i> parameter </td> </tr> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> Added support for the <b><tt class='constant'>FILE_TEXT</tt></b> and <b><tt class='constant'>FILE_BINARY</tt></b> flags </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.file-put-contents.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> </div> <a name='function.file-put-contents.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function' rel='rdfs-seeAlso'>file_get_contents()</a> - Reads entire file into a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="file_get_contents" value="<div id='function.file-get-contents' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.file-get-contents.php'>file_get_contents</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>file_get_contents</span> &amp;mdash; <span class='dc-title'>Reads entire file into a string</span></p> </div> <a name='function.file-get-contents.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>file_get_contents</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$maxlen</tt><span class='initializer'> = -1</span></span> ]]]] )</div> <p class='para rdfs-comment'> This function is similar to <a href='http://www.php.net/manual/en/function.file.php' class='function'>file()</a>, except that <b>file_get_contents()</b> returns the file in a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, starting at the specified <i><tt class='parameter'>offset</tt></i> up to <i><tt class='parameter'>maxlen</tt></i> bytes. On failure, <b>file_get_contents()</b> will return <b><tt class='constant'>FALSE</tt></b>. </p> <p class='para'> <b>file_get_contents()</b> is the preferred way to read the contents of a file into a string. It will use memory mapping techniques if supported by your OS to enhance performance. </p> <blockquote><p><b class='note'>Note</b>: If you&amp;#039;re opening a URI with special characters, such as spaces, you need to encode the URI with <a href='http://www.php.net/manual/en/function.urlencode.php' class='function'>urlencode()</a>. <br /> </p></blockquote> </div> <a name='function.file-get-contents.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the file to read. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: Prior to PHP 6, this parameter is called <i><tt class='parameter'>use_include_path</tt></i> and is a <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type bool'>bool</a>. As of PHP 5 the <b><tt class='constant'>FILE_USE_INCLUDE_PATH</tt></b> can be used to trigger <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include path</a> search. <br /> </p></blockquote> <p class='para'> The value of <i><tt class='parameter'>flags</tt></i> can be any combination of the following flags (with some restrictions), joined with the <a href='http://www.php.net/manual/en/language.operators.bitwise.php' class='link'>binary OR (|) operator</a>. </p> <p class='para'> </p><table class='doctable table'> <caption><b>Available flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Flag</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_USE_INCLUDE_PATH</tt></b> </td> <td align='left'> Search for <i><tt class='parameter'>filename</tt></i> in the include directory. See <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> for more information. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_TEXT</tt></b> </td> <td align='left'> As of PHP 6, the default encoding of the read data is UTF-8. You can specify a different encoding by creating a custom context or by changing the default using <b>stream_default_encoding()</b>. This flag cannot be used with <b><tt class='constant'>FILE_BINARY</tt></b>. </td> </tr> <tr valign='middle'> <td align='left'> <b><tt class='constant'>FILE_BINARY</tt></b> </td> <td align='left'> With this flag, the file is read in binary mode. This is the default setting and cannot be used with <b><tt class='constant'>FILE_TEXT</tt></b>. </td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid context resource created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. If you don&amp;#039;t need to use a custom context, you can skip this parameter by <b><tt class='constant'>NULL</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset where the reading starts. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>maxlen</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Maximum length of data read. </p> </dd> </dl> <p> </p> </div> <a name='function.file-get-contents.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The function returns the read data or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.file-get-contents.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Get and output the source of the homepage of a website</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$homepage&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$homepage</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Searching within the include_path</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;&amp;lt;=&amp;nbsp;PHP&amp;nbsp;5<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'./people.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;&amp;gt;&amp;nbsp;PHP&amp;nbsp;5<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'./people.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILE_USE_INCLUDE_PATH</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 Reading a section of a file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;14&amp;nbsp;characters&amp;nbsp;starting&amp;nbsp;from&amp;nbsp;the&amp;nbsp;21st&amp;nbsp;character<br /></span><span style='color: #0000BB'>$section&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'./people.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>20</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>14</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$section</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(14) &amp;quot;lle Bjori Ro&amp;quot; </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #4 Using stream contexts</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;stream<br /></span><span style='color: #0000BB'>$opts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'http'</span><span style='color: #007700'>=&amp;gt;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'method'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'GET'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'header'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'Accept-language:&amp;nbsp;en\r\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'Cookie:&amp;nbsp;foo=bar\r\n'<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>)<br />);<br /><br /></span><span style='color: #0000BB'>$context&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_context_create</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$opts</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;the&amp;nbsp;file&amp;nbsp;using&amp;nbsp;the&amp;nbsp;HTTP&amp;nbsp;headers&amp;nbsp;set&amp;nbsp;above<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.file-get-contents.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> The <i><tt class='parameter'>use_include_path</tt></i> parameter was replaced by the <i><tt class='parameter'>flags</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>offset</tt></i> and <i><tt class='parameter'>maxlen</tt></i> parameters. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Added context support. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.file-get-contents.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> <div class='warning'><b class='warning'>Warning</b><p class='para'>When using SSL, Microsoft IIS will violate the protocol by closing the connection without sending a <i>close_notify</i> indicator. PHP will report this as &amp;quot;SSL: Fatal Protocol Error&amp;quot; when you reach the end of the data. To work around this, the value of <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> should be lowered to a level that does not include warnings. PHP 4.3.7 and higher can detect buggy IIS server software when you open the stream using the <i>https://</i> wrapper and will suppress the warning. When using <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> to create an <i>ssl://</i> socket, the developer is responsible for detecting and suppressing this warning.</p></div> </div> <a name='function.file-get-contents.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.readfile.php' class='function' rel='rdfs-seeAlso'>readfile()</a> - Outputs a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-put-contents.php' class='function' rel='rdfs-seeAlso'>file_put_contents()</a> - Write a string to a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-contents.php' class='function' rel='rdfs-seeAlso'>stream_get_contents()</a> - Reads remainder of a stream into a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="file_exists" value="<div id='function.file-exists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.file-exists.php'>file_exists</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>file_exists</span> &amp;mdash; <span class='dc-title'>Checks whether a file or directory exists</span></p> </div> <a name='function.file-exists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>file_exists</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Checks whether a file or directory exists. </p> </div> <a name='function.file-exists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file or directory. </p> <p class='para'> On windows, use <var class='filename'>//computername/share/filename</var> or <var class='filename'>\\computername\share\filename</var> to check files on network shares. </p> </dd> </dl> <p> </p> </div> <a name='function.file-exists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the file or directory specified by <i><tt class='parameter'>filename</tt></i> exists; <b><tt class='constant'>FALSE</tt></b> otherwise. </p> <blockquote><p><b class='note'>Note</b>: This function will return <b><tt class='constant'>FALSE</tt></b> for symlinks pointing to non-existing files. <br /> </p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='para'> This function returns <b><tt class='constant'>FALSE</tt></b> for files inaccessible due to <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> restrictions. However these files still can be <a href='http://www.php.net/manual/en/function.include.php' class='link'>included</a> if they are located in <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-include-dir' class='link'>safe_mode_include_dir</a>. </p> </div> <blockquote><p><b class='note'>Note</b>: The check is done using the real UID/GID instead of the effective one. <br /> </p></blockquote> </div> <a name='function.file-exists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Testing whether a file exists</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/path/to/foo.txt'</span><span style='color: #007700'>;<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>file_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;file&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;exists'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;file&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exist'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.file-exists.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.file-exists.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-readable.php' class='function' rel='rdfs-seeAlso'>is_readable()</a> - Tells whether the filename is readable</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-writable.php' class='function' rel='rdfs-seeAlso'>is_writable()</a> - Tells whether the filename is writable</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-file.php' class='function' rel='rdfs-seeAlso'>is_file()</a> - Tells whether the filename is a regular file</li> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filetype" value="<div id='function.filetype' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filetype.php'>filetype</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>filetype</span> &amp;mdash; <span class='dc-title'>Gets file type</span></p> </div> <a name='function.filetype.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>filetype</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Returns the type of the given file. </p> </div> <a name='function.filetype.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.filetype.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the type of the file. Possible values are fifo, char, dir, block, link, file, socket and unknown. </p> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> if an error occurs. <b>filetype()</b> will also produce an <b><tt class='constant'>E_NOTICE</tt></b> message if the stat call fails or if the file type is unknown. </p> </div> <a name='function.filetype.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>filetype()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>filetype</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;file<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>filetype</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;dir<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.filetype.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.filetype.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-dir.php' class='function' rel='rdfs-seeAlso'>is_dir()</a> - Tells whether the filename is a directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-file.php' class='function' rel='rdfs-seeAlso'>is_file()</a> - Tells whether the filename is a regular file</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-link.php' class='function' rel='rdfs-seeAlso'>is_link()</a> - Tells whether the filename is a symbolic link</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-exists.php' class='function' rel='rdfs-seeAlso'>file_exists()</a> - Checks whether a file or directory exists</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.mime-content-type.php' class='function' rel='rdfs-seeAlso'>mime_content_type()</a> - Detect MIME Content-type for a file (deprecated)</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filesize" value="<div id='function.filesize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filesize.php'>filesize</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>filesize</span> &amp;mdash; <span class='dc-title'>Gets file size</span></p> </div> <a name='function.filesize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filesize</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets the size for the given file. </p> </div> <a name='function.filesize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.filesize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the size of the file in bytes, or <b><tt class='constant'>FALSE</tt></b> (and generates an error of level <b><tt class='constant'>E_WARNING</tt></b>) in case of an error. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Because PHP&amp;#039;s integer type is signed and many platforms use 32bit integers, <b>filesize()</b> may return unexpected results for files which are larger than 2GB. For files between 2GB and 4GB in size this can usually be overcome by using <i>sprintf(&amp;quot;%u&amp;quot;, filesize($file))</i>. </span> </p></blockquote> </div> <a name='function.filesize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>filesize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;e.g.&amp;nbsp;&amp;nbsp;somefile.txt:&amp;nbsp;1024&amp;nbsp;bytes<br /><br /></span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>':&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;bytes'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.filesize.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.filesize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.file-exists.php' class='function' rel='rdfs-seeAlso'>file_exists()</a> - Checks whether a file or directory exists</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fileperms" value="<div id='function.fileperms' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fileperms.php'>fileperms</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fileperms</span> &amp;mdash; <span class='dc-title'>Gets file permissions</span></p> </div> <a name='function.fileperms.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fileperms</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets permissions for the given file. </p> </div> <a name='function.fileperms.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.fileperms.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the permissions on the file, or <b><tt class='constant'>FALSE</tt></b> in case of an error. </p> </div> <a name='function.fileperms.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Display permissions as an octal value</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>fileperms</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>)),&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>fileperms</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>)),&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1777 0644 </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Display full permissions</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$perms&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fileperms</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0xC000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0xC000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Socket<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'s'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0xA000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0xA000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Symbolic&amp;nbsp;Link<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'l'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x8000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0x8000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Regular<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x6000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0x6000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Block&amp;nbsp;special<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x4000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0x4000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Directory<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x2000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0x2000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Character&amp;nbsp;special<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>;<br />}&amp;nbsp;elseif&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x1000</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0x1000</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;FIFO&amp;nbsp;pipe<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'p'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Unknown<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'u'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Owner<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0100</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'r'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0080</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'w'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0040</span><span style='color: #007700'>)&amp;nbsp;?<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0800</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'s'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'x'&amp;nbsp;</span><span style='color: #007700'>)&amp;nbsp;:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0800</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'S'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Group<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0020</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'r'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0010</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'w'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0008</span><span style='color: #007700'>)&amp;nbsp;?<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0400</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'s'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'x'&amp;nbsp;</span><span style='color: #007700'>)&amp;nbsp;:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0400</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'S'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;World<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0004</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'r'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0002</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'w'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0001</span><span style='color: #007700'>)&amp;nbsp;?<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0200</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'t'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'x'&amp;nbsp;</span><span style='color: #007700'>)&amp;nbsp;:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((</span><span style='color: #0000BB'>$perms&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>0x0200</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'T'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>));<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> -rw-r--r-- </pre></div> </div> </div><p> </p> </div> <a name='function.fileperms.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.fileperms.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chmod.php' class='function' rel='rdfs-seeAlso'>chmod()</a> - Changes file mode</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-readable.php' class='function' rel='rdfs-seeAlso'>is_readable()</a> - Tells whether the filename is readable</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fileowner" value="<div id='function.fileowner' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fileowner.php'>fileowner</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fileowner</span> &amp;mdash; <span class='dc-title'>Gets file owner</span></p> </div> <a name='function.fileowner.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fileowner</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets the file owner. </p> </div> <a name='function.fileowner.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.fileowner.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the user ID of the owner of the file, or <b><tt class='constant'>FALSE</tt></b> in case of an error. The user ID is returned in numerical format, use <a href='http://www.php.net/manual/en/function.posix-getpwuid.php' class='function'>posix_getpwuid()</a> to resolve it to a username. </p> </div> <a name='function.fileowner.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Finding the owner of a file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'index.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>posix_getpwuid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>fileowner</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fileowner.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.fileowner.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filegroup.php' class='function' rel='rdfs-seeAlso'>filegroup()</a> - Gets file group</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.posix-getpwuid.php' class='function' rel='rdfs-seeAlso'>posix_getpwuid()</a> - Return info about a user by user id</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filemtime" value="<div id='function.filemtime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filemtime.php'>filemtime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>filemtime</span> &amp;mdash; <span class='dc-title'>Gets file modification time</span></p> </div> <a name='function.filemtime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filemtime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed. </p> </div> <a name='function.filemtime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.filemtime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the time the file was last modified, or <b><tt class='constant'>FALSE</tt></b> in case of an error. The time is returned as a Unix timestamp, which is suitable for the <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a> function. </p> </div> <a name='function.filemtime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>filemtime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;e.g.&amp;nbsp;&amp;nbsp;somefile.txt&amp;nbsp;was&amp;nbsp;last&amp;nbsp;modified:&amp;nbsp;December&amp;nbsp;29&amp;nbsp;2002&amp;nbsp;22:16:23.<br /><br /></span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>file_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;was&amp;nbsp;last&amp;nbsp;modified:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'F&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filemtime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.filemtime.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Note that time resolution may differ from one file system to another.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.filemtime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filectime.php' class='function' rel='rdfs-seeAlso'>filectime()</a> - Gets inode change time of file</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.touch.php' class='function' rel='rdfs-seeAlso'>touch()</a> - Sets access and modification time of file</li> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fileinode" value="<div id='function.fileinode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fileinode.php'>fileinode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fileinode</span> &amp;mdash; <span class='dc-title'>Gets file inode</span></p> </div> <a name='function.fileinode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fileinode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets the file inode. </p> </div> <a name='function.fileinode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.fileinode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the inode number of the file, or <b><tt class='constant'>FALSE</tt></b> in case of an error. </p> </div> <a name='function.fileinode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Comparing the inode of a file with the current file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'index.php'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>getmyinode</span><span style='color: #007700'>()&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>fileinode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;are&amp;nbsp;checking&amp;nbsp;the&amp;nbsp;current&amp;nbsp;file.'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fileinode.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.fileinode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getmyinode.php' class='function' rel='rdfs-seeAlso'>getmyinode()</a> - Gets the inode of the current script</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filegroup" value="<div id='function.filegroup' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filegroup.php'>filegroup</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>filegroup</span> &amp;mdash; <span class='dc-title'>Gets file group</span></p> </div> <a name='function.filegroup.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filegroup</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets the file group. The group ID is returned in numerical format, use <a href='http://www.php.net/manual/en/function.posix-getgrgid.php' class='function'>posix_getgrgid()</a> to resolve it to a group name. </p> </div> <a name='function.filegroup.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.filegroup.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the group ID of the file, or <b><tt class='constant'>FALSE</tt></b> in case of an error. The group ID is returned in numerical format, use <a href='http://www.php.net/manual/en/function.posix-getgrgid.php' class='function'>posix_getgrgid()</a> to resolve it to a group name. Upon failure, <b><tt class='constant'>FALSE</tt></b> is returned. </p> </div> <a name='function.filegroup.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Finding the group of a file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'index.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>posix_getgrgid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>filegroup</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.filegroup.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Upon failure, an <b><tt class='constant'>E_WARNING</tt></b> is emitted. </p> </div> <a name='function.filegroup.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.filegroup.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fileowner.php' class='function' rel='rdfs-seeAlso'>fileowner()</a> - Gets file owner</li> <li class='member'><a href='http://www.php.net/manual/en/function.posix-getgrgid.php' class='function' rel='rdfs-seeAlso'>posix_getgrgid()</a> - Return info about a group by group id</li> <li class='member'><a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-gid' class='link'>safe_mode_gid</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="filectime" value="<div id='function.filectime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.filectime.php'>filectime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>filectime</span> &amp;mdash; <span class='dc-title'>Gets inode change time of file</span></p> </div> <a name='function.filectime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filectime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gets the inode change time of a file. </p> </div> <a name='function.filectime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.filectime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the time the file was last changed, or <b><tt class='constant'>FALSE</tt></b> in case of an error. The time is returned as a Unix timestamp. </p> </div> <a name='function.filectime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>filectime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;e.g.&amp;nbsp;&amp;nbsp;somefile.txt&amp;nbsp;was&amp;nbsp;last&amp;nbsp;changed:&amp;nbsp;December&amp;nbsp;29&amp;nbsp;2002&amp;nbsp;22:16:23.<br /><br /></span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>file_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;was&amp;nbsp;last&amp;nbsp;changed:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'F&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filectime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.filectime.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Note: In most Unix filesystems, a file is considered changed when its inode data is changed; that is, when the permissions, owner, group, or other metadata from the inode is updated. See also <a href='http://www.php.net/manual/en/function.filemtime.php' class='function'>filemtime()</a> (which is what you want to use when you want to create &amp;quot;Last Modified&amp;quot; footers on web pages) and <a href='http://www.php.net/manual/en/function.fileatime.php' class='function'>fileatime()</a>. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Note also that in some Unix texts the ctime of a file is referred to as being the creation time of the file. This is wrong. There is no creation time for Unix files in most Unix filesystems. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Note that time resolution may differ from one file system to another.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.filectime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filemtime.php' class='function' rel='rdfs-seeAlso'>filemtime()</a> - Gets file modification time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fileatime" value="<div id='function.fileatime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fileatime.php'>fileatime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fileatime</span> &amp;mdash; <span class='dc-title'>Gets last access time of file</span></p> </div> <a name='function.fileatime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>fileatime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='simpara'> Gets the last access time of the given file. </p> </div> <a name='function.fileatime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.fileatime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the time the file was last accessed, or <b><tt class='constant'>FALSE</tt></b> in case of an error. The time is returned as a Unix timestamp. </p> </div> <a name='function.fileatime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>fileatime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;e.g.&amp;nbsp;&amp;nbsp;somefile.txt&amp;nbsp;was&amp;nbsp;last&amp;nbsp;accessed:&amp;nbsp;December&amp;nbsp;29&amp;nbsp;2002&amp;nbsp;22:16:23.<br /><br /></span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>file_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$filename</span><span style='color: #DD0000'>&amp;nbsp;was&amp;nbsp;last&amp;nbsp;accessed:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'F&amp;nbsp;d&amp;nbsp;Y&amp;nbsp;H:i:s.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>fileatime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fileatime.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: The atime of a file is supposed to change whenever the data blocks of a file are being read. This can be costly performance-wise when an application regularly accesses a very large number of files or directories. <br /> Some Unix filesystems can be mounted with atime updates disabled to increase the performance of such applications; USENET news spools are a common example. On such filesystems this function will be useless. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Note that time resolution may differ from one file system to another.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> family of functionality.</p></div> </div> <a name='function.fileatime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filemtime.php' class='function' rel='rdfs-seeAlso'>filemtime()</a> - Gets file modification time</li> <li class='member'><a href='http://www.php.net/manual/en/function.fileinode.php' class='function' rel='rdfs-seeAlso'>fileinode()</a> - Gets file inode</li> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="file" value="<div id='function.file' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.file.php'>file</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>file</span> &amp;mdash; <span class='dc-title'>Reads entire file into an array</span></p> </div> <a name='function.file.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>file</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]] )</div> <p class='para rdfs-comment'> Reads an entire file into an array. </p> <blockquote><p><b class='note'>Note</b>: You can use <a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function'>file_get_contents()</a> to return the contents of a file as a string. <br /> </p></blockquote> </div> <a name='function.file.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional parameter <i><tt class='parameter'>flags</tt></i> can be one, or more, of the following constants: </p><dl> <dt class='varlistentry'> <span class='term'> <b><tt class='constant'>FILE_USE_INCLUDE_PATH</tt></b> </span> </dt><dd class='listitem'> <span class='simpara'> Search for the file in the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a>. </span> </dd> <dt class='varlistentry'> <span class='term'> <b><tt class='constant'>FILE_IGNORE_NEW_LINES</tt></b> </span> </dt><dd class='listitem'> <span class='simpara'> Do not add newline at the end of each array element </span> </dd> <dt class='varlistentry'> <span class='term'> <b><tt class='constant'>FILE_SKIP_EMPTY_LINES</tt></b> </span> </dt><dd class='listitem'> <span class='simpara'> Skip empty lines </span> </dd> <dt class='varlistentry'> <span class='term'> <b><tt class='constant'>FILE_TEXT</tt></b> </span> </dt><dd class='listitem'> <span class='simpara'> The content is returned in UTF-8 encoding. You can specify a different encoding by creating a custom context. This flag cannot be used with <b><tt class='constant'>FILE_BINARY</tt></b>. </span> </dd> <dt class='varlistentry'> <span class='term'> <b><tt class='constant'>FILE_BINARY</tt></b> </span> </dt><dd class='listitem'> <span class='simpara'> The content is read as binary data. This is the default setting and cannot be used with <b><tt class='constant'>FILE_TEXT</tt></b>. </span> </dd> </dl> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A context resource created with the <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a> function. </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote><p> </p> </dd> </dl> <p> </p> </div> <a name='function.file.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the file in an array. Each element of the array corresponds to a line in the file, with the newline still attached. Upon failure, <b>file()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> <blockquote><p><b class='note'>Note</b>: Each line in the resulting array will include the line ending, unless <b><tt class='constant'>FILE_IGNORE_NEW_LINES</tt></b> is used, so you still need to use <a href='http://www.php.net/manual/en/function.rtrim.php' class='function'>rtrim()</a> if you do not want the line ending present. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings' class='link'>auto_detect_line_endings</a> run-time configuration option may help resolve the problem.</span></p></blockquote> </div> <a name='function.file.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> Added support for the <b><tt class='constant'>FILE_TEXT</tt></b> and <b><tt class='constant'>FILE_BINARY</tt></b> flags. <blockquote><p><b class='note'>Note</b>: For <i>forward compatibility</i>, these constants are available as of PHP 5.2.7 <br /> </p></blockquote> </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>context</tt></i> parameter was added </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Prior to PHP 5.0.0 the <i><tt class='parameter'>flags</tt></i> parameter only covered <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> and was enabled with 1 </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <b>file()</b> became binary safe </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.file.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>file()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;a&amp;nbsp;file&amp;nbsp;into&amp;nbsp;an&amp;nbsp;array.&amp;nbsp;&amp;nbsp;In&amp;nbsp;this&amp;nbsp;example&amp;nbsp;we'll&amp;nbsp;go&amp;nbsp;through&amp;nbsp;HTTP&amp;nbsp;to&amp;nbsp;get<br />//&amp;nbsp;the&amp;nbsp;HTML&amp;nbsp;source&amp;nbsp;of&amp;nbsp;a&amp;nbsp;URL.<br /></span><span style='color: #0000BB'>$lines&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Loop&amp;nbsp;through&amp;nbsp;our&amp;nbsp;array,&amp;nbsp;show&amp;nbsp;HTML&amp;nbsp;source&amp;nbsp;as&amp;nbsp;HTML&amp;nbsp;source;&amp;nbsp;and&amp;nbsp;line&amp;nbsp;numbers&amp;nbsp;too.<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>$lines&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line_num&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Line&amp;nbsp;#&amp;lt;b&amp;gt;</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$line_num</span><span style='color: #007700'>}</span><span style='color: #DD0000'>&amp;lt;/b&amp;gt;&amp;nbsp;:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>htmlspecialchars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Another&amp;nbsp;example,&amp;nbsp;let's&amp;nbsp;get&amp;nbsp;a&amp;nbsp;web&amp;nbsp;page&amp;nbsp;into&amp;nbsp;a&amp;nbsp;string.&amp;nbsp;&amp;nbsp;See&amp;nbsp;also&amp;nbsp;file_get_contents().<br /></span><span style='color: #0000BB'>$html&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>implode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>file</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Using&amp;nbsp;the&amp;nbsp;optional&amp;nbsp;flags&amp;nbsp;parameter&amp;nbsp;since&amp;nbsp;PHP&amp;nbsp;5<br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>file</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>FILE_IGNORE_NEW_LINES&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>FILE_SKIP_EMPTY_LINES</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.file.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='para'>When using SSL, Microsoft IIS will violate the protocol by closing the connection without sending a <i>close_notify</i> indicator. PHP will report this as &amp;quot;SSL: Fatal Protocol Error&amp;quot; when you reach the end of the data. To work around this, the value of <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> should be lowered to a level that does not include warnings. PHP 4.3.7 and higher can detect buggy IIS server software when you open the stream using the <i>https://</i> wrapper and will suppress the warning. When using <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> to create an <i>ssl://</i> socket, the developer is responsible for detecting and suppressing this warning.</p></div> </div> <a name='function.file.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.readfile.php' class='function' rel='rdfs-seeAlso'>readfile()</a> - Outputs a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function' rel='rdfs-seeAlso'>file_get_contents()</a> - Reads entire file into a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fgetss" value="<div id='function.fgetss' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fgetss.php'>fgetss</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fgetss</span> &amp;mdash; <span class='dc-title'>Gets line from file pointer and strip HTML tags</span></p> </div> <a name='function.fgetss.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fgetss</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$allowable_tags</tt></span> ]] )</div> <p class='para rdfs-comment'> Identical to <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a>, except that <b>fgetss()</b> attempts to strip any HTML and PHP tags from the text it reads. </p> </div> <a name='function.fgetss.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Length of the data to be retrieved. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>allowable_tags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can use the optional third parameter to specify tags which should not be stripped. </p> </dd> </dl> <p> </p> </div> <a name='function.fgetss.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string of up to <i><tt class='parameter'>length</tt></i> - 1 bytes read from the file pointed to by <i><tt class='parameter'>handle</tt></i> , with all HTML and PHP code stripped. </p> <p class='para'> If an error occurs, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.fgetss.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>length</tt></i> parameter is optional </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> The <i><tt class='parameter'>allowable_tags</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fgetss.examples'></a><div class='refsect1 examples'> <p class='para'> </p><div class='example'> <p><b>Example #1 Reading a PHP file line-by-line</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;lt;&amp;lt;&amp;lt;EOD<br /></span><span style='color: #DD0000'>&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;<br />&amp;nbsp;&amp;lt;p&amp;gt;Welcome!&amp;nbsp;Today&amp;nbsp;is&amp;nbsp;the&amp;nbsp;&amp;lt;?php&amp;nbsp;echo(date('jS'));&amp;nbsp;?&amp;gt;&amp;nbsp;of&amp;nbsp;&amp;lt;?=&amp;nbsp;date('F');&amp;nbsp;?&amp;gt;.&amp;lt;/p&amp;gt;<br />&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;<br />Text&amp;nbsp;outside&amp;nbsp;of&amp;nbsp;the&amp;nbsp;HTML&amp;nbsp;block.<br /></span><span style='color: #007700'>EOD;<br /></span><span style='color: #0000BB'>file_put_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;@</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$buffer&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgetss</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4096</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$buffer</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Welcome! Today is the of . Text outside of the HTML block. </pre></div> </div> </div><p> </p> </div> <a name='function.fgetss.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings' class='link'>auto_detect_line_endings</a> run-time configuration option may help resolve the problem.</span></p></blockquote> </div> <a name='function.fgetss.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.strip-tags.php' class='function' rel='rdfs-seeAlso'>strip_tags()</a> - Strip HTML and PHP tags from a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fgets" value="<div id='function.fgets' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fgets.php'>fgets</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fgets</span> &amp;mdash; <span class='dc-title'>Gets line from file pointer</span></p> </div> <a name='function.fgets.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fgets</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <p class='para rdfs-comment'> Gets a line from file pointer. </p> </div> <a name='function.fgets.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Reading ends when <i><tt class='parameter'>length</tt></i> - 1 bytes have been read, on a newline (which is included in the return value), or on EOF (whichever comes first). If no length is specified, it will keep reading from the stream until it reaches the end of the line. </p> <blockquote><p><b class='note'>Note</b>: Until PHP 4.3.0, omitting it would assume 1024 as the line length. If the majority of the lines in the file are all larger than 8KB, it is more resource efficient for your script to specify the maximum line length. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.fgets.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string of up to <i><tt class='parameter'>length</tt></i> - 1 bytes read from the file pointed to by <i><tt class='parameter'>handle</tt></i> . </p> <p class='para'> If an error occurs, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.fgets.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <b>fgets()</b> is now binary safe </td> </tr> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The <i><tt class='parameter'>length</tt></i> parameter became optional </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fgets.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Reading a file line by line</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;@</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/inputfile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$buffer&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4096</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$buffer</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fgets.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings' class='link'>auto_detect_line_endings</a> run-time configuration option may help resolve the problem.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: People used to the &amp;#039;C&amp;#039; semantics of <b>fgets()</b> should note the difference in how <i>EOF</i> is returned. <br /> </p></blockquote> </div> <a name='function.fgets.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetc.php' class='function' rel='rdfs-seeAlso'>fgetc()</a> - Gets character from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-line.php' class='function' rel='rdfs-seeAlso'>stream_get_line()</a> - Gets line from stream resource up to a given delimiter</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fgetcsv" value="<div id='function.fgetcsv' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fgetcsv.php'>fgetcsv</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fgetcsv</span> &amp;mdash; <span class='dc-title'>Gets line from file pointer and parse for CSV fields</span></p> </div> <a name='function.fgetcsv.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fgetcsv</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt></span> ]]]] )</div> <p class='para rdfs-comment'> Similar to <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a> except that <b>fgetcsv()</b> parses the line it reads for fields in <acronym title='Comma Separated Value'>CSV</acronym> format and returns an array containing the fields read. </p> </div> <a name='function.fgetcsv.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid file pointer to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a>, or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Must be greater than the longest line (in characters) to be found in the CSV file (allowing for trailing line-end characters). It became optional in PHP 5. Omitting this parameter (or setting it to 0 in PHP 5.0.4 and later) the maximum line length is not limited, which is slightly slower. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Set the field delimiter (one character only). Defaults as a comma. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>enclosure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Set the field enclosure character (one character only). Defaults as a double quotation mark. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>escape</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Set the escape character (one character only). Defaults as a backslash (<i>\</i>) </p> </dd> </dl> <p> </p> </div> <a name='function.fgetcsv.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array containing the fields read. </p> <blockquote><p><b class='note'>Note</b>: A blank line in a CSV file will be returned as an array comprising a single <a href='http://www.php.net/manual/en/language.types.null.php' class='type null'>null</a> field, and will not be treated as an error. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings' class='link'>auto_detect_line_endings</a> run-time configuration option may help resolve the problem.</span></p></blockquote> <p class='para'> <b>fgetcsv()</b> returns <b><tt class='constant'>FALSE</tt></b> on error, including end of file. </p> </div> <a name='function.fgetcsv.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> The <i><tt class='parameter'>escape</tt></i> parameter was added </td> </tr> <tr valign='middle'> <td align='left'>4.3.5</td> <td align='left'> <b>fgetcsv()</b> is now binary safe </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <i><tt class='parameter'>enclosure</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.fgetcsv.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Read and print the entire contents of a CSV file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'test.csv'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />while&amp;nbsp;((</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgetcsv</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1000</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>','</span><span style='color: #007700'>))&amp;nbsp;!==&amp;nbsp;</span><span style='color: #0000BB'>FALSE</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$num&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;p&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #DD0000'>&amp;nbsp;fields&amp;nbsp;in&amp;nbsp;line&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #DD0000'>:&amp;nbsp;&amp;lt;br&amp;nbsp;/&amp;gt;&amp;lt;/p&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>++;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>=</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>++)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fgetcsv.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Locale setting is taken into account by this function. If <var class='varname'>LANG</var> is e.g. <i>en_US.UTF-8</i>, files in one-byte encoding are read wrong by this function. <br /> </p></blockquote> </div> <a name='function.fgetcsv.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.str-getcsv.php' class='function' rel='rdfs-seeAlso'>str_getcsv()</a> - Parse a CSV string into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.pack.php' class='function' rel='rdfs-seeAlso'>pack()</a> - Pack data into binary string</li> <li class='member'><a href='http://www.php.net/manual/en/function.fputcsv.php' class='function' rel='rdfs-seeAlso'>fputcsv()</a> - Format line as CSV and write to file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fgetc" value="<div id='function.fgetc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fgetc.php'>fgetc</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fgetc</span> &amp;mdash; <span class='dc-title'>Gets character from file pointer</span></p> </div> <a name='function.fgetc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fgetc</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Gets a character from the given file pointer. </p> </div> <a name='function.fgetc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> </dl> <p> </p> </div> <a name='function.fgetc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing a single character read from the file pointed to by <i><tt class='parameter'>handle</tt></i> . Returns <b><tt class='constant'>FALSE</tt></b> on EOF. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.fgetc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>fgetc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Could&amp;nbsp;not&amp;nbsp;open&amp;nbsp;file&amp;nbsp;somefile.txt'</span><span style='color: #007700'>;<br />}<br />while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$char&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgetc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$char</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fgetc.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.fgetc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fflush" value="<div id='function.fflush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fflush.php'>fflush</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>fflush</span> &amp;mdash; <span class='dc-title'>Flushes the output to a file</span></p> </div> <a name='function.fflush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>fflush</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> This function forces a write of all buffered output to the resource pointed to by the file <i><tt class='parameter'>handle</tt></i> . </p> </div> <a name='function.fflush.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> </dl> <p> </p> </div> <a name='function.fflush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.fflush.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 File write example using <b>fflush()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'bar.txt'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r+'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fflush</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>ftell</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fflush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function' rel='rdfs-seeAlso'>clearstatcache()</a> - Clears file status cache</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="feof" value="<div id='function.feof' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.feof.php'>feof</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>feof</span> &amp;mdash; <span class='dc-title'>Tests for end-of-file on a file pointer</span></p> </div> <a name='function.feof.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>feof</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Tests for end-of-file on a file pointer. </p> </div> <a name='function.feof.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> (and not yet closed by <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>).</p> </dd> </dl> <p> </p> </div> <a name='function.feof.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the file pointer is at EOF or an error occurs (including socket timeout); otherwise returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.feof.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> If a connection opened by <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> wasn&amp;#039;t closed by the server, <b>feof()</b> will wait until a timeout has been reached to return <b><tt class='constant'>TRUE</tt></b>. The default timeout value is 60 seconds. You may use <a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function'>stream_set_timeout()</a> to change this value. </p> </div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> If the passed file pointer is not valid you may get an infinite loop, because <b>feof()</b> fails to return <b><tt class='constant'>TRUE</tt></b>. </p><div class='example'> <p><b>Example #1 <b>feof()</b> example with an invalid file pointer</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;if&amp;nbsp;file&amp;nbsp;can&amp;nbsp;not&amp;nbsp;be&amp;nbsp;read&amp;nbsp;or&amp;nbsp;doesn't&amp;nbsp;exist&amp;nbsp;fopen&amp;nbsp;function&amp;nbsp;returns&amp;nbsp;FALSE<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;@</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'no_such_file'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;FALSE&amp;nbsp;from&amp;nbsp;fopen&amp;nbsp;will&amp;nbsp;issue&amp;nbsp;warning&amp;nbsp;and&amp;nbsp;result&amp;nbsp;in&amp;nbsp;infinite&amp;nbsp;loop&amp;nbsp;here<br /></span><span style='color: #007700'>while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>))&amp;nbsp;{<br />}<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="fclose" value="<div id='function.fclose' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.fclose.php'>fclose</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>fclose</span> &amp;mdash; <span class='dc-title'>Closes an open file pointer</span></p> </div> <a name='function.fclose.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>fclose</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> The file pointed to by <i><tt class='parameter'>handle</tt></i> is closed. </p> </div> <a name='function.fclose.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> or <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.fclose.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.fclose.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>fclose()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.fclose.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ezmlm_hash" value="<div id='function.ezmlm-hash' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ezmlm-hash.php'>ezmlm_hash</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>ezmlm_hash</span> &amp;mdash; <span class='dc-title'>Calculate the hash value needed by EZMLM</span></p> </div> <a name='function.ezmlm-hash.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ezmlm_hash</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$addr</tt></span> )</div> <p class='simpara'> <b>ezmlm_hash()</b> calculates the hash value needed when keeping EZMLM mailing lists in a MySQL database. </p> </div> <a name='function.ezmlm-hash.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>addr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The email address that&amp;#039;s being hashed. </p> </dd> </dl> <p> </p> </div> <a name='function.ezmlm-hash.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The hash value of <i><tt class='parameter'>addr</tt></i> . </p> </div> <a name='function.ezmlm-hash.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Calculating the hash and subscribing a user</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'joecool@example.com'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$hash&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ezmlm_hash</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;sample&amp;nbsp;VALUES&amp;nbsp;(%s,&amp;nbsp;'%s')'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$hash</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;using&amp;nbsp;PHPLIB&amp;nbsp;db&amp;nbsp;interface<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="extract" value="<div id='function.extract' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.extract.php'>extract</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>extract</span> &amp;mdash; <span class='dc-title'>Import variables into the current symbol table from an array</span></p> </div> <a name='function.extract.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>extract</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$var_array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$extract_type</tt><span class='initializer'> = EXTR_OVERWRITE</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$prefix</tt></span> ]] )</div> <p class='para rdfs-comment'> Import variables from an array into the current symbol table. </p> <p class='para'> Checks each key to see whether it has a valid variable name. It also checks for collisions with existing variables in the symbol table. </p> </div> <a name='function.extract.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var_array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An associative array. This function treats keys as variable names and values as variable values. For each key/value pair it will create a variable in the current symbol table, subject to <i><tt class='parameter'>extract_type</tt></i> and <i><tt class='parameter'>prefix</tt></i> parameters. </p> <p class='para'> You must use an associative array; a numerically indexed array will not produce results unless you use <b><tt class='constant'>EXTR_PREFIX_ALL</tt></b> or <b><tt class='constant'>EXTR_PREFIX_INVALID</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>extract_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The way invalid/numeric keys and collisions are treated is determined by the <i><tt class='parameter'>extract_type</tt></i> . It can be one of the following values: </p><dl> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_OVERWRITE</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> If there is a collision, overwrite the existing variable. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_SKIP</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> If there is a collision, don&amp;#039;t overwrite the existing variable. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_PREFIX_SAME</tt></b></span> </dt><dd class='listitem'> <span class='simpara'>If there is a collision, prefix the variable name with <i><tt class='parameter'>prefix</tt></i> . </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_PREFIX_ALL</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Prefix all variable names with <i><tt class='parameter'>prefix</tt></i> . </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_PREFIX_INVALID</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Only prefix invalid/numeric variable names with <i><tt class='parameter'>prefix</tt></i> . </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_IF_EXISTS</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Only overwrite the variable if it already exists in the current symbol table, otherwise do nothing. This is useful for defining a list of valid variables and then extracting only those variables you have defined out of <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.request.php' class='classname'>$_REQUEST</a></var>, for example. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_PREFIX_IF_EXISTS</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Only create prefixed variable names if the non-prefixed version of the same variable exists in the current symbol table. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>EXTR_REFS</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Extracts variables as references. This effectively means that the values of the imported variables are still referencing the values of the <i><tt class='parameter'>var_array</tt></i> parameter. You can use this flag on its own or combine it with any other flag by OR&amp;#039;ing the <i><tt class='parameter'>extract_type</tt></i> . </span> </dd> </dl> <p> </p> <p class='para'> If <i><tt class='parameter'>extract_type</tt></i> is not specified, it is assumed to be <b><tt class='constant'>EXTR_OVERWRITE</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>prefix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Note that <i><tt class='parameter'>prefix</tt></i> is only required if <i><tt class='parameter'>extract_type</tt></i> is <b><tt class='constant'>EXTR_PREFIX_SAME</tt></b>, <b><tt class='constant'>EXTR_PREFIX_ALL</tt></b>, <b><tt class='constant'>EXTR_PREFIX_INVALID</tt></b> or <b><tt class='constant'>EXTR_PREFIX_IF_EXISTS</tt></b>. If the prefixed result is not a valid variable name, it is not imported into the symbol table. Prefixes are automatically separated from the array key by an underscore character. </p> </dd> </dl> <p> </p> </div> <a name='function.extract.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of variables successfully imported into the symbol table. </p> </div> <a name='function.extract.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <b><tt class='constant'>EXTR_REFS</tt></b> was added. </td> </tr> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> <b><tt class='constant'>EXTR_IF_EXISTS</tt></b> and <b><tt class='constant'>EXTR_PREFIX_IF_EXISTS</tt></b> were added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> This function now returns the number of variables extracted. <b><tt class='constant'>EXTR_PREFIX_INVALID</tt></b> was added. <b><tt class='constant'>EXTR_PREFIX_ALL</tt></b> includes numeric variables as well. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.extract.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>extract()</b> example</b></p> <div class='example-contents para'><p> A possible use for <b>extract()</b> is to import into the symbol table variables contained in an associative array returned by <a href='http://www.php.net/manual/en/function.wddx-deserialize.php' class='function'>wddx_deserialize()</a>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Suppose&amp;nbsp;that&amp;nbsp;$var_array&amp;nbsp;is&amp;nbsp;an&amp;nbsp;array&amp;nbsp;returned&amp;nbsp;from<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;wddx_deserialize&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>$size&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'large'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$var_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'size'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'medium'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'shape'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'sphere'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>extract</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var_array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>EXTR_PREFIX_SAME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'wddx'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$color</span><span style='color: #DD0000'>,&amp;nbsp;</span><span style='color: #0000BB'>$size</span><span style='color: #DD0000'>,&amp;nbsp;</span><span style='color: #0000BB'>$shape</span><span style='color: #DD0000'>,&amp;nbsp;</span><span style='color: #0000BB'>$wddx_size</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> blue, large, sphere, medium </pre></div> </div> <div class='example-contents para'><p> The <var class='varname'>$size</var> wasn&amp;#039;t overwritten because we specified <b><tt class='constant'>EXTR_PREFIX_SAME</tt></b>, which resulted in <var class='varname'>$wddx_size</var> being created. If <b><tt class='constant'>EXTR_SKIP</tt></b> was specified, then <var class='varname'>$wddx_size</var> wouldn&amp;#039;t even have been created. <b><tt class='constant'>EXTR_OVERWRITE</tt></b> would have caused <var class='varname'>$size</var> to have value &amp;quot;medium&amp;quot;, and <b><tt class='constant'>EXTR_PREFIX_ALL</tt></b> would result in new variables being named <var class='varname'>$wddx_color</var>, <var class='varname'>$wddx_size</var>, and <var class='varname'>$wddx_shape</var>. </p></div> </div><p> </p> </div> <a name='function.extract.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Do not use <b>extract()</b> on untrusted data, like user input (i.e. <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.get.php' class='classname'>$_GET</a></var>, <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.files.php' class='classname'>$_FILES</a></var>, etc.). If you do, for example if you want to run old code that relies on <a href='http://www.php.net/manual/en/security.globals.php' class='link'>register_globals</a> temporarily, make sure you use one of the non-overwriting <i><tt class='parameter'>extract_type</tt></i> values such as <b><tt class='constant'>EXTR_SKIP</tt></b> and be aware that you should extract in the same order that&amp;#039;s defined in <a href='http://www.php.net/manual/en/ini.core.php#ini.variables-order' class='link'>variables_order</a> within the <a href='http://www.php.net/manual/en/ini.php' class='link'><var class='filename'>php.ini</var></a>. </p> </div> <blockquote><p><b class='note'>Note</b>: If you have <a href='http://www.php.net/manual/en/security.globals.php' class='link'>register_globals</a> turned on and you use <b>extract()</b> on <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.files.php' class='classname'>$_FILES</a></var> and specify <b><tt class='constant'>EXTR_SKIP</tt></b>, you may be surprised at the results. <br /> <div class='warning'><b class='warning'>Warning</b> <p class='para'> This is not recommended practice and is only documented here for completeness. The use of <a href='http://www.php.net/manual/en/security.globals.php' class='link'>register_globals</a> is deprecated and calling <b>extract()</b> on untrusted data such as <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.files.php' class='classname'>$_FILES</a></var> is, as noted above, a potential security risk. If you encounter this issue, it means that you are using at least two poor coding practices. </p> </div> </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Suppose&amp;nbsp;that&amp;nbsp;$testfile&amp;nbsp;is&amp;nbsp;the&amp;nbsp;name&amp;nbsp;of&amp;nbsp;a&amp;nbsp;file&amp;nbsp;upload&amp;nbsp;input<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;and&amp;nbsp;that&amp;nbsp;register_globals&amp;nbsp;is&amp;nbsp;turned&amp;nbsp;on.&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testfile</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>extract</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_FILES</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>EXTR_SKIP</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testfile</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testfile</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'tmp_name'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> <span class='simpara'> You might expect to see something like the following: </span> <div class='example-contents screen'> <div class='cdata'><pre> string(14) &amp;quot;/tmp/phpgCCPX8&amp;quot; array(5) { [&amp;quot;name&amp;quot;]=&amp;gt; string(10) &amp;quot;somefile.txt&amp;quot; [&amp;quot;type&amp;quot;]=&amp;gt; string(24) &amp;quot;application/octet-stream&amp;quot; [&amp;quot;tmp_name&amp;quot;]=&amp;gt; string(14) &amp;quot;/tmp/phpgCCPX8&amp;quot; [&amp;quot;error&amp;quot;]=&amp;gt; int(0) [&amp;quot;size&amp;quot;]=&amp;gt; int(4208) } string(14) &amp;quot;/tmp/phpgCCPX8&amp;quot; </pre></div> </div> <span class='simpara'> However, you would instead see something like this: </span> <div class='example-contents screen'> <div class='cdata'><pre> string(14) &amp;quot;/tmp/phpgCCPX8&amp;quot; string(14) &amp;quot;/tmp/phpgCCPX8&amp;quot; string(1) &amp;quot;/&amp;quot; </pre></div> </div> This is due to the fact that since <a href='http://www.php.net/manual/en/security.globals.php' class='link'>register_globals</a> is turned on, <var class='varname'>$testfile</var> already exists in the global scope when <b>extract()</b> is called. And since <b><tt class='constant'>EXTR_SKIP</tt></b> is specified, <var class='varname'>$testfile</var> is not overwritten with the contents of the <b><tt class='constant'>$_FILES</tt></b> array so <var class='varname'>$testfile</var> remains a string. Because <a href='http://www.php.net/manual/en/language.types.string.php#language.types.string.substr' class='link'>strings may be accessed using array syntax</a> and the non-numeric string <i>tmp_name</i> is interpreted as <i>0</i>, PHP sees <var class='varname'>$testfile['tmp_name']</var> as <var class='varname'>$testfile[0]</var>. <br /> </p></blockquote> </div> <a name='function.extract.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.compact.php' class='function' rel='rdfs-seeAlso'>compact()</a> - Create array containing variables and their values</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="extension_loaded" value="<div id='function.extension-loaded' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.extension-loaded.php'>extension_loaded</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>extension_loaded</span> &amp;mdash; <span class='dc-title'>Find out whether an extension is loaded</span></p> </div> <a name='function.extension-loaded.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>extension_loaded</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Finds out whether the extension is loaded. </p> </div> <a name='function.extension-loaded.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The extension name. </p> <p class='para'> You can see the names of various extensions by using <a href='http://www.php.net/manual/en/function.phpinfo.php' class='function'>phpinfo()</a> or if you&amp;#039;re using the <i>CGI</i> or <i>CLI</i> version of PHP you can use the <span class='option'>-m</span> switch to list all available extensions: <div class='example-contents screen'> <div class='cdata'><pre> $ php -m [PHP Modules] xml tokenizer standard sockets session posix pcre overload mysql mbstring ctype [Zend Modules] </pre></div> </div> </p> </dd> </dl> <p> </p> </div> <a name='function.extension-loaded.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the extension identified by <i><tt class='parameter'>name</tt></i> is loaded, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.extension-loaded.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>extension_loaded()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>extension_loaded</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'gd'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>dl</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'gd.so'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.extension-loaded.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>extension_loaded()</b> uses the internal extension name to test whether a certain extension is available or not. Most internal extension names are written in lower case but there may be extension available which also use uppercase letters. Be warned that this function compares <em class='emphasis'>case sensitive</em> ! <br /> </p></blockquote> </div> <a name='function.extension-loaded.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-loaded-extensions.php' class='function' rel='rdfs-seeAlso'>get_loaded_extensions()</a> - Returns an array with the names of all modules compiled and loaded</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-extension-funcs.php' class='function' rel='rdfs-seeAlso'>get_extension_funcs()</a> - Returns an array with the names of the functions of a module</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/function.dl.php' class='function' rel='rdfs-seeAlso'>dl()</a> - Loads a PHP extension at runtime</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="explode" value="<div id='function.explode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.explode.php'>explode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>explode</span> &amp;mdash; <span class='dc-title'>Split a string by string</span></p> </div> <a name='function.explode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>explode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt></span> ] )</div> <p class='para rdfs-comment'> Returns an array of strings, each of which is a substring of <i><tt class='parameter'>string</tt></i> formed by splitting it on boundaries formed by the string <i><tt class='parameter'>delimiter</tt></i> . </p> </div> <a name='function.explode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The boundary string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>limit</tt></i> is set and positive, the returned array will contain a maximum of <i><tt class='parameter'>limit</tt></i> elements with the last element containing the rest of <i><tt class='parameter'>string</tt></i> . </p> <p class='para'> If the <i><tt class='parameter'>limit</tt></i> parameter is negative, all components except the last -<i><tt class='parameter'>limit</tt></i> are returned. </p> <p class='para'> If the <i><tt class='parameter'>limit</tt></i> parameter is zero, then this is treated as 1. </p> </dd> </dl> <p> </p> <p class='para'> Although <a href='http://www.php.net/manual/en/function.implode.php' class='function'>implode()</a> can, for historical reasons, accept its parameters in either order, <b>explode()</b> cannot. You must ensure that the <i><tt class='parameter'>delimiter</tt></i> argument comes before the <i><tt class='parameter'>string</tt></i> argument. </p> </div> <a name='function.explode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If <i><tt class='parameter'>delimiter</tt></i> is an empty string (&amp;quot;&amp;quot;), <b>explode()</b> will return <b><tt class='constant'>FALSE</tt></b>. If <i><tt class='parameter'>delimiter</tt></i> contains a value that is not contained in <i><tt class='parameter'>string</tt></i> and a negative <i><tt class='parameter'>limit</tt></i> is used, then an empty array will be returned. For any other <i><tt class='parameter'>limit</tt></i> , an array containing <i><tt class='parameter'>string</tt></i> will be returned. </p> </div> <a name='function.explode.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Support for negative <i><tt class='parameter'>limit</tt></i> s was added </td> </tr> <tr valign='middle'> <td align='left'>4.0.1</td> <td align='left'> The <i><tt class='parameter'>limit</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.explode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>explode()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Example&amp;nbsp;1<br /></span><span style='color: #0000BB'>$pizza&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'piece1&amp;nbsp;piece2&amp;nbsp;piece3&amp;nbsp;piece4&amp;nbsp;piece5&amp;nbsp;piece6'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pieces&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$pizza</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$pieces</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;piece1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$pieces</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;piece2<br /><br />//&amp;nbsp;Example&amp;nbsp;2<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo:*:1023:1000::/home/foo:/bin/sh'</span><span style='color: #007700'>;<br />list(</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$pass</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$uid</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$gid</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$gecos</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$home</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$shell</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;foo<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$pass</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;*<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <i><tt class='parameter'>limit</tt></i> parameter examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'one|two|three|four'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;positive&amp;nbsp;limit<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;negative&amp;nbsp;limit&amp;nbsp;(since&amp;nbsp;PHP&amp;nbsp;5.1)<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; one [1] =&amp;gt; two|three|four ) Array ( [0] =&amp;gt; one [1] =&amp;gt; two [2] =&amp;gt; three ) </pre></div> </div> </div><p> </p> </div> <a name='function.explode.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.explode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-split.php' class='function' rel='rdfs-seeAlso'>str_split()</a> - Convert a string to an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-word-count.php' class='function' rel='rdfs-seeAlso'>str_word_count()</a> - Return information about words used in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtok.php' class='function' rel='rdfs-seeAlso'>strtok()</a> - Tokenize string</li> <li class='member'><a href='http://www.php.net/manual/en/function.implode.php' class='function' rel='rdfs-seeAlso'>implode()</a> - Join array elements with a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="exp" value="<div id='function.exp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.exp.php'>exp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>exp</span> &amp;mdash; <span class='dc-title'>Calculates the exponent of <b><tt class='constant'>e</tt></b></span></p> </div> <a name='function.exp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>exp</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns <b><tt class='constant'>e</tt></b> raised to the power of <i><tt class='parameter'>arg</tt></i> . </p> <blockquote><p><b class='note'>Note</b>: &amp;#039;<b><tt class='constant'>e</tt></b>&amp;#039; is the base of the natural system of logarithms, or approximately 2.718282. <br /> </p></blockquote> </div> <a name='function.exp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.exp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> &amp;#039;e&amp;#039; raised to the power of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.exp.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>exp()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>exp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>exp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5.7</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1.6275E+005 298.87 </pre></div> </div> </div><p> </p> </div> <a name='function.exp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.log.php' class='function' rel='rdfs-seeAlso'>log()</a> - Natural logarithm</li> <li class='member'><a href='http://www.php.net/manual/en/function.pow.php' class='function' rel='rdfs-seeAlso'>pow()</a> - Exponential expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="exec" value="<div id='function.exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.exec.php'>exec</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>exec</span> &amp;mdash; <span class='dc-title'>Execute an external program</span></p> </div> <a name='function.exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>exec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$command</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$output</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$return_var</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>exec()</b> executes the given <i><tt class='parameter'>command</tt></i> . </p> </div> <a name='function.exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>command</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command that will be executed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>output</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>output</tt></i> argument is present, then the specified array will be filled with every line of output from the command. Trailing whitespace, such as <i>\n</i>, is not included in this array. Note that if the array already contains some elements, <b>exec()</b> will append to the end of the array. If you do not want the function to append elements, call <a href='http://www.php.net/manual/en/function.unset.php' class='function'>unset()</a> on the array before passing it to <b>exec()</b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return_var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>return_var</tt></i> argument is present along with the <i><tt class='parameter'>output</tt></i> argument, then the return status of the executed command will be written to this variable. </p> </dd> </dl> <p> </p> </div> <a name='function.exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The last line from the result of the command. If you need to execute a command and have all the data from the command passed directly back without any interference, use the <a href='http://www.php.net/manual/en/function.passthru.php' class='function'>passthru()</a> function. </p> <p class='para'> To get the output of the executed command, be sure to set and use the <i><tt class='parameter'>output</tt></i> parameter. </p> </div> <a name='function.exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 An <b>exec()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;the&amp;nbsp;username&amp;nbsp;that&amp;nbsp;owns&amp;nbsp;the&amp;nbsp;running&amp;nbsp;php/httpd&amp;nbsp;process<br />//&amp;nbsp;(on&amp;nbsp;a&amp;nbsp;system&amp;nbsp;with&amp;nbsp;the&amp;nbsp;'whoami'&amp;nbsp;executable&amp;nbsp;in&amp;nbsp;the&amp;nbsp;path)<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'whoami'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.exec.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='para'>When allowing user-supplied data to be passed to this function, use <a href='http://www.php.net/manual/en/function.escapeshellarg.php' class='function'>escapeshellarg()</a> or <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a> to ensure that users cannot trick the system into executing arbitrary commands.</p></div> <blockquote><p><b class='note'>Note</b>: If a program is started with this function, in order for it to continue running in the background, the output of the program must be redirected to a file or another output stream. Failing to do so will cause PHP to hang until the execution of the program ends.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, you can only execute files within the <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir' class='link'>safe_mode_exec_dir</a>. For practical reasons, it is currently not allowed to have <i>..</i> components in the path to the executable.</span></p></blockquote> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>With <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> enabled, the command string is escaped with <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a>. Thus, <i>echo y | echo x</i> becomes <i>echo y \| echo x</i>.</p></div> </div> <a name='function.exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.system.php' class='function' rel='rdfs-seeAlso'>system()</a> - Execute an external program and display the output</li> <li class='member'><a href='http://www.php.net/manual/en/function.passthru.php' class='function' rel='rdfs-seeAlso'>passthru()</a> - Execute an external program and display raw output</li> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function' rel='rdfs-seeAlso'>escapeshellcmd()</a> - Escape shell metacharacters</li> <li class='member'><a href='http://www.php.net/manual/en/function.pcntl-exec.php' class='function' rel='rdfs-seeAlso'>pcntl_exec()</a> - Executes specified program in current process space</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::__toString" value="<div id='exception.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.tostring.php'>Exception::__toString</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::__toString</span> &amp;mdash; <span class='dc-title'>String representation of the exception</span></p> </div> <a name='exception.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Exception::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> representation of the exception. </p> </div> <a name='exception.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> representation of the exception. </p> </div> <a name='exception.tostring.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::__toString()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Some&amp;nbsp;error&amp;nbsp;message'</span><span style='color: #007700'>);<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> exception &amp;#039;Exception&amp;#039; with message &amp;#039;Some error message&amp;#039; in /home/bjori/tmp/ex.php:3 Stack trace: #0 {main} </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::__construct" value="<div id='exception.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.construct.php'>Exception::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::__construct</span> &amp;mdash; <span class='dc-title'>Construct the exception</span></p> </div> <a name='exception.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><b>Exception::__construct</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt><span class='initializer'> = &amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$code</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.exception.php' class='type Exception'>Exception</a></span> <tt class='parameter'>$previous</tt><span class='initializer'> = NULL</span></span> ]]] )</div> <p class='para rdfs-comment'> Constructs the Exception. </p> </div> <a name='exception.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The Exception message to throw. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>code</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The Exception code. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>previous</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The previous exception used for the exception chaining. </p> </dd> </dl> <p> </p> </div> <a name='exception.construct.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> The <i><tt class='parameter'>previous</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::__clone" value="<div id='exception.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.clone.php'>Exception::__clone</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::__clone</span> &amp;mdash; <span class='dc-title'>Clone the exception</span></p> </div> <a name='exception.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>Exception::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Tries to clone the Exception, which results in Fatal error. </p> </div> <a name='exception.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='exception.clone.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Exceptions are <em class='emphasis'>not</em> clonable. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getTraceAsString" value="<div id='exception.gettraceasstring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.gettraceasstring.php'>Exception::getTraceAsString</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getTraceAsString</span> &amp;mdash; <span class='dc-title'>Gets the stack trace as a string</span></p> </div> <a name='exception.gettraceasstring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Exception::getTraceAsString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the Exception stack trace as a string. </p> </div> <a name='exception.gettraceasstring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.gettraceasstring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Exception stack trace as a string. </p> </div> <a name='exception.gettraceasstring.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getTraceAsString()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>;<br />}<br /><br />try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>();<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTraceAsString</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> #0 /home/bjori/tmp/ex.php(7): test() #1 {main} </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getTrace" value="<div id='exception.gettrace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.gettrace.php'>Exception::getTrace</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getTrace</span> &amp;mdash; <span class='dc-title'>Gets the stack trace</span></p> </div> <a name='exception.gettrace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>Exception::getTrace</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the Exception stack trace. </p> </div> <a name='exception.gettrace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.gettrace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Exception stack trace as an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. </p> </div> <a name='exception.gettrace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getTrace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>;<br />}<br /><br />try&amp;nbsp;{<br />&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>();<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTrace</span><span style='color: #007700'>());<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [0]=&amp;gt; array(4) { [&amp;quot;file&amp;quot;]=&amp;gt; string(22) &amp;quot;/home/bjori/tmp/ex.php&amp;quot; [&amp;quot;line&amp;quot;]=&amp;gt; int(7) [&amp;quot;function&amp;quot;]=&amp;gt; string(4) &amp;quot;test&amp;quot; [&amp;quot;args&amp;quot;]=&amp;gt; array(0) { } } } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getMessage" value="<div id='exception.getmessage' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.getmessage.php'>Exception::getMessage</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getMessage</span> &amp;mdash; <span class='dc-title'>Gets the Exception message</span></p> </div> <a name='exception.getmessage.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Exception::getMessage</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the Exception message. </p> </div> <a name='exception.getmessage.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.getmessage.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Exception message as a string. </p> </div> <a name='exception.getmessage.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getMessage()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Some&amp;nbsp;error&amp;nbsp;message'</span><span style='color: #007700'>);<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Some error message </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getLine" value="<div id='exception.getline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.getline.php'>Exception::getLine</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getLine</span> &amp;mdash; <span class='dc-title'>Gets the line in which the exception occurred</span></p> </div> <a name='exception.getline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>Exception::getLine</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns line number where the exception was thrown. </p> </div> <a name='exception.getline.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.getline.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the line number where the exception was thrown. </p> </div> <a name='exception.getline.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getLine()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Some&amp;nbsp;error&amp;nbsp;message'</span><span style='color: #007700'>);<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;exception&amp;nbsp;was&amp;nbsp;thrown&amp;nbsp;on&amp;nbsp;line:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getLine</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The exception was thrown on line: 3 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getFile" value="<div id='exception.getfile' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.getfile.php'>Exception::getFile</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getFile</span> &amp;mdash; <span class='dc-title'>Gets the file in which the exception occurred</span></p> </div> <a name='exception.getfile.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Exception::getFile</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the name of the file the exception was thrown from. </p> </div> <a name='exception.getfile.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.getfile.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filename in which the exception was thrown. </p> </div> <a name='exception.getfile.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getFile()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>;<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFile</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> /home/bjori/tmp/ex.php </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception::getCode" value="<div id='exception.getcode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/exception.getcode.php'>Exception::getCode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Exception::getCode</span> &amp;mdash; <span class='dc-title'>Gets the Exception code</span></p> </div> <a name='exception.getcode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>Exception::getCode</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the Exception code. </p> </div> <a name='exception.getcode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='exception.getcode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Exception code as a <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='exception.getcode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Exception::getCode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Some&amp;nbsp;error&amp;nbsp;message'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>30</span><span style='color: #007700'>);<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;exception&amp;nbsp;code&amp;nbsp;is:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getCode</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The exception code is: 30 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Exception" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.exception.php'>Exception</a></h1> <div class='partintro'> <div id='exception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> <span class='ooclass'><b class='classname'>Exception</b></span> is the base class for all Exceptions. </p> </div> <div id='exception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Exception</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Exception</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>string</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.message'>$message</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>private</span> <span class='type'>string</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.string'>$string</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>int</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.code'>$code</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>string</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.file'>$file</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>int</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.line'>$line</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>private</span> <span class='type'>array</span> <var class='varname'><a href='http://www.php.net/manual/en/class.exception.php#exception.props.trace'>$trace</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.construct.php' class='function'>__construct</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt><span class='initializer'> = &amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$code</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.exception.php' class='type Exception'>Exception</a></span> <tt class='parameter'>$previous</tt><span class='initializer'> = NULL</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='exception.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='exception.props.message' class='varlistentry'> <span class='term'><var class='varname'>message</var></span> </dt><dd class='listitem'> <p class='para'>The exception message</p> </dd> <dt id='exception.props.string' class='varlistentry'> <span class='term'><var class='varname'>string</var></span> </dt><dd class='listitem'> <p class='para'>Internal Exception name</p> </dd> <dt id='exception.props.code' class='varlistentry'> <span class='term'><var class='varname'>code</var></span> </dt><dd class='listitem'> <p class='para'>The Exception code</p> </dd> <dt id='exception.props.file' class='varlistentry'> <span class='term'><var class='varname'>file</var></span> </dt><dd class='listitem'> <p class='para'>The filename where the exception was thrown</p> </dd> <dt id='exception.props.line' class='varlistentry'> <span class='term'><var class='varname'>line</var></span> </dt><dd class='listitem'> <p class='para'>The line where the exception was thrown</p> </dd> <dt id='exception.props.trace' class='varlistentry'> <span class='term'><var class='varname'>trace</var></span> </dt><dd class='listitem'> <p class='para'>The stack trace</p> </dd> </dl> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/exception.construct.php'>Exception::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct the exception</li><li><a href='http://www.php.net/manual/en/exception.getmessage.php'>Exception::getMessage</a> &amp;acirc;&amp;#128;&amp;#148; Gets the Exception message</li><li><a href='http://www.php.net/manual/en/exception.getprevious.php'>Exception::getPrevious</a> &amp;acirc;&amp;#128;&amp;#148; Returns previous Exception</li><li><a href='http://www.php.net/manual/en/exception.getcode.php'>Exception::getCode</a> &amp;acirc;&amp;#128;&amp;#148; Gets the Exception code</li><li><a href='http://www.php.net/manual/en/exception.getfile.php'>Exception::getFile</a> &amp;acirc;&amp;#128;&amp;#148; Gets the file in which the exception occurred</li><li><a href='http://www.php.net/manual/en/exception.getline.php'>Exception::getLine</a> &amp;acirc;&amp;#128;&amp;#148; Gets the line in which the exception occurred</li><li><a href='http://www.php.net/manual/en/exception.gettrace.php'>Exception::getTrace</a> &amp;acirc;&amp;#128;&amp;#148; Gets the stack trace</li><li><a href='http://www.php.net/manual/en/exception.gettraceasstring.php'>Exception::getTraceAsString</a> &amp;acirc;&amp;#128;&amp;#148; Gets the stack trace as a string</li><li><a href='http://www.php.net/manual/en/exception.tostring.php'>Exception::__toString</a> &amp;acirc;&amp;#128;&amp;#148; String representation of the exception</li><li><a href='http://www.php.net/manual/en/exception.clone.php'>Exception::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clone the exception</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="escapeshellcmd" value="<div id='function.escapeshellcmd' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.escapeshellcmd.php'>escapeshellcmd</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>escapeshellcmd</span> &amp;mdash; <span class='dc-title'>Escape shell metacharacters</span></p> </div> <a name='function.escapeshellcmd.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>escapeshellcmd</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$command</tt></span> )</div> <p class='para rdfs-comment'> <b>escapeshellcmd()</b> escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands. This function should be used to make sure that any data coming from user input is escaped before this data is passed to the <a href='http://www.php.net/manual/en/function.exec.php' class='function'>exec()</a> or <a href='http://www.php.net/manual/en/function.system.php' class='function'>system()</a> functions, or to the <a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a>. </p> <p class='para'> Following characters are preceded by a backslash: <i>#&amp;amp;;`|*?~&amp;lt;&amp;gt;^()[]{}$\</i>, <i>\x0A</i> and <i>\xFF</i>. <i>&amp;#039;</i> and <i>&amp;quot;</i> are escaped only if they are not paired. In Windows, all these characters plus <i>%</i> are replaced by a space instead. </p> </div> <a name='function.escapeshellcmd.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>command</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command that will be escaped. </p> </dd> </dl> <p> </p> </div> <a name='function.escapeshellcmd.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The escaped string. </p> </div> <a name='function.escapeshellcmd.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>escapeshellcmd()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$e&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>escapeshellcmd</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$userinput</span><span style='color: #007700'>);<br />&amp;nbsp;<br /></span><span style='color: #FF8000'>//&amp;nbsp;here&amp;nbsp;we&amp;nbsp;don't&amp;nbsp;care&amp;nbsp;if&amp;nbsp;$e&amp;nbsp;has&amp;nbsp;spaces<br /></span><span style='color: #0000BB'>system</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #DD0000'>'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$f&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>escapeshellcmd</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>);<br />&amp;nbsp;<br /></span><span style='color: #FF8000'>//&amp;nbsp;and&amp;nbsp;here&amp;nbsp;we&amp;nbsp;do,&amp;nbsp;so&amp;nbsp;we&amp;nbsp;use&amp;nbsp;quotes<br /></span><span style='color: #0000BB'>system</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'touch&amp;nbsp;\'/tmp/</span><span style='color: #0000BB'>$f</span><span style='color: #DD0000'>\';&amp;nbsp;ls&amp;nbsp;-l&amp;nbsp;\'/tmp/</span><span style='color: #0000BB'>$f</span><span style='color: #DD0000'>\''</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.escapeshellcmd.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellarg.php' class='function' rel='rdfs-seeAlso'>escapeshellarg()</a> - Escape a string to be used as a shell argument</li> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.system.php' class='function' rel='rdfs-seeAlso'>system()</a> - Execute an external program and display the output</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="escapeshellarg" value="<div id='function.escapeshellarg' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.escapeshellarg.php'>escapeshellarg</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>escapeshellarg</span> &amp;mdash; <span class='dc-title'>Escape a string to be used as a shell argument</span></p> </div> <a name='function.escapeshellarg.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>escapeshellarg</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> <b>escapeshellarg()</b> adds single quotes around a string and quotes/escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument. This function should be used to escape individual arguments to shell functions coming from user input. The shell functions include <a href='http://www.php.net/manual/en/function.exec.php' class='function'>exec()</a>, <a href='http://www.php.net/manual/en/function.system.php' class='function'>system()</a> and the <a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a>. </p> </div> <a name='function.escapeshellarg.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument that will be escaped. </p> </dd> </dl> <p> </p> </div> <a name='function.escapeshellarg.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The escaped string. </p> </div> <a name='function.escapeshellarg.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>escapeshellarg()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />system</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ls&amp;nbsp;'</span><span style='color: #007700'>.</span><span style='color: #0000BB'>escapeshellarg</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.escapeshellarg.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function' rel='rdfs-seeAlso'>escapeshellcmd()</a> - Escape shell metacharacters</li> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.system.php' class='function' rel='rdfs-seeAlso'>system()</a> - Execute an external program and display the output</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="error_reporting" value="<div id='function.error-reporting' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.error-reporting.php'>error_reporting</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>error_reporting</span> &amp;mdash; <span class='dc-title'>Sets which PHP errors are reported</span></p> </div> <a name='function.error-reporting.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>error_reporting</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$level</tt></span> ] )</div> <p class='para rdfs-comment'> The <b>error_reporting()</b> function sets the <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> directive at runtime. PHP has many levels of errors, using this function sets that level for the duration (runtime) of your script. </p> </div> <a name='function.error-reporting.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>level</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> level. It takes on either a bitmask, or named constants. Using named constants is strongly encouraged to ensure compatibility for future versions. As error levels are added, the range of integers increases, so older integer-based error levels will not always behave as expected. </p> <p class='para'> The available error level constants and the actual meanings of these error levels are described in the <a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'>predefined constants</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.error-reporting.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the old <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> level. </p> </div> <a name='function.error-reporting.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'><b><tt class='constant'>E_STRICT</tt></b> introduced (not part of <b><tt class='constant'>E_ALL</tt></b>).</td> </tr> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'><b><tt class='constant'>E_RECOVERABLE_ERROR</tt></b> introduced.</td> </tr> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'><b><tt class='constant'>E_DEPRECATED</tt></b> and <b><tt class='constant'>E_USER_DEPRECATED</tt></b> introduced.</td> </tr> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'><b><tt class='constant'>E_STRICT</tt></b> became part of <b><tt class='constant'>E_ALL</tt></b>.</td> </tr> </tbody> </table> <p> </p> </div> <a name='function.error-reporting.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>error_reporting()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Turn&amp;nbsp;off&amp;nbsp;all&amp;nbsp;error&amp;nbsp;reporting<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Report&amp;nbsp;simple&amp;nbsp;running&amp;nbsp;errors<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ERROR&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_WARNING&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_PARSE</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Reporting&amp;nbsp;E_NOTICE&amp;nbsp;can&amp;nbsp;be&amp;nbsp;good&amp;nbsp;too&amp;nbsp;(to&amp;nbsp;report&amp;nbsp;uninitialized<br />//&amp;nbsp;variables&amp;nbsp;or&amp;nbsp;catch&amp;nbsp;variable&amp;nbsp;name&amp;nbsp;misspellings&amp;nbsp;...)<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ERROR&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_WARNING&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_PARSE&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>E_NOTICE</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Report&amp;nbsp;all&amp;nbsp;errors&amp;nbsp;except&amp;nbsp;E_NOTICE<br />//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;default&amp;nbsp;value&amp;nbsp;set&amp;nbsp;in&amp;nbsp;php.ini<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL&amp;nbsp;</span><span style='color: #007700'>^&amp;nbsp;</span><span style='color: #0000BB'>E_NOTICE</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Report&amp;nbsp;all&amp;nbsp;PHP&amp;nbsp;errors&amp;nbsp;(see&amp;nbsp;changelog)<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Report&amp;nbsp;all&amp;nbsp;PHP&amp;nbsp;errors<br /></span><span style='color: #0000BB'>error_reporting</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Same&amp;nbsp;as&amp;nbsp;error_reporting(E_ALL);<br /></span><span style='color: #0000BB'>ini_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'error_reporting'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_ALL</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.error-reporting.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> Most of <b><tt class='constant'>E_STRICT</tt></b> errors are evaluated at the compile time thus such errors are not reported in the file where <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> is enhanced to include <b><tt class='constant'>E_STRICT</tt></b> errors (and vice versa). </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='simpara'> Passing in the value <i>-1</i> will show every possible error, even when new levels and constants are added in future PHP versions. The <b><tt class='constant'>E_ALL</tt></b> constant also behaves this way as of PHP 6. </p> </div> </div> <a name='function.error-reporting.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'>The <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors' class='link'>display_errors</a> directive</li> <li class='member'>The <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.html-errors' class='link'>html_errors</a> directive</li> <li class='member'>The <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.xmlrpc-errors' class='link'>xmlrpc_errors</a> directive</li> <li class='member'><a href='http://www.php.net/manual/en/function.ini-set.php' class='function' rel='rdfs-seeAlso'>ini_set()</a> - Sets the value of a configuration option</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="error_log" value="<div id='function.error-log' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.error-log.php'>error_log</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>error_log</span> &amp;mdash; <span class='dc-title'>Send an error message somewhere</span></p> </div> <a name='function.error-log.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>error_log</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$message_type</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$destination</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$extra_headers</tt></span> ]]] )</div> <p class='para rdfs-comment'> Sends an error message to the web server&amp;#039;s error log, a <acronym title='Transmission Control Protocol'>TCP</acronym> port or to a file. </p> </div> <a name='function.error-log.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The error message that should be logged. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>message_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Says where the error should go. The possible message types are as follows: </p> <p class='para'> </p><table class='doctable table'> <caption><b><b>error_log()</b> log types</b></caption> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td align='left'> <i><tt class='parameter'>message</tt></i> is sent to PHP&amp;#039;s system logger, using the Operating System&amp;#039;s system logging mechanism or a file, depending on what the <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-log' class='link'>error_log</a> configuration directive is set to. This is the default option. </td> </tr> <tr valign='middle'> <td align='left'>1</td> <td align='left'> <i><tt class='parameter'>message</tt></i> is sent by email to the address in the <i><tt class='parameter'>destination</tt></i> parameter. This is the only message type where the fourth parameter, <i><tt class='parameter'>extra_headers</tt></i> is used. </td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'> No longer an option. </td> </tr> <tr valign='middle'> <td align='left'>3</td> <td align='left'> <i><tt class='parameter'>message</tt></i> is appended to the file <i><tt class='parameter'>destination</tt></i> . A newline is not automatically added to the end of the <i><tt class='parameter'>message</tt></i> string. </td> </tr> <tr valign='middle'> <td align='left'>4</td> <td align='left'> <i><tt class='parameter'>message</tt></i> is sent directly to the SAPI logging handler. </td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>destination</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The destination. Its meaning depends on the <i><tt class='parameter'>message_type</tt></i> parameter as described above. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>extra_headers</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The extra headers. It&amp;#039;s used when the <i><tt class='parameter'>message_type</tt></i> parameter is set to <i>1</i>. This message type uses the same internal function as <a href='http://www.php.net/manual/en/function.mail.php' class='function'>mail()</a> does. </p> </dd> </dl> <p> </p> </div> <a name='function.error-log.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.error-log.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.7</td> <td align='left'> The possible value of 4 was added to <i><tt class='parameter'>message_type</tt></i> . </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.error-log.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>error_log()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Send&amp;nbsp;notification&amp;nbsp;through&amp;nbsp;the&amp;nbsp;server&amp;nbsp;log&amp;nbsp;if&amp;nbsp;we&amp;nbsp;can&amp;nbsp;not<br />//&amp;nbsp;connect&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database.<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>Ora_Logon</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$username</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>error_log</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Oracle&amp;nbsp;database&amp;nbsp;not&amp;nbsp;available!'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Notify&amp;nbsp;administrator&amp;nbsp;by&amp;nbsp;email&amp;nbsp;if&amp;nbsp;we&amp;nbsp;run&amp;nbsp;out&amp;nbsp;of&amp;nbsp;FOO<br /></span><span style='color: #007700'>if&amp;nbsp;(!(</span><span style='color: #0000BB'>$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>allocate_new_foo</span><span style='color: #007700'>()))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>error_log</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Big&amp;nbsp;trouble,&amp;nbsp;we're&amp;nbsp;all&amp;nbsp;out&amp;nbsp;of&amp;nbsp;FOOs!'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'operator@example.com'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;another&amp;nbsp;way&amp;nbsp;to&amp;nbsp;call&amp;nbsp;error_log():<br /></span><span style='color: #0000BB'>error_log</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'You&amp;nbsp;messed&amp;nbsp;up!'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/var/tmp/my-errors.log'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="error_get_last" value="<div id='function.error-get-last' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.error-get-last.php'>error_get_last</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>error_get_last</span> &amp;mdash; <span class='dc-title'>Get the last occurred error</span></p> </div> <a name='function.error-get-last.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>error_get_last</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets information about the last error that occurred. </p> </div> <a name='function.error-get-last.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array describing the last error with keys &amp;quot;type&amp;quot;, &amp;quot;message&amp;quot;, &amp;quot;file&amp;quot; and &amp;quot;line&amp;quot;. Returns <b><tt class='constant'>NULL</tt></b> if there hasn&amp;#039;t been an error yet. </p> </div> <a name='function.error-get-last.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 An <b>error_get_last()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>error_get_last</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [type] =&amp;gt; 8 [message] =&amp;gt; Undefined variable: a [file] =&amp;gt; C:\WWW\index.php [line] =&amp;gt; 2 ) </pre></div> </div> </div><p> </p> </div> <a name='function.error-get-last.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'>Error constants</a></li> <li class='member'>Variable <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.phperrormsg.php' class='classname'>$php_errormsg</a></var></li> <li class='member'><a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors' class='link'>Directive <i><tt class='parameter'>display_errors</tt></i> </a></li> <li class='member'><a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.html-errors' class='link'>Directive <i><tt class='parameter'>html_errors</tt></i> </a></li> <li class='member'><a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.xmlrpc-errors' class='link'>Directive <i><tt class='parameter'>xmlrpc_errors</tt></i> </a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ErrorException::__construct" value="<div id='errorexception.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/errorexception.construct.php'>ErrorException::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ErrorException::__construct</span> &amp;mdash; <span class='dc-title'>Construct the exception</span></p> </div> <a name='errorexception.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><b>ErrorException::__construct</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$code</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$severity</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$lineno</tt></span> ]]]]] )</div> <p class='para rdfs-comment'> Constructs the Exception. </p> </div> <a name='errorexception.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The Exception message to throw. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>code</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The Exception code. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>severity</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The severity level of the exception. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename where the exception is thrown. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>lineno</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The line number where the exception is thrown. </p> </dd> </dl> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ErrorException::getSeverity" value="<div id='errorexception.getseverity' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/errorexception.getseverity.php'>ErrorException::getSeverity</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ErrorException::getSeverity</span> &amp;mdash; <span class='dc-title'>Gets the exception severity</span></p> </div> <a name='errorexception.getseverity.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ErrorException::getSeverity</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the severity of the exception. </p> </div> <a name='errorexception.getseverity.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='errorexception.getseverity.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the severity level of the exception. </p> </div> <a name='errorexception.getseverity.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ErrorException::getSeverity()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ErrorException</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Exception&amp;nbsp;message'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>75</span><span style='color: #007700'>);<br />}&amp;nbsp;catch(</span><span style='color: #0000BB'>ErrorException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;exception&amp;nbsp;severity&amp;nbsp;is:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getSeverity</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> This exception severity is: 75 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ErrorException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.errorexception.php'>ErrorException</a></h1> <div class='partintro'> <div id='errorexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> An Error Exception. </p> </div> <div id='errorexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ErrorException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ErrorException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>int</span> <var class='varname'><a href='http://www.php.net/manual/en/class.errorexception.php#errorexception.props.severity'>$severity</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><a href='http://www.php.net/manual/en/errorexception.construct.php' class='function'>__construct</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$code</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$severity</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$lineno</tt></span> ]]]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/errorexception.getseverity.php' class='function'>getSeverity</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='errorexception.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='errorexception.props.severity' class='varlistentry'> <span class='term'><var class='varname'>severity</var></span> </dt><dd class='listitem'> <p class='para'>The severity of the exception</p> </dd> </dl> </div> <div id='errorexception.examples' class='section'> <h2 class='title'>Examples</h2> <p class='para'> </p><div class='example'> <p><b>Example #1 Use <a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function'>set_error_handler()</a> to change error messages into ErrorException.</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>exception_error_handler</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errfile</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errline&amp;nbsp;</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ErrorException</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errfile</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errline</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>set_error_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'exception_error_handler'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Trigger&amp;nbsp;exception&amp;nbsp;*/<br /></span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Fatal error: Uncaught exception &amp;#039;ErrorException&amp;#039; with message &amp;#039;Wrong parameter count for strpos()&amp;#039; in /home/bjori/tmp/ex.php:8 Stack trace: #0 [internal function]: exception_error_handler(2, &amp;#039;Wrong parameter...&amp;#039;, &amp;#039;/home/bjori/php...&amp;#039;, 8, Array) #1 /home/bjori/php/cleandocs/test.php(8): strpos() #2 {main} thrown in /home/bjori/tmp/ex.php on line 8 </pre></div> </div> </div><p> </p> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/errorexception.construct.php'>ErrorException::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct the exception</li><li><a href='http://www.php.net/manual/en/errorexception.getseverity.php'>ErrorException::getSeverity</a> &amp;acirc;&amp;#128;&amp;#148; Gets the exception severity</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ereg_replace" value="<div id='function.ereg-replace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ereg-replace.php'>ereg_replace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ereg_replace</span> &amp;mdash; <span class='dc-title'>Replace regular expression</span></p> </div> <a name='function.ereg-replace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ereg_replace</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$replacement</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='simpara'> This function scans <i><tt class='parameter'>string</tt></i> for matches to <i><tt class='parameter'>pattern</tt></i> , then replaces the matched text with <i><tt class='parameter'>replacement</tt></i> . </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.ereg-replace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A POSIX extended regular expression. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replacement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>pattern</tt></i> contains parenthesized substrings, <i><tt class='parameter'>replacement</tt></i> may contain substrings of the form <i>\\<span class='replaceable'>digit</span></i>, which will be replaced by the text matching the digit&amp;#039;th parenthesized substring; <i>\\0</i> will produce the entire contents of string. Up to nine substrings may be used. Parentheses may be nested, in which case they are counted by the opening parenthesis. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.ereg-replace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The modified string is returned. If no matches are found in <i><tt class='parameter'>string</tt></i> , then it will be returned unchanged. </p> </div> <a name='function.ereg-replace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> For example, the following code snippet prints &amp;quot;This was a test&amp;quot; three times: </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ereg_replace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;is'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;was'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>ereg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'(&amp;nbsp;)is'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\\1was'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>ereg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'((&amp;nbsp;)is)'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\\2was'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> One thing to take note of is that if you use an integer value as the <i><tt class='parameter'>replacement</tt></i> parameter, you may not get the results you expect. This is because <b>ereg_replace()</b> will interpret the number as the ordinal value of a character, and apply that. For instance: </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>ereg_replace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;This&amp;nbsp;will&amp;nbsp;not&amp;nbsp;work&amp;nbsp;as&amp;nbsp;expected.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$num&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;string&amp;nbsp;has&amp;nbsp;four&amp;nbsp;words.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ereg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Output:&amp;nbsp;'This&amp;nbsp;string&amp;nbsp;has&amp;nbsp;&amp;nbsp;&amp;nbsp;words.'&amp;nbsp;*/<br /><br />/*&amp;nbsp;This&amp;nbsp;will&amp;nbsp;work.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$num&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'4'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;string&amp;nbsp;has&amp;nbsp;four&amp;nbsp;words.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ereg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Output:&amp;nbsp;'This&amp;nbsp;string&amp;nbsp;has&amp;nbsp;4&amp;nbsp;words.'&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Replace URLs with links</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ereg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[[:alpha:]]+://[^&amp;lt;&amp;gt;[:space:]]+[[:alnum:]/]'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href=\'\\0\'&amp;gt;\\0&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ereg-replace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> <div class='tip'><b class='tip'>Tip</b> <p class='para'> <a href='http://www.php.net/manual/en/function.preg-replace.php' class='function'>preg_replace()</a>, which uses a Perl-compatible regular expression syntax, is often a faster alternative to <b>ereg_replace()</b>. </p> </div> </div> <a name='function.ereg-replace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ereg.php' class='function' rel='rdfs-seeAlso'>ereg()</a> - Regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.eregi.php' class='function' rel='rdfs-seeAlso'>eregi()</a> - Case insensitive regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.eregi-replace.php' class='function' rel='rdfs-seeAlso'>eregi_replace()</a> - Replace regular expression case insensitive</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-replace.php' class='function' rel='rdfs-seeAlso'>str_replace()</a> - Replace all occurrences of the search string with the replacement string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="eregi_replace" value="<div id='function.eregi-replace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.eregi-replace.php'>eregi_replace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>eregi_replace</span> &amp;mdash; <span class='dc-title'>Replace regular expression case insensitive</span></p> </div> <a name='function.eregi-replace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>eregi_replace</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$replacement</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> This function is identical to <a href='http://www.php.net/manual/en/function.ereg-replace.php' class='function'>ereg_replace()</a> except that this ignores case distinction when matching alphabetic characters. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.eregi-replace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A POSIX extended regular expression. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replacement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>pattern</tt></i> contains parenthesized substrings, <i><tt class='parameter'>replacement</tt></i> may contain substrings of the form <i>\\<span class='replaceable'>digit</span></i>, which will be replaced by the text matching the digit&amp;#039;th parenthesized substring; <i>\\0</i> will produce the entire contents of string. Up to nine substrings may be used. Parentheses may be nested, in which case they are counted by the opening parenthesis. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.eregi-replace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The modified string is returned. If no matches are found in <i><tt class='parameter'>string</tt></i> , then it will be returned unchanged. </p> </div> <a name='function.eregi-replace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Highlight search results</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$pattern&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'(&amp;gt;[^&amp;lt;]*)('</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>quotemeta</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_GET</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'search'</span><span style='color: #007700'>])&amp;nbsp;.</span><span style='color: #DD0000'>')'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$replacement&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\\1&amp;lt;span&amp;nbsp;class='search'&amp;gt;\\2&amp;lt;/span&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$body&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>eregi_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pattern</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replacement</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$body</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.eregi-replace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> </div> <a name='function.eregi-replace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ereg.php' class='function' rel='rdfs-seeAlso'>ereg()</a> - Regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.eregi.php' class='function' rel='rdfs-seeAlso'>eregi()</a> - Case insensitive regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.ereg-replace.php' class='function' rel='rdfs-seeAlso'>ereg_replace()</a> - Replace regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="eregi" value="<div id='function.eregi' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.eregi.php'>eregi</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>eregi</span> &amp;mdash; <span class='dc-title'>Case insensitive regular expression match</span></p> </div> <a name='function.eregi.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>eregi</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$regs</tt></span> ] )</div> <p class='para rdfs-comment'> This function is identical to <a href='http://www.php.net/manual/en/function.ereg.php' class='function'>ereg()</a> except that it ignores case distinction when matching alphabetic characters. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.eregi.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Case insensitive regular expression. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>regs</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If matches are found for parenthesized substrings of <i><tt class='parameter'>pattern</tt></i> and the function is called with the third argument <i><tt class='parameter'>regs</tt></i> , the matches will be stored in the elements of the array <i><tt class='parameter'>regs</tt></i> . </p> <p class='para'> $regs[1] will contain the substring which starts at the first left parenthesis; $regs[2] will contain the substring starting at the second, and so on. $regs[0] will contain a copy of the complete string matched. </p> </dd> </dl> <p> </p> </div> <a name='function.eregi.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the matched string if a match for <i><tt class='parameter'>pattern</tt></i> was found in <i><tt class='parameter'>string</tt></i> , or <b><tt class='constant'>FALSE</tt></b> if no matches were found or an error occurred. </p> <p class='para'> If the optional parameter <i><tt class='parameter'>regs</tt></i> was not passed or the length of the matched string is 0, this function returns 1. </p> </div> <a name='function.eregi.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>eregi()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'XYZ'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>eregi</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'z'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #0000BB'>$string</span><span style='color: #DD0000'>'&amp;nbsp;contains&amp;nbsp;a&amp;nbsp;'z'&amp;nbsp;or&amp;nbsp;'Z'!'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.eregi.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> </div> <a name='function.eregi.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ereg.php' class='function' rel='rdfs-seeAlso'>ereg()</a> - Regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.ereg-replace.php' class='function' rel='rdfs-seeAlso'>ereg_replace()</a> - Replace regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.eregi-replace.php' class='function' rel='rdfs-seeAlso'>eregi_replace()</a> - Replace regular expression case insensitive</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripos.php' class='function' rel='rdfs-seeAlso'>stripos()</a> - Find position of first occurrence of a case-insensitive string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ereg" value="<div id='function.ereg' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ereg.php'>ereg</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ereg</span> &amp;mdash; <span class='dc-title'>Regular expression match</span></p> </div> <a name='function.ereg.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ereg</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$regs</tt></span> ] )</div> <p class='simpara'> Searches a <i><tt class='parameter'>string</tt></i> for matches to the regular expression given in <i><tt class='parameter'>pattern</tt></i> in a case-sensitive way. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.ereg.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Case sensitive regular expression. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>regs</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If matches are found for parenthesized substrings of <i><tt class='parameter'>pattern</tt></i> and the function is called with the third argument <i><tt class='parameter'>regs</tt></i> , the matches will be stored in the elements of the array <i><tt class='parameter'>regs</tt></i> . </p> <p class='para'> <var class='varname'>$regs[1]</var> will contain the substring which starts at the first left parenthesis; <var class='varname'>$regs[2]</var> will contain the substring starting at the second, and so on. <var class='varname'>$regs[0]</var> will contain a copy of the complete string matched. </p> </dd> </dl> <p> </p> </div> <a name='function.ereg.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the matched string if a match for <i><tt class='parameter'>pattern</tt></i> was found in <i><tt class='parameter'>string</tt></i> , or <b><tt class='constant'>FALSE</tt></b> if no matches were found or an error occurred. </p> <p class='para'> If the optional parameter <i><tt class='parameter'>regs</tt></i> was not passed or the length of the matched string is 0, this function returns 1. </p> </div> <a name='function.ereg.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> Up to (and including) PHP 4.1.0 <var class='varname'>$regs</var> will be filled with exactly ten elements, even though more or fewer than ten parenthesized substrings may actually have matched. This has no effect on <b>ereg()</b>&amp;#039;s ability to match more substrings. If no matches are found, <i>$regs</i> will not be altered by <b>ereg()</b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ereg.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ereg()</b> example</b></p> <div class='example-contents para'><p> The following code snippet takes a date in ISO format (YYYY-MM-DD) and prints it in DD.MM.YYYY format: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>ereg&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$date</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$regs</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$regs</span><span style='color: #007700'>[</span><span style='color: #0000BB'>3</span><span style='color: #007700'>]</span><span style='color: #DD0000'>.</span><span style='color: #0000BB'>$regs</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]</span><span style='color: #DD0000'>.</span><span style='color: #0000BB'>$regs</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Invalid&amp;nbsp;date&amp;nbsp;format:&amp;nbsp;</span><span style='color: #0000BB'>$date</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ereg.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>, which uses a Perl-compatible regular expression syntax, is often a faster alternative to <b>ereg()</b>. <br /> </p></blockquote> </div> <a name='function.ereg.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.eregi.php' class='function' rel='rdfs-seeAlso'>eregi()</a> - Case insensitive regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.ereg-replace.php' class='function' rel='rdfs-seeAlso'>ereg_replace()</a> - Replace regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.eregi-replace.php' class='function' rel='rdfs-seeAlso'>eregi_replace()</a> - Replace regular expression case insensitive</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.quotemeta.php' class='function' rel='rdfs-seeAlso'>quotemeta()</a> - Quote meta characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="end" value="<div id='function.end' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.end.php'>end</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>end</span> &amp;mdash; <span class='dc-title'>Set the internal pointer of an array to its last element</span></p> </div> <a name='function.end.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>end</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>end()</b> advances <i><tt class='parameter'>array</tt></i> &amp;#039;s internal pointer to the last element, and returns its value. </p> </div> <a name='function.end.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. This array is passed by reference because it is modified by the function. This means you must pass it a real variable and not a function returning an array because only actual variables may be passed by reference. </p> </dd> </dl> <p> </p> </div> <a name='function.end.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the value of the last element or <b><tt class='constant'>FALSE</tt></b> for empty array. </p> </div> <a name='function.end.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>end()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cranberry'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>end</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;cranberry<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.end.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.current.php' class='function' rel='rdfs-seeAlso'>current()</a> - Return the current element in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> <li class='member'><a href='http://www.php.net/manual/en/function.prev.php' class='function' rel='rdfs-seeAlso'>prev()</a> - Rewind the internal array pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.reset.php' class='function' rel='rdfs-seeAlso'>reset()</a> - Set the internal pointer of an array to its first element</li> <li class='member'><a href='http://www.php.net/manual/en/function.next.php' class='function' rel='rdfs-seeAlso'>next()</a> - Advance the internal array pointer of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator::valid" value="<div id='emptyiterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/emptyiterator.valid.php'>EmptyIterator::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>EmptyIterator::valid</span> &amp;mdash; <span class='dc-title'>The valid() method</span></p> </div> <a name='emptyiterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>EmptyIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> The EmptyIterator valid() method. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='emptyiterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='emptyiterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>FALSE</tt></b> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator::rewind" value="<div id='emptyiterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/emptyiterator.rewind.php'>EmptyIterator::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>EmptyIterator::rewind</span> &amp;mdash; <span class='dc-title'>The rewind() method</span></p> </div> <a name='emptyiterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>EmptyIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> No operation, nothing to do. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='emptyiterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='emptyiterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator::next" value="<div id='emptyiterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/emptyiterator.next.php'>EmptyIterator::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>EmptyIterator::next</span> &amp;mdash; <span class='dc-title'>The next() method</span></p> </div> <a name='emptyiterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>EmptyIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> No operation, nothing to do. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='emptyiterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='emptyiterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator::key" value="<div id='emptyiterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/emptyiterator.key.php'>EmptyIterator::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>EmptyIterator::key</span> &amp;mdash; <span class='dc-title'>The key() method</span></p> </div> <a name='emptyiterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>EmptyIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function must not be called. It throws an exception upon access. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='emptyiterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='emptyiterator.key.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws an <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> if called. </p> </div> <a name='emptyiterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator::current" value="<div id='emptyiterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/emptyiterator.current.php'>EmptyIterator::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>EmptyIterator::current</span> &amp;mdash; <span class='dc-title'>The current() method</span></p> </div> <a name='emptyiterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>EmptyIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function must not be called. It throws an exception upon access. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='emptyiterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='emptyiterator.current.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws an <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> if called. </p> </div> <a name='emptyiterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="EmptyIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.emptyiterator.php'>The EmptyIterator class</a></h1> <div class='partintro'> <div id='emptyiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The EmptyIterator class for an empty iterator. </p> </div> <div id='emptyiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>EmptyIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>EmptyIterator</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/emptyiterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/emptyiterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/emptyiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/emptyiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/emptyiterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/emptyiterator.current.php'>EmptyIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; The current() method</li><li><a href='http://www.php.net/manual/en/emptyiterator.key.php'>EmptyIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; The key() method</li><li><a href='http://www.php.net/manual/en/emptyiterator.next.php'>EmptyIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; The next() method</li><li><a href='http://www.php.net/manual/en/emptyiterator.rewind.php'>EmptyIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; The rewind() method</li><li><a href='http://www.php.net/manual/en/emptyiterator.valid.php'>EmptyIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; The valid() method</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="each" value="<div id='function.each' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.each.php'>each</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>each</span> &amp;mdash; <span class='dc-title'>Return the current key and value pair from an array and advance the array cursor</span></p> </div> <a name='function.each.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>each</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> Return the current key and value pair from an array and advance the array cursor. </p> <p class='para'> After <b>each()</b> has executed, the array cursor will be left on the next element of the array, or past the last element if it hits the end of the array. You have to use <a href='http://www.php.net/manual/en/function.reset.php' class='function'>reset()</a> if you want to traverse the array again using each. </p> </div> <a name='function.each.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.each.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current key and value pair from the array <i><tt class='parameter'>array</tt></i> . This pair is returned in a four-element array, with the keys <i>0</i>, <i>1</i>, <i>key</i>, and <i>value</i>. Elements <i>0</i> and <i>key</i> contain the key name of the array element, and <i>1</i> and <i>value</i> contain the data. </p> <p class='para'> If the internal pointer for the array points past the end of the array contents, <b>each()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.each.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>each()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'fred'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'jussi'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'jouni'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'egon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'marliese'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>each</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> <var class='varname'>$bar</var> now contains the following key/value pairs: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [1] =&amp;gt; bob [value] =&amp;gt; bob [0] =&amp;gt; 0 [key] =&amp;gt; 0 ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'Robert'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'Bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Seppo'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'Sepi'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>each</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'> <var class='varname'>$bar</var> now contains the following key/value pairs: </p> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [1] =&amp;gt; Bob [value] =&amp;gt; Bob [0] =&amp;gt; Robert [key] =&amp;gt; Robert ) </pre></div> </div> </div><p> </p> <p class='para'> <b>each()</b> is typically used in conjunction with <a href='http://www.php.net/manual/en/function.list.php' class='function'>list()</a> to traverse an array, here&amp;#039;s an example: </p><div class='example'> <p><b>Example #2 Traversing an array with <b>each()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruit&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'cranberry'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>reset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>);<br />while&amp;nbsp;(list(</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>each</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> a =&amp;gt; apple b =&amp;gt; banana c =&amp;gt; cranberry </pre></div> </div> </div><p> </p> <div class='caution'><b class='caution'>Caution</b> <p class='para'> Because assigning an array to another variable resets the original arrays pointer, our example above would cause an endless loop had we assigned <var class='varname'>$fruit</var> to another variable inside the loop. </p> </div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> <b>each()</b> will also accept objects, but may return unexpected results. Its therefore not recommended to iterate though object properties with <b>each()</b>. </p> </div> </div> <a name='function.each.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.key.php' class='function' rel='rdfs-seeAlso'>key()</a> - Fetch a key from an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.list.php' class='function' rel='rdfs-seeAlso'>list()</a> - Assign variables as if they were an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.current.php' class='function' rel='rdfs-seeAlso'>current()</a> - Return the current element in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.reset.php' class='function' rel='rdfs-seeAlso'>reset()</a> - Set the internal pointer of an array to its first element</li> <li class='member'><a href='http://www.php.net/manual/en/function.next.php' class='function' rel='rdfs-seeAlso'>next()</a> - Advance the internal array pointer of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.prev.php' class='function' rel='rdfs-seeAlso'>prev()</a> - Rewind the internal array pointer</li> <li class='member'><a href='http://www.php.net/manual/en/control-structures.foreach.php' class='link'>foreach</a></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.iterations.php' class='link'>Object Iteration</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="doubleval" value="<div id='function.doubleval' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.doubleval.php'>doubleval</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>doubleval</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.floatval.php' class='function'>floatval()</a></span></p> </div> <a name='function.doubleval.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.floatval.php' class='function'>floatval()</a>. </p> </div> <a name='function.doubleval.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> <b>doubleval()</b> became an alias of <a href='http://www.php.net/manual/en/function.floatval.php' class='function'>floatval()</a>. Before this time, only <b>doubleval()</b> existed. </td> </tr> </tbody> </table> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DomainException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.domainexception.php'>The DomainException class</a></h1> <div class='partintro'> <div id='domainexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> A domain exception </p> </div> <div id='domainexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>DomainException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>DomainException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.logicexception.php' class='classname'>LogicException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="dl" value="<div id='function.dl' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.dl.php'>dl</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>dl</span> &amp;mdash; <span class='dc-title'>Loads a PHP extension at runtime</span></p> </div> <a name='function.dl.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>dl</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$library</tt></span> )</div> <p class='para rdfs-comment'> Loads the PHP extension given by the parameter <i><tt class='parameter'>library</tt></i> . </p> <p class='para'> Use <a href='http://www.php.net/manual/en/function.extension-loaded.php' class='function'>extension_loaded()</a> to test whether a given extension is already available or not. This works on both built-in extensions and dynamically loaded ones (either through <var class='filename'>php.ini</var> or <b>dl()</b>). </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.dl.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>library</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This parameter is <em class='emphasis'>only</em> the filename of the extension to load which also depends on your platform. For example, the <a href='http://www.php.net/manual/en/ref.sockets.php' class='link'>sockets</a> extension (if compiled as a shared module, not the default!) would be called <var class='filename'>sockets.so</var> on Unix platforms whereas it is called <var class='filename'>php_sockets.dll</var> on the Windows platform. </p> <p class='para'> The directory where the extension is loaded from depends on your platform: </p> <p class='para'> Windows - If not explicitly set in the <var class='filename'>php.ini</var>, the extension is loaded from <var class='filename'>c:\php4\extensions\</var> by default. </p> <p class='para'> Unix - If not explicitly set in the <var class='filename'>php.ini</var>, the default extension directory depends on </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> whether PHP has been built with <i>--enable-debug</i> or not </span> </li> <li class='listitem'> <span class='simpara'> whether PHP has been built with (experimental) ZTS (Zend Thread Safety) support or not </span> </li> <li class='listitem'> <span class='simpara'> the current internal <i>ZEND_MODULE_API_NO</i> (Zend internal module API number, which is basically the date on which a major module API change happened, e.g. <i>20010901</i>) </span> </li> </ul><p> Taking into account the above, the directory then defaults to <i>&amp;lt;install-dir&amp;gt;/lib/php/extensions/ &amp;lt;debug-or-not&amp;gt;-&amp;lt;zts-or-not&amp;gt;-ZEND_MODULE_API_NO</i>, e.g. <var class='filename'>/usr/local/php/lib/php/extensions/debug-non-zts-20010901</var> or <var class='filename'>/usr/local/php/lib/php/extensions/no-debug-zts-20010901</var>. </p> </dd> </dl> <p> </p> </div> <a name='function.dl.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. If the functionality of loading modules is not available (see Note) or has been disabled (either by turning it off <i>enable_dl</i> or by enabling <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a> in <var class='filename'>php.ini</var>) an <b><tt class='constant'>E_ERROR</tt></b> is emitted and execution is stopped. If <b>dl()</b> fails because the specified library couldn&amp;#039;t be loaded, in addition to <b><tt class='constant'>FALSE</tt></b> an <b><tt class='constant'>E_WARNING</tt></b> message is emitted. </p> </div> <a name='function.dl.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>dl()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Example&amp;nbsp;loading&amp;nbsp;an&amp;nbsp;extension&amp;nbsp;based&amp;nbsp;on&amp;nbsp;OS<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>extension_loaded</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>strtoupper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_OS</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>))&amp;nbsp;===&amp;nbsp;</span><span style='color: #DD0000'>'WIN'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>dl</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'php_sqlite.dll'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>dl</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite.so'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Or,&amp;nbsp;the&amp;nbsp;PHP_SHLIB_SUFFIX&amp;nbsp;constant&amp;nbsp;is&amp;nbsp;available&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>extension_loaded</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prefix&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;(</span><span style='color: #0000BB'>PHP_SHLIB_SUFFIX&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #DD0000'>'dll'</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'php_'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>dl</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prefix&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'sqlite.'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_SHLIB_SUFFIX</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.dl.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function now throws an E_DEPRECATED notice on all sapi&amp;#039;s except for CLI, CGI and Embed. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.dl.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>dl()</b> is <em class='emphasis'>not</em> supported in multithreaded Web servers. Use the <i>extensions</i> statement in your <var class='filename'>php.ini</var> when operating under such an environment. However, the <i>CGI</i> and <i>CLI</i> build are <em class='emphasis'>not</em> affected ! <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: As of PHP 5, the <b>dl()</b> function is deprecated in every SAPI <em class='emphasis'>except</em> <acronym title='Command Line Interpreter/Interface'>CLI</acronym>. Use <a href='http://www.php.net/manual/en/ini.core.php#ini.extension' class='link'>Extension Loading Directives</a> method instead. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Since PHP 6 this function is disabled in all SAPIs, except CLI, CGI and embed. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <b>dl()</b> is case sensitive on Unix platforms. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is disabled when PHP is running in <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a>.</span></p></blockquote> </div> <a name='function.dl.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/ini.core.php#ini.extension' class='link'>Extension Loading Directives</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.extension-loaded.php' class='function' rel='rdfs-seeAlso'>extension_loaded()</a> - Find out whether an extension is loaded</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="disk_total_space" value="<div id='function.disk-total-space' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.disk-total-space.php'>disk_total_space</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>disk_total_space</span> &amp;mdash; <span class='dc-title'>Returns the total size of a directory</span></p> </div> <a name='function.disk-total-space.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>disk_total_space</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$directory</tt></span> )</div> <p class='para rdfs-comment'> Given a string containing a directory, this function will return the total number of bytes on the corresponding filesystem or disk partition. </p> </div> <a name='function.disk-total-space.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>directory</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A directory of the filesystem or disk partition. </p> </dd> </dl> <p> </p> </div> <a name='function.disk-total-space.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the total number of bytes as a float. </p> </div> <a name='function.disk-total-space.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>disk_total_space()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;$df&amp;nbsp;contains&amp;nbsp;the&amp;nbsp;total&amp;nbsp;number&amp;nbsp;of&amp;nbsp;bytes&amp;nbsp;available&amp;nbsp;on&amp;nbsp;'/'<br /></span><span style='color: #0000BB'>$df&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>disk_total_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;On&amp;nbsp;Windows:<br /></span><span style='color: #0000BB'>disk_total_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'C:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>disk_total_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.disk-total-space.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> </div> <a name='function.disk-total-space.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.disk-free-space.php' class='function' rel='rdfs-seeAlso'>disk_free_space()</a> - Returns available space in directory</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="disk_free_space" value="<div id='function.disk-free-space' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.disk-free-space.php'>disk_free_space</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>disk_free_space</span> &amp;mdash; <span class='dc-title'>Returns available space in directory</span></p> </div> <a name='function.disk-free-space.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>disk_free_space</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$directory</tt></span> )</div> <p class='para rdfs-comment'> Given a string containing a directory, this function will return the number of bytes available on the corresponding filesystem or disk partition. </p> </div> <a name='function.disk-free-space.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>directory</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A directory of the filesystem or disk partition. </p> <blockquote><p><b class='note'>Note</b>: Given a file name instead of a directory, the behaviour of the function is unspecified and may differ between operating systems and PHP versions. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.disk-free-space.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of available bytes as a float. </p> </div> <a name='function.disk-free-space.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>disk_free_space()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;$df&amp;nbsp;contains&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;bytes&amp;nbsp;available&amp;nbsp;on&amp;nbsp;'/'<br /></span><span style='color: #0000BB'>$df&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>disk_free_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;On&amp;nbsp;Windows:<br /></span><span style='color: #0000BB'>disk_free_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'C:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>disk_free_space</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.disk-free-space.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> </div> <a name='function.disk-free-space.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.disk-total-space.php' class='function' rel='rdfs-seeAlso'>disk_total_space()</a> - Returns the total size of a directory</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="diskfreespace" value="<div id='function.diskfreespace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.diskfreespace.php'>diskfreespace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>diskfreespace</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.disk-free-space.php' class='function'>disk_free_space()</a></span></p> </div> <a name='function.diskfreespace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.disk-free-space.php' class='function'>disk_free_space()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="dirname" value="<div id='function.dirname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.dirname.php'>dirname</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>dirname</span> &amp;mdash; <span class='dc-title'>Returns directory name component of path</span></p> </div> <a name='function.dirname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>dirname</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> )</div> <p class='para rdfs-comment'> Given a string containing a path to a file, this function will return the name of the directory. </p> </div> <a name='function.dirname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A path. </p> <p class='para'> On Windows, both slash (<i>/</i>) and backslash (<i>\</i>) are used as directory separator character. In other environments, it is the forward slash (<i>/</i>). </p> </dd> </dl> <p> </p> </div> <a name='function.dirname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the directory. If there are no slashes in <i><tt class='parameter'>path</tt></i> , a dot (&amp;#039;<i>.</i>&amp;#039;) is returned, indicating the current directory. Otherwise, the returned string is <i><tt class='parameter'>path</tt></i> with any trailing <i>/component</i> removed. </p> </div> <a name='function.dirname.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> <b>dirname()</b> is now binary safe </td> </tr> <tr valign='middle'> <td align='left'>4.0.3</td> <td align='left'> <b>dirname()</b> was fixed to be POSIX-compliant. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.dirname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>dirname()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$file&amp;nbsp;is&amp;nbsp;set&amp;nbsp;to&amp;nbsp;'/etc'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.dirname.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Since PHP 4.3.0, you will often get a slash or a dot back from <b>dirname()</b> in situations where the older functionality would have given you the empty string. <br /> </p></blockquote> <p class='para'> Check the following change example: </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//before&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c:/'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returned&amp;nbsp;'.'<br /><br />//after&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c:/x'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'c:\'<br /></span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c:/Temp/x'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'c:/Temp'<br /></span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/x'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'\'<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.dirname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.basename.php' class='function' rel='rdfs-seeAlso'>basename()</a> - Returns filename component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> <li class='member'><a href='http://www.php.net/manual/en/function.realpath.php' class='function' rel='rdfs-seeAlso'>realpath()</a> - Returns canonicalized absolute pathname</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::__toString" value="<div id='directoryiterator.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.tostring.php'>DirectoryIterator::__toString</a></h1> <p class='verinfo'>(No version information available, might only be in SVN)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::__toString</span> &amp;mdash; <span class='dc-title'>Get file name as a string</span></p> </div> <a name='directoryiterator.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DirectoryIterator::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the file name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the file name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.tostring.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::__toString</b></span> example</b></p> <div class='example-contents para'><p> This example will list the contents of the directory containing the script. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> . .. apple.jpg banana.jpg index.php pear.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getfilename.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getFilename</a> - Return file name of current DirectoryIterator item.</span></li> <li class='member'>The <a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a> magic method</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::__construct" value="<div id='directoryiterator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.construct.php'>DirectoryIterator::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a new directory iterator from a path</span></p> </div> <a name='directoryiterator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='methodname'><b>DirectoryIterator::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> )</div> <p class='para rdfs-comment'> Constructs a new directory iterator from a path. </p> </div> <a name='directoryiterator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The path of the directory to traverse. </p> </dd> </dl> <p> </p> </div> <a name='directoryiterator.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws an <a href='http://www.php.net/manual/en/class.unexpectedvalueexception.php' class='classname'>UnexpectedValueException</a> if the <i><tt class='parameter'>path</tt></i> cannot be opened. </p> </div> <a name='directoryiterator.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::__construct</b></span> example</b></p> <div class='example-contents para'><p> This example will list the contents of the directory containing the script. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDot</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>());<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='directoryiterator.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a></li> <li class='member'><a href='http://www.php.net/manual/en/class.iterator.php' class='classname'>Iterator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::valid" value="<div id='directoryiterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.valid.php'>DirectoryIterator::valid</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether current DirectoryIterator position is a valid file</span></p> </div> <a name='directoryiterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>DirectoryIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Check whether current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> position is a valid file. </p> </div> <a name='directoryiterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the position is valid, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='directoryiterator.valid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::valid</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Loop&amp;nbsp;to&amp;nbsp;end&amp;nbsp;of&amp;nbsp;iterator<br /></span><span style='color: #007700'>while(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;FALSE<br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;<br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;TRUE<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='directoryiterator.valid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::current</a> - Return the current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::key</a> - Return the key for the current DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::next</a> - Move forward to next DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::rewind</a> - Rewind the DirectoryIterator back to the start</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.valid.php' class='function' rel='rdfs-seeAlso'>Iterator::valid</a> - Checks if current position is valid</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::rewind" value="<div id='directoryiterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.rewind.php'>DirectoryIterator::rewind</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the DirectoryIterator back to the start</span></p> </div> <a name='directoryiterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>DirectoryIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Rewind the <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> back to the start. </p> </div> <a name='directoryiterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='directoryiterator.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>DirectoryIterator::rewind</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//1<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//rewinding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;beginning<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//0<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='directoryiterator.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::current</a> - Return the current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::key</a> - Return the key for the current DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::next</a> - Move forward to next DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::valid</a> - Check whether current DirectoryIterator position is a valid file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.rewind.php' class='function' rel='rdfs-seeAlso'>Iterator::rewind</a> - Rewind the Iterator to the first element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::next" value="<div id='directoryiterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.next.php'>DirectoryIterator::next</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::next</span> &amp;mdash; <span class='dc-title'>Move forward to next DirectoryIterator item</span></p> </div> <a name='directoryiterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>DirectoryIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Move forward to the next <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='directoryiterator.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>DirectoryIterator::next</b></span> example</b></p> <div class='example-contents para'><p> List the contents of a directory using a while loop. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />while(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> . .. apple.jpg banana.jpg index.php pear.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::current</a> - Return the current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::key</a> - Return the key for the current DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::rewind</a> - Rewind the DirectoryIterator back to the start</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::valid</a> - Check whether current DirectoryIterator position is a valid file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.next.php' class='function' rel='rdfs-seeAlso'>Iterator::next</a> - Move forward to next element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::key" value="<div id='directoryiterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.key.php'>DirectoryIterator::key</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::key</span> &amp;mdash; <span class='dc-title'>Return the key for the current DirectoryIterator item</span></p> </div> <a name='directoryiterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DirectoryIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the key for the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The key for the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::key</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDot</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 =&amp;gt; apple.jpg 1 =&amp;gt; banana.jpg 2 =&amp;gt; index.php 3 =&amp;gt; pear.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::current</a> - Return the current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::next</a> - Move forward to next DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::rewind</a> - Rewind the DirectoryIterator back to the start</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::valid</a> - Check whether current DirectoryIterator position is a valid file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.key.php' class='function' rel='rdfs-seeAlso'>Iterator::key</a> - Return the key of the current element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::isDot" value="<div id='directoryiterator.isdot' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.isdot.php'>DirectoryIterator::isDot</a></h1> <p class='verinfo'>(PHP 5.1.0)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::isDot</span> &amp;mdash; <span class='dc-title'>Determine if current DirectoryIterator item is &amp;#039;.&amp;#039; or &amp;#039;..&amp;#039;</span></p> </div> <a name='directoryiterator.isdot.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>DirectoryIterator::isDot</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Determines if the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item is a directory and either <i>.</i> or <i>..</i>. </p> </div> <a name='directoryiterator.isdot.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.isdot.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the entry is <i>.</i> or <i>..</i>, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='directoryiterator.isdot.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::isDot</b></span> example</b></p> <div class='example-contents para'><p> This example will list all files, omitting the <i>.</i> and <i>..</i> entries. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDot</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple.jpg banana.jpg example.php pears.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.isdot.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.gettype.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getType</a> - Determine the type of the current DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isdir.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::isDir</a> - Determine if current DirectoryIterator item is a directory</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isfile.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::isFile</a> - Determine if current DirectoryIterator item is a regular file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.islink.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::isLink</a> - Determine if current DirectoryIterator item is a symbolic link</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::getFilename" value="<div id='directoryiterator.getfilename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.getfilename.php'>DirectoryIterator::getFilename</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::getFilename</span> &amp;mdash; <span class='dc-title'>Return file name of current DirectoryIterator item.</span></p> </div> <a name='directoryiterator.getfilename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DirectoryIterator::getFilename</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the file name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.getfilename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.getfilename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the file name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.getfilename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::getFilename</b></span> example</b></p> <div class='example-contents para'><p> This example will list the contents of the directory containing the script. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> . .. apple.jpg banana.jpg index.php pear.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.getfilename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getbasename.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getBasename</a> - Get base name of current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpath.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getPath</a> - Get path of current Iterator item without filename</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpathname.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getPathname</a> - Return path and file name of current DirectoryIterator item</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::getBasename" value="<div id='directoryiterator.getbasename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.getbasename.php'>DirectoryIterator::getBasename</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::getBasename</span> &amp;mdash; <span class='dc-title'>Get base name of current DirectoryIterator item.</span></p> </div> <a name='directoryiterator.getbasename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DirectoryIterator::getBasename</b></span> ([ <span class='methodparam'> <span class='type'>string</span> <tt class='parameter'>$suffix</tt> </span> ] )</div> <p class='para rdfs-comment'> Get the base name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.getbasename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>suffix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the base name ends in <i><tt class='parameter'>suffix</tt></i> , this will be cut. </p> </dd> </dl> <p> </p> </div> <a name='directoryiterator.getbasename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The base name of the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.getbasename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::getBasename</b></span> example</b></p> <div class='example-contents para'><p> This example will list the full base name and the base name with suffix <i>.jpg</i> removed for the files in the directory containing the script. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFile</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getBasename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getBasename</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'.jpg'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple.jpg apple banana.jpg banana index.php index.php pear.jpg pear </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.getbasename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getfilename.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getFilename</a> - Return file name of current DirectoryIterator item.</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpath.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getPath</a> - Get path of current Iterator item without filename</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpathname.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::getPathname</a> - Return path and file name of current DirectoryIterator item</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.basename.php' class='function' rel='rdfs-seeAlso'>basename()</a> - Returns filename component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator::current" value="<div id='directoryiterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/directoryiterator.current.php'>DirectoryIterator::current</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>DirectoryIterator::current</span> &amp;mdash; <span class='dc-title'>Return the current DirectoryIterator item.</span></p> </div> <a name='directoryiterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.directoryiterator.php' class='type DirectoryIterator'>DirectoryIterator</a></span> <span class='methodname'><b>DirectoryIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='directoryiterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> item. </p> </div> <a name='directoryiterator.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <span class='methodname'><b>DirectoryIterator::current</b></span> example</b></p> <div class='example-contents para'><p> This example will list the contents of the directory containing the script. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DirectoryIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />while(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 =&amp;gt; . 1 =&amp;gt; .. 2 =&amp;gt; apple.jpg 3 =&amp;gt; banana.jpg 4 =&amp;gt; index.php 5 =&amp;gt; pear.jpg </pre></div> </div> </div><p> </p> </div> <a name='directoryiterator.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::key</a> - Return the key for the current DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::next</a> - Move forward to next DirectoryIterator item</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::rewind</a> - Rewind the DirectoryIterator back to the start</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function' rel='rdfs-seeAlso'>DirectoryIterator::valid</a> - Check whether current DirectoryIterator position is a valid file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.current.php' class='function' rel='rdfs-seeAlso'>Iterator::current</a> - Return the current element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DirectoryIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.directoryiterator.php'>The DirectoryIterator class</a></h1> <div class='partintro'> <div id='directoryiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The DirectoryIterator class provides a simple interface for viewing the contents of filesystem directories. </p> </div> <div id='directoryiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>DirectoryIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>DirectoryIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.seekableiterator.php' class='interfacename'>SeekableIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DirectoryIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getatime.php' class='function'>getATime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getbasename.php' class='function'>getBasename</a></span> ([ <span class='methodparam'> <span class='type'>string</span> <tt class='parameter'>$suffix</tt> </span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getctime.php' class='function'>getCTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getfilename.php' class='function'>getFilename</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getgroup.php' class='function'>getGroup</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getinode.php' class='function'>getInode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getmtime.php' class='function'>getMTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getowner.php' class='function'>getOwner</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpath.php' class='function'>getPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpathname.php' class='function'>getPathname</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getperms.php' class='function'>getPerms</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getsize.php' class='function'>getSize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.gettype.php' class='function'>getType</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isdir.php' class='function'>isDir</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isdot.php' class='function'>isDot</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isexecutable.php' class='function'>isExecutable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isfile.php' class='function'>isFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.islink.php' class='function'>isLink</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isreadable.php' class='function'>isReadable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.iswritable.php' class='function'>isWritable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.seek.php' class='function'>seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/directoryiterator.construct.php'>DirectoryIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a new directory iterator from a path</li><li><a href='http://www.php.net/manual/en/directoryiterator.current.php'>DirectoryIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Return the current DirectoryIterator item.</li><li><a href='http://www.php.net/manual/en/directoryiterator.getatime.php'>DirectoryIterator::getATime</a> &amp;acirc;&amp;#128;&amp;#148; Get last access time of the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getbasename.php'>DirectoryIterator::getBasename</a> &amp;acirc;&amp;#128;&amp;#148; Get base name of current DirectoryIterator item.</li><li><a href='http://www.php.net/manual/en/directoryiterator.getctime.php'>DirectoryIterator::getCTime</a> &amp;acirc;&amp;#128;&amp;#148; Get inode change time of the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getfilename.php'>DirectoryIterator::getFilename</a> &amp;acirc;&amp;#128;&amp;#148; Return file name of current DirectoryIterator item.</li><li><a href='http://www.php.net/manual/en/directoryiterator.getgroup.php'>DirectoryIterator::getGroup</a> &amp;acirc;&amp;#128;&amp;#148; Get group for the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getinode.php'>DirectoryIterator::getInode</a> &amp;acirc;&amp;#128;&amp;#148; Get inode for the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getmtime.php'>DirectoryIterator::getMTime</a> &amp;acirc;&amp;#128;&amp;#148; Get last modification time of current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getowner.php'>DirectoryIterator::getOwner</a> &amp;acirc;&amp;#128;&amp;#148; Get owner of current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getpath.php'>DirectoryIterator::getPath</a> &amp;acirc;&amp;#128;&amp;#148; Get path of current Iterator item without filename</li><li><a href='http://www.php.net/manual/en/directoryiterator.getpathname.php'>DirectoryIterator::getPathname</a> &amp;acirc;&amp;#128;&amp;#148; Return path and file name of current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getperms.php'>DirectoryIterator::getPerms</a> &amp;acirc;&amp;#128;&amp;#148; Get the permissions of current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.getsize.php'>DirectoryIterator::getSize</a> &amp;acirc;&amp;#128;&amp;#148; Get size of current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.gettype.php'>DirectoryIterator::getType</a> &amp;acirc;&amp;#128;&amp;#148; Determine the type of the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.isdir.php'>DirectoryIterator::isDir</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item is a directory</li><li><a href='http://www.php.net/manual/en/directoryiterator.isdot.php'>DirectoryIterator::isDot</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item is '.' or '..'</li><li><a href='http://www.php.net/manual/en/directoryiterator.isexecutable.php'>DirectoryIterator::isExecutable</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item is executable</li><li><a href='http://www.php.net/manual/en/directoryiterator.isfile.php'>DirectoryIterator::isFile</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item is a regular file</li><li><a href='http://www.php.net/manual/en/directoryiterator.islink.php'>DirectoryIterator::isLink</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item is a symbolic link</li><li><a href='http://www.php.net/manual/en/directoryiterator.isreadable.php'>DirectoryIterator::isReadable</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item can be read</li><li><a href='http://www.php.net/manual/en/directoryiterator.iswritable.php'>DirectoryIterator::isWritable</a> &amp;acirc;&amp;#128;&amp;#148; Determine if current DirectoryIterator item can be written to</li><li><a href='http://www.php.net/manual/en/directoryiterator.key.php'>DirectoryIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Return the key for the current DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.next.php'>DirectoryIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move forward to next DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.rewind.php'>DirectoryIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the DirectoryIterator back to the start</li><li><a href='http://www.php.net/manual/en/directoryiterator.seek.php'>DirectoryIterator::seek</a> &amp;acirc;&amp;#128;&amp;#148; Seek to a DirectoryIterator item</li><li><a href='http://www.php.net/manual/en/directoryiterator.tostring.php'>DirectoryIterator::__toString</a> &amp;acirc;&amp;#128;&amp;#148; Get file name as a string</li><li><a href='http://www.php.net/manual/en/directoryiterator.valid.php'>DirectoryIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether current DirectoryIterator position is a valid file</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="dir" value="<div id='class.dir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/class.dir.php'>dir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>dir</span> &amp;mdash; <span class='dc-title'>Return an instance of the Directory class</span></p> </div> <a name='class.dir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Directory</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Directory</b> </span> {</div> <div class='fieldsynopsis'> <span class='type'>string</span> <var class='varname'>$path</var> ;</div> <div class='fieldsynopsis'> <span class='type'>resource</span> <var class='varname'>$handle</var> ;</div> <div class='methodsynopsis dc-description'><span class='type'>string</span> <span class='methodname'><b>read</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'><span class='type'>void</span> <span class='methodname'><b>rewind</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'><span class='type'>void</span> <span class='methodname'><b>close</b></span> ( <span class='methodparam'>void</span> )</div> }</div> <p class='para'> A pseudo-object oriented mechanism for reading a directory. The given <i><tt class='parameter'>directory</tt></i> is opened. Two properties are available once the directory has been opened. The handle property can be used with other directory functions such as <a href='http://www.php.net/manual/en/function.readdir.php' class='function'>readdir()</a>, <a href='http://www.php.net/manual/en/function.rewinddir.php' class='function'>rewinddir()</a> and <a href='http://www.php.net/manual/en/function.closedir.php' class='function'>closedir()</a>. The path property is set to path the directory that was opened. Three methods are available: read, rewind and close. </p> </div> <a name='class.dir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>dir()</b> example</b></p> <div class='example-contents para'><p> Please note the fashion in which <b>dir::read()</b>&amp;#039;s return value is checked in the example below. We are explicitly testing whether the return value is identical to (equal to and of the same type as - see <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'> Comparison Operators</a> for more information) <b><tt class='constant'>FALSE</tt></b> since otherwise, any directory entry whose name evaluates to <b><tt class='constant'>FALSE</tt></b> will stop the loop. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>dir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/php5'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Handle:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>handle&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Path:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>path&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$entry&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>read</span><span style='color: #007700'>()))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>close</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Handle: Resource id #2 Path: /etc/php5 . .. apache cgi cli </pre></div> </div> </div><p> </p> </div> <a name='class.dir.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: The order in which directory entries are returned by the read method is system-dependent. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="deg2rad" value="<div id='function.deg2rad' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.deg2rad.php'>deg2rad</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>deg2rad</span> &amp;mdash; <span class='dc-title'> Converts the number in degrees to the radian equivalent </span></p> </div> <a name='function.deg2rad.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>deg2rad</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> This function converts <i><tt class='parameter'>number</tt></i> from degrees to the radian equivalent. </p> </div> <a name='function.deg2rad.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Angular value in degrees </p> </dd> </dl> <p> </p> </div> <a name='function.deg2rad.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The radian equivalent of <i><tt class='parameter'>number</tt></i> </p> </div> <a name='function.deg2rad.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>deg2rad()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>deg2rad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>45</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;0.785398163397<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>deg2rad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>45</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>M_PI_4</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bool(true)<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.deg2rad.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rad2deg.php' class='function' rel='rdfs-seeAlso'>rad2deg()</a> - Converts the radian number to the equivalent number in degrees</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="define_syslog_variables" value="<div id='function.define-syslog-variables' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.define-syslog-variables.php'>define_syslog_variables</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>define_syslog_variables</span> &amp;mdash; <span class='dc-title'>Initializes all syslog related variables</span></p> </div> <a name='function.define-syslog-variables.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>define_syslog_variables</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Initializes all variables used in the syslog functions. </p> </div> <a name='function.define-syslog-variables.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> <table class='doctable table'> <caption><b>Syslog variables</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Variable</th> <th>Constant equal</th> <th>Meaning</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_EMERG</var></td> <td align='left'><b><tt class='constant'>LOG_EMERG</tt></b></td> <td align='left'>System is unusable</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_ALERT</var></td> <td align='left'><b><tt class='constant'>LOG_ALERT</tt></b></td> <td align='left'>Immediate action required</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_CRIT</var></td> <td align='left'><b><tt class='constant'>LOG_CRIT</tt></b></td> <td align='left'>Critical conditions</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_ERR</var></td> <td align='left'><b><tt class='constant'>LOG_ERR</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_WARNING</var></td> <td align='left'><b><tt class='constant'>LOG_WARNING</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_NOTICE</var></td> <td align='left'><b><tt class='constant'>LOG_NOTICE</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_INFO</var></td> <td align='left'><b><tt class='constant'>LOG_INFO</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_DEBUG</var></td> <td align='left'><b><tt class='constant'>LOG_DEBUG</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_KERN</var></td> <td align='left'><b><tt class='constant'>LOG_KERN</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_USER</var></td> <td align='left'><b><tt class='constant'>LOG_USER</tt></b></td> <td align='left'>Genetic user level</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_MAIL</var></td> <td align='left'><b><tt class='constant'>LOG_MAIL</tt></b></td> <td align='left'>Log to email</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_DAEMON</var></td> <td align='left'><b><tt class='constant'>LOG_DAEMON</tt></b></td> <td align='left'>Other system daemons</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_AUTH</var></td> <td align='left'><b><tt class='constant'>LOG_AUTH</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_SYSLOG</var></td> <td align='left'><b><tt class='constant'>LOG_SYSLOG</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LPR</var></td> <td align='left'><b><tt class='constant'>LOG_LPR</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_NEWS</var></td> <td align='left'><b><tt class='constant'>LOG_NEWS</tt></b></td> <td align='left'>Usenet new</td> <td align='left'>Not available on HP-UX</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_CRON</var></td> <td align='left'><b><tt class='constant'>LOG_CRON</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on all platforms</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_AUTHPRIV</var></td> <td align='left'><b><tt class='constant'>LOG_AUTHPRIV</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on AIX</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL0</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL0</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL1</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL1</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL2</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL2</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL3</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL3</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL4</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL4</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL5</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL5</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL6</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL6</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_LOCAL7</var></td> <td align='left'><b><tt class='constant'>LOG_LOCAL7</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on Windows and Netware</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_PID</var></td> <td align='left'><b><tt class='constant'>LOG_PID</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_CONS</var></td> <td align='left'><b><tt class='constant'>LOG_CONS</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_ODELAY</var></td> <td align='left'><b><tt class='constant'>LOG_ODELAY</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_NDELAY</var></td> <td align='left'><b><tt class='constant'>LOG_NDELAY</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_NOWAIT</var></td> <td align='left'><b><tt class='constant'>LOG_NOWAIT</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on BeOS</td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>$LOG_PERROR</var></td> <td align='left'><b><tt class='constant'>LOG_PERROR</tt></b></td> <td class='empty'>&amp;nbsp;</td> <td align='left'>Not available on AIX</td> </tr> </tbody> </table> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.define-syslog-variables.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>define_syslog_variables()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;syslog&amp;nbsp;variables&amp;nbsp;already&amp;nbsp;is&amp;nbsp;defined<br /></span><span style='color: #007700'>if(!</span><span style='color: #0000BB'>get_cfg_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'define_syslog_variables'</span><span style='color: #007700'>))<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>define_syslog_variables</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;the&amp;nbsp;log<br /></span><span style='color: #0000BB'>openlog</span><span style='color: #007700'>(</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$LOG_ODELAY</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$LOG_MAIL&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>$LOG_USER</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Continue&amp;nbsp;script&amp;nbsp;...<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.define-syslog-variables.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> This function was removed from PHP. </td> </tr> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function now throws an E_DEPRECATED notice. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.define-syslog-variables.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.openlog.php' class='function' rel='rdfs-seeAlso'>openlog()</a> - Open connection to system logger</li> <li class='member'><a href='http://www.php.net/manual/en/function.syslog.php' class='function' rel='rdfs-seeAlso'>syslog()</a> - Generate a system log message</li> <li class='member'><a href='http://www.php.net/manual/en/function.closelog.php' class='function' rel='rdfs-seeAlso'>closelog()</a> - Close connection to system logger</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="defined" value="<div id='function.defined' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.defined.php'>defined</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>defined</span> &amp;mdash; <span class='dc-title'>Checks whether a given named constant exists</span></p> </div> <a name='function.defined.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>defined</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Checks whether the given constant exists and is defined. </p> <blockquote><p><b class='note'>Note</b>: If you want to see if a variable exists, use <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a> as <b>defined()</b> only applies to <a href='http://www.php.net/manual/en/language.constants.php' class='link'>constants</a>. If you want to see if a function exists, use <a href='http://www.php.net/manual/en/function.function-exists.php' class='function'>function_exists()</a>. <br /> </p></blockquote> </div> <a name='function.defined.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The constant name. </p> </dd> </dl> <p> </p> </div> <a name='function.defined.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the named constant given by <i><tt class='parameter'>name</tt></i> has been defined, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.defined.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Checking Constants</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Note&amp;nbsp;the&amp;nbsp;use&amp;nbsp;of&amp;nbsp;quotes,&amp;nbsp;this&amp;nbsp;is&amp;nbsp;important.&amp;nbsp;&amp;nbsp;This&amp;nbsp;example&amp;nbsp;is&amp;nbsp;checking<br />&amp;nbsp;*&amp;nbsp;if&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'TEST'&amp;nbsp;is&amp;nbsp;the&amp;nbsp;name&amp;nbsp;of&amp;nbsp;a&amp;nbsp;constant&amp;nbsp;named&amp;nbsp;TEST&amp;nbsp;*/<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>defined</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TEST'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>TEST</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.defined.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.define.php' class='function' rel='rdfs-seeAlso'>define()</a> - Defines a named constant</li> <li class='member'><a href='http://www.php.net/manual/en/function.constant.php' class='function' rel='rdfs-seeAlso'>constant()</a> - Returns the value of a constant</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-defined-constants.php' class='function' rel='rdfs-seeAlso'>get_defined_constants()</a> - Returns an associative array with the names of all the constants and their values</li> <li class='member'><a href='http://www.php.net/manual/en/function.function-exists.php' class='function' rel='rdfs-seeAlso'>function_exists()</a> - Return TRUE if the given function has been defined</li> <li class='member'>The section on <a href='http://www.php.net/manual/en/language.constants.php' class='link'>Constants</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="define" value="<div id='function.define' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.define.php'>define</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>define</span> &amp;mdash; <span class='dc-title'>Defines a named constant</span></p> </div> <a name='function.define.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>define</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$case_insensitive</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Defines a named constant at runtime. </p> </div> <a name='function.define.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the constant. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value of the constant; only scalar and <a href='http://www.php.net/manual/en/language.types.null.php' class='type null'>null</a> values are allowed. Scalar values are <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>, <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> or <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> values. It is possible to define <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> constants, however it is not recommended and may cause unpredictable behavior. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>case_insensitive</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b>, the constant will be defined case-insensitive. The default behavior is case-sensitive; i.e. <i>CONSTANT</i> and <i>Constant</i> represent different values. </p> </dd> </dl> <p> </p> </div> <a name='function.define.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.define.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Defining Constants</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'CONSTANT'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;world.'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>CONSTANT</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;'Hello&amp;nbsp;world.'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>Constant</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;'Constant'&amp;nbsp;and&amp;nbsp;issues&amp;nbsp;a&amp;nbsp;notice.<br /><br /></span><span style='color: #0000BB'>define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'GREETING'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;you.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>GREETING</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;'Hello&amp;nbsp;you.'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>Greeting</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;'Hello&amp;nbsp;you.'<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.define.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.defined.php' class='function' rel='rdfs-seeAlso'>defined()</a> - Checks whether a given named constant exists</li> <li class='member'><a href='http://www.php.net/manual/en/function.constant.php' class='function' rel='rdfs-seeAlso'>constant()</a> - Returns the value of a constant</li> <li class='member'>The section on <a href='http://www.php.net/manual/en/language.constants.php' class='link'>Constants</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="decoct" value="<div id='function.decoct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.decoct.php'>decoct</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>decoct</span> &amp;mdash; <span class='dc-title'>Decimal to octal</span></p> </div> <a name='function.decoct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>decoct</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> Returns a string containing an octal representation of the given <i><tt class='parameter'>number</tt></i> argument. The largest number that can be converted is 4294967295 in decimal resulting to &amp;quot;37777777777&amp;quot;. </p> </div> <a name='function.decoct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Decimal value to convert </p> </dd> </dl> <p> </p> </div> <a name='function.decoct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Octal string representation of <i><tt class='parameter'>number</tt></i> </p> </div> <a name='function.decoct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>decoct()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>decoct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>15</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>decoct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>264</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 17 410 </pre></div> </div> </div><p> </p> </div> <a name='function.decoct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.octdec.php' class='function' rel='rdfs-seeAlso'>octdec()</a> - Octal to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.decbin.php' class='function' rel='rdfs-seeAlso'>decbin()</a> - Decimal to binary</li> <li class='member'><a href='http://www.php.net/manual/en/function.dechex.php' class='function' rel='rdfs-seeAlso'>dechex()</a> - Decimal to hexadecimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.base-convert.php' class='function' rel='rdfs-seeAlso'>base_convert()</a> - Convert a number between arbitrary bases</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="dechex" value="<div id='function.dechex' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.dechex.php'>dechex</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>dechex</span> &amp;mdash; <span class='dc-title'>Decimal to hexadecimal</span></p> </div> <a name='function.dechex.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>dechex</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> Returns a string containing a hexadecimal representation of the given <i><tt class='parameter'>number</tt></i> argument. The largest number that can be converted is 4294967295 in decimal resulting to &amp;quot;ffffffff&amp;quot;. </p> </div> <a name='function.dechex.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Decimal value to convert </p> </dd> </dl> <p> </p> </div> <a name='function.dechex.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Hexadecimal string representation of <i><tt class='parameter'>number</tt></i> </p> </div> <a name='function.dechex.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>dechex()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>dechex</span><span style='color: #007700'>(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>dechex</span><span style='color: #007700'>(</span><span style='color: #0000BB'>47</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> a 2f </pre></div> </div> </div><p> </p> </div> <a name='function.dechex.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.hexdec.php' class='function' rel='rdfs-seeAlso'>hexdec()</a> - Hexadecimal to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.decbin.php' class='function' rel='rdfs-seeAlso'>decbin()</a> - Decimal to binary</li> <li class='member'><a href='http://www.php.net/manual/en/function.decoct.php' class='function' rel='rdfs-seeAlso'>decoct()</a> - Decimal to octal</li> <li class='member'><a href='http://www.php.net/manual/en/function.base-convert.php' class='function' rel='rdfs-seeAlso'>base_convert()</a> - Convert a number between arbitrary bases</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="decbin" value="<div id='function.decbin' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.decbin.php'>decbin</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>decbin</span> &amp;mdash; <span class='dc-title'>Decimal to binary</span></p> </div> <a name='function.decbin.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>decbin</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> Returns a string containing a binary representation of the given <i><tt class='parameter'>number</tt></i> argument. </p> </div> <a name='function.decbin.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Decimal value to convert </p> <table class='doctable table'> <caption><b>Range of inputs on 32-bit machines</b></caption> <col align='left' /> <col align='left' /> <col align='left' /> <thead valign='middle'> <tr valign='middle'> <th>positive <i><tt class='parameter'>number</tt></i> </th> <th>negative <i><tt class='parameter'>number</tt></i> </th> <th>return value</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>0</td> </tr> <tr valign='middle'> <td align='left'>1</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>1</td> </tr> <tr valign='middle'> <td align='left'>2</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>10</td> </tr> <tr valign='middle'> <td colspan='3' align='left'>... normal progression ...</td> </tr> <tr valign='middle'> <td align='left'>2147483646</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>1111111111111111111111111111110</td> </tr> <tr valign='middle'> <td align='left'>2147483647 (largest signed integer)</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>1111111111111111111111111111111 (31 1&amp;#039;s)</td> </tr> <tr valign='middle'> <td align='left'>2147483648</td> <td align='left'>-2147483648</td> <td align='left'>10000000000000000000000000000000</td> </tr> <tr valign='middle'> <td colspan='3' align='left'>... normal progression ...</td> </tr> <tr valign='middle'> <td align='left'>4294967294</td> <td align='left'>-2</td> <td align='left'>11111111111111111111111111111110</td> </tr> <tr valign='middle'> <td align='left'>4294967295 (largest unsigned integer)</td> <td align='left'>-1</td> <td align='left'>11111111111111111111111111111111 (32 1&amp;#039;s)</td> </tr> </tbody> </table> <table class='doctable table'> <caption><b>Range of inputs on 64-bit machines</b></caption> <col align='left' /> <col align='left' /> <col align='left' /> <thead valign='middle'> <tr valign='middle'> <th>positive <i><tt class='parameter'>number</tt></i> </th> <th>negative <i><tt class='parameter'>number</tt></i> </th> <th>return value</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>0</td> </tr> <tr valign='middle'> <td align='left'>1</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>1</td> </tr> <tr valign='middle'> <td align='left'>2</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>10</td> </tr> <tr valign='middle'> <td colspan='3' align='left'>... normal progression ...</td> </tr> <tr valign='middle'> <td align='left'>9223372036854775806</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>111111111111111111111111111111111111111111111111111111111111110</td> </tr> <tr valign='middle'> <td align='left'>9223372036854775807 (largest signed integer)</td> <td class='empty'>&amp;nbsp;</td> <td align='left'>111111111111111111111111111111111111111111111111111111111111111 (31 1&amp;#039;s)</td> </tr> <tr valign='middle'> <td class='empty'>&amp;nbsp;</td> <td align='left'>-9223372036854775808</td> <td align='left'>1000000000000000000000000000000000000000000000000000000000000000</td> </tr> <tr valign='middle'> <td colspan='3' align='left'>... normal progression ...</td> </tr> <tr valign='middle'> <td class='empty'>&amp;nbsp;</td> <td align='left'>-2</td> <td align='left'>1111111111111111111111111111111111111111111111111111111111111110</td> </tr> <tr valign='middle'> <td class='empty'>&amp;nbsp;</td> <td align='left'>-1</td> <td align='left'>1111111111111111111111111111111111111111111111111111111111111111 (64 1&amp;#039;s)</td> </tr> </tbody> </table> </dd> </dl> <p> </p> </div> <a name='function.decbin.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Binary string representation of <i><tt class='parameter'>number</tt></i> </p> </div> <a name='function.decbin.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>decbin()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>decbin</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>decbin</span><span style='color: #007700'>(</span><span style='color: #0000BB'>26</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1100 11010 </pre></div> </div> </div><p> </p> </div> <a name='function.decbin.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.bindec.php' class='function' rel='rdfs-seeAlso'>bindec()</a> - Binary to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.decoct.php' class='function' rel='rdfs-seeAlso'>decoct()</a> - Decimal to octal</li> <li class='member'><a href='http://www.php.net/manual/en/function.dechex.php' class='function' rel='rdfs-seeAlso'>dechex()</a> - Decimal to hexadecimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.base-convert.php' class='function' rel='rdfs-seeAlso'>base_convert()</a> - Convert a number between arbitrary bases</li> <li class='member'> <a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string, using <i>%b</i>, <i>%032b</i> or <i>%064b</i> as the format </li> <li class='member'> <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>, using <i>%b</i>, <i>%032b</i> or <i>%064b</i> as the format </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="debug_zval_dump" value="<div id='function.debug-zval-dump' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.debug-zval-dump.php'>debug_zval_dump</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>debug_zval_dump</span> &amp;mdash; <span class='dc-title'>Dumps a string representation of an internal zend value to output</span></p> </div> <a name='function.debug-zval-dump.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>debug_zval_dump</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$variable</tt></span> )</div> <p class='para rdfs-comment'> Dumps a string representation of an internal zend value to output. </p> </div> <a name='function.debug-zval-dump.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>variable</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable being evaluated. </p> </dd> </dl> <p> </p> </div> <a name='function.debug-zval-dump.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.debug-zval-dump.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>debug_zval_dump()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>debug_zval_dump</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;amp;string(11) &amp;quot;Hello World&amp;quot; refcount(3) </pre></div> </div> </div><p> </p> <blockquote><p><b class='note'>Note</b>: <b>Beware the <i>refcount</i></b><br /> The <i>refcount</i> value returned by this function is non-obvious in certain circumstances. For example, a developer might expect the above example to indicate a <i>refcount</i> of <i>2</i>. The third reference is created when actually calling <b>debug_zval_dump()</b>. <br /> This behavior is further compounded when a variable is not passed to <b>debug_zval_dump()</b> by reference. To illustrate, consider a slightly modified version of the above example: <br /> </p><div class='example'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>debug_zval_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;not&amp;nbsp;passed&amp;nbsp;by&amp;nbsp;reference,&amp;nbsp;this&amp;nbsp;time<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(11) &amp;quot;Hello World&amp;quot; refcount(1) </pre></div> </div> </div><p> <br /> Why <i>refcount(1)</i>? Because a copy of <i>$var1</i> is being made, when the function is called. <br /> This function becomes even <em class='emphasis'>more</em> confusing when a variable with a <i>refcount</i> of <i>1</i> is passed (by copy/value): <br /> </p><div class='example'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>debug_zval_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(11) &amp;quot;Hello World&amp;quot; refcount(2) </pre></div> </div> </div><p> <br /> A <i>refcount</i> of <i>2</i>, here, is extremely non-obvious. Especially considering the above examples. So what&amp;#039;s happening? <br /> When a variable has a single reference (as did <i>$var1</i> before it was used as an argument to <b>debug_zval_dump()</b>), PHP&amp;#039;s engine optimizes the manner in which it is passed to a function. Internally, PHP treats <i>$var1</i> like a reference (in that the <i>refcount</i> is increased for the scope of this function), with the caveat that <em class='emphasis'>if</em> the passed reference happens to be written to, a copy is made, but only at the moment of writing. This is known as &amp;quot;copy on write.&amp;quot; <br /> So, if <b>debug_zval_dump()</b> happened to write to its sole parameter (and it doesn&amp;#039;t), then a copy would be made. Until then, the parameter remains a reference, causing the <i>refcount</i> to be incremented to <i>2</i> for the scope of the function call. <br /> </p></blockquote> </div> <a name='function.debug-zval-dump.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.var-dump.php' class='function' rel='rdfs-seeAlso'>var_dump()</a> - Dumps information about a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.debug-backtrace.php' class='function' rel='rdfs-seeAlso'>debug_backtrace()</a> - Generates a backtrace</li> <li class='member'><a href='http://www.php.net/manual/en/language.references.php' class='link'>References Explained</a></li> <li class='member'><a href='http://derickrethans.nl/php_references_article.php' class='link external'>&amp;raquo; References Explained (by Derick Rethans)</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="debug_print_backtrace" value="<div id='function.debug-print-backtrace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.debug-print-backtrace.php'>debug_print_backtrace</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>debug_print_backtrace</span> &amp;mdash; <span class='dc-title'> Prints a backtrace </span></p> </div> <a name='function.debug-print-backtrace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>debug_print_backtrace</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>debug_print_backtrace()</b> prints a PHP backtrace. It prints the function calls, included/required files and <a href='http://www.php.net/manual/en/function.eval.php' class='function'>eval()</a>ed stuff. </p> </div> <a name='function.debug-print-backtrace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> This function has no parameters. </p> </div> <a name='function.debug-print-backtrace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.debug-print-backtrace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>debug_print_backtrace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;include.php&amp;nbsp;file<br /><br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>a</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>b</span><span style='color: #007700'>();<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>b</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>c</span><span style='color: #007700'>();<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>c</span><span style='color: #007700'>(){<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>debug_print_backtrace</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>a</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;test.php&amp;nbsp;file<br />//&amp;nbsp;this&amp;nbsp;is&amp;nbsp;the&amp;nbsp;file&amp;nbsp;you&amp;nbsp;should&amp;nbsp;run<br /><br /></span><span style='color: #007700'>include&amp;nbsp;</span><span style='color: #DD0000'>'include.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> #0 eval() called at [/tmp/include.php:5] #1 a() called at [/tmp/include.php:17] #2 include(/tmp/include.php) called at [/tmp/test.php:3] #0 c() called at [/tmp/include.php:10] #1 b() called at [/tmp/include.php:6] #2 a() called at [/tmp/include.php:17] #3 include(/tmp/include.php) called at [/tmp/test.php:3] </pre></div> </div> </div><p> </p> </div> <a name='function.debug-print-backtrace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.debug-backtrace.php' class='function' rel='rdfs-seeAlso'>debug_backtrace()</a> - Generates a backtrace</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="debug_backtrace" value="<div id='function.debug-backtrace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.debug-backtrace.php'>debug_backtrace</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>debug_backtrace</span> &amp;mdash; <span class='dc-title'>Generates a backtrace</span></p> </div> <a name='function.debug-backtrace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>debug_backtrace</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$provide_object</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'> <b>debug_backtrace()</b> generates a PHP backtrace. </p> </div> <a name='function.debug-backtrace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>provide_object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether or not to populate the &amp;quot;object&amp;quot; index. Defaults to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.debug-backtrace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. The possible returned elements are as follows: </p> <p class='para'> </p><table class='doctable table'> <caption><b>Possible returned elements from <b>debug_backtrace()</b></b></caption> <thead valign='middle'> <tr valign='middle'> <th>Name</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>function</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'> The current function name. See also <a href='http://www.php.net/manual/en/language.constants.predefined.php' class='link'>__FUNCTION__</a>. </td> </tr> <tr valign='middle'> <td align='left'>line</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a></td> <td align='left'> The current line number. See also <a href='http://www.php.net/manual/en/language.constants.predefined.php' class='link'>__LINE__</a>. </td> </tr> <tr valign='middle'> <td align='left'>file</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'> The current file name. See also <a href='http://www.php.net/manual/en/language.constants.predefined.php' class='link'>__FILE__</a>. </td> </tr> <tr valign='middle'> <td align='left'>class</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'> The current <a href='http://www.php.net/manual/en/language.oop5.php' class='link'>class</a> name. See also <a href='http://www.php.net/manual/en/language.constants.predefined.php' class='link'>__CLASS__</a> </td> </tr> <tr valign='middle'> <td align='left'>object</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a></td> <td align='left'> The current <a href='http://www.php.net/manual/en/language.oop5.php' class='link'>object</a>. </td> </tr> <tr valign='middle'> <td align='left'>type</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'> The current call type. If a method call, &amp;quot;-&amp;gt;&amp;quot; is returned. If a static method call, &amp;quot;::&amp;quot; is returned. If a function call, nothing is returned. </td> </tr> <tr valign='middle'> <td align='left'>args</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a></td> <td align='left'> If inside a function, this lists the functions arguments. If inside an included file, this lists the included file name(s). </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.debug-backtrace.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.5</td> <td align='left'> Added the optional parameter <i><tt class='parameter'>provide_object</tt></i> . </td> </tr> <tr valign='middle'> <td align='left'>5.1.1</td> <td align='left'> Added the current <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> as a possible return element. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.debug-backtrace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>debug_backtrace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;filename:&amp;nbsp;/tmp/a.php<br /><br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>a_test</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\nHi:&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>debug_backtrace</span><span style='color: #007700'>());<br />}<br /><br /></span><span style='color: #0000BB'>a_test</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'friend'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span><br /><span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;filename:&amp;nbsp;/tmp/b.php<br /></span><span style='color: #007700'>include_once&amp;nbsp;</span><span style='color: #DD0000'>'/tmp/a.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Results similar to the following when executing <var class='filename'>/tmp/b.php</var>: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hi: friend array(2) { [0]=&amp;gt; array(4) { [&amp;quot;file&amp;quot;] =&amp;gt; string(10) &amp;quot;/tmp/a.php&amp;quot; [&amp;quot;line&amp;quot;] =&amp;gt; int(10) [&amp;quot;function&amp;quot;] =&amp;gt; string(6) &amp;quot;a_test&amp;quot; [&amp;quot;args&amp;quot;]=&amp;gt; array(1) { [0] =&amp;gt; &amp;amp;string(6) &amp;quot;friend&amp;quot; } } [1]=&amp;gt; array(4) { [&amp;quot;file&amp;quot;] =&amp;gt; string(10) &amp;quot;/tmp/b.php&amp;quot; [&amp;quot;line&amp;quot;] =&amp;gt; int(2) [&amp;quot;args&amp;quot;] =&amp;gt; array(1) { [0] =&amp;gt; string(10) &amp;quot;/tmp/a.php&amp;quot; } [&amp;quot;function&amp;quot;] =&amp;gt; string(12) &amp;quot;include_once&amp;quot; } } </pre></div> </div> </div><p> </p> </div> <a name='function.debug-backtrace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.trigger-error.php' class='function' rel='rdfs-seeAlso'>trigger_error()</a> - Generates a user-level error/warning/notice message</li> <li class='member'><a href='http://www.php.net/manual/en/function.debug-print-backtrace.php' class='function' rel='rdfs-seeAlso'>debug_print_backtrace()</a> - Prints a backtrace</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_time_set" value="<div id='function.date-time-set' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-time-set.php'>date_time_set</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_time_set</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settime.php' class='function'>DateTime::setTime</a></span></span></p> </div> <a name='function.date-time-set.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settime.php' class='function'>DateTime::setTime</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_timezone_set" value="<div id='function.date-timezone-set' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-timezone-set.php'>date_timezone_set</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_timezone_set</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settimezone.php' class='function'>DateTime::setTimezone</a></span></span></p> </div> <a name='function.date-timezone-set.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settimezone.php' class='function'>DateTime::setTimezone</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_timezone_get" value="<div id='function.date-timezone-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-timezone-get.php'>date_timezone_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_timezone_get</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.gettimezone.php' class='function'>DateTime::getTimezone</a></span></span></p> </div> <a name='function.date-timezone-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.gettimezone.php' class='function'>DateTime::getTimezone</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_sun_info" value="<div id='function.date-sun-info' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-sun-info.php'>date_sun_info</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>date_sun_info</span> &amp;mdash; <span class='dc-title'>Returns an array with information about sunset/sunrise and twilight begin/end</span></p> </div> <a name='function.date-sun-info.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>date_sun_info</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$time</tt></span> , <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$latitude</tt></span> , <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$longitude</tt></span> )</div> </div> <a name='function.date-sun-info.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>time</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Timestamp. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>latitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Latitude in degrees. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>longitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Longitude in degrees. </p> </dd> </dl> <p> </p> </div> <a name='function.date-sun-info.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns array on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.date-sun-info.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>date_sun_info()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sun_info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_sun_info</span><span style='color: #007700'>(</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2006-12-12'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>31.7667</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>35.2333</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$sun_info&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'H:i:s'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> sunrise: 05:52:11 sunset: 15:41:21 transit: 10:46:46 civil_twilight_begin: 05:24:08 civil_twilight_end: 16:09:24 nautical_twilight_begin: 04:52:25 nautical_twilight_end: 16:41:06 astronomical_twilight_begin: 04:21:32 astronomical_twilight_end: 17:12:00 </pre></div> </div> </div><p> </p> </div> <a name='function.date-sun-info.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date-sunrise.php' class='function' rel='rdfs-seeAlso'>date_sunrise()</a> - Returns time of sunrise for a given day and location</li> <li class='member'><a href='http://www.php.net/manual/en/function.date-sunset.php' class='function' rel='rdfs-seeAlso'>date_sunset()</a> - Returns time of sunset for a given day and location</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_sunset" value="<div id='function.date-sunset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-sunset.php'>date_sunset</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>date_sunset</span> &amp;mdash; <span class='dc-title'> Returns time of sunset for a given day and location </span></p> </div> <a name='function.date-sunset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>date_sunset</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$format</tt><span class='initializer'> = SUNFUNCS_RET_STRING</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$latitude</tt><span class='initializer'> = ini_get(&amp;quot;date.default_latitude&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$longitude</tt><span class='initializer'> = ini_get(&amp;quot;date.default_longitude&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$zenith</tt><span class='initializer'> = ini_get(&amp;quot;date.sunset_zenith&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$gmt_offset</tt><span class='initializer'> = 0</span></span> ]]]]] )</div> <p class='para rdfs-comment'> <b>date_sunset()</b> returns the sunset time for a given day (specified as a <i><tt class='parameter'>timestamp</tt></i> ) and location. </p> </div> <a name='function.date-sunset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>timestamp</tt></i> of the day from which the sunset time is taken. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p><table class='doctable table'> <caption><b><i><tt class='parameter'>format</tt></i> constants</b></caption> <thead valign='middle'> <tr valign='middle'> <th>constant</th> <th>description</th> <th>example</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_STRING</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'>16:46</td> </tr> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_DOUBLE</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a></td> <td align='left'>16.78243132</td> </tr> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_TIMESTAMP</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> (timestamp)</td> <td align='left'>1095034606</td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>latitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Defaults to North, pass in a negative value for South. See also: <i>date.default_latitude</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>longitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Defaults to East, pass in a negative value for West. See also: <i>date.default_longitude</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>zenith</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Default: <i>date.sunset_zenith</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>gmtoffset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specified in hours. </p> </dd> </dl> <p> </p> </div> <a name='function.date-sunset.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the time zone is not valid, and/or a <b><tt class='constant'>E_STRICT</tt></b> or <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. See also <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a></p> </div> <a name='function.date-sunset.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.1.0</td><td align='left'><p class='para'> Now issues the <b><tt class='constant'>E_STRICT</tt></b> and <b><tt class='constant'>E_NOTICE</tt></b> time zone errors.</p></td></tr> </tbody> </table> <p> </p> </div> <a name='function.date-sunset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the sunset time in a specified <i><tt class='parameter'>format</tt></i> on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.date-sunset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>date_sunset()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;calculate&amp;nbsp;the&amp;nbsp;sunset&amp;nbsp;time&amp;nbsp;for&amp;nbsp;Lisbon,&amp;nbsp;Portugal<br />Latitude:&amp;nbsp;38.4&amp;nbsp;North<br />Longitude:&amp;nbsp;9&amp;nbsp;West<br />Zenith&amp;nbsp;~=&amp;nbsp;90<br />offset:&amp;nbsp;+1&amp;nbsp;GMT<br />*/<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D&amp;nbsp;M&amp;nbsp;d&amp;nbsp;Y'</span><span style='color: #007700'>).&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;sunset&amp;nbsp;time&amp;nbsp;:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #0000BB'>date_sunset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>time</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>SUNFUNCS_RET_STRING</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>38.4</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>9</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>90</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Mon Dec 20 2004, sunset time : 18:13 </pre></div> </div> </div><p> </p> </div> <a name='function.date-sunset.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date-sunrise.php' class='function' rel='rdfs-seeAlso'>date_sunrise()</a> - Returns time of sunrise for a given day and location</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_sunrise" value="<div id='function.date-sunrise' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-sunrise.php'>date_sunrise</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>date_sunrise</span> &amp;mdash; <span class='dc-title'>Returns time of sunrise for a given day and location</span></p> </div> <a name='function.date-sunrise.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>date_sunrise</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$format</tt><span class='initializer'> = SUNFUNCS_RET_STRING</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$latitude</tt><span class='initializer'> = ini_get(&amp;quot;date.default_latitude&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$longitude</tt><span class='initializer'> = ini_get(&amp;quot;date.default_longitude&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$zenith</tt><span class='initializer'> = ini_get(&amp;quot;date.sunrise_zenith&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$gmt_offset</tt><span class='initializer'> = 0</span></span> ]]]]] )</div> <p class='para rdfs-comment'> <b>date_sunrise()</b> returns the sunrise time for a given day (specified as a <i><tt class='parameter'>timestamp</tt></i> ) and location. </p> </div> <a name='function.date-sunrise.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>timestamp</tt></i> of the day from which the sunrise time is taken. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p><table class='doctable table'> <caption><b><i><tt class='parameter'>format</tt></i> constants</b></caption> <thead valign='middle'> <tr valign='middle'> <th>constant</th> <th>description</th> <th>example</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_STRING</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'>16:46</td> </tr> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_DOUBLE</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a></td> <td align='left'>16.78243132</td> </tr> <tr valign='middle'> <td align='left'>SUNFUNCS_RET_TIMESTAMP</td> <td align='left'>returns the result as <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> (timestamp)</td> <td align='left'>1095034606</td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>latitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Defaults to North, pass in a negative value for South. See also: <i>date.default_latitude</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>longitude</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Defaults to East, pass in a negative value for West. See also: <i>date.default_longitude</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>zenith</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Default: <i>date.sunrise_zenith</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>gmtoffset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specified in hours. </p> </dd> </dl> <p> </p> </div> <a name='function.date-sunrise.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the sunrise time in a specified <i><tt class='parameter'>format</tt></i> on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.date-sunrise.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the time zone is not valid, and/or a <b><tt class='constant'>E_STRICT</tt></b> or <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. See also <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a></p> </div> <a name='function.date-sunrise.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.1.0</td><td align='left'><p class='para'> Now issues the <b><tt class='constant'>E_STRICT</tt></b> and <b><tt class='constant'>E_NOTICE</tt></b> time zone errors.</p></td></tr> </tbody> </table> <p> </p> </div> <a name='function.date-sunrise.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>date_sunrise()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;calculate&amp;nbsp;the&amp;nbsp;sunrise&amp;nbsp;time&amp;nbsp;for&amp;nbsp;Lisbon,&amp;nbsp;Portugal<br />Latitude:&amp;nbsp;38.4&amp;nbsp;North<br />Longitude:&amp;nbsp;9&amp;nbsp;West<br />Zenith&amp;nbsp;~=&amp;nbsp;90<br />offset:&amp;nbsp;+1&amp;nbsp;GMT<br />*/<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D&amp;nbsp;M&amp;nbsp;d&amp;nbsp;Y'</span><span style='color: #007700'>).&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;sunrise&amp;nbsp;time&amp;nbsp;:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #0000BB'>date_sunrise</span><span style='color: #007700'>(</span><span style='color: #0000BB'>time</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>SUNFUNCS_RET_STRING</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>38.4</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>9</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>90</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Mon Dec 20 2004, sunrise time : 08:54 </pre></div> </div> </div><p> </p> </div> <a name='function.date-sunrise.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date-sunset.php' class='function' rel='rdfs-seeAlso'>date_sunset()</a> - Returns time of sunset for a given day and location</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_parse" value="<div id='function.date-parse' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-parse.php'>date_parse</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_parse</span> &amp;mdash; <span class='dc-title'>Returns associative array with detailed info about given date</span></p> </div> <a name='function.date-parse.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>date_parse</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$date</tt></span> )</div> </div> <a name='function.date-parse.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>date</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Date in format accepted by <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.date-parse.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> with information about the parsed date on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.date-parse.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> In case the date format has an error, the element &amp;#039;errors&amp;#039; will contains the error messages. </p> </div> <a name='function.date-parse.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>date_parse()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>date_parse</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2006-12-12&amp;nbsp;10:00:00.5'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [year] =&amp;gt; 2006 [month] =&amp;gt; 12 [day] =&amp;gt; 12 [hour] =&amp;gt; 10 [minute] =&amp;gt; 0 [second] =&amp;gt; 0 [fraction] =&amp;gt; 0.5 [warning_count] =&amp;gt; 0 [warnings] =&amp;gt; Array() [error_count] =&amp;gt; 0 [errors] =&amp;gt; Array() [is_localtime] =&amp;gt; ) </pre></div> </div> </div><p> </p> </div> <a name='function.date-parse.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getdate.php' class='function' rel='rdfs-seeAlso'>getdate()</a> - Get date/time information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_offset_get" value="<div id='function.date-offset-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-offset-get.php'>date_offset_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_offset_get</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.getoffset.php' class='function'>DateTime::getOffset</a></span></span></p> </div> <a name='function.date-offset-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.getoffset.php' class='function'>DateTime::getOffset</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_modify" value="<div id='function.date-modify' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-modify.php'>date_modify</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_modify</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.modify.php' class='function'>DateTime::modify</a></span></span></p> </div> <a name='function.date-modify.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.modify.php' class='function'>DateTime::modify</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_isodate_set" value="<div id='function.date-isodate-set' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-isodate-set.php'>date_isodate_set</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_isodate_set</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setisodate.php' class='function'>DateTime::setISODate</a></span></span></p> </div> <a name='function.date-isodate-set.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setisodate.php' class='function'>DateTime::setISODate</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_format" value="<div id='function.date-format' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-format.php'>date_format</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_format</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.format.php' class='function'>DateTime::format</a></span></span></p> </div> <a name='function.date-format.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.format.php' class='function'>DateTime::format</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_default_timezone_set" value="<div id='function.date-default-timezone-set' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-default-timezone-set.php'>date_default_timezone_set</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>date_default_timezone_set</span> &amp;mdash; <span class='dc-title'> Sets the default timezone used by all date/time functions in a script </span></p> </div> <a name='function.date-default-timezone-set.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>date_default_timezone_set</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$timezone_identifier</tt></span> )</div> <p class='para rdfs-comment'> <b>date_default_timezone_set()</b> sets the default timezone used by all date/time functions. </p> <blockquote><p><b class='note'>Note</b>: Since PHP 5.1.0 (when the date/time functions were rewritten), every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the timezone isn&amp;#039;t valid, and/or a <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. <br /> </p></blockquote> <p class='para'> Instead of using this function to set the default timezone in your script, you can also use the INI setting <a href='http://www.php.net/manual/en/datetime.configuration.php#ini.date.timezone' class='link'>date.timezone</a> to set the default timezone. </p> </div> <a name='function.date-default-timezone-set.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone_identifier</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The timezone identifier, like <i>UTC</i> or <i>Europe/Lisbon</i>. The list of valid identifiers is available in the <a href='http://www.php.net/manual/en/timezones.php' class='xref'>List of Supported Timezones</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.date-default-timezone-set.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns <b><tt class='constant'>FALSE</tt></b> if the <i><tt class='parameter'>timezone_identifier</tt></i> isn&amp;#039;t valid, or <b><tt class='constant'>TRUE</tt></b> otherwise. </p> </div> <a name='function.date-default-timezone-set.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Getting the default timezone</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'America/Los_Angeles'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$script_tz&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_default_timezone_get</span><span style='color: #007700'>();<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>strcmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$script_tz</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>ini_get</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'date.timezone'</span><span style='color: #007700'>))){<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Script&amp;nbsp;timezone&amp;nbsp;differs&amp;nbsp;from&amp;nbsp;ini-set&amp;nbsp;timezone.'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Script&amp;nbsp;timezone&amp;nbsp;and&amp;nbsp;ini-set&amp;nbsp;timezone&amp;nbsp;match.'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.date-default-timezone-set.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Now throws <b><tt class='constant'>E_WARNING</tt></b> rather then <b><tt class='constant'>E_STRICT</tt></b>. </td> </tr> <tr valign='middle'> <td align='left'>5.1.2</td> <td align='left'> The function started to validate the <i><tt class='parameter'>timezone_identifier</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.date-default-timezone-set.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date-default-timezone-get.php' class='function' rel='rdfs-seeAlso'>date_default_timezone_get()</a> - Gets the default timezone used by all date/time functions in a script</li> <li class='member'><a href='http://www.php.net/manual/en/timezones.php' class='xref'>List of Supported Timezones</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_default_timezone_get" value="<div id='function.date-default-timezone-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-default-timezone-get.php'>date_default_timezone_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>date_default_timezone_get</span> &amp;mdash; <span class='dc-title'> Gets the default timezone used by all date/time functions in a script </span></p> </div> <a name='function.date-default-timezone-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>date_default_timezone_get</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> In order of preference, this function returns the default timezone by: </p><ul class='itemizedlist'> <li class='listitem'> <p class='para'> Reading the timezone set using the <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a> function (if any) </p> </li> <li class='listitem'> <p class='para'> Reading the <var class='varname'>TZ</var> environment variable (if non empty) </p> </li> <li class='listitem'> <p class='para'> Reading the value of the <a href='http://www.php.net/manual/en/datetime.configuration.php#ini.date.timezone' class='link'>date.timezone</a> ini option (if set) </p> </li> <li class='listitem'> <p class='para'> Querying the host operating system (if supported and allowed by the OS) </p> </li> </ul><p> </p> <p class='para'> If none of the above succeed, <span class='methodname'><b>date_default_timezone_get</b></span> will return a default timezone of <i>UTC</i>. </p> </div> <a name='function.date-default-timezone-get.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </div> <a name='function.date-default-timezone-get.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Getting the default timezone</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>date_default_timezone_get</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'date_default_timezone_set:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date_default_timezone_get</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>ini_get</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'date.timezone'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'date.timezone:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>ini_get</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'date.timezone'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> date_default_timezone_set: Europe/London date.timezone: Europe/London </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Getting the abbreviation of a timezone</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'America/Los_Angeles'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>date_default_timezone_get</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'T'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> America/Los_Angeles =&amp;gt; America/Los_Angeles =&amp;gt; PST </pre></div> </div> </div><p> </p> </div> <a name='function.date-default-timezone-get.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function' rel='rdfs-seeAlso'>date_default_timezone_set()</a> - Sets the default timezone used by all date/time functions in a script</li> <li class='member'><a href='http://www.php.net/manual/en/timezones.php' class='xref'>List of Supported Timezones</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_date_set" value="<div id='function.date-date-set' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-date-set.php'>date_date_set</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_date_set</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setdate.php' class='function'>DateTime::setDate</a></span></span></p> </div> <a name='function.date-date-set.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setdate.php' class='function'>DateTime::setDate</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date_create" value="<div id='function.date-create' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date-create.php'>date_create</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>date_create</span> &amp;mdash; <span class='dc-title'>Returns new DateTime object</span></p> </div> <a name='function.date-create.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>date_create</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$time</tt><span class='initializer'> = &amp;quot;now&amp;quot;</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt><span class='initializer'> = NULL</span></span> ]] )</div> </div> <a name='function.date-create.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>time</tt></i> </span> </dt><dd class='listitem'> <p class='para'> String in a format accepted by <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>, defaults to &amp;quot;now&amp;quot;. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Time zone of the time. </p> </dd> </dl> <p> </p> </div> <a name='function.date-create.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns DateTime object on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.date-create.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>date_create()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_create</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>date_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>DATE_ATOM</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 2008-08-03T14:52:10+01:00 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::__construct" value="<div id='datetimezone.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.construct.php'>DateTimeZone::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::__construct</span> &amp;mdash; <span class='dc-title'>Creates new DateTimeZone object</span></p> </div> <a name='datetimezone.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>DateTimeZone::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$timezone</tt></span> )</div> <p class='para rdfs-comment'> Creates new DateTimeZone object. </p> </div> <a name='datetimezone.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <a href='http://www.php.net/manual/en/timezones.php' class='link'>timezones</a>. </p> </dd> </dl> <p> </p> </div> <a name='datetimezone.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <a href='http://www.php.net/manual/en/class.datetimezone.php' class='classname'>DateTimeZone</a> on success. </p> </div> <a name='datetimezone.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> This method throws <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> if the timezone supplied is not recognised as a valid timezone. </p> </div> <a name='datetimezone.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Catching errors when instantiating <a href='http://www.php.net/manual/en/class.datetimezone.php' class='classname'>DateTimeZone</a></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Error&amp;nbsp;handling&amp;nbsp;by&amp;nbsp;catching&amp;nbsp;exceptions<br /></span><span style='color: #0000BB'>$timezones&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Mars/Phobos'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Jupiter/Europa'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$timezones&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$tz</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$mars&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$tz</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> DateTimeZone::__construct() [datetimezone.--construct]: Unknown or bad timezone (Mars/Phobos) DateTimeZone::__construct() [datetimezone.--construct]: Unknown or bad timezone (Jupiter/Europa) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::listIdentifiers" value="<div id='datetimezone.listidentifiers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.listidentifiers.php'>DateTimeZone::listIdentifiers</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::listIdentifiers</span> &amp;mdash; <span class='dc-title'>Returns numerically index array with all timezone identifiers</span></p> </div> <a name='datetimezone.listidentifiers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>static</span><span class='type'>array</span> <span class='methodname'><b>DateTimeZone::listIdentifiers</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$what</tt><span class='initializer'> = DateTime::ALL</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$country</tt><span class='initializer'> = NULL</span></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.timezone-identifiers-list.php' class='function'>timezone_identifiers_list</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$what</tt><span class='initializer'> = DateTime::ALL</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$country</tt><span class='initializer'> = NULL</span></span> ]] )</div> </div> <a name='datetimezone.listidentifiers.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>what</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <a href='http://www.php.net/manual/en/class.datetimezone.php' class='classname'>DateTimeZone</a> class constants, defaults to <b><tt class='constant'>DateTimeZone::ALL</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>country</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A two-letter ISO 3166-1 compatible country code. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This option is only used when <i><tt class='parameter'>what</tt></i> is set to <b><tt class='constant'>DateTimeZone::PER_COUNTRY</tt></b>. </span> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='datetimezone.listidentifiers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns array on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetimezone.listidentifiers.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added the optional <i><tt class='parameter'>what</tt></i> and <i><tt class='parameter'>country</tt></i> parameters. </td> </tr> </tbody> </table> <p> </p> </div> <a name='datetimezone.listidentifiers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <a href='http://www.php.net/manual/en/function.timezone-identifiers-list.php' class='function'>timezone_identifiers_list()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$timezone_identifiers&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>::</span><span style='color: #0000BB'>listIdentifiers</span><span style='color: #007700'>();<br />for&amp;nbsp;(</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>=</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>++)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$timezone_identifiers</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>]</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Africa/Abidjan Africa/Accra Africa/Addis_Ababa Africa/Algiers Africa/Asmera </pre></div> </div> </div><p> </p> </div> <a name='datetimezone.listidentifiers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.timezone-abbreviations-list.php' class='function' rel='rdfs-seeAlso'>timezone_abbreviations_list()</a> - Alias of DateTimeZone::listAbbreviations</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::listAbbreviations" value="<div id='datetimezone.listabbreviations' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.listabbreviations.php'>DateTimeZone::listAbbreviations</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::listAbbreviations</span> &amp;mdash; <span class='dc-title'>Returns associative array containing dst, offset and the timezone name</span></p> </div> <a name='datetimezone.listabbreviations.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>static</span><span class='type'>array</span> <span class='methodname'><b>DateTimeZone::listAbbreviations</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.timezone-abbreviations-list.php' class='function'>timezone_abbreviations_list</a></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='datetimezone.listabbreviations.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns array on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetimezone.listabbreviations.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <a href='http://www.php.net/manual/en/function.timezone-abbreviations-list.php' class='function'>timezone_abbreviations_list()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$timezone_abbreviations&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>::</span><span style='color: #0000BB'>listAbbreviations</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$timezone_abbreviations</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'acst'</span><span style='color: #007700'>]);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [dst] =&amp;gt; 1 [offset] =&amp;gt; -14400 [timezone_id] =&amp;gt; America/Porto_Acre ) [1] =&amp;gt; Array ( [dst] =&amp;gt; 1 [offset] =&amp;gt; -14400 [timezone_id] =&amp;gt; America/Eirunepe ) [2] =&amp;gt; Array ( [dst] =&amp;gt; 1 [offset] =&amp;gt; -14400 [timezone_id] =&amp;gt; America/Rio_Branco ) [3] =&amp;gt; Array ( [dst] =&amp;gt; 1 [offset] =&amp;gt; -14400 [timezone_id] =&amp;gt; Brazil/Acre ) ) </pre></div> </div> </div><p> </p> </div> <a name='datetimezone.listabbreviations.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.timezone-identifiers-list.php' class='function' rel='rdfs-seeAlso'>timezone_identifiers_list()</a> - Alias of DateTimeZone::listIdentifiers</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::getTransitions" value="<div id='datetimezone.gettransitions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.gettransitions.php'>DateTimeZone::getTransitions</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::getTransitions</span> &amp;mdash; <span class='dc-title'>Returns all transitions for the timezone</span></p> </div> <a name='datetimezone.gettransitions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>DateTimeZone::getTransitions</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_begin</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_end</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.timezone-transitions-get.php' class='function'>timezone_transitions_get</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$object</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_begin</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_end</tt></span> ]] )</div> </div> <a name='datetimezone.gettransitions.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'> object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetimezone.php' class='classname'>DateTimeZone</a> object returned by <a href='http://www.php.net/manual/en/function.timezone-open.php' class='function'>timezone_open()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp_begin</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Begin timestamp. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp_end</tt></i> </span> </dt><dd class='listitem'> <p class='para'> End timestamp. </p> </dd> </dl> <p> </p> </div> <a name='datetimezone.gettransitions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns numerically indexed array containing associative array with all transitions on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetimezone.gettransitions.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> The optional <i><tt class='parameter'>timestamp_begin</tt></i> and <i><tt class='parameter'>timestamp_end</tt></i> were added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='datetimezone.gettransitions.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <a href='http://www.php.net/manual/en/function.timezone-transitions-get.php' class='function'>timezone_transitions_get()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$timezone&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'CET'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>reset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$timezone</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTransitions</span><span style='color: #007700'>()));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [ts] =&amp;gt; -1693706400 [time] =&amp;gt; 1916-04-30T22:00:00+0000 [offset] =&amp;gt; 7200 [isdst] =&amp;gt; 1 [abbr] =&amp;gt; CEST ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::getOffset" value="<div id='datetimezone.getoffset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.getoffset.php'>DateTimeZone::getOffset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::getOffset</span> &amp;mdash; <span class='dc-title'>Returns the timezone offset from GMT</span></p> </div> <a name='datetimezone.getoffset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>DateTimeZone::getOffset</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$datetime</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.timezone-offset-get.php' class='function'>timezone_offset_get</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$datetime</tt></span> )</div> <p class='para rdfs-comment'> This function returns the offset to GMT for the date/time specified in the <i><tt class='parameter'>datetime</tt></i> parameter. The GMT offset is calculated with the timezone information contained in the DateTimeZone object being used. </p> </div> <a name='datetimezone.getoffset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'> object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetimezone.php' class='classname'>DateTimeZone</a> object returned by <a href='http://www.php.net/manual/en/function.timezone-open.php' class='function'>timezone_open()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>datetime</tt></i> </span> </dt><dd class='listitem'> <p class='para'> DateTime that contains the date/time to compute the offset from. </p> </dd> </dl> <p> </p> </div> <a name='datetimezone.getoffset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns time zone offset in seconds on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetimezone.getoffset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>DateTimeZone::getOffset()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;two&amp;nbsp;timezone&amp;nbsp;objects,&amp;nbsp;one&amp;nbsp;for&amp;nbsp;Taipei&amp;nbsp;(Taiwan)&amp;nbsp;and&amp;nbsp;one&amp;nbsp;for<br />//&amp;nbsp;Tokyo&amp;nbsp;(Japan)<br /></span><span style='color: #0000BB'>$dateTimeZoneTaipei&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Asia/Taipei'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dateTimeZoneJapan&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Asia/Tokyo'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;two&amp;nbsp;DateTime&amp;nbsp;objects&amp;nbsp;that&amp;nbsp;will&amp;nbsp;contain&amp;nbsp;the&amp;nbsp;same&amp;nbsp;Unix&amp;nbsp;timestamp,&amp;nbsp;but<br />//&amp;nbsp;have&amp;nbsp;different&amp;nbsp;timezones&amp;nbsp;attached&amp;nbsp;to&amp;nbsp;them.<br /></span><span style='color: #0000BB'>$dateTimeTaipei&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'now'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dateTimeZoneTaipei</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dateTimeJapan&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'now'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dateTimeZoneJapan</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Calculate&amp;nbsp;the&amp;nbsp;GMT&amp;nbsp;offset&amp;nbsp;for&amp;nbsp;the&amp;nbsp;date/time&amp;nbsp;contained&amp;nbsp;in&amp;nbsp;the&amp;nbsp;$dateTimeTaipei<br />//&amp;nbsp;object,&amp;nbsp;but&amp;nbsp;using&amp;nbsp;the&amp;nbsp;timezone&amp;nbsp;rules&amp;nbsp;as&amp;nbsp;defined&amp;nbsp;for&amp;nbsp;Tokyo<br />//&amp;nbsp;($dateTimeZoneJapan).<br /></span><span style='color: #0000BB'>$timeOffset&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dateTimeZoneJapan</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getOffset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dateTimeTaipei</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Should&amp;nbsp;show&amp;nbsp;int(32400)&amp;nbsp;(for&amp;nbsp;dates&amp;nbsp;after&amp;nbsp;Sat&amp;nbsp;Sep&amp;nbsp;8&amp;nbsp;01:00:00&amp;nbsp;1951&amp;nbsp;JST).<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$timeOffset</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone::getName" value="<div id='datetimezone.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetimezone.getname.php'>DateTimeZone::getName</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTimeZone::getName</span> &amp;mdash; <span class='dc-title'>Returns the name of the timezone</span></p> </div> <a name='datetimezone.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DateTimeZone::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the name of the timezone. </p> </div> <a name='datetimezone.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='datetimezone.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> One of <a href='http://www.php.net/manual/en/timezones.php' class='link'>timezones</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTimeZone" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.datetimezone.php'>The DateTimeZone class</a></h1> <div class='partintro'> <div id='datetimezone.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Representation of time zone. </p> </div> <div id='datetimezone.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>DateTimeZone</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>DateTimeZone</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.africa'>DateTimeZone::AFRICA</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.america'>DateTimeZone::AMERICA</a></var> <span class='initializer'> = 2</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.antarctica'>DateTimeZone::ANTARCTICA</a></var> <span class='initializer'> = 4</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.arctic'>DateTimeZone::ARCTIC</a></var> <span class='initializer'> = 8</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.asia'>DateTimeZone::ASIA</a></var> <span class='initializer'> = 16</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.atlantic'>DateTimeZone::ATLANTIC</a></var> <span class='initializer'> = 32</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.australia'>DateTimeZone::AUSTRALIA</a></var> <span class='initializer'> = 64</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.europe'>DateTimeZone::EUROPE</a></var> <span class='initializer'> = 128</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.indian'>DateTimeZone::INDIAN</a></var> <span class='initializer'> = 256</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.pacific'>DateTimeZone::PACIFIC</a></var> <span class='initializer'> = 512</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.utc'>DateTimeZone::UTC</a></var> <span class='initializer'> = 1024</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.all'>DateTimeZone::ALL</a></var> <span class='initializer'> = 2047</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.all-with-bc'>DateTimeZone::ALL_WITH_BC</a></var> <span class='initializer'> = 4095</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetimezone.php#datetimezone.constants.per-country'>DateTimeZone::PER_COUNTRY</a></var> <span class='initializer'> = 4096</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$timezone</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getlocation.php' class='function'>getLocation</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getoffset.php' class='function'>getOffset</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$datetime</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.gettransitions.php' class='function'>getTransitions</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_begin</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp_end</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>static</span><span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listabbreviations.php' class='function'>listAbbreviations</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>static</span><span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listidentifiers.php' class='function'>listIdentifiers</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$what</tt><span class='initializer'> = DateTime::ALL</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$country</tt><span class='initializer'> = NULL</span></span> ]] )</div> }</div> </div> <div id='datetimezone.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='datetimezone.constants.types' class='section'> <h2 class='title'>DateTimeZone Node Types</h2> <dl> <dt id='datetimezone.constants.africa' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::AFRICA</tt></b></span> </dt><dd class='listitem'> <p class='para'>Africa time zones.</p> </dd> <dt id='datetimezone.constants.america' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::AMERICA</tt></b></span> </dt><dd class='listitem'> <p class='para'>America time zones.</p> </dd> <dt id='datetimezone.constants.antarctica' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ANTARCTICA</tt></b></span> </dt><dd class='listitem'> <p class='para'>Antarctica time zones.</p> </dd> <dt id='datetimezone.constants.arctic' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ARCTIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Artic time zones.</p> </dd> <dt id='datetimezone.constants.asia' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ASIA</tt></b></span> </dt><dd class='listitem'> <p class='para'>Asia time zones.</p> </dd> <dt id='datetimezone.constants.atlantic' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ATLANTIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Atlantic time zones.</p> </dd> <dt id='datetimezone.constants.australia' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::AUSTRALIA</tt></b></span> </dt><dd class='listitem'> <p class='para'>Australia time zones.</p> </dd> <dt id='datetimezone.constants.europe' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::EUROPE</tt></b></span> </dt><dd class='listitem'> <p class='para'>Europe time zones.</p> </dd> <dt id='datetimezone.constants.indian' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::INDIAN</tt></b></span> </dt><dd class='listitem'> <p class='para'>Indian time zones.</p> </dd> <dt id='datetimezone.constants.pacific' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::PACIFIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Pacific time zones.</p> </dd> <dt id='datetimezone.constants.utc' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::UTC</tt></b></span> </dt><dd class='listitem'> <p class='para'>UTC time zones.</p> </dd> <dt id='datetimezone.constants.all' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ALL</tt></b></span> </dt><dd class='listitem'> <p class='para'>All time zones.</p> </dd> <dt id='datetimezone.constants.all-with-bc' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::ALL_WITH_BC</tt></b></span> </dt><dd class='listitem'> <p class='para'>All time zones including backwards compatible.</p> </dd> <dt id='datetimezone.constants.per-country' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTimeZone::PER_COUNTRY</tt></b></span> </dt><dd class='listitem'> <p class='para'>Time zones per country.</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/datetimezone.construct.php'>DateTimeZone::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Creates new DateTimeZone object</li><li><a href='http://www.php.net/manual/en/datetimezone.getlocation.php'>DateTimeZone::getLocation</a> &amp;acirc;&amp;#128;&amp;#148; Returns location information for a timezone</li><li><a href='http://www.php.net/manual/en/datetimezone.getname.php'>DateTimeZone::getName</a> &amp;acirc;&amp;#128;&amp;#148; Returns the name of the timezone</li><li><a href='http://www.php.net/manual/en/datetimezone.getoffset.php'>DateTimeZone::getOffset</a> &amp;acirc;&amp;#128;&amp;#148; Returns the timezone offset from GMT</li><li><a href='http://www.php.net/manual/en/datetimezone.gettransitions.php'>DateTimeZone::getTransitions</a> &amp;acirc;&amp;#128;&amp;#148; Returns all transitions for the timezone</li><li><a href='http://www.php.net/manual/en/datetimezone.listabbreviations.php'>DateTimeZone::listAbbreviations</a> &amp;acirc;&amp;#128;&amp;#148; Returns associative array containing dst, offset and the timezone name</li><li><a href='http://www.php.net/manual/en/datetimezone.listidentifiers.php'>DateTimeZone::listIdentifiers</a> &amp;acirc;&amp;#128;&amp;#148; Returns numerically index array with all timezone identifiers</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::__construct" value="<div id='datetime.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.construct.php'>DateTime::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::__construct</span> &amp;mdash; <span class='dc-title'>Returns new DateTime object</span></p> </div> <a name='datetime.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>DateTime::__construct</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$time</tt><span class='initializer'> = &amp;quot;now&amp;quot;</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt><span class='initializer'> = NULL</span></span> ]] )</div> <p class='para rdfs-comment'> Returns new DateTime object. </p> </div> <a name='datetime.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>time</tt></i> </span> </dt><dd class='listitem'> <p class='para'> String in a format accepted by <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>, defaults to &amp;quot;now&amp;quot;. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Time zone of the time. </p> </dd> </dl> <p> </p> </div> <a name='datetime.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Emits <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> in case of an error. </p> </div> <a name='datetime.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>DateTime::__construct()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>DATE_ATOM</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::setTimezone" value="<div id='datetime.settimezone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.settimezone.php'>DateTime::setTimezone</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::setTimezone</span> &amp;mdash; <span class='dc-title'>Sets the time zone for the DateTime object</span></p> </div> <a name='datetime.settimezone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>DateTime::setTimezone</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-timezone-set.php' class='function'>date_timezone_set</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt></span> )</div> </div> <a name='datetime.settimezone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Desired time zone. </p> </dd> </dl> <p> </p> </div> <a name='datetime.settimezone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified DateTime. </p> </div> <a name='datetime.settimezone.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Changed the return value from <b><tt class='constant'>NULL</tt></b> to <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='datetime.settimezone.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Setting and getting DateTimeZone objects</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;12:35:23'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTimezone</span><span style='color: #007700'>()-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;12:35:23'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$la_time&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'America/Los_Angeles'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setTimezone</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$la_time</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTimezone</span><span style='color: #007700'>()-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Europe/London America/Los_Angeles </pre></div> </div> </div><p> </p> </div> <a name='datetime.settimezone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/datetime.gettimezone.php' class='function' rel='rdfs-seeAlso'>DateTime::getTimezone()</a> - Return time zone relative to given DateTime</li> <li class='member'><a href='http://www.php.net/manual/en/function.timezone-open.php' class='function' rel='rdfs-seeAlso'>timezone_open()</a> - Returns new DateTimeZone object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::setTime" value="<div id='datetime.settime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.settime.php'>DateTime::setTime</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::setTime</span> &amp;mdash; <span class='dc-title'>Sets the time</span></p> </div> <a name='datetime.settime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>DateTime::setTime</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$hour</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$minute</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$second</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-time-set.php' class='function'>date_time_set</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$hour</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$minute</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$second</tt></span> ] )</div> <p class='para rdfs-comment'> Resets the current time of the DateTime object to a different time. </p> </div> <a name='datetime.settime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>hour</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Hour of the time. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>minute</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Minute of the time. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>second</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Second of the time. </p> </dd> </dl> <p> </p> </div> <a name='datetime.settime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified DateTime. </p> </div> <a name='datetime.settime.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.3.0</td><td align='left'>Changed the return value from <b><tt class='constant'>NULL</tt></b> to <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a>.</td></tr> </tbody> </table> <p> </p> </div> <a name='datetime.settime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Changing the time of a DateTime object</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;12:35:23'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d&amp;nbsp;H:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setTime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>14</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>55</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>24</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d&amp;nbsp;H:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Warning:&amp;nbsp;Does&amp;nbsp;not&amp;nbsp;increment&amp;nbsp;the&amp;nbsp;hour!<br />//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;because&amp;nbsp;the&amp;nbsp;hour&amp;nbsp;has&amp;nbsp;been&amp;nbsp;set&amp;nbsp;(14)&amp;nbsp;-&amp;nbsp;see&amp;nbsp;date_modify()<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setTime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'H'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'n'</span><span style='color: #007700'>)&amp;nbsp;+&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d&amp;nbsp;H:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;*Does*&amp;nbsp;increment&amp;nbsp;the&amp;nbsp;day,&amp;nbsp;because&amp;nbsp;the&amp;nbsp;day&amp;nbsp;has&amp;nbsp;not&amp;nbsp;been&amp;nbsp;set<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setTime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'H'</span><span style='color: #007700'>)&amp;nbsp;+&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'n'</span><span style='color: #007700'>));<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d&amp;nbsp;H:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 2008-08-03 12:35:23 2008-08-03 14:55:24 2008-08-03 14:14:00 2008-08-04 02:08:00 </pre></div> </div> </div><p> </p> </div> <a name='datetime.settime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/datetime.setdate.php' class='function' rel='rdfs-seeAlso'>DateTime::setDate()</a> - Sets the date</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::setISODate" value="<div id='datetime.setisodate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.setisodate.php'>DateTime::setISODate</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::setISODate</span> &amp;mdash; <span class='dc-title'>Sets the ISO date</span></p> </div> <a name='datetime.setisodate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>DateTime::setISODate</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$week</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-isodate-set.php' class='function'>date_isodate_set</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$week</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> ] )</div> <p class='para rdfs-comment'> Set a date according to the ISO 8601 standard - using weeks and day offsets rather than specific dates. </p> </div> <a name='datetime.setisodate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>year</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Year of the date. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>week</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Week of the date. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>day</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Offset from the first day of the week. </p> </dd> </dl> <p> </p> </div> <a name='datetime.setisodate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified DateTime. </p> </div> <a name='datetime.setisodate.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.3.0</td><td align='left'>Changed the return value from <b><tt class='constant'>NULL</tt></b> to <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a>.</td></tr> </tbody> </table> <p> </p> </div> <a name='datetime.setisodate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Finding the date from a week number and day offset</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Offset&amp;nbsp;from&amp;nbsp;start&amp;nbsp;of&amp;nbsp;week&amp;nbsp;2&amp;nbsp;(7)&amp;nbsp;=&amp;nbsp;5<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setISODate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2008</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Day&amp;nbsp;5&amp;nbsp;of&amp;nbsp;week&amp;nbsp;2&amp;nbsp;of&amp;nbsp;2008&amp;nbsp;is&amp;nbsp;the&amp;nbsp;11th&amp;nbsp;of&amp;nbsp;January.&amp;nbsp;<br /><br />//&amp;nbsp;Offset&amp;nbsp;from&amp;nbsp;start&amp;nbsp;of&amp;nbsp;week&amp;nbsp;2&amp;nbsp;(7)&amp;nbsp;=&amp;nbsp;10<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setISODate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2008</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Day&amp;nbsp;10&amp;nbsp;of&amp;nbsp;week&amp;nbsp;2&amp;nbsp;of&amp;nbsp;2008&amp;nbsp;is&amp;nbsp;the&amp;nbsp;16th&amp;nbsp;of&amp;nbsp;January.<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Finding the month a week is in</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_create</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>date_isodate_set</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2008</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Week&amp;nbsp;6&amp;nbsp;of&amp;nbsp;2008&amp;nbsp;is&amp;nbsp;in&amp;nbsp;February.<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='datetime.setisodate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/datetime.setdate.php' class='function' rel='rdfs-seeAlso'>DateTime::setDate()</a> - Sets the date</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::setDate" value="<div id='datetime.setdate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.setdate.php'>DateTime::setDate</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::setDate</span> &amp;mdash; <span class='dc-title'>Sets the date</span></p> </div> <a name='datetime.setdate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>DateTime::setDate</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$month</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-date-set.php' class='function'>date_date_set</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$month</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> )</div> <p class='para rdfs-comment'> Resets the current date of the DateTime object to a different date. </p> </div> <a name='datetime.setdate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>year</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Year of the date. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>month</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Month of the date. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>day</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Day of the date. </p> </dd> </dl> <p> </p> </div> <a name='datetime.setdate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified DateTime. </p> </div> <a name='datetime.setdate.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.3.0</td><td align='left'>Changed the return value from <b><tt class='constant'>NULL</tt></b> to <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a>.</td></tr> </tbody> </table> <p> </p> </div> <a name='datetime.setdate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Object oriented example usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setDate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2008</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>DATE_RFC2822</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Procedural example usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_create</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>date_date_set</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2008</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>date_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>DATE_RFC2822</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Sun, 12 Oct 2008 14:52:10 +0100 </pre></div> </div> </div><p> </p> </div> <a name='datetime.setdate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/datetime.setisodate.php' class='function' rel='rdfs-seeAlso'>DateTime::setISODate()</a> - Sets the ISO date</li> <li class='member'><a href='http://www.php.net/manual/en/datetime.settime.php' class='function' rel='rdfs-seeAlso'>DateTime::setTime()</a> - Sets the time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::modify" value="<div id='datetime.modify' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.modify.php'>DateTime::modify</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::modify</span> &amp;mdash; <span class='dc-title'>Alters the timestamp</span></p> </div> <a name='datetime.modify.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><b>DateTime::modify</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$modify</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-modify.php' class='function'>date_modify</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$modify</tt></span> )</div> <p class='para rdfs-comment'> Alter the timestamp of a DateTime object by incrementing or decrementing in a format accepted by <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>. </p> </div> <a name='datetime.modify.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>modify</tt></i> </span> </dt><dd class='listitem'> <p class='para'> String in a relative format accepted by <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>. </p> </dd> </dl> <p> </p> </div> <a name='datetime.modify.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified DateTime. </p> </div> <a name='datetime.modify.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.3.0</td><td align='left'>Changed the return value from <b><tt class='constant'>NULL</tt></b> to <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a>.</td></tr> </tbody> </table> <p> </p> </div> <a name='datetime.modify.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <a href='http://www.php.net/manual/en/function.date-modify.php' class='function'>date_modify()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$date&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2006-12-12'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$date</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>modify</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+1&amp;nbsp;day'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$date</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 2006-12-13 </pre></div> </div> </div><p> </p> </div> <a name='datetime.modify.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strtotime.php' class='function' rel='rdfs-seeAlso'>strtotime()</a> - Parse about any English textual datetime description into a Unix timestamp</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::getTimezone" value="<div id='datetime.gettimezone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.gettimezone.php'>DateTime::getTimezone</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::getTimezone</span> &amp;mdash; <span class='dc-title'>Return time zone relative to given DateTime</span></p> </div> <a name='datetime.gettimezone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <span class='methodname'><b>DateTime::getTimezone</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-timezone-get.php' class='function'>date_timezone_get</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> )</div> </div> <a name='datetime.gettimezone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> </dl> <p> </p> </div> <a name='datetime.gettimezone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns DateTimeZone object on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetime.gettimezone.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Setting and getting DateTimeZone objects</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;12:35:23'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTimezone</span><span style='color: #007700'>()-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;12:35:23'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$la_time&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTimeZone</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'America/Los_Angeles'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setTimezone</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$la_time</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getTimezone</span><span style='color: #007700'>()-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Europe/London America/Los_Angeles </pre></div> </div> </div><p> </p> </div> <a name='datetime.gettimezone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/datetime.settimezone.php' class='function' rel='rdfs-seeAlso'>DateTime::setTimezone()</a> - Sets the time zone for the DateTime object</li> <li class='member'><a href='http://www.php.net/manual/en/function.timezone-open.php' class='function' rel='rdfs-seeAlso'>timezone_open()</a> - Returns new DateTimeZone object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::getOffset" value="<div id='datetime.getoffset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.getoffset.php'>DateTime::getOffset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::getOffset</span> &amp;mdash; <span class='dc-title'>Returns the daylight saving time offset</span></p> </div> <a name='datetime.getoffset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>DateTime::getOffset</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-offset-get.php' class='function'>date_offset_get</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> )</div> </div> <a name='datetime.getoffset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> </dl> <p> </p> </div> <a name='datetime.getoffset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns DST offset in seconds on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetime.getoffset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Comparing offsets between Summer and Winter</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$winter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-12-25&amp;nbsp;14:25:41'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$summer&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-07-14&amp;nbsp;14:25:41'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$winter</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getOffset</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Winter&amp;nbsp;offset:&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$summer</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getOffset</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Summer&amp;nbsp;offset:&amp;nbsp;3600&amp;nbsp;=&amp;nbsp;1&amp;nbsp;hour<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime::format" value="<div id='datetime.format' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/datetime.format.php'>DateTime::format</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>DateTime::format</span> &amp;mdash; <span class='dc-title'>Returns date formatted according to given format</span></p> </div> <a name='datetime.format.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>DateTime::format</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.date-format.php' class='function'>date_format</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> )</div> </div> <a name='datetime.format.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'>Procedural style only: A <a href='http://www.php.net/manual/en/class.datetime.php' class='classname'>DateTime</a> object returned by <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a></p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Format accepted by <a href='http://www.php.net/manual/en/function.date.php' class='function'>date()</a>. </p> </dd> </dl> <p> </p> </div> <a name='datetime.format.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns formatted date on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='datetime.format.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Displaying the date and time using the procedural form</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date_create</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>date_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'jS,&amp;nbsp;F&amp;nbsp;Y'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>date_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>DATE_ATOM</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Displaying the date and time using the object oriented form</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Europe/London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$datetime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>DateTime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'2008-08-03&amp;nbsp;14:52:10'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'jS,&amp;nbsp;F&amp;nbsp;Y'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$datetime</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>DATE_ATOM</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span>?&amp;gt;</span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 3rd, August 2008 2008-08-03T14:52:10+01:00 </pre></div> </div> </div><p> </p> </div> <a name='datetime.format.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="DateTime" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.datetime.php'>The DateTime class</a></h1> <div class='partintro'> <div id='datetime.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Representation of date and time. </p> </div> <div id='datetime.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>DateTime</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>DateTime</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.atom'>DateTime::ATOM</a></var> <span class='initializer'> = Y-m-d\TH:i:sP</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.cookie'>DateTime::COOKIE</a></var> <span class='initializer'> = l, d-M-y H:i:s T</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.iso8601'>DateTime::ISO8601</a></var> <span class='initializer'> = Y-m-d\TH:i:sO</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc822'>DateTime::RFC822</a></var> <span class='initializer'> = D, d M y H:i:s O</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc850'>DateTime::RFC850</a></var> <span class='initializer'> = l, d-M-y H:i:s T</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc1036'>DateTime::RFC1036</a></var> <span class='initializer'> = D, d M y H:i:s O</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc1123'>DateTime::RFC1123</a></var> <span class='initializer'> = D, d M Y H:i:s O</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822'>DateTime::RFC2822</a></var> <span class='initializer'> = D, d M Y H:i:s O</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc3339'>DateTime::RFC3339</a></var> <span class='initializer'> = Y-m-d\TH:i:sP</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.rss'>DateTime::RSS</a></var> <span class='initializer'> = D, d M Y H:i:s O</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>string</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.w3c'>DateTime::W3C</a></var> <span class='initializer'> = Y-m-d\TH:i:sP</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.add.php' class='function'>add</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$interval</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.construct.php' class='function'>__construct</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$time</tt><span class='initializer'> = &amp;quot;now&amp;quot;</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt><span class='initializer'> = NULL</span></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.createfromformat.php' class='function'>createFromFormat</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$time</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateInterval</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.diff.php' class='function'>diff</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetime.php' class='type DateTime'>DateTime</a></span> <tt class='parameter'>$datetime</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$absolute</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.format.php' class='function'>format</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.getlasterrors.php' class='function'>getLastErrors</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.getoffset.php' class='function'>getOffset</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.gettimestamp.php' class='function'>getTimestamp</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTimeZone</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.gettimezone.php' class='function'>getTimezone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.modify.php' class='function'>modify</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$modify</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.set-state.php' class='function'>__set_state</a></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setdate.php' class='function'>setDate</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$month</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.setisodate.php' class='function'>setISODate</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$week</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settime.php' class='function'>setTime</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$hour</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$minute</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$second</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settimestamp.php' class='function'>setTimestamp</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$unixtimestamp</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.settimezone.php' class='function'>setTimezone</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <tt class='parameter'>$timezone</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.sub.php' class='function'>sub</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.dateinterval.php' class='type DateInterval'>DateInterval</a></span> <tt class='parameter'>$interval</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DateTime</span> <span class='methodname'><a href='http://www.php.net/manual/en/datetime.wakeup.php' class='function'>__wakeup</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div class='section'> <h2 class='title'>Predefined Constants</h2> <div id='datetime.constants.types' class='section'> <h2 class='title'>DateTime Node Types</h2> <dl> <dt id='datetime.constants.atom' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::ATOM</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_ATOM</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Atom (example: 2005-08-15T15:52:01+00:00) </span> </dd> <dt id='datetime.constants.cookie' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::COOKIE</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_COOKIE</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> HTTP Cookies (example: Monday, 15-Aug-05 15:52:01 UTC) </span> </dd> <dt id='datetime.constants.iso8601' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::ISO8601</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_ISO8601</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> ISO-8601 (example: 2005-08-15T15:52:01+0000) </span> </dd> <dt id='datetime.constants.rfc822' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC822</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC822</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RFC 822 (example: Mon, 15 Aug 05 15:52:01 +0000) </span> </dd> <dt id='datetime.constants.rfc850' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC850</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC850</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RFC 850 (example: Monday, 15-Aug-05 15:52:01 UTC) </span> </dd> <dt id='datetime.constants.rfc1036' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC1036</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC1036</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RFC 1036 (example: Mon, 15 Aug 05 15:52:01 +0000) </span> </dd> <dt id='datetime.constants.rfc1123' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC1123</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC1123</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RFC 1123 (example: Mon, 15 Aug 2005 15:52:01 +0000) </span> </dd> <dt id='datetime.constants.rfc2822' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC2822</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC2822</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RFC 2822 (Mon, 15 Aug 2005 15:52:01 +0000) </span> </dd> <dt id='datetime.constants.rfc3339' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RFC3339</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RFC3339</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> Same as <b><tt class='constant'>DATE_ATOM</tt></b> (since PHP 5.1.3) </span> </dd> <dt id='datetime.constants.rss' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::RSS</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_RSS</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> RSS (Mon, 15 Aug 2005 15:52:01 +0000) </span> </dd> <dt id='datetime.constants.w3c' class='varlistentry'> <span class='term'><b><tt class='constant'>DateTime::W3C</tt></b></span> <br /><span class='term'><b><tt class='constant'>DATE_W3C</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> World Wide Web Consortium (example: 2005-08-15T15:52:01+00:00) </span> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/datetime.add.php'>DateTime::add</a> &amp;acirc;&amp;#128;&amp;#148; Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object</li><li><a href='http://www.php.net/manual/en/datetime.construct.php'>DateTime::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Returns new DateTime object</li><li><a href='http://www.php.net/manual/en/datetime.createfromformat.php'>DateTime::createFromFormat</a> &amp;acirc;&amp;#128;&amp;#148; Returns new DateTime object formatted according to the specified format</li><li><a href='http://www.php.net/manual/en/datetime.diff.php'>DateTime::diff</a> &amp;acirc;&amp;#128;&amp;#148; Returns the difference between two DateTime objects</li><li><a href='http://www.php.net/manual/en/datetime.format.php'>DateTime::format</a> &amp;acirc;&amp;#128;&amp;#148; Returns date formatted according to given format</li><li><a href='http://www.php.net/manual/en/datetime.getlasterrors.php'>DateTime::getLastErrors</a> &amp;acirc;&amp;#128;&amp;#148; Returns the warnings and errors</li><li><a href='http://www.php.net/manual/en/datetime.getoffset.php'>DateTime::getOffset</a> &amp;acirc;&amp;#128;&amp;#148; Returns the daylight saving time offset</li><li><a href='http://www.php.net/manual/en/datetime.gettimestamp.php'>DateTime::getTimestamp</a> &amp;acirc;&amp;#128;&amp;#148; Gets the Unix timestamp</li><li><a href='http://www.php.net/manual/en/datetime.gettimezone.php'>DateTime::getTimezone</a> &amp;acirc;&amp;#128;&amp;#148; Return time zone relative to given DateTime</li><li><a href='http://www.php.net/manual/en/datetime.modify.php'>DateTime::modify</a> &amp;acirc;&amp;#128;&amp;#148; Alters the timestamp</li><li><a href='http://www.php.net/manual/en/datetime.set-state.php'>DateTime::__set_state</a> &amp;acirc;&amp;#128;&amp;#148; The __set_state handler</li><li><a href='http://www.php.net/manual/en/datetime.setdate.php'>DateTime::setDate</a> &amp;acirc;&amp;#128;&amp;#148; Sets the date</li><li><a href='http://www.php.net/manual/en/datetime.setisodate.php'>DateTime::setISODate</a> &amp;acirc;&amp;#128;&amp;#148; Sets the ISO date</li><li><a href='http://www.php.net/manual/en/datetime.settime.php'>DateTime::setTime</a> &amp;acirc;&amp;#128;&amp;#148; Sets the time</li><li><a href='http://www.php.net/manual/en/datetime.settimestamp.php'>DateTime::setTimestamp</a> &amp;acirc;&amp;#128;&amp;#148; Sets the date and time based on an Unix timestamp</li><li><a href='http://www.php.net/manual/en/datetime.settimezone.php'>DateTime::setTimezone</a> &amp;acirc;&amp;#128;&amp;#148; Sets the time zone for the DateTime object</li><li><a href='http://www.php.net/manual/en/datetime.sub.php'>DateTime::sub</a> &amp;acirc;&amp;#128;&amp;#148; Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object</li><li><a href='http://www.php.net/manual/en/datetime.wakeup.php'>DateTime::__wakeup</a> &amp;acirc;&amp;#128;&amp;#148; The __wakeup handler</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="date" value="<div id='function.date' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.date.php'>date</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>date</span> &amp;mdash; <span class='dc-title'>Format a local time/date</span></p> </div> <a name='function.date.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>date</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt></span> ] )</div> <p class='para rdfs-comment'> Returns a string formatted according to the given format string using the given integer <i><tt class='parameter'>timestamp</tt></i> or the current time if no timestamp is given. In other words, <i><tt class='parameter'>timestamp</tt></i> is optional and defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p> </div> <a name='function.date.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The format of the outputted date <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. See the formatting options below. There are also several <a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.types' class='link'>predefined date constants</a> that may be used instead, so for example <b><tt class='constant'>DATE_RSS</tt></b> contains the format string <i>&amp;#039;D, d M Y H:i:s&amp;#039;</i>. </p> <p class='para'> </p><table class='doctable table'> <caption><b>The following characters are recognized in the <i><tt class='parameter'>format</tt></i> parameter string</b></caption> <thead valign='middle'> <tr valign='middle'> <th><i><tt class='parameter'>format</tt></i> character</th> <th>Description</th> <th>Example returned values</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='center'><em class='emphasis'>Day</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>d</i></td> <td align='left'>Day of the month, 2 digits with leading zeros</td> <td align='left'><i>01</i> to <i>31</i></td> </tr> <tr valign='middle'> <td align='left'><i>D</i></td> <td align='left'>A textual representation of a day, three letters</td> <td align='left'><i>Mon</i> through <i>Sun</i></td> </tr> <tr valign='middle'> <td align='left'><i>j</i></td> <td align='left'>Day of the month without leading zeros</td> <td align='left'><i>1</i> to <i>31</i></td> </tr> <tr valign='middle'> <td align='left'><i>l</i> (lowercase &amp;#039;L&amp;#039;)</td> <td align='left'>A full textual representation of the day of the week</td> <td align='left'><i>Sunday</i> through <i>Saturday</i></td> </tr> <tr valign='middle'> <td align='left'><i>N</i></td> <td align='left'>ISO-8601 numeric representation of the day of the week (added in PHP 5.1.0)</td> <td align='left'><i>1</i> (for Monday) through <i>7</i> (for Sunday)</td> </tr> <tr valign='middle'> <td align='left'><i>S</i></td> <td align='left'>English ordinal suffix for the day of the month, 2 characters</td> <td align='left'> <i>st</i>, <i>nd</i>, <i>rd</i> or <i>th</i>. Works well with <i>j</i> </td> </tr> <tr valign='middle'> <td align='left'><i>w</i></td> <td align='left'>Numeric representation of the day of the week</td> <td align='left'><i>0</i> (for Sunday) through <i>6</i> (for Saturday)</td> </tr> <tr valign='middle'> <td align='left'><i>z</i></td> <td align='left'>The day of the year (starting from 0)</td> <td align='left'><i>0</i> through <i>365</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Week</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>W</i></td> <td align='left'>ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0)</td> <td align='left'>Example: <i>42</i> (the 42nd week in the year)</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Month</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>F</i></td> <td align='left'>A full textual representation of a month, such as January or March</td> <td align='left'><i>January</i> through <i>December</i></td> </tr> <tr valign='middle'> <td align='left'><i>m</i></td> <td align='left'>Numeric representation of a month, with leading zeros</td> <td align='left'><i>01</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>M</i></td> <td align='left'>A short textual representation of a month, three letters</td> <td align='left'><i>Jan</i> through <i>Dec</i></td> </tr> <tr valign='middle'> <td align='left'><i>n</i></td> <td align='left'>Numeric representation of a month, without leading zeros</td> <td align='left'><i>1</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>t</i></td> <td align='left'>Number of days in the given month</td> <td align='left'><i>28</i> through <i>31</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Year</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>L</i></td> <td align='left'>Whether it&amp;#039;s a leap year</td> <td align='left'><i>1</i> if it is a leap year, <i>0</i> otherwise.</td> </tr> <tr valign='middle'> <td align='left'><i>o</i></td> <td align='left'>ISO-8601 year number. This has the same value as <i>Y</i>, except that if the ISO week number (<i>W</i>) belongs to the previous or next year, that year is used instead. (added in PHP 5.1.0)</td> <td align='left'>Examples: <i>1999</i> or <i>2003</i></td> </tr> <tr valign='middle'> <td align='left'><i>Y</i></td> <td align='left'>A full numeric representation of a year, 4 digits</td> <td align='left'>Examples: <i>1999</i> or <i>2003</i></td> </tr> <tr valign='middle'> <td align='left'><i>y</i></td> <td align='left'>A two digit representation of a year</td> <td align='left'>Examples: <i>99</i> or <i>03</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Time</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>a</i></td> <td align='left'>Lowercase Ante meridiem and Post meridiem</td> <td align='left'><i>am</i> or <i>pm</i></td> </tr> <tr valign='middle'> <td align='left'><i>A</i></td> <td align='left'>Uppercase Ante meridiem and Post meridiem</td> <td align='left'><i>AM</i> or <i>PM</i></td> </tr> <tr valign='middle'> <td align='left'><i>B</i></td> <td align='left'>Swatch Internet time</td> <td align='left'><i>000</i> through <i>999</i></td> </tr> <tr valign='middle'> <td align='left'><i>g</i></td> <td align='left'>12-hour format of an hour without leading zeros</td> <td align='left'><i>1</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>G</i></td> <td align='left'>24-hour format of an hour without leading zeros</td> <td align='left'><i>0</i> through <i>23</i></td> </tr> <tr valign='middle'> <td align='left'><i>h</i></td> <td align='left'>12-hour format of an hour with leading zeros</td> <td align='left'><i>01</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>H</i></td> <td align='left'>24-hour format of an hour with leading zeros</td> <td align='left'><i>00</i> through <i>23</i></td> </tr> <tr valign='middle'> <td align='left'><i>i</i></td> <td align='left'>Minutes with leading zeros</td> <td align='left'><i>00</i> to <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>s</i></td> <td align='left'>Seconds, with leading zeros</td> <td align='left'><i>00</i> through <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>u</i></td> <td align='left'>Microseconds (added in PHP 5.2.2)</td> <td align='left'>Example: <i>654321</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Timezone</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>e</i></td> <td align='left'>Timezone identifier (added in PHP 5.1.0)</td> <td align='left'>Examples: <i>UTC</i>, <i>GMT</i>, <i>Atlantic/Azores</i></td> </tr> <tr valign='middle'> <td align='left'><i>I</i> (capital i)</td> <td align='left'>Whether or not the date is in daylight saving time</td> <td align='left'><i>1</i> if Daylight Saving Time, <i>0</i> otherwise.</td> </tr> <tr valign='middle'> <td align='left'><i>O</i></td> <td align='left'>Difference to Greenwich time (GMT) in hours</td> <td align='left'>Example: <i>+0200</i></td> </tr> <tr valign='middle'> <td align='left'><i>P</i></td> <td align='left'>Difference to Greenwich time (GMT) with colon between hours and minutes (added in PHP 5.1.3)</td> <td align='left'>Example: <i>+02:00</i></td> </tr> <tr valign='middle'> <td align='left'><i>T</i></td> <td align='left'>Timezone abbreviation</td> <td align='left'>Examples: <i>EST</i>, <i>MDT</i> ...</td> </tr> <tr valign='middle'> <td align='left'><i>Z</i></td> <td align='left'>Timezone offset in seconds. The offset for timezones west of UTC is always negative, and for those east of UTC is always positive.</td> <td align='left'><i>-43200</i> through <i>50400</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Full Date/Time</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>c</i></td> <td align='left'>ISO 8601 date (added in PHP 5)</td> <td align='left'>2004-02-12T15:19:21+00:00</td> </tr> <tr valign='middle'> <td align='left'><i>r</i></td> <td align='left'><a href='http://www.faqs.org/rfcs/rfc2822' class='link external'>&amp;raquo; RFC 2822</a> formatted date</td> <td align='left'>Example: <i>Thu, 21 Dec 2000 16:01:07 +0200</i></td> </tr> <tr valign='middle'> <td align='left'><i>U</i></td> <td align='left'>Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)</td> <td align='left'>See also <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a></td> </tr> </tbody> </table> <p> </p> <p class='para'> Unrecognized characters in the format string will be printed as-is. The <i>Z</i> format will always return <i>0</i> when using <a href='http://www.php.net/manual/en/function.gmdate.php' class='function'>gmdate()</a>. </p> <blockquote><p><b class='note'>Note</b>: Since this function only accepts <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> timestamps the <i>u</i> format character is only useful when using the <a href='http://www.php.net/manual/en/function.date-format.php' class='function'>date_format()</a> function with user based timestamps created with <a href='http://www.php.net/manual/en/function.date-create.php' class='function'>date_create()</a>. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>timestamp</tt></i> parameter is an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp that defaults to the current local time if a <i><tt class='parameter'>timestamp</tt></i> is not given. In other words, it defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p></dd> </dl> <p> </p> </div> <a name='function.date.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a formatted date string. If a non-numeric value is used for <i><tt class='parameter'>timestamp</tt></i> , <b><tt class='constant'>FALSE</tt></b> is returned and an <b><tt class='constant'>E_WARNING</tt></b> level error is emitted. </p> </div> <a name='function.date.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the time zone is not valid, and/or a <b><tt class='constant'>E_STRICT</tt></b> or <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. See also <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a></p> </div> <a name='function.date.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer). However, before PHP 5.1.0 this range was limited from 01-01-1970 to 19-01-2038 on some systems (e.g. Windows). </td> </tr> <tr valign='middle'><td align='left'>5.1.0</td><td align='left'><p class='para'> Now issues the <b><tt class='constant'>E_STRICT</tt></b> and <b><tt class='constant'>E_NOTICE</tt></b> time zone errors.</p></td></tr> <tr valign='middle'> <td align='left'>5.1.1</td> <td align='left'> There are useful <a href='http://www.php.net/manual/en/datetime.constants.php' class='link'>constants</a> of standard date/time formats that can be used to specify the <i><tt class='parameter'>format</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.date.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>date()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;the&amp;nbsp;default&amp;nbsp;timezone&amp;nbsp;to&amp;nbsp;use.&amp;nbsp;Available&amp;nbsp;since&amp;nbsp;PHP&amp;nbsp;5.1<br /></span><span style='color: #0000BB'>date_default_timezone_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UTC'</span><span style='color: #007700'>);<br /><br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Prints&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;Monday<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'l'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Prints&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;Monday&amp;nbsp;8th&amp;nbsp;of&amp;nbsp;August&amp;nbsp;2005&amp;nbsp;03:12:46&amp;nbsp;PM<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'l&amp;nbsp;jS&amp;nbsp;\of&amp;nbsp;F&amp;nbsp;Y&amp;nbsp;h:i:s&amp;nbsp;A'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Prints:&amp;nbsp;July&amp;nbsp;1,&amp;nbsp;2000&amp;nbsp;is&amp;nbsp;on&amp;nbsp;a&amp;nbsp;Saturday<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'July&amp;nbsp;1,&amp;nbsp;2000&amp;nbsp;is&amp;nbsp;on&amp;nbsp;a&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'l'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2000</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;use&amp;nbsp;the&amp;nbsp;constants&amp;nbsp;in&amp;nbsp;the&amp;nbsp;format&amp;nbsp;parameter&amp;nbsp;*/<br />//&amp;nbsp;prints&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;Mon,&amp;nbsp;15&amp;nbsp;Aug&amp;nbsp;2005&amp;nbsp;15:12:46&amp;nbsp;UTC<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #0000BB'>DATE_RFC822</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;2000-07-01T00:00:00+00:00<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #0000BB'>DATE_ATOM</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2000</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> You can prevent a recognized character in the format string from being expanded by escaping it with a preceding backslash. If the character with a backslash is already a special sequence, you may need to also escape the backslash. </p><div class='example'> <p><b>Example #2 Escaping characters in <b>date()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;Wednesday&amp;nbsp;the&amp;nbsp;15th<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'l&amp;nbsp;\\t\h\e&amp;nbsp;jS'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> It is possible to use <b>date()</b> and <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a> together to find dates in the future or the past. </p><div class='example'> <p><b>Example #3 <b>date()</b> and <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$tomorrow&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'m'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>)+</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$lastmonth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'m'</span><span style='color: #007700'>)-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>),&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$nextyear&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'m'</span><span style='color: #007700'>),&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>),&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y'</span><span style='color: #007700'>)+</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><blockquote><p><b class='note'>Note</b>: This can be more reliable than simply adding or subtracting the number of seconds in a day or month to a timestamp because of daylight saving time. <br /> </p></blockquote><p> </p> <p class='para'> Some examples of <b>date()</b> formatting. Note that you should escape any other characters, as any which currently have a special meaning will produce undesirable results, and other characters may be assigned meaning in future PHP versions. When escaping, be sure to use single quotes to prevent characters like \n from becoming newlines. </p><div class='example'> <p><b>Example #4 <b>date()</b> Formatting</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Assuming&amp;nbsp;today&amp;nbsp;is&amp;nbsp;March&amp;nbsp;10th,&amp;nbsp;2001,&amp;nbsp;5:16:18&amp;nbsp;pm,&amp;nbsp;and&amp;nbsp;that&amp;nbsp;we&amp;nbsp;are&amp;nbsp;in&amp;nbsp;the<br />//&amp;nbsp;Mountain&amp;nbsp;Standard&amp;nbsp;Time&amp;nbsp;(MST)&amp;nbsp;Time&amp;nbsp;Zone<br /><br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'F&amp;nbsp;j,&amp;nbsp;Y,&amp;nbsp;g:i&amp;nbsp;a'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;March&amp;nbsp;10,&amp;nbsp;2001,&amp;nbsp;5:16&amp;nbsp;pm<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'m.d.y'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;03.10.01<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'j,&amp;nbsp;n,&amp;nbsp;Y'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;10,&amp;nbsp;3,&amp;nbsp;2001<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Ymd'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;20010310<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'h-i-s,&amp;nbsp;j-m-y,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;w&amp;nbsp;Day'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;05-16-18,&amp;nbsp;10-03-01,&amp;nbsp;1631&amp;nbsp;1618&amp;nbsp;6&amp;nbsp;Satpm01<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'\i\t&amp;nbsp;\i\s&amp;nbsp;\t\h\e&amp;nbsp;jS&amp;nbsp;\d\a\y.'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;it&amp;nbsp;is&amp;nbsp;the&amp;nbsp;10th&amp;nbsp;day.<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D&amp;nbsp;M&amp;nbsp;j&amp;nbsp;G:i:s&amp;nbsp;T&amp;nbsp;Y'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Sat&amp;nbsp;Mar&amp;nbsp;10&amp;nbsp;17:16:18&amp;nbsp;MST&amp;nbsp;2001<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'H:m:s&amp;nbsp;\m&amp;nbsp;\i\s\&amp;nbsp;\m\o\n\t\h'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;17:03:18&amp;nbsp;m&amp;nbsp;is&amp;nbsp;month<br /></span><span style='color: #0000BB'>$today&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'H:i:s'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;17:16:18<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> To format dates in other languages, you should use the <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a> and <a href='http://www.php.net/manual/en/function.strftime.php' class='function'>strftime()</a> functions instead of <b>date()</b>. </p> </div> <a name='function.date.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: To generate a timestamp from a string representation of the date, you may be able to use <a href='http://www.php.net/manual/en/function.strtotime.php' class='function'>strtotime()</a>. Additionally, some databases have functions to convert their date formats into timestamps (such as MySQL&amp;#039;s <a href='http://dev.mysql.com/doc/mysql/en/date-and-time-functions.html' class='link external'>&amp;raquo; UNIX_TIMESTAMP</a> function). <br /> </p></blockquote> <div class='tip'><b class='tip'>Tip</b> <p class='para'> Timestamp of the start of the request is available in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.server.php' class='classname'>$_SERVER['REQUEST_TIME']</a></var> since PHP 5.1. </p> </div> </div> <a name='function.date.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getlastmod.php' class='function' rel='rdfs-seeAlso'>getlastmod()</a> - Gets time of last page modification</li> <li class='member'><a href='http://www.php.net/manual/en/function.gmdate.php' class='function' rel='rdfs-seeAlso'>gmdate()</a> - Format a GMT/UTC date/time</li> <li class='member'><a href='http://www.php.net/manual/en/function.mktime.php' class='function' rel='rdfs-seeAlso'>mktime()</a> - Get Unix timestamp for a date</li> <li class='member'><a href='http://www.php.net/manual/en/function.strftime.php' class='function' rel='rdfs-seeAlso'>strftime()</a> - Format a local time/date according to locale settings</li> <li class='member'><a href='http://www.php.net/manual/en/function.time.php' class='function' rel='rdfs-seeAlso'>time()</a> - Return current Unix timestamp</li> <li class='member'><a href='http://www.php.net/manual/en/class.datetime.php#datetime.constants.types' class='link'>Predefined DateTime Constants</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="current" value="<div id='function.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.current.php'>current</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>current</span> &amp;mdash; <span class='dc-title'>Return the current element in an array</span></p> </div> <a name='function.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>current</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> Every array has an internal pointer to its &amp;quot;current&amp;quot; element, which is initialized to the first element inserted into the array. </p> </div> <a name='function.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> </dl> <p> </p> </div> <a name='function.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The <b>current()</b> function simply returns the value of the array element that&amp;#039;s currently being pointed to by the internal pointer. It does not move the pointer in any way. If the internal pointer points beyond the end of the elements list or the array is empty, <b>current()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Example use of <b>current()</b> and friends</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$transport&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'foot'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bike'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'car'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'plane'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'foot';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>prev</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'foot';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>end</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'plane';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'plane';<br /><br /></span><span style='color: #0000BB'>$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bool(false)<br /><br /></span><span style='color: #0000BB'>$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(array());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;array(0)&amp;nbsp;{&amp;nbsp;}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.current.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> You won&amp;#039;t be able to distinguish the end of an array from a <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>FALSE</tt></b> element. To properly traverse an array which may contain <b><tt class='constant'>FALSE</tt></b> elements, see the <a href='http://www.php.net/manual/en/function.each.php' class='function'>each()</a> function. </span> </p></blockquote> </div> <a name='function.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.end.php' class='function' rel='rdfs-seeAlso'>end()</a> - Set the internal pointer of an array to its last element</li> <li class='member'><a href='http://www.php.net/manual/en/function.key.php' class='function' rel='rdfs-seeAlso'>key()</a> - Fetch a key from an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> <li class='member'><a href='http://www.php.net/manual/en/function.prev.php' class='function' rel='rdfs-seeAlso'>prev()</a> - Rewind the internal array pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.reset.php' class='function' rel='rdfs-seeAlso'>reset()</a> - Set the internal pointer of an array to its first element</li> <li class='member'><a href='http://www.php.net/manual/en/function.next.php' class='function' rel='rdfs-seeAlso'>next()</a> - Advance the internal array pointer of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_version" value="<div id='function.curl-version' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-version.php'>curl_version</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_version</span> &amp;mdash; <span class='dc-title'>Gets cURL version information</span></p> </div> <a name='function.curl-version.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>curl_version</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$age</tt><span class='initializer'> = CURLVERSION_NOW</span></span> ] )</div> <p class='para rdfs-comment'> Returns information about the cURL version. </p> </div> <a name='function.curl-version.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>age</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.curl-version.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array with the following elements: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Indice</th> <th>Value description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>version_number</td> <td align='left'>cURL 24 bit version number</td> </tr> <tr valign='middle'> <td align='left'>version</td> <td align='left'>cURL version number, as a string</td> </tr> <tr valign='middle'> <td align='left'>ssl_version_number</td> <td align='left'>OpenSSL 24 bit version number</td> </tr> <tr valign='middle'> <td align='left'>ssl_version</td> <td align='left'>OpenSSL version number, as a string</td> </tr> <tr valign='middle'> <td align='left'>libz_version</td> <td align='left'>zlib version number, as a string</td> </tr> <tr valign='middle'> <td align='left'>host</td> <td align='left'>Information about the host where cURL was built</td> </tr> <tr valign='middle'> <td align='left'>age</td> <td class='empty'>&amp;nbsp;</td> </tr> <tr valign='middle'> <td align='left'>features</td> <td align='left'>A bitmask of the <i>CURL_VERSION_XXX</i> constants</td> </tr> <tr valign='middle'> <td align='left'>protocols</td> <td align='left'>An array of protocols names supported by cURL</td> </tr> </tbody> </table> <p> </p> </div> <a name='function.curl-version.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_version()</b> example</b></p> <div class='example-contents para'><p> This example will check which features that&amp;#039;s available in cURL build by using the &amp;#039;features&amp;#039; bitmask returned by <b>curl_version()</b>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;curl&amp;nbsp;version&amp;nbsp;array<br /></span><span style='color: #0000BB'>$version&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_version</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;These&amp;nbsp;are&amp;nbsp;the&amp;nbsp;bitfields&amp;nbsp;that&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;<br />//&amp;nbsp;to&amp;nbsp;check&amp;nbsp;for&amp;nbsp;features&amp;nbsp;in&amp;nbsp;the&amp;nbsp;curl&amp;nbsp;build<br /></span><span style='color: #0000BB'>$bitfields&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;Array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'CURL_VERSION_IPV6'</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'CURL_VERSION_KERBEROS4'</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'CURL_VERSION_SSL'</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'CURL_VERSION_LIBZ'<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br /><br /><br />foreach(</span><span style='color: #0000BB'>$bitfields&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$feature</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$feature&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;(</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'features'</span><span style='color: #007700'>]&amp;nbsp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>constant</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$feature</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;matches'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;does&amp;nbsp;not&amp;nbsp;match'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_setopt_array" value="<div id='function.curl-setopt-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-setopt-array.php'>curl_setopt_array</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.3)</p><p class='refpurpose'><span class='refname'>curl_setopt_array</span> &amp;mdash; <span class='dc-title'>Set multiple options for a cURL transfer</span></p> </div> <a name='function.curl-setopt-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>curl_setopt_array</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$options</tt></span> )</div> <p class='para rdfs-comment'> Sets multiple options for a cURL session. This function is useful for setting a large amount of cURL options without repetitively calling <a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function'>curl_setopt()</a>. </p> </div> <a name='function.curl-setopt-array.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> specifying which options to set and their values. The keys should be valid <a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function'>curl_setopt()</a> constants or their integer equivalents. </p> </dd> </dl> <p> </p> </div> <a name='function.curl-setopt-array.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if all options were successfully set. If an option could not be successfully set, <b><tt class='constant'>FALSE</tt></b> is immediately returned, ignoring any future options in the <i><tt class='parameter'>options</tt></i> array. </p> </div> <a name='function.curl-setopt-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Initializing a new cURL session and fetching a web page </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>$options&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>CURLOPT_URL&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>false<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>curl_setopt_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$options</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resource,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> Prior to PHP 5.1.4 this function can be simulated with: </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Our own implementation of <b>curl_setopt_array()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>function_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'curl_setopt_array'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>curl_setopt_array</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$curl_options</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$curl_options&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$option&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$option</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-setopt-array.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As with <a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function'>curl_setopt()</a>, passing an array to <b><tt class='constant'>CURLOPT_POST</tt></b> will encode the data as <em class='emphasis'>multipart/form-data</em>, while passing a URL-encoded string will encode the data as <em class='emphasis'>application/x-www-form-urlencoded</em>. <br /> </p></blockquote> </div> <a name='function.curl-setopt-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function' rel='rdfs-seeAlso'>curl_setopt()</a> - Set an option for a cURL transfer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_setopt" value="<div id='function.curl-setopt' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-setopt.php'>curl_setopt</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_setopt</span> &amp;mdash; <span class='dc-title'>Set an option for a cURL transfer</span></p> </div> <a name='function.curl-setopt.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>curl_setopt</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$option</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Sets an option on the given cURL session handle. </p> </div> <a name='function.curl-setopt.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>option</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i>CURLOPT_XXX</i> option to set. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to be set on <i><tt class='parameter'>option</tt></i> . </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be a bool for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_AUTOREFERER</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to automatically set the <i>Referer:</i> field in requests where it follows a <i>Location:</i> redirect. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_BINARYTRANSFER</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to return the raw output when <b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b> is used. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_COOKIESESSION</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to mark this as a new cookie &amp;quot;session&amp;quot;. It will force libcurl to ignore all cookies it is about to load that are &amp;quot;session cookies&amp;quot; from the previous session. By default, libcurl always stores and loads all cookies, independent if they are session cookies or not. Session cookies are cookies without expiry date and they are meant to be alive and existing for this &amp;quot;session&amp;quot; only. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CRLF</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to convert Unix newlines to CRLF newlines on transfers. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_DNS_USE_GLOBAL_CACHE</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to use a global DNS cache. This option is not thread-safe and is enabled by default. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FAILONERROR</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to fail silently if the HTTP code returned is greater than or equal to 400. The default behavior is to return the page normally, ignoring the code. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FILETIME</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to attempt to retrieve the modification date of the remote document. This value can be retrieved using the <i><tt class='parameter'>CURLINFO_FILETIME</tt></i> option with <a href='http://www.php.net/manual/en/function.curl-getinfo.php' class='function'>curl_getinfo()</a>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FOLLOWLOCATION</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to follow any <i>&amp;quot;Location: &amp;quot;</i> header that the server sends as part of the HTTP header (note this is recursive, PHP will follow as many <i>&amp;quot;Location: &amp;quot;</i> headers that it is sent, unless <b><tt class='constant'>CURLOPT_MAXREDIRS</tt></b> is set). </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FORBID_REUSE</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to force the connection to explicitly close when it has finished processing, and not be pooled for reuse. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FRESH_CONNECT</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to force the use of a new connection instead of a cached one. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTP_USE_EPRT</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to use EPRT (and LPRT) when doing active FTP downloads. Use <b><tt class='constant'>FALSE</tt></b> to disable EPRT and LPRT and use PORT only. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTP_USE_EPSV</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to first try an EPSV command for FTP transfers before reverting back to PASV. Set to <b><tt class='constant'>FALSE</tt></b> to disable EPSV. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTPAPPEND</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to append to the remote file instead of overwriting it. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTPASCII</tt></b></td> <td align='left'> An alias of <b><tt class='constant'>CURLOPT_TRANSFERTEXT</tt></b>. Use that instead. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTPLISTONLY</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to only list the names of an FTP directory. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HEADER</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to include the header in the output. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTPGET</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to reset the HTTP request method to GET. Since GET is the default, this is only necessary if the request method has been changed. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTPPROXYTUNNEL</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to tunnel through a given HTTP proxy. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_MUTE</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to be completely silent with regards to the cURL functions. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_NETRC</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to scan the <var class='filename'>~/.netrc</var> file to find a username and password for the remote site that a connection is being established with. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_NOBODY</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to exclude the body from the output. Request method is then set to HEAD. Changing this to <b><tt class='constant'>FALSE</tt></b> does not change it to GET. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_NOPROGRESS</tt></b></td> <td align='left'><p class='para'> <b><tt class='constant'>TRUE</tt></b> to disable the progress meter for cURL transfers. </p><blockquote><p><b class='note'>Note</b>: PHP automatically sets this option to <b><tt class='constant'>TRUE</tt></b>, this should only be changed for debugging purposes. <br /> </p></blockquote><p> </p></td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_NOSIGNAL</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to ignore any cURL function that causes a signal to be sent to the PHP process. This is turned on by default in multi-threaded SAPIs so timeout options can still be used. </td> <td align='left'> Added in cURL 7.10. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_POST</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to do a regular HTTP POST. This POST is the normal <i>application/x-www-form-urlencoded</i> kind, most commonly used by HTML forms. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PUT</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to HTTP PUT a file. The file to PUT must be set with <b><tt class='constant'>CURLOPT_INFILE</tt></b> and <b><tt class='constant'>CURLOPT_INFILESIZE</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to return the transfer as a string of the return value of <a href='http://www.php.net/manual/en/function.curl-exec.php' class='function'>curl_exec()</a> instead of outputting it out directly. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSL_VERIFYPEER</tt></b></td> <td align='left'> <b><tt class='constant'>FALSE</tt></b> to stop cURL from verifying the peer&amp;#039;s certificate. Alternate certificates to verify against can be specified with the <b><tt class='constant'>CURLOPT_CAINFO</tt></b> option or a certificate directory can be specified with the <b><tt class='constant'>CURLOPT_CAPATH</tt></b> option. <b><tt class='constant'>CURLOPT_SSL_VERIFYHOST</tt></b> may also need to be <b><tt class='constant'>TRUE</tt></b> or <b><tt class='constant'>FALSE</tt></b> if <b><tt class='constant'>CURLOPT_SSL_VERIFYPEER</tt></b> is disabled (it defaults to 2). </td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> by default as of cURL 7.10. Default bundle installed as of cURL 7.10. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_TRANSFERTEXT</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to use ASCII mode for FTP transfers. For LDAP, it retrieves data in plain text instead of HTML. On Windows systems, it will not set <i>STDOUT</i> to binary mode. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_UNRESTRICTED_AUTH</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to keep sending the username and password when following locations (using <b><tt class='constant'>CURLOPT_FOLLOWLOCATION</tt></b>), even when the hostname has changed. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_UPLOAD</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to prepare for an upload. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_VERBOSE</tt></b></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> to output verbose information. Writes output to <i>STDERR</i>, or the file specified using <b><tt class='constant'>CURLOPT_STDERR</tt></b>. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be an integer for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_BUFFERSIZE</tt></b></td> <td align='left'> The size of the buffer to use for each read. There is no guarantee this request will be fulfilled, however. </td> <td align='left'> Added in cURL 7.10. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CLOSEPOLICY</tt></b></td> <td align='left'> Either <i><tt class='parameter'>CURLCLOSEPOLICY_LEAST_RECENTLY_USED</tt></i> or <i><tt class='parameter'>CURLCLOSEPOLICY_OLDEST</tt></i> . There are three other <i>CURLCLOSEPOLICY_</i> constants, but cURL does not support them yet. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CONNECTTIMEOUT</tt></b></td> <td align='left'> The number of seconds to wait while trying to connect. Use 0 to wait indefinitely. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CONNECTTIMEOUT_MS</tt></b></td> <td align='left'> The number of milliseconds to wait while trying to connect. Use 0 to wait indefinitely. </td> <td align='left'> Added in cURL 7.16.2. Available since PHP 5.2.3. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_DNS_CACHE_TIMEOUT</tt></b></td> <td align='left'> The number of seconds to keep DNS entries in memory. This option is set to 120 (2 minutes) by default. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTPSSLAUTH</tt></b></td> <td align='left'> The FTP authentication method (when is activated): <i>CURLFTPAUTH_SSL</i> (try SSL first), <i>CURLFTPAUTH_TLS</i> (try TLS first), or <i>CURLFTPAUTH_DEFAULT</i> (let cURL decide). </td> <td align='left'> Added in cURL 7.12.2. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTP_VERSION</tt></b></td> <td align='left'> <i><tt class='parameter'>CURL_HTTP_VERSION_NONE</tt></i> (default, lets CURL decide which version to use), <i><tt class='parameter'>CURL_HTTP_VERSION_1_0</tt></i> (forces HTTP/1.0), or <i><tt class='parameter'>CURL_HTTP_VERSION_1_1</tt></i> (forces HTTP/1.1). </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTPAUTH</tt></b></td> <td align='left'> <p class='para'> The HTTP authentication method(s) to use. The options are: <i><tt class='parameter'>CURLAUTH_BASIC</tt></i> , <i><tt class='parameter'>CURLAUTH_DIGEST</tt></i> , <i><tt class='parameter'>CURLAUTH_GSSNEGOTIATE</tt></i> , <i><tt class='parameter'>CURLAUTH_NTLM</tt></i> , <i><tt class='parameter'>CURLAUTH_ANY</tt></i> , and <i><tt class='parameter'>CURLAUTH_ANYSAFE</tt></i> . </p> <p class='para'> The bitwise <i>|</i> (or) operator can be used to combine more than one method. If this is done, cURL will poll the server to see what methods it supports and pick the best one. </p> <p class='para'> <i><tt class='parameter'>CURLAUTH_ANY</tt></i> is an alias for <i>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</i>. </p> <p class='para'> <i><tt class='parameter'>CURLAUTH_ANYSAFE</tt></i> is an alias for <i>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</i>. </p> </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_INFILESIZE</tt></b></td> <td align='left'> The expected size, in bytes, of the file when uploading a file to a remote site. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_LOW_SPEED_LIMIT</tt></b></td> <td align='left'> The transfer speed, in bytes per second, that the transfer should be below during <b><tt class='constant'>CURLOPT_LOW_SPEED_TIME</tt></b> seconds for PHP to consider the transfer too slow and abort. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_LOW_SPEED_TIME</tt></b></td> <td align='left'> The number of seconds the transfer should be below <b><tt class='constant'>CURLOPT_LOW_SPEED_LIMIT</tt></b> for PHP to consider the transfer too slow and abort. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_MAXCONNECTS</tt></b></td> <td align='left'> The maximum amount of persistent connections that are allowed. When the limit is reached, <b><tt class='constant'>CURLOPT_CLOSEPOLICY</tt></b> is used to determine which connection to close. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_MAXREDIRS</tt></b></td> <td align='left'> The maximum amount of HTTP redirections to follow. Use this option alongside <b><tt class='constant'>CURLOPT_FOLLOWLOCATION</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PORT</tt></b></td> <td align='left'> An alternative port number to connect to. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROTOCOLS</tt></b></td> <td align='left'> <p class='para'> Bitmask of <b><tt class='constant'>CURLPROTO_*</tt></b> values. If used, this bitmask limits what protocols libcurl may use in the transfer. This allows you to have a libcurl built to support a wide range of protocols but still limit specific transfers to only be allowed to use a subset of them. By default libcurl will accept all protocols it supports. See also <b><tt class='constant'>CURLOPT_REDIR_PROTOCOLS</tt></b>. </p> <p class='para'> Valid protocol options are: <i><tt class='parameter'>CURLPROTO_HTTP</tt></i> , <i><tt class='parameter'>CURLPROTO_HTTPS</tt></i> , <i><tt class='parameter'>CURLPROTO_FTP</tt></i> , <i><tt class='parameter'>CURLPROTO_FTPS</tt></i> , <i><tt class='parameter'>CURLPROTO_SCP</tt></i> , <i><tt class='parameter'>CURLPROTO_SFTP</tt></i> , <i><tt class='parameter'>CURLPROTO_TELNET</tt></i> , <i><tt class='parameter'>CURLPROTO_LDAP</tt></i> , <i><tt class='parameter'>CURLPROTO_LDAPS</tt></i> , <i><tt class='parameter'>CURLPROTO_DICT</tt></i> , <i><tt class='parameter'>CURLPROTO_FILE</tt></i> , <i><tt class='parameter'>CURLPROTO_TFTP</tt></i> , <i><tt class='parameter'>CURLPROTO_ALL</tt></i> </p> </td> <td align='left'> Added in cURL 7.19.4. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROXYAUTH</tt></b></td> <td align='left'> The HTTP authentication method(s) to use for the proxy connection. Use the same bitmasks as described in <b><tt class='constant'>CURLOPT_HTTPAUTH</tt></b>. For proxy authentication, only <i><tt class='parameter'>CURLAUTH_BASIC</tt></i> and <i><tt class='parameter'>CURLAUTH_NTLM</tt></i> are currently supported. </td> <td align='left'> Added in cURL 7.10.7. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROXYPORT</tt></b></td> <td align='left'> The port number of the proxy to connect to. This port number can also be set in <b><tt class='constant'>CURLOPT_PROXY</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROXYTYPE</tt></b></td> <td align='left'> Either <i><tt class='parameter'>CURLPROXY_HTTP</tt></i> (default) or <i><tt class='parameter'>CURLPROXY_SOCKS5</tt></i> . </td> <td align='left'> Added in cURL 7.10. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_REDIR_PROTOCOLS</tt></b></td> <td align='left'> Bitmask of <b><tt class='constant'>CURLPROTO_*</tt></b> values. If used, this bitmask limits what protocols libcurl may use in a transfer that it follows to in a redirect when <b><tt class='constant'>CURLOPT_FOLLOWLOCATION</tt></b> is enabled. This allows you to limit specific transfers to only be allowed to use a subset of protocols in redirections. By default libcurl will allow all protocols except for FILE and SCP. This is a difference compared to pre-7.19.4 versions which unconditionally would follow to all protocols supported. See also <b><tt class='constant'>CURLOPT_PROTOCOLS</tt></b> for protocol constant values. </td> <td align='left'> Added in cURL 7.19.4. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_RESUME_FROM</tt></b></td> <td align='left'> The offset, in bytes, to resume a transfer from. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSL_VERIFYHOST</tt></b></td> <td align='left'> 1 to check the existence of a common name in the SSL peer certificate. 2 to check the existence of a common name and also verify that it matches the hostname provided. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLVERSION</tt></b></td> <td align='left'> The SSL version (2 or 3) to use. By default PHP will try to determine this itself, although in some cases this must be set manually. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_TIMECONDITION</tt></b></td> <td align='left'> How <b><tt class='constant'>CURLOPT_TIMEVALUE</tt></b> is treated. Use <i><tt class='parameter'>CURL_TIMECOND_IFMODSINCE</tt></i> to return the page only if it has been modified since the time specified in <b><tt class='constant'>CURLOPT_TIMEVALUE</tt></b>. If it hasn&amp;#039;t been modified, a <i>&amp;quot;304 Not Modified&amp;quot;</i> header will be returned assuming <b><tt class='constant'>CURLOPT_HEADER</tt></b> is <b><tt class='constant'>TRUE</tt></b>. Use <i><tt class='parameter'>CURL_TIMECOND_IFUNMODSINCE</tt></i> for the reverse effect. <i><tt class='parameter'>CURL_TIMECOND_IFMODSINCE</tt></i> is the default. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_TIMEOUT</tt></b></td> <td align='left'> The maximum number of seconds to allow cURL functions to execute. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_TIMEOUT_MS</tt></b></td> <td align='left'> The maximum number of milliseconds to allow cURL functions to execute. </td> <td align='left'> Added in cURL 7.16.2. Available since PHP 5.2.3. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_TIMEVALUE</tt></b></td> <td align='left'> The time in seconds since January 1st, 1970. The time will be used by <b><tt class='constant'>CURLOPT_TIMECONDITION</tt></b>. By default, <i><tt class='parameter'>CURL_TIMECOND_IFMODSINCE</tt></i> is used. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be a string for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CAINFO</tt></b></td> <td align='left'> The name of a file holding one or more certificates to verify the peer with. This only makes sense when used in combination with <b><tt class='constant'>CURLOPT_SSL_VERIFYPEER</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CAPATH</tt></b></td> <td align='left'> A directory that holds multiple CA certificates. Use this option alongside <b><tt class='constant'>CURLOPT_SSL_VERIFYPEER</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_COOKIE</tt></b></td> <td align='left'> The contents of the <i>&amp;quot;Set-Cookie: &amp;quot;</i> header to be used in the HTTP request. Note that multiple cookies are separated with a semicolon followed by a space (e.g., &amp;quot;<i>fruit=apple; colour=red</i>&amp;quot;) </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_COOKIEFILE</tt></b></td> <td align='left'> The name of the file containing the cookie data. The cookie file can be in Netscape format, or just plain HTTP-style headers dumped into a file. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_COOKIEJAR</tt></b></td> <td align='left'> The name of a file to save all internal cookies to when the connection closes. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_CUSTOMREQUEST</tt></b></td> <td align='left'><p class='para'> A custom request method to use instead of <i>&amp;quot;GET&amp;quot;</i> or <i>&amp;quot;HEAD&amp;quot;</i> when doing a HTTP request. This is useful for doing <i>&amp;quot;DELETE&amp;quot;</i> or other, more obscure HTTP requests. Valid values are things like <i>&amp;quot;GET&amp;quot;</i>, <i>&amp;quot;POST&amp;quot;</i>, <i>&amp;quot;CONNECT&amp;quot;</i> and so on; i.e. Do not enter a whole HTTP request line here. For instance, entering <i>&amp;quot;GET /index.html HTTP/1.0\r\n\r\n&amp;quot;</i> would be incorrect. </p><blockquote><p><b class='note'>Note</b>: Don&amp;#039;t do this without making sure the server supports the custom request method first. <br /> </p></blockquote><p> </p></td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_EGDSOCKET</tt></b></td> <td align='left'> Like <b><tt class='constant'>CURLOPT_RANDOM_FILE</tt></b>, except a filename to an Entropy Gathering Daemon socket. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_ENCODING</tt></b></td> <td align='left'> The contents of the <i>&amp;quot;Accept-Encoding: &amp;quot;</i> header. This enables decoding of the response. Supported encodings are <i>&amp;quot;identity&amp;quot;</i>, <i>&amp;quot;deflate&amp;quot;</i>, and <i>&amp;quot;gzip&amp;quot;</i>. If an empty string, <i>&amp;quot;&amp;quot;</i>, is set, a header containing all supported encoding types is sent. </td> <td align='left'> Added in cURL 7.10. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FTPPORT</tt></b></td> <td align='left'> The value which will be used to get the IP address to use for the FTP &amp;quot;POST&amp;quot; instruction. The &amp;quot;POST&amp;quot; instruction tells the remote server to connect to our specified IP address. The string may be a plain IP address, a hostname, a network interface name (under Unix), or just a plain &amp;#039;-&amp;#039; to use the systems default IP address. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_INTERFACE</tt></b></td> <td align='left'> The name of the outgoing network interface to use. This can be an interface name, an IP address or a host name. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_KRB4LEVEL</tt></b></td> <td align='left'> The KRB4 (Kerberos 4) security level. Any of the following values (in order from least to most powerful) are valid: <i>&amp;quot;clear&amp;quot;</i>, <i>&amp;quot;safe&amp;quot;</i>, <i>&amp;quot;confidential&amp;quot;</i>, <i>&amp;quot;private&amp;quot;.</i>. If the string does not match one of these, <i>&amp;quot;private&amp;quot;</i> is used. Setting this option to <b><tt class='constant'>NULL</tt></b> will disable KRB4 security. Currently KRB4 security only works with FTP transactions. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_POSTFIELDS</tt></b></td> <td align='left'> The full data to post in a HTTP &amp;quot;POST&amp;quot; operation. To post a file, prepend a filename with <i>@</i> and use the full path. This can either be passed as a urlencoded string like &amp;#039;<i>para1=val1&amp;amp;para2=val2&amp;amp;...</i>&amp;#039; or as an array with the field name as key and field data as value. If <i><tt class='parameter'>value</tt></i> is an array, the <i>Content-Type</i> header will be set to <i>multipart/form-data</i>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROXY</tt></b></td> <td align='left'> The HTTP proxy to tunnel requests through. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PROXYUSERPWD</tt></b></td> <td align='left'> A username and password formatted as <i>&amp;quot;[username]:[password]&amp;quot;</i> to use for the connection to the proxy. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_RANDOM_FILE</tt></b></td> <td align='left'> A filename to be used to seed the random number generator for SSL. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_RANGE</tt></b></td> <td align='left'> Range(s) of data to retrieve in the format <i>&amp;quot;X-Y&amp;quot;</i> where X or Y are optional. HTTP transfers also support several intervals, separated with commas in the format <i>&amp;quot;X-Y,N-M&amp;quot;</i>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_REFERER</tt></b></td> <td align='left'> The contents of the <i>&amp;quot;Referer: &amp;quot;</i> header to be used in a HTTP request. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSL_CIPHER_LIST</tt></b></td> <td align='left'> A list of ciphers to use for SSL. For example, <i>RC4-SHA</i> and <i>TLSv1</i> are valid cipher lists. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLCERT</tt></b></td> <td align='left'> The name of a file containing a PEM formatted certificate. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLCERTPASSWD</tt></b></td> <td align='left'> The password required to use the <b><tt class='constant'>CURLOPT_SSLCERT</tt></b> certificate. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLCERTTYPE</tt></b></td> <td align='left'> The format of the certificate. Supported formats are <i>&amp;quot;PEM&amp;quot;</i> (default), <i>&amp;quot;DER&amp;quot;</i>, and <i>&amp;quot;ENG&amp;quot;</i>. </td> <td align='left'> Added in cURL 7.9.3. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLENGINE</tt></b></td> <td align='left'> The identifier for the crypto engine of the private SSL key specified in <b><tt class='constant'>CURLOPT_SSLKEY</tt></b>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLENGINE_DEFAULT</tt></b></td> <td align='left'> The identifier for the crypto engine used for asymmetric crypto operations. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLKEY</tt></b></td> <td align='left'> The name of a file containing a private SSL key. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLKEYPASSWD</tt></b></td> <td align='left'><p class='para'> The secret password needed to use the private SSL key specified in <b><tt class='constant'>CURLOPT_SSLKEY</tt></b>. </p><blockquote><p><b class='note'>Note</b>: Since this option contains a sensitive password, remember to keep the PHP script it is contained within safe. <br /> </p></blockquote><p> </p></td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_SSLKEYTYPE</tt></b></td> <td align='left'> The key type of the private SSL key specified in <b><tt class='constant'>CURLOPT_SSLKEY</tt></b>. Supported key types are <i>&amp;quot;PEM&amp;quot;</i> (default), <i>&amp;quot;DER&amp;quot;</i>, and <i>&amp;quot;ENG&amp;quot;</i>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_URL</tt></b></td> <td align='left'> The URL to fetch. This can also be set when initializing a session with <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_USERAGENT</tt></b></td> <td align='left'> The contents of the <i>&amp;quot;User-Agent: &amp;quot;</i> header to be used in a HTTP request. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_USERPWD</tt></b></td> <td align='left'> A username and password formatted as <i>&amp;quot;[username]:[password]&amp;quot;</i> to use for the connection. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be an array for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTP200ALIASES</tt></b></td> <td align='left'> An array of HTTP 200 responses that will be treated as valid responses and not as errors. </td> <td align='left'> Added in cURL 7.10.3. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HTTPHEADER</tt></b></td> <td align='left'> An array of HTTP header fields to set. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_POSTQUOTE</tt></b></td> <td align='left'> An array of FTP commands to execute on the server after the FTP request has been performed. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_QUOTE</tt></b></td> <td align='left'> An array of FTP commands to execute on the server prior to the FTP request. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be a stream resource (using <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, for example) for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_FILE</tt></b></td> <td align='left'> The file that the transfer should be written to. The default is <i>STDOUT</i> (the browser window). </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_INFILE</tt></b></td> <td align='left'> The file that the transfer should be read from when uploading. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_STDERR</tt></b></td> <td align='left'> An alternative location to output errors to instead of <i>STDERR</i>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_WRITEHEADER</tt></b></td> <td align='left'> The file that the header part of the transfer is written to. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> <p class='para'> <i><tt class='parameter'>value</tt></i> should be a string that is the name of a valid callback function for the following values of the <i><tt class='parameter'>option</tt></i> parameter: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>Set <i><tt class='parameter'>value</tt></i> to</th> <th>Notes</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_HEADERFUNCTION</tt></b></td> <td align='left'> The name of a callback function where the callback function takes two parameters. The first is the cURL resource, the second is a string with the header data to be written. The header data must be written when using this callback function. Return the number of bytes written. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_PASSWDFUNCTION</tt></b></td> <td align='left'> The name of a callback function where the callback function takes three parameters. The first is the cURL resource, the second is a string containing a password prompt, and the third is the maximum password length. Return the string containing the password. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_READFUNCTION</tt></b></td> <td align='left'> The name of a callback function where the callback function takes two parameters. The first is the cURL resource, and the second is a string with the data to be read. The data must be read by using this callback function. Return the number of bytes read. Return 0 to signal <i>EOF</i>. </td> <td align='left'> </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>CURLOPT_WRITEFUNCTION</tt></b></td> <td align='left'> The name of a callback function where the callback function takes two parameters. The first is the cURL resource, and the second is a string with the data to be written. The data must be written by using this callback function. Must return the exact number of bytes written or this will fail. </td> <td align='left'> </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='function.curl-setopt.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.curl-setopt.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.10</td> <td align='left'> Introduced <b><tt class='constant'>CURLOPT_PROTOCOLS</tt></b>, and <b><tt class='constant'>CURLOPT_REDIR_PROTOCOLS</tt></b>. </td> </tr> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Introduced <b><tt class='constant'>CURLOPT_AUTOREFERER</tt></b>, <b><tt class='constant'>CURLOPT_BINARYTRANSFER</tt></b>, <b><tt class='constant'>CURLOPT_FTPSSLAUTH</tt></b>, <b><tt class='constant'>CURLOPT_AUTOREFERER</tt></b>, <b><tt class='constant'>CURLOPT_PROXYAUTH</tt></b>, and <b><tt class='constant'>CURLOPT_TIMECONDITION</tt></b>. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Introduced <b><tt class='constant'>CURLOPT_FTP_USE_EPRT</tt></b>, <b><tt class='constant'>CURLOPT_NOSIGNAL</tt></b>, <b><tt class='constant'>CURLOPT_UNRESTRICTED_AUTH</tt></b>, <b><tt class='constant'>CURLOPT_BUFFERSIZE</tt></b>, <b><tt class='constant'>CURLOPT_HTTPAUTH</tt></b>, <b><tt class='constant'>CURLOPT_PROXYPORT</tt></b>, <b><tt class='constant'>CURLOPT_PROXYTYPE</tt></b>, <b><tt class='constant'>CURLOPT_SSLCERTTYPE</tt></b>, and <b><tt class='constant'>CURLOPT_HTTP200ALIASES</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.curl-setopt.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Initializing a new cURL session and fetching a web page</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resource,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Uploading file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;http://localhost/upload.php:<br />print_r($_POST);<br />print_r($_FILES);<br />*/<br /><br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'name'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'file'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'@/home/user/test.png'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://localhost/upload.php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_POST</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_POSTFIELDS</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [name] =&amp;gt; Foo ) Array ( [file] =&amp;gt; Array ( [name] =&amp;gt; test.png [type] =&amp;gt; image/png [tmp_name] =&amp;gt; /tmp/phpcpjNeQ [error] =&amp;gt; 0 [size] =&amp;gt; 279 ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.curl-setopt.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Passing an array to <b><tt class='constant'>CURLOPT_POSTFIELDS</tt></b> will encode the data as <em class='emphasis'>multipart/form-data</em>, while passing a URL-encoded string will encode the data as <em class='emphasis'>application/x-www-form-urlencoded</em>. <br /> </p></blockquote> </div> <a name='function.curl-setopt.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-setopt-array.php' class='function' rel='rdfs-seeAlso'>curl_setopt_array()</a> - Set multiple options for a cURL transfer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_select" value="<div id='function.curl-multi-select' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-select.php'>curl_multi_select</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_select</span> &amp;mdash; <span class='dc-title'>Wait for activity on any curl_multi connection</span></p> </div> <a name='function.curl-multi-select.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>curl_multi_select</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$timeout</tt><span class='initializer'> = 1.0</span></span> ] )</div> <p class='para rdfs-comment'> Blocks until there is activity on any of the curl_multi connections. </p> </div> <a name='function.curl-multi-select.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timeout</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Time, in seconds, to wait for a response. </p> </dd> </dl> <p> </p> </div> <a name='function.curl-multi-select.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On success, returns the number of descriptors contained in, the descriptor sets. On failure, this function will return -1 on a select failure or timeout (from the underlying select system call). </p> </div> <a name='function.curl-multi-select.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_remove_handle" value="<div id='function.curl-multi-remove-handle' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-remove-handle.php'>curl_multi_remove_handle</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_remove_handle</span> &amp;mdash; <span class='dc-title'>Remove a multi handle from a set of cURL handles</span></p> </div> <a name='function.curl-multi-remove-handle.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>curl_multi_remove_handle</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Removes a given <i><tt class='parameter'>ch</tt></i> handle from the given <i><tt class='parameter'>mh</tt></i> handle. When the <i><tt class='parameter'>ch</tt></i> handle has been removed, it is again perfectly legal to run <a href='http://www.php.net/manual/en/function.curl-exec.php' class='function'>curl_exec()</a> on this handle. Removing a handle while being used, will effectively halt all transfers in progress. </p> </div> <a name='function.curl-multi-remove-handle.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-multi-remove-handle.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On success, returns a cURL handle, <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.curl-multi-remove-handle.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-init.php' class='function' rel='rdfs-seeAlso'>curl_init()</a> - Initialize a cURL session</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-add-handle.php' class='function' rel='rdfs-seeAlso'>curl_multi_add_handle()</a> - Add a normal cURL handle to a cURL multi handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_init" value="<div id='function.curl-multi-init' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-init.php'>curl_multi_init</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_init</span> &amp;mdash; <span class='dc-title'>Returns a new cURL multi handle</span></p> </div> <a name='function.curl-multi-init.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>curl_multi_init</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Allows the processing of multiple cURL handles in parallel. </p> </div> <a name='function.curl-multi-init.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <b>curl_multi_init()</b>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-multi-init.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a cURL multi handle resource on success, <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.curl-multi-init.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_multi_init()</b> example</b></p> <div class='example-contents para'><p> This example will create two cURL handles, add them to a multi handle, and then run them in parallel. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;both&amp;nbsp;cURL&amp;nbsp;resources<br /></span><span style='color: #0000BB'>$ch1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$ch2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//create&amp;nbsp;the&amp;nbsp;multiple&amp;nbsp;cURL&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$mh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//add&amp;nbsp;the&amp;nbsp;two&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$running</span><span style='color: #007700'>=</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//execute&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #007700'>do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$running</span><span style='color: #007700'>);<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$running&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//close&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-multi-init.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-init.php' class='function' rel='rdfs-seeAlso'>curl_init()</a> - Initialize a cURL session</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-close.php' class='function' rel='rdfs-seeAlso'>curl_multi_close()</a> - Close a set of cURL handles</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_info_read" value="<div id='function.curl-multi-info-read' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-info-read.php'>curl_multi_info_read</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_info_read</span> &amp;mdash; <span class='dc-title'>Get information about the current transfers</span></p> </div> <a name='function.curl-multi-info-read.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>curl_multi_info_read</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$msgs_in_queue</tt><span class='initializer'> = NULL</span></span> ] )</div> <p class='para rdfs-comment'> Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed. </p> <p class='para'> Repeated calls to this function will return a new result each time, until a <b><tt class='constant'>FALSE</tt></b> is returned as a signal that there is no more to get at this point. The integer pointed to with <i><tt class='parameter'>msgs_in_queue</tt></i> will contain the number of remaining messages after this function was called. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The data the returned resource points to will not survive calling <a href='http://www.php.net/manual/en/function.curl-multi-remove-handle.php' class='function'>curl_multi_remove_handle()</a>. </p> </div> </div> <a name='function.curl-multi-info-read.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>msgs_in_queue</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of messages that are still in the queue </p> </dd> </dl> <p> </p> </div> <a name='function.curl-multi-info-read.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On success, returns an associative array for the message, <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.curl-multi-info-read.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> <i><tt class='parameter'>msgs_in_queue</tt></i> was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.curl-multi-info-read.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_getcontent" value="<div id='function.curl-multi-getcontent' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-getcontent.php'>curl_multi_getcontent</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_getcontent</span> &amp;mdash; <span class='dc-title'>Return the content of a cURL handle if <b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b> is set</span></p> </div> <a name='function.curl-multi-getcontent.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>curl_multi_getcontent</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> If <b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b> is an option that is set for a specific handle, then this function will return the content of that cURL handle in the form of a string. </p> </div> <a name='function.curl-multi-getcontent.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-multi-getcontent.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Return the content of a cURL handle if <b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b> is set. </p> </div> <a name='function.curl-multi-getcontent.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_exec" value="<div id='function.curl-multi-exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-exec.php'>curl_multi_exec</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_exec</span> &amp;mdash; <span class='dc-title'>Run the sub-connections of the current cURL handle</span></p> </div> <a name='function.curl-multi-exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>curl_multi_exec</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$still_running</tt></span> )</div> <p class='para rdfs-comment'> Processes each of the handles in the stack. This method can be called whether or not a handle needs to read or write data. </p> </div> <a name='function.curl-multi-exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>still_running</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A reference to a flag to tell whether the operations are still running. </p> </dd> </dl> <p> </p> </div> <a name='function.curl-multi-exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A cURL code defined in the cURL <a href='http://www.php.net/manual/en/curl.constants.php' class='link'>Predefined Constants</a>. </p> <blockquote><p><b class='note'>Note</b>: This only returns errors regarding the whole multi stack. There might still have occurred problems on individual transfers even when this function returns <b><tt class='constant'>CURLM_OK</tt></b>. <br /> </p></blockquote> </div> <a name='function.curl-multi-exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_multi_exec()</b> example</b></p> <div class='example-contents para'><p> This example will create two cURL handles, add them to a multi handle, and then run them in parallel. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;both&amp;nbsp;cURL&amp;nbsp;resources<br /></span><span style='color: #0000BB'>$ch1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$ch2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://lxr.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//create&amp;nbsp;the&amp;nbsp;multiple&amp;nbsp;cURL&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$mh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//add&amp;nbsp;the&amp;nbsp;two&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$active&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//execute&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #007700'>do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$mrc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$active</span><span style='color: #007700'>);<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$mrc&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>CURLM_CALL_MULTI_PERFORM</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(</span><span style='color: #0000BB'>$active&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>$mrc&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>CURLM_OK</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>curl_multi_select</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>)&amp;nbsp;!=&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$mrc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$active</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$mrc&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>CURLM_CALL_MULTI_PERFORM</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//close&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-multi-exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-exec.php' class='function' rel='rdfs-seeAlso'>curl_exec()</a> - Perform a cURL session</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_close" value="<div id='function.curl-multi-close' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-close.php'>curl_multi_close</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_close</span> &amp;mdash; <span class='dc-title'>Close a set of cURL handles</span></p> </div> <a name='function.curl-multi-close.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>curl_multi_close</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> )</div> <p class='para rdfs-comment'> Closes a set of cURL handles. </p> </div> <a name='function.curl-multi-close.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-multi-close.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.curl-multi-close.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_multi_close()</b> example</b></p> <div class='example-contents para'><p> This example will create two cURL handles, add them to a multi handle, and then run them in parallel. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;both&amp;nbsp;cURL&amp;nbsp;resources<br /></span><span style='color: #0000BB'>$ch1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$ch2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//create&amp;nbsp;the&amp;nbsp;multiple&amp;nbsp;cURL&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$mh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//add&amp;nbsp;the&amp;nbsp;two&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$running</span><span style='color: #007700'>=</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//execute&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #007700'>do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$running</span><span style='color: #007700'>);<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$running&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)<br /><br /></span><span style='color: #FF8000'>//close&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-multi-close.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-close.php' class='function' rel='rdfs-seeAlso'>curl_close()</a> - Close a cURL session</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_multi_add_handle" value="<div id='function.curl-multi-add-handle' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-multi-add-handle.php'>curl_multi_add_handle</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_multi_add_handle</span> &amp;mdash; <span class='dc-title'>Add a normal cURL handle to a cURL multi handle</span></p> </div> <a name='function.curl-multi-add-handle.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>curl_multi_add_handle</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$mh</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Adds the <i><tt class='parameter'>ch</tt></i> handle to the multi handle <i><tt class='parameter'>mh</tt></i> </p> </div> <a name='function.curl-multi-add-handle.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mh</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL multi handle returned by <a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function'>curl_multi_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-multi-add-handle.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 0 on success, or one of the <b><tt class='constant'>CURLM_XXX</tt></b> errors code. </p> </div> <a name='function.curl-multi-add-handle.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_multi_add_handle()</b> example</b></p> <div class='example-contents para'><p> This example will create two cURL handles, add them to a multi handle, and then run them in parallel. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;both&amp;nbsp;cURL&amp;nbsp;resources<br /></span><span style='color: #0000BB'>$ch1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$ch2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//create&amp;nbsp;the&amp;nbsp;multiple&amp;nbsp;cURL&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$mh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//add&amp;nbsp;the&amp;nbsp;two&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_add_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$running</span><span style='color: #007700'>=</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//execute&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #007700'>do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>curl_multi_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,</span><span style='color: #0000BB'>$running</span><span style='color: #007700'>);<br />}&amp;nbsp;while(</span><span style='color: #0000BB'>$running&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//close&amp;nbsp;all&amp;nbsp;the&amp;nbsp;handles<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_remove_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_multi_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mh</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-multi-add-handle.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-remove-handle.php' class='function' rel='rdfs-seeAlso'>curl_multi_remove_handle()</a> - Remove a multi handle from a set of cURL handles</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-init.php' class='function' rel='rdfs-seeAlso'>curl_init()</a> - Initialize a cURL session</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_init" value="<div id='function.curl-init' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-init.php'>curl_init</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_init</span> &amp;mdash; <span class='dc-title'>Initialize a cURL session</span></p> </div> <a name='function.curl-init.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>curl_init</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$url</tt><span class='initializer'> = NULL</span></span> ] )</div> <p class='para rdfs-comment'> Initializes a new session and return a cURL handle for use with the <a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function'>curl_setopt()</a>, <a href='http://www.php.net/manual/en/function.curl-exec.php' class='function'>curl_exec()</a>, and <a href='http://www.php.net/manual/en/function.curl-close.php' class='function'>curl_close()</a> functions. </p> </div> <a name='function.curl-init.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>url</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If provided, the <b><tt class='constant'>CURLOPT_URL</tt></b> option will be set to its value. You can manually set this using the <a href='http://www.php.net/manual/en/function.curl-setopt.php' class='function'>curl_setopt()</a> function. </p> </dd> </dl> <p> </p> </div> <a name='function.curl-init.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a cURL handle on success, <b><tt class='constant'>FALSE</tt></b> on errors. </p> </div> <a name='function.curl-init.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Initializing a new cURL session and fetching a web page </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resource,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-init.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-close.php' class='function' rel='rdfs-seeAlso'>curl_close()</a> - Close a cURL session</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-init.php' class='function' rel='rdfs-seeAlso'>curl_multi_init()</a> - Returns a new cURL multi handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_getinfo" value="<div id='function.curl-getinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-getinfo.php'>curl_getinfo</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_getinfo</span> &amp;mdash; <span class='dc-title'>Get information regarding a specific transfer</span></p> </div> <a name='function.curl-getinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>curl_getinfo</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$opt</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Gets information about the last transfer, </p> </div> <a name='function.curl-getinfo.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>opt</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This may be one of the following constants: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_EFFECTIVE_URL</tt></b> - Last effective URL </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_HTTP_CODE</tt></b> - Last received HTTP code </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_FILETIME</tt></b> - Remote time of the retrieved document, if -1 is returned the time of the document is unknown </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_TOTAL_TIME</tt></b> - Total transaction time in seconds for last transfer </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_NAMELOOKUP_TIME</tt></b> - Time in seconds until name resolving was complete </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_CONNECT_TIME</tt></b> - Time in seconds it took to establish the connection </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_PRETRANSFER_TIME</tt></b> - Time in seconds from start until just before file transfer begins </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_STARTTRANSFER_TIME</tt></b> - Time in seconds until the first byte is about to be transferred </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_REDIRECT_TIME</tt></b> - Time in seconds of all redirection steps before final transaction was started </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_SIZE_UPLOAD</tt></b> - Total number of bytes uploaded </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_SIZE_DOWNLOAD</tt></b> - Total number of bytes downloaded </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_SPEED_DOWNLOAD</tt></b> - Average download speed </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_SPEED_UPLOAD</tt></b> - Average upload speed </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_HEADER_SIZE</tt></b> - Total size of all headers received </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_HEADER_OUT</tt></b> - The request string sent </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_REQUEST_SIZE</tt></b> - Total size of issued requests, currently only for HTTP requests </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_SSL_VERIFYRESULT</tt></b> - Result of SSL certification verification requested by setting <b><tt class='constant'>CURLOPT_SSL_VERIFYPEER</tt></b> </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_CONTENT_LENGTH_DOWNLOAD</tt></b> - content-length of download, read from <i>Content-Length:</i> field </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_CONTENT_LENGTH_UPLOAD</tt></b> - Specified size of upload </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CURLINFO_CONTENT_TYPE</tt></b> - <i>Content-Type:</i> of downloaded object, NULL indicates server did not send valid <i>Content-Type:</i> header </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.curl-getinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If <i><tt class='parameter'>opt</tt></i> is given, returns its value as a string. Otherwise, returns an associative array with the following elements (which correspond to <i><tt class='parameter'>opt</tt></i> ): </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot;url&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;content_type&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;http_code&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;header_size&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;request_size&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;filetime&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;ssl_verify_result&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;redirect_count&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;total_time&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;namelookup_time&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;connect_time&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;pretransfer_time&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;size_upload&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;size_download&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;speed_download&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;speed_upload&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;download_content_length&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;upload_content_length&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;starttransfer_time&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;redirect_time&amp;quot; </span> </li> </ul><p> </p> </div> <a name='function.curl-getinfo.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.3</td> <td align='left'> Introduced <b><tt class='constant'>CURLINFO_HEADER_OUT</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.curl-getinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_getinfo()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;curl&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.yahoo.com/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Execute<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;any&amp;nbsp;error&amp;nbsp;occured<br /></span><span style='color: #007700'>if(!</span><span style='color: #0000BB'>curl_errno</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>))<br />{<br />&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_getinfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br />&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Took&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'total_time'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;seconds&amp;nbsp;to&amp;nbsp;send&amp;nbsp;a&amp;nbsp;request&amp;nbsp;to&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'url'</span><span style='color: #007700'>];<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Close&amp;nbsp;handle<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_exec" value="<div id='function.curl-exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-exec.php'>curl_exec</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_exec</span> &amp;mdash; <span class='dc-title'>Perform a cURL session</span></p> </div> <a name='function.curl-exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>curl_exec</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Execute the given cURL session. </p> <p class='para'> This function should be called after initializing a cURL session and all the options for the session are set. </p> </div> <a name='function.curl-exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. However, if the <b><tt class='constant'>CURLOPT_RETURNTRANSFER</tt></b> option is set, it will return the result on success, <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.curl-exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Fetching a web page</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resource,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-exec.php' class='function' rel='rdfs-seeAlso'>curl_multi_exec()</a> - Run the sub-connections of the current cURL handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_error" value="<div id='function.curl-error' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-error.php'>curl_error</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_error</span> &amp;mdash; <span class='dc-title'>Return a string containing the last error for the current session</span></p> </div> <a name='function.curl-error.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>curl_error</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Returns a clear text error message for the last cURL operation. </p> </div> <a name='function.curl-error.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-error.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the error message or <i>&amp;#039;&amp;#039;</i> (the empty string) if no error occurred. </p> </div> <a name='function.curl-error.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_error()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;curl&amp;nbsp;handle&amp;nbsp;to&amp;nbsp;a&amp;nbsp;non-existing&amp;nbsp;location<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://404.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_RETURNTRANSFER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /><br />if(</span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Curl&amp;nbsp;error:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>curl_error</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br />}<br />else<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Operation&amp;nbsp;completed&amp;nbsp;without&amp;nbsp;any&amp;nbsp;errors'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Close&amp;nbsp;handle<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-error.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-errno.php' class='function' rel='rdfs-seeAlso'>curl_errno()</a> - Return the last error number</li> <li class='member'><a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html' class='link external'>&amp;raquo; Curl error codes</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_errno" value="<div id='function.curl-errno' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-errno.php'>curl_errno</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_errno</span> &amp;mdash; <span class='dc-title'>Return the last error number</span></p> </div> <a name='function.curl-errno.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>curl_errno</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Returns the error number for the last cURL operation. </p> </div> <a name='function.curl-errno.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-errno.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the error number or <i>0</i> (zero) if no error occurred. </p> </div> <a name='function.curl-errno.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>curl_errno()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;curl&amp;nbsp;handle&amp;nbsp;to&amp;nbsp;a&amp;nbsp;non-existing&amp;nbsp;location<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://404.php.net/'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Execute<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_RETURNTRANSFER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;any&amp;nbsp;error&amp;nbsp;occured<br /></span><span style='color: #007700'>if(</span><span style='color: #0000BB'>curl_errno</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>))<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Curl&amp;nbsp;error:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>curl_error</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Close&amp;nbsp;handle<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-errno.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-error.php' class='function' rel='rdfs-seeAlso'>curl_error()</a> - Return a string containing the last error for the current session</li> <li class='member'><a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html' class='link external'>&amp;raquo; Curl error codes</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_copy_handle" value="<div id='function.curl-copy-handle' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-copy-handle.php'>curl_copy_handle</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>curl_copy_handle</span> &amp;mdash; <span class='dc-title'>Copy a cURL handle along with all of its preferences</span></p> </div> <a name='function.curl-copy-handle.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>curl_copy_handle</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Copies a cURL handle keeping the same preferences. </p> </div> <a name='function.curl-copy-handle.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-copy-handle.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a new cURL handle. </p> </div> <a name='function.curl-copy-handle.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Copying a cURL handle</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;copy&amp;nbsp;the&amp;nbsp;handle<br /></span><span style='color: #0000BB'>$ch2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_copy_handle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;(http://www.example.com/)&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resources,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="curl_close" value="<div id='function.curl-close' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.curl-close.php'>curl_close</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>curl_close</span> &amp;mdash; <span class='dc-title'>Close a cURL session</span></p> </div> <a name='function.curl-close.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>curl_close</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$ch</tt></span> )</div> <p class='para rdfs-comment'> Closes a cURL session and frees all resources. The cURL handle, <i><tt class='parameter'>ch</tt></i> , is also deleted. </p> </div> <a name='function.curl-close.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ch</tt></i> </span> </dt><dd class='listitem'> <p class='para'>A cURL handle returned by <a href='http://www.php.net/manual/en/function.curl-init.php' class='function'>curl_init()</a>.</p></dd> </dl> <p> </p> </div> <a name='function.curl-close.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.curl-close.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Initializing a new cURL session and fetching a web page</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;cURL&amp;nbsp;resource<br /></span><span style='color: #0000BB'>$ch&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>curl_init</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;other&amp;nbsp;appropriate&amp;nbsp;options<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_URL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'http://www.example.com/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>curl_setopt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CURLOPT_HEADER</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;grab&amp;nbsp;URL&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;it&amp;nbsp;to&amp;nbsp;the&amp;nbsp;browser<br /></span><span style='color: #0000BB'>curl_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;close&amp;nbsp;cURL&amp;nbsp;resource,&amp;nbsp;and&amp;nbsp;free&amp;nbsp;up&amp;nbsp;system&amp;nbsp;resources<br /></span><span style='color: #0000BB'>curl_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ch</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.curl-close.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.curl-init.php' class='function' rel='rdfs-seeAlso'>curl_init()</a> - Initialize a cURL session</li> <li class='member'><a href='http://www.php.net/manual/en/function.curl-multi-close.php' class='function' rel='rdfs-seeAlso'>curl_multi_close()</a> - Close a set of cURL handles</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_xdigit" value="<div id='function.ctype-xdigit' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-xdigit.php'>ctype_xdigit</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_xdigit</span> &amp;mdash; <span class='dc-title'> Check for character(s) representing a hexadecimal digit </span></p> </div> <a name='function.ctype-xdigit.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_xdigit</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are hexadecimal &amp;#039;digits&amp;#039;. </p> </div> <a name='function.ctype-xdigit.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-xdigit.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is a hexadecimal &amp;#039;digit&amp;#039;, that is a decimal digit or a character from <i>[A-Fa-f]</i> , <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-xdigit.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_xdigit()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'AB10BC99'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'AR1012'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ab12bc99'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_xdigit</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;hexadecimal&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;hexadecimal&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string AB10BC99 consists of all hexadecimal digits. The string AR1012 does not consist of all hexadecimal digits. The string ab12bc99 consists of all hexadecimal digits. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-xdigit.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-digit.php' class='function' rel='rdfs-seeAlso'>ctype_digit()</a> - Check for numeric character(s)</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_upper" value="<div id='function.ctype-upper' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-upper.php'>ctype_upper</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_upper</span> &amp;mdash; <span class='dc-title'>Check for uppercase character(s)</span></p> </div> <a name='function.ctype-upper.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_upper</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are uppercase characters. </p> </div> <a name='function.ctype-upper.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-upper.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is an uppercase letter in the current locale. </p> </div> <a name='function.ctype-upper.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_upper()</b> example (using the default locale)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'AKLWC139'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'LMNSDO'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'akwSKWsm'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_upper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;uppercase&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;uppercase&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string AKLWC139 does not consist of all uppercase letters. The string LMNSDO consists of all uppercase letters. The string akwSKWsm does not consist of all uppercase letters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-upper.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-alpha.php' class='function' rel='rdfs-seeAlso'>ctype_alpha()</a> - Check for alphabetic character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-lower.php' class='function' rel='rdfs-seeAlso'>ctype_lower()</a> - Check for lowercase character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_space" value="<div id='function.ctype-space' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-space.php'>ctype_space</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_space</span> &amp;mdash; <span class='dc-title'>Check for whitespace character(s)</span></p> </div> <a name='function.ctype-space.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_space</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , creates whitespace. </p> </div> <a name='function.ctype-space.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-space.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> creates some sort of white space, <b><tt class='constant'>FALSE</tt></b> otherwise. Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters. </p> </div> <a name='function.ctype-space.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_space()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'string1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'\n\r\t'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'\narf12'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'\n\r\t'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_space</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;whitespace&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;whitespace&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string &amp;#039;string1&amp;#039; consists of all whitespace characters. The string &amp;#039;string2&amp;#039; does not consist of all whitespace characters. The string &amp;#039;string3&amp;#039; does not consist of all whitespace characters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-space.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-cntrl.php' class='function' rel='rdfs-seeAlso'>ctype_cntrl()</a> - Check for control character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-graph.php' class='function' rel='rdfs-seeAlso'>ctype_graph()</a> - Check for any printable character(s) except space</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-punct.php' class='function' rel='rdfs-seeAlso'>ctype_punct()</a> - Check for any printable character which is not whitespace or an alphanumeric character</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_punct" value="<div id='function.ctype-punct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-punct.php'>ctype_punct</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_punct</span> &amp;mdash; <span class='dc-title'> Check for any printable character which is not whitespace or an alphanumeric character </span></p> </div> <a name='function.ctype-punct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_punct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are punctuation character. </p> </div> <a name='function.ctype-punct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-punct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is printable, but neither letter, digit or blank, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-punct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_punct()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'ABasdk!@!$#'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'!@&amp;nbsp;#&amp;nbsp;$'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'*&amp;amp;$()'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_punct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;punctuation.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;punctuation.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string ABasdk!@!$# does not consist of all punctuation. The string !@ # $ does not consist of all punctuation. The string *&amp;amp;$() consists of all punctuation. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-punct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-cntrl.php' class='function' rel='rdfs-seeAlso'>ctype_cntrl()</a> - Check for control character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-graph.php' class='function' rel='rdfs-seeAlso'>ctype_graph()</a> - Check for any printable character(s) except space</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_print" value="<div id='function.ctype-print' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-print.php'>ctype_print</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_print</span> &amp;mdash; <span class='dc-title'>Check for printable character(s)</span></p> </div> <a name='function.ctype-print.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_print</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are printable. </p> </div> <a name='function.ctype-print.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-print.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> will actually create output (including blanks). Returns <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>text</tt></i> contains control characters or characters that do not have any output or control function at all. </p> </div> <a name='function.ctype-print.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_print()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'string1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'asdf\n\r\t'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'arf12'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'LKA#@%.54'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_print</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;printable&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;printable&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string &amp;#039;string1&amp;#039; does not consist of all printable characters. The string &amp;#039;string2&amp;#039; consists of all printable characters. The string &amp;#039;string3&amp;#039; consists of all printable characters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-print.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-cntrl.php' class='function' rel='rdfs-seeAlso'>ctype_cntrl()</a> - Check for control character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-graph.php' class='function' rel='rdfs-seeAlso'>ctype_graph()</a> - Check for any printable character(s) except space</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-punct.php' class='function' rel='rdfs-seeAlso'>ctype_punct()</a> - Check for any printable character which is not whitespace or an alphanumeric character</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_lower" value="<div id='function.ctype-lower' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-lower.php'>ctype_lower</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_lower</span> &amp;mdash; <span class='dc-title'>Check for lowercase character(s)</span></p> </div> <a name='function.ctype-lower.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_lower</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are lowercase letters. </p> </div> <a name='function.ctype-lower.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-lower.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is a lowercase letter in the current locale. </p> </div> <a name='function.ctype-lower.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_lower()</b> example (using the default locale)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'aac123'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'qiutoas'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'QASsdks'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_lower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;lowercase&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;lowercase&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string aac123 does not consist of all lowercase letters. The string qiutoas consists of all lowercase letters. The string QASsdks does not consist of all lowercase letters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-lower.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-alpha.php' class='function' rel='rdfs-seeAlso'>ctype_alpha()</a> - Check for alphabetic character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-upper.php' class='function' rel='rdfs-seeAlso'>ctype_upper()</a> - Check for uppercase character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_graph" value="<div id='function.ctype-graph' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-graph.php'>ctype_graph</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_graph</span> &amp;mdash; <span class='dc-title'>Check for any printable character(s) except space</span></p> </div> <a name='function.ctype-graph.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_graph</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , creates visible output. </p> </div> <a name='function.ctype-graph.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-graph.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is printable and actually creates visible output (no white space), <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-graph.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_graph()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'string1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'asdf\n\r\t'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'arf12'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'LKA#@%.54'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_graph</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;(visibly)&amp;nbsp;printable&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;(visibly)&amp;nbsp;printable&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string &amp;#039;string1&amp;#039; does not consist of all (visibly) printable characters. The string &amp;#039;string2&amp;#039; consists of all (visibly) printable characters. The string &amp;#039;string3&amp;#039; consists of all (visibly) printable characters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-graph.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-alnum.php' class='function' rel='rdfs-seeAlso'>ctype_alnum()</a> - Check for alphanumeric character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-print.php' class='function' rel='rdfs-seeAlso'>ctype_print()</a> - Check for printable character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-punct.php' class='function' rel='rdfs-seeAlso'>ctype_punct()</a> - Check for any printable character which is not whitespace or an alphanumeric character</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_digit" value="<div id='function.ctype-digit' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-digit.php'>ctype_digit</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_digit</span> &amp;mdash; <span class='dc-title'>Check for numeric character(s)</span></p> </div> <a name='function.ctype-digit.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_digit</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, <i><tt class='parameter'>text</tt></i> , are numerical. </p> </div> <a name='function.ctype-digit.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-digit.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in the <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> <i><tt class='parameter'>text</tt></i> is a decimal digit, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-digit.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Before PHP 5.1.0, this function returned <b><tt class='constant'>TRUE</tt></b> when <i><tt class='parameter'>text</tt></i> was an empty string. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ctype-digit.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_digit()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'1820.20'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'10002'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'wsl!12'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_digit</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string 1820.20 does not consist of all digits. The string 10002 consists of all digits. The string wsl!12 does not consist of all digits. </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 A <b>ctype_digit()</b> example comparing strings with integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$numeric_string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'42'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$integer&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>42</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>ctype_digit</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$numeric_string</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;true<br /></span><span style='color: #0000BB'>ctype_digit</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$integer</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;false<br /><br /></span><span style='color: #0000BB'>is_numeric</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$numeric_string</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;true<br /></span><span style='color: #0000BB'>is_numeric</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$integer</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;true<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ctype-digit.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function require a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> to be useful, so for example passing in an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> will always return <b><tt class='constant'>FALSE</tt></b>. However, also note that HTML Forms will result in numeric strings and not integers. See also the <a href='http://www.php.net/manual/en/language.types.php' class='link'>types</a> section of the manual. <br /> </p></blockquote> </div> <a name='function.ctype-digit.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-alnum.php' class='function' rel='rdfs-seeAlso'>ctype_alnum()</a> - Check for alphanumeric character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-xdigit.php' class='function' rel='rdfs-seeAlso'>ctype_xdigit()</a> - Check for character(s) representing a hexadecimal digit</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-numeric.php' class='function' rel='rdfs-seeAlso'>is_numeric()</a> - Finds whether a variable is a number or a numeric string</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-int.php' class='function' rel='rdfs-seeAlso'>is_int()</a> - Find whether the type of a variable is integer</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-string.php' class='function' rel='rdfs-seeAlso'>is_string()</a> - Find whether the type of a variable is string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_cntrl" value="<div id='function.ctype-cntrl' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-cntrl.php'>ctype_cntrl</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_cntrl</span> &amp;mdash; <span class='dc-title'>Check for control character(s)</span></p> </div> <a name='function.ctype-cntrl.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_cntrl</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are control characters. Control characters are e.g. line feed, tab, escape. </p> </div> <a name='function.ctype-cntrl.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-cntrl.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is a control character from the current locale, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-cntrl.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_cntrl()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'string1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'\n\r\t'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'arf12'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_cntrl</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;control&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>'&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;control&amp;nbsp;characters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string &amp;#039;string1&amp;#039; consists of all control characters. The string &amp;#039;string2&amp;#039; does not consist of all control characters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-cntrl.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-print.php' class='function' rel='rdfs-seeAlso'>ctype_print()</a> - Check for printable character(s)</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_alpha" value="<div id='function.ctype-alpha' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-alpha.php'>ctype_alpha</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_alpha</span> &amp;mdash; <span class='dc-title'>Check for alphabetic character(s)</span></p> </div> <a name='function.ctype-alpha.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_alpha</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are alphabetic. In the standard <i>C</i> locale letters are just <i>[A-Za-z]</i> and <b>ctype_alpha()</b> is equivalent to <i>(ctype_upper($text) || ctype_lower($text))</i> if $text is just a single character, but other languages have letters that are considered neither upper nor lower case. </p> </div> <a name='function.ctype-alpha.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-alpha.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is a letter from the current locale, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-alpha.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_alpha()</b> example (using the default locale)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'KjgWZC'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'arf12'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_alpha</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;letters.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string KjgWZC consists of all letters. The string arf12 does not consist of all letters. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-alpha.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-upper.php' class='function' rel='rdfs-seeAlso'>ctype_upper()</a> - Check for uppercase character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-lower.php' class='function' rel='rdfs-seeAlso'>ctype_lower()</a> - Check for lowercase character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ctype_alnum" value="<div id='function.ctype-alnum' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ctype-alnum.php'>ctype_alnum</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>ctype_alnum</span> &amp;mdash; <span class='dc-title'>Check for alphanumeric character(s)</span></p> </div> <a name='function.ctype-alnum.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ctype_alnum</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$text</tt></span> )</div> <p class='para rdfs-comment'> Checks if all of the characters in the provided string, <i><tt class='parameter'>text</tt></i> , are alphanumeric. In the standard <i>C</i> locale letters are just <i>[A-Za-z]</i>. </p> </div> <a name='function.ctype-alnum.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>text</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The tested string. </p> </dd> </dl> <p> </p> </div> <a name='function.ctype-alnum.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if every character in <i><tt class='parameter'>text</tt></i> is either a letter or a digit, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.ctype-alnum.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>ctype_alnum()</b> example (using the default locale)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$strings&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'AbCd1zyZ9'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foo!#$bar'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$strings&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>ctype_alnum</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testcase</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;consists&amp;nbsp;of&amp;nbsp;all&amp;nbsp;letters&amp;nbsp;or&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;</span><span style='color: #0000BB'>$testcase</span><span style='color: #DD0000'>&amp;nbsp;does&amp;nbsp;not&amp;nbsp;consist&amp;nbsp;of&amp;nbsp;all&amp;nbsp;letters&amp;nbsp;or&amp;nbsp;digits.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The string AbCd1zyZ9 consists of all letters or digits. The string foo!#$bar does not consist of all letters or digits. </pre></div> </div> </div><p> </p> </div> <a name='function.ctype-alnum.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-alpha.php' class='function' rel='rdfs-seeAlso'>ctype_alpha()</a> - Check for alphabetic character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.ctype-digit.php' class='function' rel='rdfs-seeAlso'>ctype_digit()</a> - Check for numeric character(s)</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="crypt" value="<div id='function.crypt' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.crypt.php'>crypt</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>crypt</span> &amp;mdash; <span class='dc-title'>One-way string encryption (hashing)</span></p> </div> <a name='function.crypt.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>crypt</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$salt</tt></span> ] )</div> <p class='para rdfs-comment'> <b>crypt()</b> will return an encrypted string using the standard Unix <abbr class='abbrev'>DES</abbr>-based encryption algorithm or alternative algorithms that may be available on the system. </p> <p class='para'> Some operating systems support more than one type of encryption. In fact, sometimes the standard DES-based encryption is replaced by an MD5-based encryption algorithm. The encryption type is triggered by the salt argument. At install time, PHP determines the capabilities of the crypt function and will accept salts for other encryption types. If no salt is provided, PHP will auto-generate a standard two character salt by default, unless the default encryption type on the system is MD5, in which case a random MD5-compatible salt is generated. PHP sets a constant named <b><tt class='constant'>CRYPT_SALT_LENGTH</tt></b> which tells you whether a regular two character salt applies to your system or the longer twelve character salt is applicable. </p> <p class='para'> The standard DES-based encryption <b>crypt()</b> returns the salt as the first two characters of the output. It also only uses the first eight characters of <i><tt class='parameter'>str</tt></i> , so longer strings that start with the same eight characters will generate the same result (when the same salt is used). </p> <p class='simpara'> On systems where the crypt() function supports multiple encryption types, the following constants are set to 0 or 1 depending on whether the given type is available: </p> <ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CRYPT_STD_DES</tt></b> - Standard DES-based encryption with a two character salt </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CRYPT_EXT_DES</tt></b> - Extended DES-based encryption with a nine character salt </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CRYPT_MD5</tt></b> - MD5 encryption with a twelve character salt starting with $1$ </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>CRYPT_BLOWFISH</tt></b> - Blowfish encryption with a sixteen character salt starting with $2$ or $2a$ </span> </li> </ul> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0, PHP contains its own implementation and will use that if the system lacks of support for one or more of the algorithms. <br /> </p></blockquote> </div> <a name='function.crypt.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be encrypted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>salt</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An optional salt string to base the encryption on. If not provided, one will be randomly generated by PHP each time you call this function. </p> <p class='para'> If you are using the supplied salt, you should be aware that the salt is generated once. If you are calling this function repeatedly, this may impact both appearance and security. </p> </dd> </dl> <p> </p> </div> <a name='function.crypt.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the encrypted string. </p> </div> <a name='function.crypt.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> PHP now contains its own implementation for the MD5 crypt, Standard DES, Extended DES and the Blowfish algorithms and will use that if the system lacks of support for one or more of the algorithms. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.crypt.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>crypt()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$password&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mypassword'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;let&amp;nbsp;the&amp;nbsp;salt&amp;nbsp;be&amp;nbsp;automatically&amp;nbsp;generated<br /><br />/*&amp;nbsp;You&amp;nbsp;should&amp;nbsp;pass&amp;nbsp;the&amp;nbsp;entire&amp;nbsp;results&amp;nbsp;of&amp;nbsp;crypt()&amp;nbsp;as&amp;nbsp;the&amp;nbsp;salt&amp;nbsp;for&amp;nbsp;comparing&amp;nbsp;a<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;password,&amp;nbsp;to&amp;nbsp;avoid&amp;nbsp;problems&amp;nbsp;when&amp;nbsp;different&amp;nbsp;hashing&amp;nbsp;algorithms&amp;nbsp;are&amp;nbsp;used.&amp;nbsp;(As<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;it&amp;nbsp;says&amp;nbsp;above,&amp;nbsp;standard&amp;nbsp;DES-based&amp;nbsp;password&amp;nbsp;hashing&amp;nbsp;uses&amp;nbsp;a&amp;nbsp;2-character&amp;nbsp;salt,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;but&amp;nbsp;MD5-based&amp;nbsp;hashing&amp;nbsp;uses&amp;nbsp;12.)&amp;nbsp;*/<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$user_input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Password&amp;nbsp;verified!'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Using <b>crypt()</b> with htpasswd</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;password<br /></span><span style='color: #0000BB'>$password&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'mypassword'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;hash,&amp;nbsp;letting&amp;nbsp;the&amp;nbsp;salt&amp;nbsp;be&amp;nbsp;automatically&amp;nbsp;generated<br /></span><span style='color: #0000BB'>$hash&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Using <b>crypt()</b> with different encryption types</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>CRYPT_STD_DES&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;DES:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'rasmuslerdorf'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rl'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>CRYPT_EXT_DES&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Extended&amp;nbsp;DES:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'rasmuslerdorf'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'_J9..rasm'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>CRYPT_MD5&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'MD5:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'rasmuslerdorf'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'$1$rasmusle$'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>CRYPT_BLOWFISH&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Blowfish:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>crypt</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'rasmuslerdorf'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'$2a$07$rasmuslerd...........$'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Standard DES: rl.3StKT.4T8M Extended DES: _J9..rasmBYk8r9AiWNc MD5: $1$rasmusle$rISCgZzpwk3UhDidwXvin0 Blowfish: $2a$07$rasmuslerd............nIdrcHdxcUxWomQX9j6kvERCFjTg7Ra </pre></div> </div> </div><p> </p> </div> <a name='function.crypt.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> There is no decrypt function, since <b>crypt()</b> uses a one-way algorithm. </span> </p></blockquote> </div> <a name='function.crypt.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.md5.php' class='function' rel='rdfs-seeAlso'>md5()</a> - Calculate the md5 hash of a string</li> <li class='member'>The <a href='http://www.php.net/manual/en/ref.mcrypt.php' class='link'>Mcrypt</a> extension</li> <li class='member'>The Unix man page for your crypt function for more information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="create_function" value="<div id='function.create-function' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.create-function.php'>create_function</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>create_function</span> &amp;mdash; <span class='dc-title'>Create an anonymous (lambda-style) function</span></p> </div> <a name='function.create-function.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>create_function</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$args</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$code</tt></span> )</div> <p class='para rdfs-comment'> Creates an anonymous function from the parameters passed, and returns a unique name for it. </p> </div> <a name='function.create-function.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> Usually these parameters will be passed as single quote delimited strings. The reason for using single quoted strings, is to protect the variable names from parsing, otherwise, if you use double quotes there will be a need to escape the variable names, e.g. <i>\$avar</i>. </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function arguments. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>code</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function code. </p> </dd> </dl> <p> </p> </div> <a name='function.create-function.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a unique function name as a string, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.create-function.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Creating an anonymous function with <b>create_function()</b> </b></p> <div class='example-contents para'><p> You can use this function, to (for example) create a function from information gathered at run time: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$newfunc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;'ln($a)&amp;nbsp;+&amp;nbsp;ln($b)&amp;nbsp;=&amp;nbsp;'&amp;nbsp;.&amp;nbsp;log($a&amp;nbsp;*&amp;nbsp;$b);'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'New&amp;nbsp;anonymous&amp;nbsp;function:&amp;nbsp;</span><span style='color: #0000BB'>$newfunc</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$newfunc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>M_E</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs<br />//&amp;nbsp;New&amp;nbsp;anonymous&amp;nbsp;function:&amp;nbsp;lambda_1<br />//&amp;nbsp;ln(2)&amp;nbsp;+&amp;nbsp;ln(2.718281828459)&amp;nbsp;=&amp;nbsp;1.6931471805599<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> Or, perhaps to have general handler function that can apply a set of operations to a list of parameters: </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Making a general processing function with <b>create_function()</b> </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>process</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$var2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$farr</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$farr&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$f</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$f</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$var2</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;bunch&amp;nbsp;of&amp;nbsp;math&amp;nbsp;functions<br /></span><span style='color: #0000BB'>$f1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'if&amp;nbsp;($a&amp;nbsp;&amp;gt;=0)&amp;nbsp;{return&amp;nbsp;'b*a^2&amp;nbsp;=&amp;nbsp;'.$b*sqrt($a);}&amp;nbsp;else&amp;nbsp;{return&amp;nbsp;false;}'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$f2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;\'min(b^2+a,&amp;nbsp;a^2,b)&amp;nbsp;=&amp;nbsp;\'.min(\$a*\$a+\$b,\$b*\$b+\$a);'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$f3&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'if&amp;nbsp;($a&amp;nbsp;&amp;gt;&amp;nbsp;0&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;$b&amp;nbsp;!=&amp;nbsp;0)&amp;nbsp;{return&amp;nbsp;'ln(a)/b&amp;nbsp;=&amp;nbsp;'.log($a)/$b;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&amp;nbsp;return&amp;nbsp;false;&amp;nbsp;}'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$farr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$x,$y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;'some&amp;nbsp;trig:&amp;nbsp;'.(sin($x)&amp;nbsp;+&amp;nbsp;$x*cos($y));'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$x,$y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;'a&amp;nbsp;hypotenuse:&amp;nbsp;'.sqrt($x*$x&amp;nbsp;+&amp;nbsp;$y*$y);'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$f1</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$f2</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$f3</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nUsing&amp;nbsp;the&amp;nbsp;first&amp;nbsp;array&amp;nbsp;of&amp;nbsp;anonymous&amp;nbsp;functions\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'parameters:&amp;nbsp;2.3445,&amp;nbsp;M_PI\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>process</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2.3445</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>M_PI</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$farr</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;now&amp;nbsp;make&amp;nbsp;a&amp;nbsp;bunch&amp;nbsp;of&amp;nbsp;string&amp;nbsp;processing&amp;nbsp;functions<br /></span><span style='color: #0000BB'>$garr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$b,$a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'if&amp;nbsp;(strncmp($a,&amp;nbsp;$b,&amp;nbsp;3)&amp;nbsp;==&amp;nbsp;0)&amp;nbsp;return&amp;nbsp;'**&amp;nbsp;\'$a\'&amp;nbsp;'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'and&amp;nbsp;\'$b\'\n**&amp;nbsp;Look&amp;nbsp;the&amp;nbsp;same&amp;nbsp;to&amp;nbsp;me!&amp;nbsp;(looking&amp;nbsp;at&amp;nbsp;the&amp;nbsp;first&amp;nbsp;3&amp;nbsp;chars)';'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>';&amp;nbsp;return&amp;nbsp;'CRCs:&amp;nbsp;'&amp;nbsp;.&amp;nbsp;crc32($a)&amp;nbsp;.&amp;nbsp;'&amp;nbsp;,&amp;nbsp;'.crc32(b);'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>';&amp;nbsp;return&amp;nbsp;'similar(a,b)&amp;nbsp;=&amp;nbsp;'&amp;nbsp;.&amp;nbsp;similar_text($a,&amp;nbsp;$b,&amp;nbsp;&amp;amp;$p)&amp;nbsp;.&amp;nbsp;'($p%)';'</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nUsing&amp;nbsp;the&amp;nbsp;second&amp;nbsp;array&amp;nbsp;of&amp;nbsp;anonymous&amp;nbsp;functions\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>process</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Twas&amp;nbsp;brilling&amp;nbsp;and&amp;nbsp;the&amp;nbsp;slithy&amp;nbsp;toves'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Twas&amp;nbsp;the&amp;nbsp;night'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$garr</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Using the first array of anonymous functions parameters: 2.3445, M_PI some trig: -1.6291725057799 a hypotenuse: 3.9199852871011 b*a^2 = 4.8103313314525 min(b^2+a, a^2,b) = 8.6382729035898 ln(a/b) = 0.27122299212594 Using the second array of anonymous functions ** &amp;quot;Twas the night&amp;quot; and &amp;quot;Twas brilling and the slithy toves&amp;quot; ** Look the same to me! (looking at the first 3 chars) CRCs: -725381282 , 1908338681 similar(a,b) = 11(45.833333333333%) </pre></div> </div> </div><p> </p> <p class='para'> But perhaps the most common use for of lambda-style (anonymous) functions is to create callback functions, for example when using <a href='http://www.php.net/manual/en/function.array-walk.php' class='function'>array_walk()</a> or <a href='http://www.php.net/manual/en/function.usort.php' class='function'>usort()</a> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Using anonymous functions as callback functions</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$av&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'the&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'that&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'this&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_walk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$av</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;amp;$v,$k'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'$v&amp;nbsp;=&amp;nbsp;$v&amp;nbsp;.&amp;nbsp;'mango';'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$av</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; the mango [1] =&amp;gt; a mango [2] =&amp;gt; that mango [3] =&amp;gt; this mango ) </pre></div> </div> <div class='example-contents para'><p> an array of strings ordered from shorter to longer </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$sv&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'small'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'larger'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;big&amp;nbsp;string'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'it&amp;nbsp;is&amp;nbsp;a&amp;nbsp;string&amp;nbsp;thing'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sv</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; small [1] =&amp;gt; larger [2] =&amp;gt; a big string [3] =&amp;gt; it is a string thing ) </pre></div> </div> <div class='example-contents para'><p> sort it from longer to shorter </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sv</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$a,$b'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'return&amp;nbsp;strlen($b)&amp;nbsp;-&amp;nbsp;strlen($a);'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sv</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; it is a string thing [1] =&amp;gt; a big string [2] =&amp;gt; larger [3] =&amp;gt; small ) </pre></div> </div> </div><p> </p> </div> <a name='function.create-function.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/functions.anonymous.php' class='link'>Anonymous functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="crc32" value="<div id='function.crc32' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.crc32.php'>crc32</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>crc32</span> &amp;mdash; <span class='dc-title'>Calculates the crc32 polynomial of a string</span></p> </div> <a name='function.crc32.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>crc32</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Generates the cyclic redundancy checksum polynomial of 32-bit lengths of the <i><tt class='parameter'>str</tt></i> . This is usually used to validate the integrity of data being transmitted. </p> <p class='para'> Because PHP&amp;#039;s integer type is signed, and many crc32 checksums will result in negative integers, you need to use the &amp;quot;%u&amp;quot; formatter of <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> or <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a> to get the string representation of the unsigned crc32 checksum. </p> </div> <a name='function.crc32.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data. </p> </dd> </dl> <p> </p> </div> <a name='function.crc32.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the crc32 checksum of <i><tt class='parameter'>str</tt></i> as an integer. </p> </div> <a name='function.crc32.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Displaying a crc32 checksum</b></p> <div class='example-contents para'><p> This example shows how to print a converted checksum with the <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a> function: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$checksum&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>crc32</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'The&amp;nbsp;quick&amp;nbsp;brown&amp;nbsp;fox&amp;nbsp;jumped&amp;nbsp;over&amp;nbsp;the&amp;nbsp;lazy&amp;nbsp;dog.'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%u\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$checksum</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.crc32.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.md5.php' class='function' rel='rdfs-seeAlso'>md5()</a> - Calculate the md5 hash of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sha1.php' class='function' rel='rdfs-seeAlso'>sha1()</a> - Calculate the sha1 hash of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="count_chars" value="<div id='function.count-chars' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.count-chars.php'>count_chars</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>count_chars</span> &amp;mdash; <span class='dc-title'>Return information about characters used in a string</span></p> </div> <a name='function.count-chars.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>count_chars</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Counts the number of occurrences of every byte-value (0..255) in <i><tt class='parameter'>string</tt></i> and returns it in various ways. </p> </div> <a name='function.count-chars.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The examined string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional parameter <i><tt class='parameter'>mode</tt></i> defaults to 0. </p> </dd> </dl> <p> </p> </div> <a name='function.count-chars.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Depending on <i><tt class='parameter'>mode</tt></i> <b>count_chars()</b> returns one of the following: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> 0 - an array with the byte-value as key and the frequency of every byte as value. </span> </li> <li class='listitem'> <span class='simpara'> 1 - same as 0 but only byte-values with a frequency greater than zero are listed. </span> </li> <li class='listitem'> <span class='simpara'> 2 - same as 0 but only byte-values with a frequency equal to zero are listed. </span> </li> <li class='listitem'> <span class='simpara'> 3 - a string containing all unique characters is returned. </span> </li> <li class='listitem'> <span class='simpara'> 4 - a string containing all not used characters is returned. </span> </li> </ul><p> </p> </div> <a name='function.count-chars.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>count_chars()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Two&amp;nbsp;Ts&amp;nbsp;and&amp;nbsp;one&amp;nbsp;F.'</span><span style='color: #007700'>;<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>count_chars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'There&amp;nbsp;were&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>&amp;nbsp;instance(s)&amp;nbsp;of&amp;nbsp;\''&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>chr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>)&amp;nbsp;,&amp;nbsp;</span><span style='color: #DD0000'>'\'&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string.\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> There were 4 instance(s) of &amp;quot; &amp;quot; in the string. There were 1 instance(s) of &amp;quot;.&amp;quot; in the string. There were 1 instance(s) of &amp;quot;F&amp;quot; in the string. There were 2 instance(s) of &amp;quot;T&amp;quot; in the string. There were 1 instance(s) of &amp;quot;a&amp;quot; in the string. There were 1 instance(s) of &amp;quot;d&amp;quot; in the string. There were 1 instance(s) of &amp;quot;e&amp;quot; in the string. There were 2 instance(s) of &amp;quot;n&amp;quot; in the string. There were 2 instance(s) of &amp;quot;o&amp;quot; in the string. There were 1 instance(s) of &amp;quot;s&amp;quot; in the string. There were 1 instance(s) of &amp;quot;w&amp;quot; in the string. </pre></div> </div> </div><p> </p> </div> <a name='function.count-chars.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr-count.php' class='function' rel='rdfs-seeAlso'>substr_count()</a> - Count the number of substring occurrences</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Countable::count" value="<div id='countable.count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/countable.count.php'>Countable::count</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Countable::count</span> &amp;mdash; <span class='dc-title'>Count elements of an object</span></p> </div> <a name='countable.count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>Countable::count</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method executed when using the <a href='http://www.php.net/manual/en/function.count.php' class='function'>count()</a> function on a object implementing <a href='http://www.php.net/manual/en/class.countable.php' class='classname'>Countable</a>. </p> </div> <a name='countable.count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='countable.count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The custom count as <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> <blockquote><p><b class='note'>Note</b>: The return value is casted to <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. <br /> </p></blockquote> </div> <a name='countable.count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>Countable::count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>myCounter&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>Countable&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;</span><span style='color: #0000BB'>$count&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;++</span><span style='color: #0000BB'>$count</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$counter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>myCounter</span><span style='color: #007700'>;<br /><br />for(</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>=</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>&amp;lt;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>;&amp;nbsp;++</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I&amp;nbsp;have&amp;nbsp;been&amp;nbsp;count()ed&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$counter</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;times\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> I have been count()ed 1 times I have been count()ed 2 times I have been count()ed 3 times I have been count()ed 4 times I have been count()ed 5 times I have been count()ed 6 times I have been count()ed 7 times I have been count()ed 8 times I have been count()ed 9 times I have been count()ed 10 times </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Countable" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.countable.php'>The Countable interface</a></h1> <div class='partintro'> <div id='countable.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Classes implementing <b class='classname'>Countable</b> can be used with the <a href='http://www.php.net/manual/en/function.count.php' class='function'>count()</a> function. </p> </div> <div id='countable.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Countable</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Countable</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/countable.count.php' class='function'>count</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/countable.count.php'>Countable::count</a> &amp;acirc;&amp;#128;&amp;#148; Count elements of an object</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="count" value="<div id='function.count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.count.php'>count</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>count</span> &amp;mdash; <span class='dc-title'>Count all elements in an array, or properties in an object</span></p> </div> <a name='function.count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>count</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = COUNT_NORMAL</span></span> ] )</div> <p class='para rdfs-comment'> Counts all elements in an array, or properties in an object. </p> <p class='para'> For objects, if you have <a href='http://www.php.net/manual/en/ref.spl.php' class='link'>SPL</a> installed, you can hook into <b>count()</b> by implementing interface <i>Countable</i>. The interface has exactly one method, <b>count()</b>, which returns the return value for the <b>count()</b> function. </p> <p class='para'> Please see the <a href='http://www.php.net/manual/en/language.types.array.php' class='link'>Array</a> section of the manual for a detailed explanation of how arrays are implemented and used in PHP. </p> </div> <a name='function.count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>mode</tt></i> parameter is set to <b><tt class='constant'>COUNT_RECURSIVE</tt></b> (or 1), <b>count()</b> will recursively count the array. This is particularly useful for counting all the elements of a multidimensional array. The default value for <i><tt class='parameter'>mode</tt></i> is <i>0</i>. <b>count()</b> does not detect infinite recursion. </p> </dd> </dl> <p> </p> </div> <a name='function.count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of elements in <i><tt class='parameter'>var</tt></i> , which is typically an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>, since anything else will have one element. </p> <p class='para'> If <i><tt class='parameter'>var</tt></i> is not an array or an object with implemented <i>Countable</i> interface, <i>1</i> will be returned. There is one exception, if <i><tt class='parameter'>var</tt></i> is <b><tt class='constant'>NULL</tt></b>, <i>0</i> will be returned. </p> <div class='caution'><b class='caution'>Caution</b> <p class='para'> <b>count()</b> may return 0 for a variable that isn&amp;#039;t set, but it may also return 0 for a variable that has been initialized with an empty array. Use <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a> to test if a variable is set. </p> </div> </div> <a name='function.count.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The optional <i><tt class='parameter'>mode</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$result&amp;nbsp;==&amp;nbsp;3<br /><br /></span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #0000BB'>5</span><span style='color: #007700'>]&amp;nbsp;&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>9</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #0000BB'>10</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>11</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$result&amp;nbsp;==&amp;nbsp;3<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$result&amp;nbsp;==&amp;nbsp;0<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$result&amp;nbsp;==&amp;nbsp;1<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Recursive <b>count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$food&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'fruits'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'veggie'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'carrot'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'collard'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'pea'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;recursive&amp;nbsp;count<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$food</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>COUNT_RECURSIVE</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;output&amp;nbsp;8<br /><br />//&amp;nbsp;normal&amp;nbsp;count<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$food</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;output&amp;nbsp;2<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.count.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-array.php' class='function' rel='rdfs-seeAlso'>is_array()</a> - Finds whether a variable is an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.isset.php' class='function' rel='rdfs-seeAlso'>isset()</a> - Determine if a variable is set and is not NULL</li> <li class='member'><a href='http://www.php.net/manual/en/function.strlen.php' class='function' rel='rdfs-seeAlso'>strlen()</a> - Get string length</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="cosh" value="<div id='function.cosh' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.cosh.php'>cosh</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>cosh</span> &amp;mdash; <span class='dc-title'>Hyperbolic cosine</span></p> </div> <a name='function.cosh.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>cosh</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the hyperbolic cosine of <i><tt class='parameter'>arg</tt></i> , defined as <i>(exp(arg) + exp(-arg))/2</i>. </p> </div> <a name='function.cosh.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.cosh.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The hyperbolic cosine of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.cosh.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.cos.php' class='function' rel='rdfs-seeAlso'>cos()</a> - Cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.acosh.php' class='function' rel='rdfs-seeAlso'>acosh()</a> - Inverse hyperbolic cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.sinh.php' class='function' rel='rdfs-seeAlso'>sinh()</a> - Hyperbolic sine</li> <li class='member'><b>cosh()</b></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="cos" value="<div id='function.cos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.cos.php'>cos</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>cos</span> &amp;mdash; <span class='dc-title'>Cosine</span></p> </div> <a name='function.cos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>cos</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> <b>cos()</b> returns the cosine of the <i><tt class='parameter'>arg</tt></i> parameter. The <i><tt class='parameter'>arg</tt></i> parameter is in radians. </p> </div> <a name='function.cos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An angle in radians </p> </dd> </dl> <p> </p> </div> <a name='function.cos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The cosine of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.cos.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>cos()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>cos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>M_PI</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-1<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.cos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.acos.php' class='function' rel='rdfs-seeAlso'>acos()</a> - Arc cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.sin.php' class='function' rel='rdfs-seeAlso'>sin()</a> - Sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.tan.php' class='function' rel='rdfs-seeAlso'>tan()</a> - Tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.deg2rad.php' class='function' rel='rdfs-seeAlso'>deg2rad()</a> - Converts the number in degrees to the radian equivalent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="copy" value="<div id='function.copy' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.copy.php'>copy</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>copy</span> &amp;mdash; <span class='dc-title'>Copies file</span></p> </div> <a name='function.copy.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>copy</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$source</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dest</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ] )</div> <p class='para rdfs-comment'> Makes a copy of the file <i><tt class='parameter'>source</tt></i> to <i><tt class='parameter'>dest</tt></i> . </p> <p class='para'> If you wish to move a file, use the <a href='http://www.php.net/manual/en/function.rename.php' class='function'>rename()</a> function. </p> </div> <a name='function.copy.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>source</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the source file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dest</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The destination path. If <i><tt class='parameter'>dest</tt></i> is a URL, the copy operation may fail if the wrapper does not support overwriting of existing files. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> If the destination file already exists, it will be overwritten. </p> </div> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid context resource created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.copy.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.copy.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added context support. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Both <i><tt class='parameter'>source</tt></i> and <i><tt class='parameter'>dest</tt></i> may now be URLs if the &amp;quot;fopen wrappers&amp;quot; have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.copy.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>copy()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'example.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$newfile&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'example.txt.bak'</span><span style='color: #007700'>;<br /><br />if&amp;nbsp;(!</span><span style='color: #0000BB'>copy</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$newfile</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'failed&amp;nbsp;to&amp;nbsp;copy&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>...\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.copy.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.move-uploaded-file.php' class='function' rel='rdfs-seeAlso'>move_uploaded_file()</a> - Moves an uploaded file to a new location</li> <li class='member'><a href='http://www.php.net/manual/en/function.rename.php' class='function' rel='rdfs-seeAlso'>rename()</a> - Renames a file or directory</li> <li class='member'>The section of the manual about <a href='http://www.php.net/manual/en/features.file-upload.php' class='link'>handling file uploads</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="convert_uuencode" value="<div id='function.convert-uuencode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.convert-uuencode.php'>convert_uuencode</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>convert_uuencode</span> &amp;mdash; <span class='dc-title'>Uuencode a string</span></p> </div> <a name='function.convert-uuencode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>convert_uuencode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> <b>convert_uuencode()</b> encodes a string using the uuencode algorithm. </p> <p class='para'> Uuencode translates all strings (including binary&amp;#039;s ones) into printable characters, making them safe for network transmissions. Uuencoded data is about 35% larger than the original. </p> </div> <a name='function.convert-uuencode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data to be encoded. </p> </dd> </dl> <p> </p> </div> <a name='function.convert-uuencode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the uuencoded data. </p> </div> <a name='function.convert-uuencode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>convert_uuencode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$some_string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'test\ntext&amp;nbsp;text\r\n'</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>convert_uuencode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$some_string</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.convert-uuencode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.convert-uudecode.php' class='function' rel='rdfs-seeAlso'>convert_uudecode()</a> - Decode a uuencoded string</li> <li class='member'><a href='http://www.php.net/manual/en/function.base64-encode.php' class='function' rel='rdfs-seeAlso'>base64_encode()</a> - Encodes data with MIME base64</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="convert_uudecode" value="<div id='function.convert-uudecode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.convert-uudecode.php'>convert_uudecode</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>convert_uudecode</span> &amp;mdash; <span class='dc-title'>Decode a uuencoded string</span></p> </div> <a name='function.convert-uudecode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>convert_uudecode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> <b>convert_uudecode()</b> decodes a uuencoded string. </p> </div> <a name='function.convert-uudecode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The uuencoded data. </p> </dd> </dl> <p> </p> </div> <a name='function.convert-uudecode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the decoded data as a string. </p> </div> <a name='function.convert-uudecode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>convert_uudecode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Can&amp;nbsp;you&amp;nbsp;imagine&amp;nbsp;what&amp;nbsp;this&amp;nbsp;will&amp;nbsp;print?&amp;nbsp;:)&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>convert_uudecode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+22!L;W9E(%!(4\'$`\n`'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.convert-uudecode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.convert-uuencode.php' class='function' rel='rdfs-seeAlso'>convert_uuencode()</a> - Uuencode a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="convert_cyr_string" value="<div id='function.convert-cyr-string' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.convert-cyr-string.php'>convert_cyr_string</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>convert_cyr_string</span> &amp;mdash; <span class='dc-title'>Convert from one Cyrillic character set to another</span></p> </div> <a name='function.convert-cyr-string.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>convert_cyr_string</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$from</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$to</tt></span> )</div> <p class='para rdfs-comment'> Converts from one Cyrillic character set to another. </p> </div> <a name='function.convert-cyr-string.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be converted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>from</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The source Cyrillic character set, as a single character. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>to</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The target Cyrillic character set, as a single character. </p> </dd> </dl> <p> </p> <p class='para'> Supported characters are: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> k - koi8-r </span> </li> <li class='listitem'> <span class='simpara'> w - windows-1251 </span> </li> <li class='listitem'> <span class='simpara'> i - iso8859-5 </span> </li> <li class='listitem'> <span class='simpara'> a - x-cp866 </span> </li> <li class='listitem'> <span class='simpara'> d - x-cp866 </span> </li> <li class='listitem'> <span class='simpara'> m - x-mac-cyrillic </span> </li> </ul><p> </p> </div> <a name='function.convert-cyr-string.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the converted string. </p> </div> <a name='function.convert-cyr-string.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="constant" value="<div id='function.constant' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.constant.php'>constant</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>constant</span> &amp;mdash; <span class='dc-title'>Returns the value of a constant</span></p> </div> <a name='function.constant.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>constant</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='simpara'> Return the value of the constant indicated by <i><tt class='parameter'>name</tt></i> . </p> <p class='simpara'> <b>constant()</b> is useful if you need to retrieve the value of a constant, but do not know its name. I.e. it is stored in a variable or returned by a function. </p> <p class='simpara'> This function works also with <a href='http://www.php.net/manual/en/language.oop5.constants.php' class='link'>class constants</a>. </p> </div> <a name='function.constant.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The constant name. </p> </dd> </dl> <p> </p> </div> <a name='function.constant.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the value of the constant, or <b><tt class='constant'>NULL</tt></b> if the constant is not defined. </p> </div> <a name='function.constant.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>constant()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MAXSIZE'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>MAXSIZE</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>constant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MAXSIZE'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;same&amp;nbsp;thing&amp;nbsp;as&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;line<br /><br /><br /></span><span style='color: #007700'>interface&amp;nbsp;</span><span style='color: #0000BB'>bar&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const&amp;nbsp;</span><span style='color: #0000BB'>test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foobar!'</span><span style='color: #007700'>;<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const&amp;nbsp;</span><span style='color: #0000BB'>test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foobar!'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$const&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>constant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bar::'</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$const</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;string(7)&amp;nbsp;'foobar!'<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>constant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo::'</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$const</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;string(7)&amp;nbsp;'foobar!'<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.constant.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.define.php' class='function' rel='rdfs-seeAlso'>define()</a> - Defines a named constant</li> <li class='member'><a href='http://www.php.net/manual/en/function.defined.php' class='function' rel='rdfs-seeAlso'>defined()</a> - Checks whether a given named constant exists</li> <li class='member'>The section on <a href='http://www.php.net/manual/en/language.constants.php' class='link'>Constants</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="connection_status" value="<div id='function.connection-status' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.connection-status.php'>connection_status</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>connection_status</span> &amp;mdash; <span class='dc-title'>Returns connection status bitfield</span></p> </div> <a name='function.connection-status.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>connection_status</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the connection status bitfield. </p> </div> <a name='function.connection-status.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the connection status bitfield, which can be used against the <i>CONNECTION_XXX</i> constants to determine the connection status. </p> </div> <a name='function.connection-status.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.connection-aborted.php' class='function' rel='rdfs-seeAlso'>connection_aborted()</a> - Check whether client disconnected</li> <li class='member'><a href='http://www.php.net/manual/en/function.ignore-user-abort.php' class='function' rel='rdfs-seeAlso'>ignore_user_abort()</a> - Set whether a client disconnect should abort script execution</li> <li class='member'> <a href='http://www.php.net/manual/en/features.connection-handling.php' class='link'>Connection Handling</a> for a complete description of connection handling in PHP. </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="connection_aborted" value="<div id='function.connection-aborted' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.connection-aborted.php'>connection_aborted</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>connection_aborted</span> &amp;mdash; <span class='dc-title'>Check whether client disconnected</span></p> </div> <a name='function.connection-aborted.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>connection_aborted</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the client disconnected. </p> </div> <a name='function.connection-aborted.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 1 if client disconnected, 0 otherwise. </p> </div> <a name='function.connection-aborted.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.connection-status.php' class='function' rel='rdfs-seeAlso'>connection_status()</a> - Returns connection status bitfield</li> <li class='member'><a href='http://www.php.net/manual/en/function.ignore-user-abort.php' class='function' rel='rdfs-seeAlso'>ignore_user_abort()</a> - Set whether a client disconnect should abort script execution</li> <li class='member'> <a href='http://www.php.net/manual/en/features.connection-handling.php' class='link'>Connection Handling</a> for a complete description of connection handling in PHP. </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="compact" value="<div id='function.compact' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.compact.php'>compact</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>compact</span> &amp;mdash; <span class='dc-title'>Create array containing variables and their values</span></p> </div> <a name='function.compact.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>compact</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$varname</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> Creates an array containing variables and their values. </p> <p class='para'> For each of these, <b>compact()</b> looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key. In short, it does the opposite of <a href='http://www.php.net/manual/en/function.extract.php' class='function'>extract()</a>. </p> <p class='para'> Any strings that are not set will simply be skipped. </p> </div> <a name='function.compact.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>varname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <b>compact()</b> takes a variable number of parameters. Each parameter can be either a string containing the name of the variable, or an array of variable names. The array can contain other arrays of variable names inside it; <b>compact()</b> handles it recursively. </p> </dd> </dl> <p> </p> </div> <a name='function.compact.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the output array with all the variables added to it. </p> </div> <a name='function.compact.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>compact()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$city&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'San&amp;nbsp;Francisco'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$state&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'CA'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$event&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SIGGRAPH'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$location_vars&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'city'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'state'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>compact</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'event'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'nothing_here'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$location_vars</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [event] =&amp;gt; SIGGRAPH [city] =&amp;gt; San Francisco [state] =&amp;gt; CA ) </pre></div> </div> </div><p> </p> </div> <a name='function.compact.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>Gotcha</b><br /> Because <a href='http://www.php.net/manual/en/language.variables.variable.php' class='link'>variable variables</a> may not be used with PHP&amp;#039;s <a href='http://www.php.net/manual/en/language.variables.superglobals.php' class='link'>Superglobal arrays</a> within functions, the Superglobal arrays may not be passed into <b>compact()</b>. <br /> </p></blockquote> </div> <a name='function.compact.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.extract.php' class='function' rel='rdfs-seeAlso'>extract()</a> - Import variables into the current symbol table from an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="closelog" value="<div id='function.closelog' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.closelog.php'>closelog</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>closelog</span> &amp;mdash; <span class='dc-title'>Close connection to system logger</span></p> </div> <a name='function.closelog.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>closelog</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>closelog()</b> closes the descriptor being used to write to the system logger. The use of <b>closelog()</b> is optional. </p> </div> <a name='function.closelog.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.closelog.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.syslog.php' class='function' rel='rdfs-seeAlso'>syslog()</a> - Generate a system log message</li> <li class='member'><a href='http://www.php.net/manual/en/function.openlog.php' class='function' rel='rdfs-seeAlso'>openlog()</a> - Open connection to system logger</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="closedir" value="<div id='function.closedir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.closedir.php'>closedir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>closedir</span> &amp;mdash; <span class='dc-title'>Close directory handle</span></p> </div> <a name='function.closedir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>closedir</b></span> ([ <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dir_handle</tt></span> ] )</div> <p class='para rdfs-comment'> Closes the directory stream indicated by <i><tt class='parameter'>dir_handle</tt></i> . The stream must have previously been opened by <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a>. </p> </div> <a name='function.closedir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dir_handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory handle <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> previously opened with <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a>. If the directory handle is not specified, the last link opened by <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a> is assumed. </p> </dd> </dl> <p> </p> </div> <a name='function.closedir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>closedir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/etc/php5/'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;known&amp;nbsp;directory,&amp;nbsp;read&amp;nbsp;directory&amp;nbsp;into&amp;nbsp;variable&amp;nbsp;and&amp;nbsp;then&amp;nbsp;close<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>is_dir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$dh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>opendir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$directory&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dh</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>closedir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dh</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="clearstatcache" value="<div id='function.clearstatcache' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.clearstatcache.php'>clearstatcache</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>clearstatcache</span> &amp;mdash; <span class='dc-title'>Clears file status cache</span></p> </div> <a name='function.clearstatcache.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>clearstatcache</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$clear_realpath_cache</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> ]] )</div> <p class='para rdfs-comment'> When you use <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a>, <a href='http://www.php.net/manual/en/function.lstat.php' class='function'>lstat()</a>, or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance. However, in certain cases, you may want to clear the cached information. For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script&amp;#039;s operation, you may elect to clear the status cache. In these cases, you can use the <b>clearstatcache()</b> function to clear the information that PHP caches about a file. </p> <p class='para'> You should also note that PHP doesn&amp;#039;t cache information about non-existent files. So, if you call <a href='http://www.php.net/manual/en/function.file-exists.php' class='function'>file_exists()</a> on a file that doesn&amp;#039;t exist, it will return <b><tt class='constant'>FALSE</tt></b> until you create the file. If you create the file, it will return <b><tt class='constant'>TRUE</tt></b> even if you then delete the file. However <a href='http://www.php.net/manual/en/function.unlink.php' class='function'>unlink()</a> clears the cache automatically. </p> <blockquote><p><b class='note'>Note</b>: This function caches information about specific filenames, so you only need to call <b>clearstatcache()</b> if you are performing multiple operations on the same filename and require the information about that particular file to not be cached. <br /> </p></blockquote> <p class='para'> Affected functions include <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a>, <a href='http://www.php.net/manual/en/function.lstat.php' class='function'>lstat()</a>, <a href='http://www.php.net/manual/en/function.file-exists.php' class='function'>file_exists()</a>, <a href='http://www.php.net/manual/en/function.is-writable.php' class='function'>is_writable()</a>, <a href='http://www.php.net/manual/en/function.is-readable.php' class='function'>is_readable()</a>, <a href='http://www.php.net/manual/en/function.is-executable.php' class='function'>is_executable()</a>, <a href='http://www.php.net/manual/en/function.is-file.php' class='function'>is_file()</a>, <a href='http://www.php.net/manual/en/function.is-dir.php' class='function'>is_dir()</a>, <a href='http://www.php.net/manual/en/function.is-link.php' class='function'>is_link()</a>, <a href='http://www.php.net/manual/en/function.filectime.php' class='function'>filectime()</a>, <a href='http://www.php.net/manual/en/function.fileatime.php' class='function'>fileatime()</a>, <a href='http://www.php.net/manual/en/function.filemtime.php' class='function'>filemtime()</a>, <a href='http://www.php.net/manual/en/function.fileinode.php' class='function'>fileinode()</a>, <a href='http://www.php.net/manual/en/function.filegroup.php' class='function'>filegroup()</a>, <a href='http://www.php.net/manual/en/function.fileowner.php' class='function'>fileowner()</a>, <a href='http://www.php.net/manual/en/function.filesize.php' class='function'>filesize()</a>, <a href='http://www.php.net/manual/en/function.filetype.php' class='function'>filetype()</a>, and <a href='http://www.php.net/manual/en/function.fileperms.php' class='function'>fileperms()</a>. </p> </div> <a name='function.clearstatcache.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>clear_realpath_cache</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whenever to clear realpath cache or not (defaults to <b><tt class='constant'>FALSE</tt></b>). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Clear realpath cache on a specific filename, only used if <i><tt class='parameter'>clear_realpath_cache</tt></i> is <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.clearstatcache.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.clearstatcache.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added optional <i><tt class='parameter'>clear_realpath_cache</tt></i> and <i><tt class='parameter'>filename</tt></i> parameters. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.clearstatcache.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>clearstatcache()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'output_log.txt'</span><span style='color: #007700'>;<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>get_owner</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stat</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>posix_getpwuid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'uid'</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>];<br />}<br /><br /></span><span style='color: #0000BB'>$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'UID&amp;nbsp;@&amp;nbsp;%s:&amp;nbsp;%s\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>get_owner</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>chown</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ross'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>get_owner</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>clearstatcache</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>get_owner</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> UID @ Sun, 12 Oct 2008 20:48:28 +0100: root UID @ Sun, 12 Oct 2008 20:48:28 +0100: root UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="class_parents" value="<div id='function.class-parents' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.class-parents.php'>class_parents</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>class_parents</span> &amp;mdash; <span class='dc-title'> Return the parent classes of the given class </span></p> </div> <a name='function.class-parents.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>class_parents</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$autoload</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'> This function returns an array with the name of the parent classes of the given <i><tt class='parameter'>class</tt></i> . </p> </div> <a name='function.class-parents.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An object (class instance) or a string (class name). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>autoload</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether to allow this function to load the class automatically through the <a href='http://www.php.net/manual/en/language.oop5.autoload.php' class='link'>__autoload</a> magic method. Defaults to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.class-parents.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array on success, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.class-parents.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the option to pass the <i><tt class='parameter'>class</tt></i> parameter as a string. Added the <i><tt class='parameter'>autoload</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.class-parents.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>class_parents()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br />class&amp;nbsp;</span><span style='color: #0000BB'>bar&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{}<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_parents</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>bar</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;since&amp;nbsp;PHP&amp;nbsp;5.1.0&amp;nbsp;you&amp;nbsp;may&amp;nbsp;also&amp;nbsp;specify&amp;nbsp;the&amp;nbsp;parameter&amp;nbsp;as&amp;nbsp;a&amp;nbsp;string<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_parents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>));<br /><br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>__autoload</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class_name</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;require_once&amp;nbsp;</span><span style='color: #0000BB'>$class_name&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'.php'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;use&amp;nbsp;__autoload&amp;nbsp;to&amp;nbsp;load&amp;nbsp;the&amp;nbsp;'not_loaded'&amp;nbsp;class<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_parents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'not_loaded'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [foo] =&amp;gt; foo ) Array ( [parent_of_not_loaded] =&amp;gt; parent_of_not_loaded ) </pre></div> </div> </div><p> </p> </div> <a name='function.class-parents.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.class-implements.php' class='function' rel='rdfs-seeAlso'>class_implements()</a> - Return the interfaces which are implemented by the given class</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="class_implements" value="<div id='function.class-implements' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.class-implements.php'>class_implements</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>class_implements</span> &amp;mdash; <span class='dc-title'> Return the interfaces which are implemented by the given class </span></p> </div> <a name='function.class-implements.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>class_implements</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$autoload</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'> This function returns an array with the names of the interfaces that the given <i><tt class='parameter'>class</tt></i> and its parents implement. </p> </div> <a name='function.class-implements.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An object (class instance) or a string (class name). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>autoload</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether to allow this function to load the class automatically through the <a href='http://www.php.net/manual/en/language.oop5.autoload.php' class='link'>__autoload</a> magic method. Defaults to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.class-implements.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array on success, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.class-implements.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the option to pass the <i><tt class='parameter'>class</tt></i> parameter as a string. Added the <i><tt class='parameter'>autoload</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.class-implements.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>class_implements()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>interface&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br />class&amp;nbsp;</span><span style='color: #0000BB'>bar&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>foo&amp;nbsp;</span><span style='color: #007700'>{}<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_implements</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>bar</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;since&amp;nbsp;PHP&amp;nbsp;5.1.0&amp;nbsp;you&amp;nbsp;may&amp;nbsp;also&amp;nbsp;specify&amp;nbsp;the&amp;nbsp;parameter&amp;nbsp;as&amp;nbsp;a&amp;nbsp;string<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_implements</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>));<br /><br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>__autoload</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class_name</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;require_once&amp;nbsp;</span><span style='color: #0000BB'>$class_name&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'.php'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;use&amp;nbsp;__autoload&amp;nbsp;to&amp;nbsp;load&amp;nbsp;the&amp;nbsp;'not_loaded'&amp;nbsp;class<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>class_implements</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'not_loaded'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [foo] =&amp;gt; foo ) Array ( [interface_of_not_loaded] =&amp;gt; interface_of_not_loaded ) </pre></div> </div> </div><p> </p> </div> <a name='function.class-implements.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.class-parents.php' class='function' rel='rdfs-seeAlso'>class_parents()</a> - Return the parent classes of the given class</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-declared-interfaces.php' class='function' rel='rdfs-seeAlso'>get_declared_interfaces()</a> - Returns an array of all declared interfaces</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="class_exists" value="<div id='function.class-exists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.class-exists.php'>class_exists</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>class_exists</span> &amp;mdash; <span class='dc-title'>Checks if the class has been defined</span></p> </div> <a name='function.class-exists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>class_exists</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$autoload</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'> This function checks whether or not the given class has been defined. </p> </div> <a name='function.class-exists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name. The name is matched in a case-insensitive manner. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>autoload</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether or not to call <a href='http://www.php.net/manual/en/language.oop5.autoload.php' class='link'>__autoload</a> by default. Defaults to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.class-exists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if <i><tt class='parameter'>class_name</tt></i> is a defined class, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.class-exists.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.2</td> <td align='left'> No longer returns <b><tt class='constant'>TRUE</tt></b> for defined interfaces. Use <a href='http://www.php.net/manual/en/function.interface-exists.php' class='function'>interface_exists()</a>. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>autoload</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.class-exists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>class_exists()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;that&amp;nbsp;the&amp;nbsp;class&amp;nbsp;exists&amp;nbsp;before&amp;nbsp;trying&amp;nbsp;to&amp;nbsp;use&amp;nbsp;it<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>class_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyClass'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$myclass&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>MyClass</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <i><tt class='parameter'>autoload</tt></i> parameter example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>__autoload</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include(</span><span style='color: #0000BB'>$class&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'.php'</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;to&amp;nbsp;see&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;include&amp;nbsp;declared&amp;nbsp;the&amp;nbsp;class<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>class_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>trigger_error</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Unable&amp;nbsp;to&amp;nbsp;load&amp;nbsp;class:&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #DD0000'>'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_USER_WARNING</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>class_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyClass'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$myclass&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>MyClass</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.class-exists.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.function-exists.php' class='function' rel='rdfs-seeAlso'>function_exists()</a> - Return TRUE if the given function has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/function.interface-exists.php' class='function' rel='rdfs-seeAlso'>interface_exists()</a> - Checks if the interface has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-declared-classes.php' class='function' rel='rdfs-seeAlso'>get_declared_classes()</a> - Returns an array with the name of the defined classes</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chunk_split" value="<div id='function.chunk-split' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chunk-split.php'>chunk_split</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chunk_split</span> &amp;mdash; <span class='dc-title'>Split a string into smaller chunks</span></p> </div> <a name='function.chunk-split.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>chunk_split</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$body</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$chunklen</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$end</tt></span> ]] )</div> <p class='para rdfs-comment'> Can be used to split a string into smaller chunks which is useful for e.g. converting <a href='http://www.php.net/manual/en/function.base64-encode.php' class='function'>base64_encode()</a> output to match RFC 2045 semantics. It inserts <i><tt class='parameter'>end</tt></i> every <i><tt class='parameter'>chunklen</tt></i> characters. </p> </div> <a name='function.chunk-split.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>body</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be chunked. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>chunklen</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The chunk length. Defaults to 76. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>end</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The line ending sequence. Defaults to &amp;quot;\r\n&amp;quot;. </p> </dd> </dl> <p> </p> </div> <a name='function.chunk-split.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the chunked string. </p> </div> <a name='function.chunk-split.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>chunk_split()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;format&amp;nbsp;$data&amp;nbsp;using&amp;nbsp;RFC&amp;nbsp;2045&amp;nbsp;semantics<br /></span><span style='color: #0000BB'>$new_string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>chunk_split</span><span style='color: #007700'>(</span><span style='color: #0000BB'>base64_encode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.chunk-split.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.str-split.php' class='function' rel='rdfs-seeAlso'>str_split()</a> - Convert a string to an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.split.php' class='function' rel='rdfs-seeAlso'>split()</a> - Split string into array by regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.wordwrap.php' class='function' rel='rdfs-seeAlso'>wordwrap()</a> - Wraps a string to a given number of characters</li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc2045' class='link external'>&amp;raquo; RFC 2045</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chr" value="<div id='function.chr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chr.php'>chr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chr</span> &amp;mdash; <span class='dc-title'>Return a specific character</span></p> </div> <a name='function.chr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>chr</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$ascii</tt></span> )</div> <p class='para rdfs-comment'> Returns a one-character string containing the character specified by <i><tt class='parameter'>ascii</tt></i> . </p> <p class='para'> This function complements <a href='http://www.php.net/manual/en/function.ord.php' class='function'>ord()</a>. </p> </div> <a name='function.chr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ascii</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The ascii code. </p> </dd> </dl> <p> </p> </div> <a name='function.chr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the specified character. </p> </div> <a name='function.chr.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> This function now uses codepoint as input. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.chr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>chr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;ends&amp;nbsp;in&amp;nbsp;escape:&amp;nbsp;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #0000BB'>chr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>27</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;add&amp;nbsp;an&amp;nbsp;escape&amp;nbsp;character&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;$str&amp;nbsp;*/<br /><br />/*&amp;nbsp;Often&amp;nbsp;this&amp;nbsp;is&amp;nbsp;more&amp;nbsp;useful&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;ends&amp;nbsp;in&amp;nbsp;escape:&amp;nbsp;%c'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>27</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.chr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string with a format string of <i>%c</i></li> <li class='member'><a href='http://www.php.net/manual/en/function.ord.php' class='function'>ord()</a></li> <li class='member'>An <a href='http://www.asciitable.com' class='link external'>&amp;raquo; ASCII-table</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chown" value="<div id='function.chown' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chown.php'>chown</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chown</span> &amp;mdash; <span class='dc-title'>Changes file owner</span></p> </div> <a name='function.chown.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>chown</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$user</tt></span> )</div> <p class='para rdfs-comment'> Attempts to change the owner of the file <i><tt class='parameter'>filename</tt></i> to user <i><tt class='parameter'>user</tt></i> . Only the superuser may change the owner of a file. </p> </div> <a name='function.chown.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>user</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A user name or number. </p> </dd> </dl> <p> </p> </div> <a name='function.chown.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.chown.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Simple <b>chown()</b> usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;File&amp;nbsp;name&amp;nbsp;and&amp;nbsp;username&amp;nbsp;to&amp;nbsp;use<br /></span><span style='color: #0000BB'>$file_name</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/home/sites/php.net/public_html/sandbox'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$file_name&amp;nbsp;</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$user_name&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'root'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;user<br /></span><span style='color: #0000BB'>chown</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$user_name</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;the&amp;nbsp;result<br /></span><span style='color: #0000BB'>$stat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stat</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>posix_getpwuid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'uid'</span><span style='color: #007700'>]));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(7) { [&amp;quot;name&amp;quot;]=&amp;gt; string(13) &amp;quot;php.net&amp;quot; [&amp;quot;passwd&amp;quot;]=&amp;gt; string(1) &amp;quot;x&amp;quot; [&amp;quot;uid&amp;quot;]=&amp;gt; int(148864) [&amp;quot;gid&amp;quot;]=&amp;gt; int(148910) [&amp;quot;gecos&amp;quot;]=&amp;gt; string(13) &amp;quot;php.net&amp;quot; [&amp;quot;dir&amp;quot;]=&amp;gt; string(25) &amp;quot;/home/sites/php.net&amp;quot; [&amp;quot;shell&amp;quot;]=&amp;gt; string(13) &amp;quot;/sbin/nologin&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='function.chown.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, PHP checks whether the files or directories being operated upon have the same UID (owner) as the script that is being executed.</span></p></blockquote> </div> <a name='function.chown.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chmod.php' class='function' rel='rdfs-seeAlso'>chmod()</a> - Changes file mode</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chop" value="<div id='function.chop' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chop.php'>chop</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chop</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.rtrim.php' class='function'>rtrim()</a></span></p> </div> <a name='function.chop.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.rtrim.php' class='function'>rtrim()</a>. </p> </div> <a name='function.chop.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>chop()</b> is different than the Perl <i>chop()</i> function, which removes the last character in the string. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chmod" value="<div id='function.chmod' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chmod.php'>chmod</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chmod</span> &amp;mdash; <span class='dc-title'>Changes file mode</span></p> </div> <a name='function.chmod.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>chmod</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <p class='para rdfs-comment'> Attempts to change the mode of the specified file to that given in <i><tt class='parameter'>mode</tt></i> . </p> </div> <a name='function.chmod.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Note that <i><tt class='parameter'>mode</tt></i> is not automatically assumed to be an octal value, so strings (such as &amp;quot;g+w&amp;quot;) will not work properly. To ensure the expected operation, you need to prefix <i><tt class='parameter'>mode</tt></i> with a zero (0): </p> <p class='para'> </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>755</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;decimal;&amp;nbsp;probably&amp;nbsp;incorrect<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'u+rwx,go+rx'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;string;&amp;nbsp;incorrect<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0755</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;octal;&amp;nbsp;correct&amp;nbsp;value&amp;nbsp;of&amp;nbsp;mode<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> The <i><tt class='parameter'>mode</tt></i> parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order. One component can be computed by adding up the needed permissions for that target user base. Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable. Add up these numbers to specify needed rights. You can also read more about modes on Unix systems with &amp;#039;<strong class='command'>man 1 chmod</strong>&amp;#039; and &amp;#039;<strong class='command'>man 2 chmod</strong>&amp;#039;. </p> <p class='para'> </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;and&amp;nbsp;write&amp;nbsp;for&amp;nbsp;owner,&amp;nbsp;nothing&amp;nbsp;for&amp;nbsp;everybody&amp;nbsp;else<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0600</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;and&amp;nbsp;write&amp;nbsp;for&amp;nbsp;owner,&amp;nbsp;read&amp;nbsp;for&amp;nbsp;everybody&amp;nbsp;else<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0644</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Everything&amp;nbsp;for&amp;nbsp;owner,&amp;nbsp;read&amp;nbsp;and&amp;nbsp;execute&amp;nbsp;for&amp;nbsp;others<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0755</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Everything&amp;nbsp;for&amp;nbsp;owner,&amp;nbsp;read&amp;nbsp;and&amp;nbsp;execute&amp;nbsp;for&amp;nbsp;owner's&amp;nbsp;group<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/somedir/somefile'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0750</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </dd> </dl> <p> </p> </div> <a name='function.chmod.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.chmod.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: The current user is the user under which PHP runs. It is probably not the same user you use for normal shell or FTP access. The mode can be changed only by user who owns the file on most systems. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: When <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a> is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed. In addition, you cannot set the SUID, SGID and sticky bits. <br /> </p></blockquote> </div> <a name='function.chmod.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chown.php' class='function' rel='rdfs-seeAlso'>chown()</a> - Changes file owner</li> <li class='member'><a href='http://www.php.net/manual/en/function.chgrp.php' class='function' rel='rdfs-seeAlso'>chgrp()</a> - Changes file group</li> <li class='member'><a href='http://www.php.net/manual/en/function.fileperms.php' class='function' rel='rdfs-seeAlso'>fileperms()</a> - Gets file permissions</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chgrp" value="<div id='function.chgrp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chgrp.php'>chgrp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chgrp</span> &amp;mdash; <span class='dc-title'>Changes file group</span></p> </div> <a name='function.chgrp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>chgrp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$group</tt></span> )</div> <p class='para rdfs-comment'> Attempts to change the group of the file <i><tt class='parameter'>filename</tt></i> to <i><tt class='parameter'>group</tt></i> . </p> <p class='para'> Only the superuser may change the group of a file arbitrarily; other users may change the group of a file to any group of which that user is a member. </p> </div> <a name='function.chgrp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>group</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A group name or number. </p> </dd> </dl> <p> </p> </div> <a name='function.chgrp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.chgrp.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Changing a file&amp;#039;s group</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'shared_file.txt'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'%s's&amp;nbsp;Group&amp;nbsp;ID&amp;nbsp;@&amp;nbsp;%s:&amp;nbsp;%d\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>filegroup</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>chgrp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>filegroup</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.chgrp.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will not work on <a href='http://www.php.net/manual/en/features.remote-files.php' class='link'>remote files</a> as the file to be examined must be accessible via the server&amp;#039;s filesystem.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, PHP checks whether the files or directories being operated upon have the same UID (owner) as the script that is being executed.</span></p></blockquote> </div> <a name='function.chgrp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chown.php' class='function' rel='rdfs-seeAlso'>chown()</a> - Changes file owner</li> <li class='member'><a href='http://www.php.net/manual/en/function.chmod.php' class='function' rel='rdfs-seeAlso'>chmod()</a> - Changes file mode</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="checkdate" value="<div id='function.checkdate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.checkdate.php'>checkdate</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>checkdate</span> &amp;mdash; <span class='dc-title'>Validate a Gregorian date</span></p> </div> <a name='function.checkdate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>checkdate</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$month</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$day</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$year</tt></span> )</div> <p class='para rdfs-comment'> Checks the validity of the date formed by the arguments. A date is considered valid if each parameter is properly defined. </p> </div> <a name='function.checkdate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>month</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The month is between 1 and 12 inclusive. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>day</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The day is within the allowed number of days for the given <i><tt class='parameter'>month</tt></i> . Leap <i><tt class='parameter'>year</tt></i> s are taken into consideration. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>year</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The year is between 1 and 32767 inclusive. </p> </dd> </dl> <p> </p> </div> <a name='function.checkdate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the date given is valid; otherwise returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.checkdate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>checkdate()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>checkdate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>31</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2000</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>checkdate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>29</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2001</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> <a name='function.checkdate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.mktime.php' class='function' rel='rdfs-seeAlso'>mktime()</a> - Get Unix timestamp for a date</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtotime.php' class='function' rel='rdfs-seeAlso'>strtotime()</a> - Parse about any English textual datetime description into a Unix timestamp</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="chdir" value="<div id='function.chdir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.chdir.php'>chdir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>chdir</span> &amp;mdash; <span class='dc-title'>Change directory</span></p> </div> <a name='function.chdir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>chdir</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$directory</tt></span> )</div> <p class='para rdfs-comment'> Changes PHP&amp;#039;s current directory to <i><tt class='parameter'>directory</tt></i> . </p> </div> <a name='function.chdir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>directory</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new current directory </p> </dd> </dl> <p> </p> </div> <a name='function.chdir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.chdir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>chdir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;current&amp;nbsp;directory<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>getcwd</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>chdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'public_html'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;current&amp;nbsp;directory<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>getcwd</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> /home/vincent /home/vincent/public_html </pre></div> </div> </div><p> </p> </div> <a name='function.chdir.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</span></p></blockquote> </div> <a name='function.chdir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getcwd.php' class='function' rel='rdfs-seeAlso'>getcwd()</a> - Gets the current working directory</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ceil" value="<div id='function.ceil' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ceil.php'>ceil</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ceil</span> &amp;mdash; <span class='dc-title'>Round fractions up</span></p> </div> <a name='function.ceil.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>ceil</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$value</tt></span> )</div> <p class='simpara'> Returns the next highest integer value by rounding up <i><tt class='parameter'>value</tt></i> if necessary. </p> </div> <a name='function.ceil.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to round </p> </dd> </dl> <p> </p> </div> <a name='function.ceil.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <i><tt class='parameter'>value</tt></i> rounded up to the next highest integer. The return value of <b>ceil()</b> is still of type <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> as the value range of <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> is usually bigger than that of <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='function.ceil.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ceil()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>ceil</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4.3</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;5<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>ceil</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9.999</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;10<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>ceil</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>3.14</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-3<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ceil.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.floor.php' class='function' rel='rdfs-seeAlso'>floor()</a> - Round fractions down</li> <li class='member'><a href='http://www.php.net/manual/en/function.round.php' class='function' rel='rdfs-seeAlso'>round()</a> - Rounds a float</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="call_user_method_array" value="<div id='function.call-user-method-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.call-user-method-array.php'>call_user_method_array</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>call_user_method_array</span> &amp;mdash; <span class='dc-title'>Call a user method given with an array of parameters [deprecated]</span></p> </div> <a name='function.call-user-method-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>call_user_method_array</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$method_name</tt></span> , <span class='methodparam'><span class='type'>object</span> <tt class='parameter reference'>&amp;amp;$obj</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$params</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The <b>call_user_method_array()</b> function is deprecated as of PHP 4.1.0. </p> </div> </div> <a name='function.call-user-method-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>call_user_method_array()</b> alternative</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />call_user_func_array</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$method_name</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$params</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(array(&amp;amp;</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$method_name</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$params</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;4<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.call-user-method-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func-array.php' class='function' rel='rdfs-seeAlso'>call_user_func_array()</a> - Call a user function given with an array of parameters</li> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func.php' class='function' rel='rdfs-seeAlso'>call_user_func()</a> - Call a user function given by the first parameter</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="call_user_method" value="<div id='function.call-user-method' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.call-user-method.php'>call_user_method</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>call_user_method</span> &amp;mdash; <span class='dc-title'>Call a user method on an specific object [deprecated]</span></p> </div> <a name='function.call-user-method.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>call_user_method</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$method_name</tt></span> , <span class='methodparam'><span class='type'>object</span> <tt class='parameter reference'>&amp;amp;$obj</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The <b>call_user_method()</b> function is deprecated as of PHP 4.1.0. </p> </div> </div> <a name='function.call-user-method.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>call_user_method()</b> alternative</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />call_user_func</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$method_name</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$parameter&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;,&amp;nbsp;...&amp;nbsp;*/</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(array(&amp;amp;</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$method_name</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$parameter&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;,&amp;nbsp;...&amp;nbsp;*/</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;4<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.call-user-method.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func-array.php' class='function' rel='rdfs-seeAlso'>call_user_func_array()</a> - Call a user function given with an array of parameters</li> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func.php' class='function' rel='rdfs-seeAlso'>call_user_func()</a> - Call a user function given by the first parameter</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="call_user_func_array" value="<div id='function.call-user-func-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.call-user-func-array.php'>call_user_func_array</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>call_user_func_array</span> &amp;mdash; <span class='dc-title'>Call a user function given with an array of parameters</span></p> </div> <a name='function.call-user-func-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>call_user_func_array</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$function</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$param_arr</tt></span> )</div> <p class='para rdfs-comment'> Call a user defined <i><tt class='parameter'>function</tt></i> with the parameters in <i><tt class='parameter'>param_arr</tt></i> . </p> </div> <a name='function.call-user-func-array.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function to be called. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>param_arr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The parameters to be passed to the function, as an indexed array. </p> </dd> </dl> <p> </p> </div> <a name='function.call-user-func-array.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the function result, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.call-user-func-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>call_user_func_array()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>debug</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'***DEBUGGING\nVARIABLE:&amp;nbsp;</span><span style='color: #0000BB'>$var</span><span style='color: #DD0000'>\nVALUE:'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>is_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;||&amp;nbsp;</span><span style='color: #0000BB'>is_object</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;||&amp;nbsp;</span><span style='color: #0000BB'>is_resource</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\n</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'***\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$host&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'PHP_SELF'</span><span style='color: #007700'>];<br /><br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'debug'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'host'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$host</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'debug'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'debug'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'_POST'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$_POST</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>call_user_func_array()</b> using namespace name</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>namespace&amp;nbsp;</span><span style='color: #0000BB'>Foobar</span><span style='color: #007700'>;<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>}</span><span style='color: #DD0000'>!\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__NAMESPACE__&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\Foo::test'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'Hannes'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>__NAMESPACE__&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\Foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>),&amp;nbsp;array(</span><span style='color: #DD0000'>'Philip'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hello Hannes! Hello Philip! </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 Using lambda function</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$func&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;function(</span><span style='color: #0000BB'>$arg1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arg2</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$arg1&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>$arg2</span><span style='color: #007700'>;<br />};<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>)));&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(8) </pre></div> </div> </div><p> </p> </div> <a name='function.call-user-func-array.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Referenced variables in <i><tt class='parameter'>param_arr</tt></i> are passed to the function by a reference, others are passed by a value. In other words, it does not depend on the function signature whether the parameter is passed by a value or by a reference. <br /> </p></blockquote> </div> <a name='function.call-user-func-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func.php' class='function' rel='rdfs-seeAlso'>call_user_func()</a> - Call a user function given by the first parameter</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="call_user_func" value="<div id='function.call-user-func' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.call-user-func.php'>call_user_func</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>call_user_func</span> &amp;mdash; <span class='dc-title'>Call a user function given by the first parameter</span></p> </div> <a name='function.call-user-func.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>call_user_func</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$function</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Call a user defined function given by the <i><tt class='parameter'>function</tt></i> parameter. </p> </div> <a name='function.call-user-func.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function to be called. Class methods may also be invoked statically using this function by passing <i>array($classname, $methodname)</i> to this parameter. Additionally class methods of an object instance may be called by passing <i>array($objectinstance, $methodname)</i> to this parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Zero or more parameters to be passed to the function. </p> <blockquote><p><b class='note'>Note</b>: Note that the parameters for <b>call_user_func()</b> are not passed by reference. </p><div class='example'> <p><b>Example #1 <b>call_user_func()</b> example and references</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL</span><span style='color: #007700'>);<br />function&amp;nbsp;</span><span style='color: #0000BB'>increment</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>++;<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'increment'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>call_user_func_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'increment'</span><span style='color: #007700'>,&amp;nbsp;array(&amp;amp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;You&amp;nbsp;can&amp;nbsp;use&amp;nbsp;this&amp;nbsp;instead&amp;nbsp;before&amp;nbsp;PHP&amp;nbsp;5.3<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 1 </pre></div> </div> </div><p> <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.call-user-func.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the function result, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.call-user-func.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>call_user_func()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>barber</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$type</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;wanted&amp;nbsp;a&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #DD0000'>&amp;nbsp;haircut,&amp;nbsp;no&amp;nbsp;problem\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'barber'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'mushroom'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'barber'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'shave'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> You wanted a mushroom haircut, no problem You wanted a shave haircut, no problem </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 <b>call_user_func()</b> using namespace name</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>namespace&amp;nbsp;</span><span style='color: #0000BB'>Foobar</span><span style='color: #007700'>;<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;world!\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__NAMESPACE__&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\Foo::test'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>__NAMESPACE__&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\Foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hello world! Hello world! </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #4 Using a class method with <b>call_user_func()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>myclass&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>say_hello</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Hello!\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$classname&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'myclass'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>$classname</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'say_hello'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$classname&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'::say_hello'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;5.2.3<br /><br /></span><span style='color: #0000BB'>$myobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>myclass</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>call_user_func</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>$myobject</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'say_hello'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hello! Hello! Hello! </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #5 Using lambda function with <b>call_user_func()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />call_user_func</span><span style='color: #007700'>(function(</span><span style='color: #0000BB'>$arg</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'[</span><span style='color: #0000BB'>$arg</span><span style='color: #DD0000'>]\n'</span><span style='color: #007700'>;&amp;nbsp;},&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> [test] </pre></div> </div> </div><p> </p> </div> <a name='function.call-user-func.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func-array.php' class='function' rel='rdfs-seeAlso'>call_user_func_array()</a> - Call a user function given with an array of parameters</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-callable.php' class='function' rel='rdfs-seeAlso'>is_callable()</a> - Verify that the contents of a variable can be called as a function</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::__toString" value="<div id='cachingiterator.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.tostring.php'>CachingIterator::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::__toString</span> &amp;mdash; <span class='dc-title'>Return the string representation of the current element</span></p> </div> <a name='cachingiterator.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Get the string representation of the current element. </p> </div> <a name='cachingiterator.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> representation of the current element. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::__construct" value="<div id='cachingiterator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.construct.php'>CachingIterator::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::__construct</span> &amp;mdash; <span class='dc-title'>Construct a new CachingIterator object for the iterator.</span></p> </div> <a name='cachingiterator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>CachingIterator::__construct</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$flags</tt></span> ] )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Iterator to cache </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Bitmask of flags. </p> </dd> </dl> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::valid" value="<div id='cachingiterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.valid.php'>CachingIterator::valid</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether the current element is valid</span></p> </div> <a name='cachingiterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Check whether the current element is valid. </p> </div> <a name='cachingiterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::setFlags" value="<div id='cachingiterator.setflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.setflags.php'>CachingIterator::setFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::setFlags</span> &amp;mdash; <span class='dc-title'>The setFlags purpose</span></p> </div> <a name='cachingiterator.setflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::setFlags</b></span> ( <span class='methodparam'><span class='type'><span class='type bitmask'>bitmask</span></span> <tt class='parameter'>$flags</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Set the flags for the CachingIterator object. </p> </div> <a name='cachingiterator.setflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Bitmask of the flags to set. </p> </dd> </dl> <p> </p> </div> <a name='cachingiterator.setflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::rewind" value="<div id='cachingiterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.rewind.php'>CachingIterator::rewind</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the iterator</span></p> </div> <a name='cachingiterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Rewind the iterator. </p> </div> <a name='cachingiterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::offsetUnset" value="<div id='cachingiterator.offsetunset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.offsetunset.php'>CachingIterator::offsetUnset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::offsetUnset</span> &amp;mdash; <span class='dc-title'>The offsetUnset purpose</span></p> </div> <a name='cachingiterator.offsetunset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::offsetUnset</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.offsetunset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index of the element to be unset. </p> </dd> </dl> <p> </p> </div> <a name='cachingiterator.offsetunset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::offsetSet" value="<div id='cachingiterator.offsetset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.offsetset.php'>CachingIterator::offsetSet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::offsetSet</span> &amp;mdash; <span class='dc-title'>The offsetSet purpose</span></p> </div> <a name='cachingiterator.offsetset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::offsetSet</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$newval</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.offsetset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index of the element to be set. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>newval</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new value for the <i><tt class='parameter'>index</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='cachingiterator.offsetset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::offsetGet" value="<div id='cachingiterator.offsetget' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.offsetget.php'>CachingIterator::offsetGet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::offsetGet</span> &amp;mdash; <span class='dc-title'>The offsetGet purpose</span></p> </div> <a name='cachingiterator.offsetget.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::offsetGet</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.offsetget.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Description... </p> </dd> </dl> <p> </p> </div> <a name='cachingiterator.offsetget.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Description... </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::offsetExists" value="<div id='cachingiterator.offsetexists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.offsetexists.php'>CachingIterator::offsetExists</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::offsetExists</span> &amp;mdash; <span class='dc-title'>The offsetExists purpose</span></p> </div> <a name='cachingiterator.offsetexists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::offsetExists</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.offsetexists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index being checked. </p> </dd> </dl> <p> </p> </div> <a name='cachingiterator.offsetexists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if an entry referenced by the offset exists, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::next" value="<div id='cachingiterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.next.php'>CachingIterator::next</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::next</span> &amp;mdash; <span class='dc-title'>Move the iterator forward</span></p> </div> <a name='cachingiterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Move the iterator forward. </p> </div> <a name='cachingiterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::key" value="<div id='cachingiterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.key.php'>CachingIterator::key</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::key</span> &amp;mdash; <span class='dc-title'>Return the key for the current element</span></p> </div> <a name='cachingiterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> This method may return a key for the current element. </p> </div> <a name='cachingiterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::hasNext" value="<div id='cachingiterator.hasnext' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.hasnext.php'>CachingIterator::hasNext</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::hasNext</span> &amp;mdash; <span class='dc-title'>Check whether the inner iterator has a valid next element</span></p> </div> <a name='cachingiterator.hasnext.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::hasNext</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.hasnext.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.hasnext.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::getInnerIterator" value="<div id='cachingiterator.getinneriterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.getinneriterator.php'>CachingIterator::getInnerIterator</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::getInnerIterator</span> &amp;mdash; <span class='dc-title'>Return the innter iterator</span></p> </div> <a name='cachingiterator.getinneriterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::getInnerIterator</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Returns the iterator sent to the constructor. </p> </div> <a name='cachingiterator.getinneriterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.getinneriterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an object implementing the Iterator interface. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::getFlags" value="<div id='cachingiterator.getflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.getflags.php'>CachingIterator::getFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::getFlags</span> &amp;mdash; <span class='dc-title'>Get flags used</span></p> </div> <a name='cachingiterator.getflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::getFlags</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> Get the bitmask of the flags used for this CachingIterator instance. </p> </div> <a name='cachingiterator.getflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.getflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Description... </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::getCache" value="<div id='cachingiterator.getcache' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.getcache.php'>CachingIterator::getCache</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>CachingIterator::getCache</span> &amp;mdash; <span class='dc-title'>The getCache purpose</span></p> </div> <a name='cachingiterator.getcache.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::getCache</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='cachingiterator.getcache.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.getcache.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Description... </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::current" value="<div id='cachingiterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.current.php'>CachingIterator::current</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>CachingIterator::current</span> &amp;mdash; <span class='dc-title'>Return the current element</span></p> </div> <a name='cachingiterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> May return the current element in the iteration. </p> </div> <a name='cachingiterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Mixed </p> </div> <a name='cachingiterator.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.current.php' class='function' rel='rdfs-seeAlso'>Iterator::current</a> - Return the current element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator::count" value="<div id='cachingiterator.count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/cachingiterator.count.php'>CachingIterator::count</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>CachingIterator::count</span> &amp;mdash; <span class='dc-title'>The number of elements in the iterator</span></p> </div> <a name='cachingiterator.count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>CachingIterator::count</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> <p class='para'> May return the number of elements in the iterator. </p> </div> <a name='cachingiterator.count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='cachingiterator.count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The count of the elements iterated over. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="CachingIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.cachingiterator.php'>The CachingIterator class</a></h1> <div class='partintro'> <div id='cachingiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This object supports cached iteration over another iterator. </p> </div> <div id='cachingiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>CachingIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>CachingIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iteratoriterator.php' class='classname'>IteratorIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='interfacename'>ArrayAccess</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.call-tostring'>CachingIterator::CALL_TOSTRING</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.catch-get-child'>CachingIterator::CATCH_GET_CHILD</a></var> <span class='initializer'> = 16</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.tostring-use-key'>CachingIterator::TOSTRING_USE_KEY</a></var> <span class='initializer'> = 2</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.tostring-use-current'>CachingIterator::TOSTRING_USE_CURRENT</a></var> <span class='initializer'> = 4</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.tostring-use-inner'>CachingIterator::TOSTRING_USE_INNER</a></var> <span class='initializer'> = 8</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.cachingiterator.php#cachingiterator.constants.full-cache'>CachingIterator::FULL_CACHE</a></var> <span class='initializer'> = 256</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$flags</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.count.php' class='function'>count</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getcache.php' class='function'>getCache</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getflags.php' class='function'>getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getinneriterator.php' class='function'>getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.hasnext.php' class='function'>hasNext</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetexists.php' class='function'>offsetExists</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetget.php' class='function'>offsetGet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetset.php' class='function'>offsetSet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$newval</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetunset.php' class='function'>offsetUnset</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.setflags.php' class='function'>setFlags</a></span> ( <span class='methodparam'><span class='type'><span class='type bitmask'>bitmask</span></span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='cachingiterator.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='cachingiterator.constants.types' class='section'> <h2 class='title'>CachingIterator Node Types</h2> <dl> <dt id='cachingiterator.constants.call-tostring' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::CALL_TOSTRING</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='cachingiterator.constants.catch-get-child' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::CATCH_GET_CHILD</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='cachingiterator.constants.tostring-use-key' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::TOSTRING_USE_KEY</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='cachingiterator.constants.tostring-use-current' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::TOSTRING_USE_CURRENT</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='cachingiterator.constants.tostring-use-inner' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::TOSTRING_USE_INNER</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='cachingiterator.constants.full-cache' class='varlistentry'> <span class='term'><b><tt class='constant'>CachingIterator::FULL_CACHE</tt></b></span> </dt><dd class='listitem'> <p class='para'>Cache all read data.</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/cachingiterator.construct.php'>CachingIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a new CachingIterator object for the iterator.</li><li><a href='http://www.php.net/manual/en/cachingiterator.count.php'>CachingIterator::count</a> &amp;acirc;&amp;#128;&amp;#148; The number of elements in the iterator</li><li><a href='http://www.php.net/manual/en/cachingiterator.current.php'>CachingIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Return the current element</li><li><a href='http://www.php.net/manual/en/cachingiterator.getcache.php'>CachingIterator::getCache</a> &amp;acirc;&amp;#128;&amp;#148; The getCache purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.getflags.php'>CachingIterator::getFlags</a> &amp;acirc;&amp;#128;&amp;#148; Get flags used</li><li><a href='http://www.php.net/manual/en/cachingiterator.getinneriterator.php'>CachingIterator::getInnerIterator</a> &amp;acirc;&amp;#128;&amp;#148; Return the innter iterator</li><li><a href='http://www.php.net/manual/en/cachingiterator.hasnext.php'>CachingIterator::hasNext</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the inner iterator has a valid next element</li><li><a href='http://www.php.net/manual/en/cachingiterator.key.php'>CachingIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Return the key for the current element</li><li><a href='http://www.php.net/manual/en/cachingiterator.next.php'>CachingIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move the iterator forward</li><li><a href='http://www.php.net/manual/en/cachingiterator.offsetexists.php'>CachingIterator::offsetExists</a> &amp;acirc;&amp;#128;&amp;#148; The offsetExists purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.offsetget.php'>CachingIterator::offsetGet</a> &amp;acirc;&amp;#128;&amp;#148; The offsetGet purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.offsetset.php'>CachingIterator::offsetSet</a> &amp;acirc;&amp;#128;&amp;#148; The offsetSet purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.offsetunset.php'>CachingIterator::offsetUnset</a> &amp;acirc;&amp;#128;&amp;#148; The offsetUnset purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.rewind.php'>CachingIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the iterator</li><li><a href='http://www.php.net/manual/en/cachingiterator.setflags.php'>CachingIterator::setFlags</a> &amp;acirc;&amp;#128;&amp;#148; The setFlags purpose</li><li><a href='http://www.php.net/manual/en/cachingiterator.tostring.php'>CachingIterator::__toString</a> &amp;acirc;&amp;#128;&amp;#148; Return the string representation of the current element</li><li><a href='http://www.php.net/manual/en/cachingiterator.valid.php'>CachingIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current element is valid</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="bindec" value="<div id='function.bindec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.bindec.php'>bindec</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>bindec</span> &amp;mdash; <span class='dc-title'>Binary to decimal</span></p> </div> <a name='function.bindec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>bindec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$binary_string</tt></span> )</div> <p class='para rdfs-comment'> Returns the decimal equivalent of the binary number represented by the <i><tt class='parameter'>binary_string</tt></i> argument. </p> <p class='para'> <b>bindec()</b> converts a binary number to an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> or, if needed for size reasons, <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>. </p> <p class='para'> <b>bindec()</b> interprets all <i><tt class='parameter'>binary_string</tt></i> values as unsigned integers. This is because <b>bindec()</b> sees the most significant bit as another order of magnitude rather than as the sign bit. </p> </div> <a name='function.bindec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>binary_string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The binary string to convert </p> </dd> </dl> <p> </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The parameter must be a string. Using other data types will produce unexpected results. </p> </div> </div> <a name='function.bindec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The decimal value of <i><tt class='parameter'>binary_string</tt></i> </p> </div> <a name='function.bindec.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Since 4.1.0</td> <td align='left'> The function can now convert numbers that are too large to fit into the platforms <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> type, larger values are returned as <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> in that case. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.bindec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>bindec()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>bindec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'110011'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>bindec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'000110011'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>bindec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'111'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 51 51 7 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>bindec()</b> interprets input as unsigned integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*<br />&amp;nbsp;*&amp;nbsp;The&amp;nbsp;lesson&amp;nbsp;from&amp;nbsp;this&amp;nbsp;example&amp;nbsp;is&amp;nbsp;in&amp;nbsp;the&amp;nbsp;output<br />&amp;nbsp;*&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;the&amp;nbsp;PHP&amp;nbsp;code&amp;nbsp;itself.<br />&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>$magnitude_lower&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;(</span><span style='color: #0000BB'>PHP_INT_SIZE&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>)&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>p</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$magnitude_lower&amp;nbsp;</span><span style='color: #007700'>-&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>p</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$magnitude_lower</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'See&amp;nbsp;the&amp;nbsp;rollover?&amp;nbsp;&amp;nbsp;Watch&amp;nbsp;it&amp;nbsp;next&amp;nbsp;time&amp;nbsp;around...'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>p</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_INT_MAX</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PHP_INT_MAX'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>p</span><span style='color: #007700'>(~</span><span style='color: #0000BB'>PHP_INT_MAX</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'interpreted&amp;nbsp;to&amp;nbsp;be&amp;nbsp;one&amp;nbsp;more&amp;nbsp;than&amp;nbsp;PHP_INT_MAX'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>PHP_INT_SIZE&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$note&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'interpreted&amp;nbsp;to&amp;nbsp;be&amp;nbsp;the&amp;nbsp;largest&amp;nbsp;unsigned&amp;nbsp;integer'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$note&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'interpreted&amp;nbsp;to&amp;nbsp;be&amp;nbsp;the&amp;nbsp;largest&amp;nbsp;unsigned&amp;nbsp;integer<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(18446744073709551615)&amp;nbsp;but&amp;nbsp;skewed&amp;nbsp;by&amp;nbsp;float&amp;nbsp;precision'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>p</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$note</span><span style='color: #007700'>);<br /><br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>p</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$note&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'input:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$input</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'%0'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;(</span><span style='color: #0000BB'>PHP_INT_SIZE&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bin&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'binary:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bin</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>ini_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'precision'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;For&amp;nbsp;readability&amp;nbsp;on&amp;nbsp;64&amp;nbsp;bit&amp;nbsp;boxes.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$dec&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>bindec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bin</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'bindec():&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$dec&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$note</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'NOTE:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$note</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>Output of the above example on 32 bit machines:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> input: 1073741823 binary: 00111111111111111111111111111111 bindec(): 1073741823 input: 1073741824 binary: 01000000000000000000000000000000 bindec(): 1073741824 NOTE: See the rollover? Watch it next time around... input: 2147483647 binary: 01111111111111111111111111111111 bindec(): 2147483647 NOTE: PHP_INT_MAX input: -2147483648 binary: 10000000000000000000000000000000 bindec(): 2147483648 NOTE: interpreted to be one more than PHP_INT_MAX input: -1 binary: 11111111111111111111111111111111 bindec(): 4294967295 NOTE: interpreted to be the largest unsigned integer </pre></div> </div> <div class='example-contents para'><p>Output of the above example on 64 bit machines:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> input: 4611686018427387903 binary: 0011111111111111111111111111111111111111111111111111111111111111 bindec(): 4611686018427387903 input: 4611686018427387904 binary: 0100000000000000000000000000000000000000000000000000000000000000 bindec(): 4611686018427387904 NOTE: See the rollover? Watch it next time around... input: 9223372036854775807 binary: 0111111111111111111111111111111111111111111111111111111111111111 bindec(): 9223372036854775807 NOTE: PHP_INT_MAX input: -9223372036854775808 binary: 1000000000000000000000000000000000000000000000000000000000000000 bindec(): 9223372036854775808 NOTE: interpreted to be one more than PHP_INT_MAX input: -1 binary: 1111111111111111111111111111111111111111111111111111111111111111 bindec(): 18446744073709551616 NOTE: interpreted to be the largest unsigned integer (18446744073709551615) but skewed by float precision </pre></div> </div> </div><p> </p> </div> <a name='function.bindec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.decbin.php' class='function' rel='rdfs-seeAlso'>decbin()</a> - Decimal to binary</li> <li class='member'><a href='http://www.php.net/manual/en/function.octdec.php' class='function' rel='rdfs-seeAlso'>octdec()</a> - Octal to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.hexdec.php' class='function' rel='rdfs-seeAlso'>hexdec()</a> - Hexadecimal to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.base-convert.php' class='function' rel='rdfs-seeAlso'>base_convert()</a> - Convert a number between arbitrary bases</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="bin2hex" value="<div id='function.bin2hex' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.bin2hex.php'>bin2hex</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>bin2hex</span> &amp;mdash; <span class='dc-title'>Convert binary data into hexadecimal representation</span></p> </div> <a name='function.bin2hex.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>bin2hex</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns an ASCII string containing the hexadecimal representation of <i><tt class='parameter'>str</tt></i> . The conversion is done byte-wise with the high-nibble first. </p> </div> <a name='function.bin2hex.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A character. </p> </dd> </dl> <p> </p> </div> <a name='function.bin2hex.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the hexadecimal representation of the given string. </p> </div> <a name='function.bin2hex.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pack.php' class='function' rel='rdfs-seeAlso'>pack()</a> - Pack data into binary string</li> <li class='member'><a href='http://www.php.net/manual/en/function.unpack.php' class='function' rel='rdfs-seeAlso'>unpack()</a> - Unpack data from binary string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="base_convert" value="<div id='function.base-convert' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.base-convert.php'>base_convert</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>base_convert</span> &amp;mdash; <span class='dc-title'>Convert a number between arbitrary bases</span></p> </div> <a name='function.base-convert.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>base_convert</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$number</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$frombase</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$tobase</tt></span> )</div> <p class='para rdfs-comment'> Returns a string containing <i><tt class='parameter'>number</tt></i> represented in base <i><tt class='parameter'>tobase</tt></i> . The base in which <i><tt class='parameter'>number</tt></i> is given is specified in <i><tt class='parameter'>frombase</tt></i> . Both <i><tt class='parameter'>frombase</tt></i> and <i><tt class='parameter'>tobase</tt></i> have to be between 2 and 36, inclusive. Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35. </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> <b>base_convert()</b> may lose precision on large numbers due to properties related to the internal &amp;quot;double&amp;quot; or &amp;quot;float&amp;quot; type used. Please see the <a href='http://www.php.net/manual/en/language.types.float.php' class='link'>Floating point numbers</a> section in the manual for more specific information and limitations. </p> </div> </div> <a name='function.base-convert.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number to convert </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>frombase</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The base <i><tt class='parameter'>number</tt></i> is in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>tobase</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The base to convert <i><tt class='parameter'>number</tt></i> to </p> </dd> </dl> <p> </p> </div> <a name='function.base-convert.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <i><tt class='parameter'>number</tt></i> converted to base <i><tt class='parameter'>tobase</tt></i> </p> </div> <a name='function.base-convert.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>base_convert()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$hexadecimal&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'A37334'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>base_convert</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$hexadecimal</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>16</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 101000110111001100110100 </pre></div> </div> </div><p> </p> </div> <a name='function.base-convert.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.intval.php' class='function' rel='rdfs-seeAlso'>intval()</a> - Get the integer value of a variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="basename" value="<div id='function.basename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.basename.php'>basename</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>basename</span> &amp;mdash; <span class='dc-title'>Returns filename component of path</span></p> </div> <a name='function.basename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>basename</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$suffix</tt></span> ] )</div> <p class='para rdfs-comment'> Given a string containing a path to a file, this function will return the base name of the file. </p> </div> <a name='function.basename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A path. </p> <p class='para'> On Windows, both slash (<i>/</i>) and backslash (<i>\</i>) are used as directory separator character. In other environments, it is the forward slash (<i>/</i>). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>suffix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the filename ends in <i><tt class='parameter'>suffix</tt></i> this will also be cut off. </p> </dd> </dl> <p> </p> </div> <a name='function.basename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the base name of the given <i><tt class='parameter'>path</tt></i> . </p> </div> <a name='function.basename.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> The <i><tt class='parameter'>suffix</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.basename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>basename()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/home/httpd/html/index.php'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>basename</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$file&amp;nbsp;is&amp;nbsp;set&amp;nbsp;to&amp;nbsp;'index.php'<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>basename</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'.php'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$file&amp;nbsp;is&amp;nbsp;set&amp;nbsp;to&amp;nbsp;'index'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.basename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.dirname.php' class='function' rel='rdfs-seeAlso'>dirname()</a> - Returns directory name component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="base64_encode" value="<div id='function.base64-encode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.base64-encode.php'>base64_encode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>base64_encode</span> &amp;mdash; <span class='dc-title'>Encodes data with MIME base64</span></p> </div> <a name='function.base64-encode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>base64_encode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> Encodes the given <i><tt class='parameter'>data</tt></i> with base64. </p> <p class='para'> This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies. </p> <p class='para'> Base64-encoded data takes about 33% more space than the original data. </p> </div> <a name='function.base64-encode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data to encode. </p> </dd> </dl> <p> </p> </div> <a name='function.base64-encode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The encoded data, as a string. </p> </div> <a name='function.base64-encode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>base64_encode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;an&amp;nbsp;encoded&amp;nbsp;string'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>base64_encode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw== </pre></div> </div> </div><p> </p> </div> <a name='function.base64-encode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.base64-decode.php' class='function' rel='rdfs-seeAlso'>base64_decode()</a> - Decodes data encoded with MIME base64</li> <li class='member'><a href='http://www.php.net/manual/en/function.chunk-split.php' class='function' rel='rdfs-seeAlso'>chunk_split()</a> - Split a string into smaller chunks</li> <li class='member'><a href='http://www.php.net/manual/en/function.convert-uuencode.php' class='function' rel='rdfs-seeAlso'>convert_uuencode()</a> - Uuencode a string</li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc2045' class='link external'>&amp;raquo; RFC 2045</a> section 6.8</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="base64_decode" value="<div id='function.base64-decode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.base64-decode.php'>base64_decode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>base64_decode</span> &amp;mdash; <span class='dc-title'>Decodes data encoded with MIME base64</span></p> </div> <a name='function.base64-decode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>base64_decode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$strict</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Decodes a base64 encoded <i><tt class='parameter'>data</tt></i> . </p> </div> <a name='function.base64-decode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The encoded data. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>strict</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> if input contains character from outside the base64 alphabet. </p> </dd> </dl> <p> </p> </div> <a name='function.base64-decode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the original data or <b><tt class='constant'>FALSE</tt></b> on failure. The returned data may be binary. </p> </div> <a name='function.base64-decode.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'><i><tt class='parameter'>strict</tt></i> added</td> </tr> </tbody> </table> <p> </p> </div> <a name='function.base64-decode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>base64_decode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw=='</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>base64_decode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> This is an encoded string </pre></div> </div> </div><p> </p> </div> <a name='function.base64-decode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.base64-encode.php' class='function' rel='rdfs-seeAlso'>base64_encode()</a> - Encodes data with MIME base64</li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc2045' class='link external'>&amp;raquo; RFC 2045</a> section 6.8</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="BadMethodCallException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.badmethodcallexception.php'>The BadMethodCallException class</a></h1> <div class='partintro'> <div id='badmethodcallexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown if a callback refers to an undefined method or if some arguments are missing </p> </div> <div id='badmethodcallexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>BadMethodCallException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>BadMethodCallException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.badfunctioncallexception.php' class='classname'>BadFunctionCallException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="BadFunctionCallException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.badfunctioncallexception.php'>The BadFunctionCallException class</a></h1> <div class='partintro'> <div id='badfunctioncallexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown if a callback refers to an undefined function or if some arguments are missing </p> </div> <div id='badfunctioncallexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>BadFunctionCallException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>BadFunctionCallException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.logicexception.php' class='classname'>LogicException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="atan2" value="<div id='function.atan2' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.atan2.php'>atan2</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>atan2</span> &amp;mdash; <span class='dc-title'>Arc tangent of two variables</span></p> </div> <a name='function.atan2.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>atan2</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$y</tt></span> , <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$x</tt></span> )</div> <p class='simpara'> This function calculates the arc tangent of the two variables <i><tt class='parameter'>x</tt></i> and <i><tt class='parameter'>y</tt></i> . It is similar to calculating the arc tangent of <i><tt class='parameter'>y</tt></i> / <i><tt class='parameter'>x</tt></i> , except that the signs of both arguments are used to determine the quadrant of the result. </p> <p class='simpara'> The function returns the result in radians, which is between -PI and PI (inclusive). </p> </div> <a name='function.atan2.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>y</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Dividend parameter </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>x</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Divisor parameter </p> </dd> </dl> <p> </p> </div> <a name='function.atan2.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The arc tangent of <i><tt class='parameter'>y</tt></i> /<i><tt class='parameter'>x</tt></i> in radians. </p> </div> <a name='function.atan2.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.atan.php' class='function' rel='rdfs-seeAlso'>atan()</a> - Arc tangent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="atan" value="<div id='function.atan' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.atan.php'>atan</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>atan</span> &amp;mdash; <span class='dc-title'>Arc tangent</span></p> </div> <a name='function.atan.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>atan</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the arc tangent of <i><tt class='parameter'>arg</tt></i> in radians. <b>atan()</b> is the complementary function of <a href='http://www.php.net/manual/en/function.tan.php' class='function'>tan()</a>, which means that <i>a==tan(atan(a))</i> for every value of a that is within <b>atan()</b>&amp;#039;s range. </p> </div> <a name='function.atan.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.atan.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The arc tangent of <i><tt class='parameter'>arg</tt></i> in radians. </p> </div> <a name='function.atan.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.tan.php' class='function' rel='rdfs-seeAlso'>tan()</a> - Tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.atanh.php' class='function' rel='rdfs-seeAlso'>atanh()</a> - Inverse hyperbolic tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.asin.php' class='function' rel='rdfs-seeAlso'>asin()</a> - Arc sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.acos.php' class='function' rel='rdfs-seeAlso'>acos()</a> - Arc cosine</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="assert_options" value="<div id='function.assert-options' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.assert-options.php'>assert_options</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>assert_options</span> &amp;mdash; <span class='dc-title'>Set/get the various assert flags</span></p> </div> <a name='function.assert-options.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>assert_options</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$what</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> ] )</div> <p class='para rdfs-comment'> Set the various <a href='http://www.php.net/manual/en/function.assert.php' class='function'>assert()</a> control options or just query their current settings. </p> </div> <a name='function.assert-options.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>what</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p><table class='doctable table'> <caption><b>Assert Options</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Option</th> <th>INI Setting</th> <th>Default value</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>ASSERT_ACTIVE</td> <td align='left'>assert.active</td> <td align='left'>1</td> <td align='left'>enable <a href='http://www.php.net/manual/en/function.assert.php' class='function'>assert()</a> evaluation</td> </tr> <tr valign='middle'> <td align='left'>ASSERT_WARNING</td> <td align='left'>assert.warning</td> <td align='left'>1</td> <td align='left'>issue a PHP warning for each failed assertion</td> </tr> <tr valign='middle'> <td align='left'>ASSERT_BAIL</td> <td align='left'>assert.bail</td> <td align='left'>0</td> <td align='left'>terminate execution on failed assertions</td> </tr> <tr valign='middle'> <td align='left'>ASSERT_QUIET_EVAL</td> <td align='left'>assert.quiet_eval</td> <td align='left'>0</td> <td align='left'> disable error_reporting during assertion expression evaluation </td> </tr> <tr valign='middle'> <td align='left'>ASSERT_CALLBACK</td> <td align='left'>assert.callback</td> <td align='left'>(<b><tt class='constant'>NULL</tt></b>)</td> <td align='left'>Callback to call on failed assertions</td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An optional new value for the option. </p> </dd> </dl> <p> </p> </div> <a name='function.assert-options.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the original setting of any option or <b><tt class='constant'>FALSE</tt></b> on errors. </p> </div> <a name='function.assert-options.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>assert_options()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;our&amp;nbsp;function&amp;nbsp;to&amp;nbsp;handle&amp;nbsp;<br />//&amp;nbsp;assert&amp;nbsp;failures<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>assert_failure</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Assert&amp;nbsp;failed'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;our&amp;nbsp;test&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>test_assert</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$parameter</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>assert</span><span style='color: #007700'>(</span><span style='color: #0000BB'>is_bool</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$parameter</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;our&amp;nbsp;assert&amp;nbsp;options<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_ACTIVE</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_BAIL</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_WARNING</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_CALLBACK</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'assert_failure'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Make&amp;nbsp;an&amp;nbsp;assert&amp;nbsp;that&amp;nbsp;would&amp;nbsp;fail<br /></span><span style='color: #0000BB'>test_assert</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;never&amp;nbsp;reached&amp;nbsp;due&amp;nbsp;to&amp;nbsp;ASSERT_BAIL&amp;nbsp;<br />//&amp;nbsp;being&amp;nbsp;true<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Never&amp;nbsp;reached'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.assert-options.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.assert.php' class='function' rel='rdfs-seeAlso'>assert()</a> - Checks if assertion is FALSE</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="assert" value="<div id='function.assert' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.assert.php'>assert</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>assert</span> &amp;mdash; <span class='dc-title'>Checks if assertion is <b><tt class='constant'>FALSE</tt></b></span></p> </div> <a name='function.assert.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>assert</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$assertion</tt></span> )</div> <p class='para rdfs-comment'> <b>assert()</b> will check the given <i><tt class='parameter'>assertion</tt></i> and take appropriate action if its result is <b><tt class='constant'>FALSE</tt></b>. </p> <p class='para'> If the <i><tt class='parameter'>assertion</tt></i> is given as a string it will be evaluated as PHP code by <b>assert()</b>. The advantages of a string <i><tt class='parameter'>assertion</tt></i> are less overhead when assertion checking is off and messages containing the <i><tt class='parameter'>assertion</tt></i> expression when an assertion fails. This means that if you pass a boolean condition as <i><tt class='parameter'>assertion</tt></i> this condition will not show up as parameter to the assertion function which you may have defined with the <a href='http://www.php.net/manual/en/function.assert-options.php' class='function'>assert_options()</a> function, the condition is converted to a string before calling that handler function, and the boolean <b><tt class='constant'>FALSE</tt></b> is converted as the empty string. </p> <p class='para'> Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be <b><tt class='constant'>TRUE</tt></b> and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features. </p> <p class='para'> Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated. </p> <p class='para'> The behavior of <b>assert()</b> may be configured by <a href='http://www.php.net/manual/en/function.assert-options.php' class='function'>assert_options()</a> or by .ini-settings described in that functions manual page. </p> <p class='para'> The <a href='http://www.php.net/manual/en/function.assert-options.php' class='function'>assert_options()</a> function and/or ASSERT_CALLBACK configuration directive allow a callback function to be set to handle failed assertions. </p> <p class='para'> <b>assert()</b> callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made. While this information can be captured via other methods, using assertions makes it much faster and easier! </p> <p class='para'> The callback function should accept three arguments. The first argument will contain the file the assertion failed in. The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any - literal values such as 1 or &amp;quot;two&amp;quot; will not be passed via this argument) </p> </div> <a name='function.assert.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>assertion</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The assertion. </p> </dd> </dl> <p> </p> </div> <a name='function.assert.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>FALSE</tt></b> if the assertion is false, <b><tt class='constant'>TRUE</tt></b> otherwise. </p> </div> <a name='function.assert.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Handle a failed assertion with a custom handler</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Active&amp;nbsp;assert&amp;nbsp;and&amp;nbsp;make&amp;nbsp;it&amp;nbsp;quiet<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_ACTIVE</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_WARNING</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_QUIET_EVAL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;handler&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>my_assert_handler</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$code</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;hr&amp;gt;Assertion&amp;nbsp;Failed:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;File&amp;nbsp;'</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Line&amp;nbsp;'</span><span style='color: #0000BB'>$line</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Code&amp;nbsp;'</span><span style='color: #0000BB'>$code</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;&amp;lt;hr&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;up&amp;nbsp;the&amp;nbsp;callback<br /></span><span style='color: #0000BB'>assert_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ASSERT_CALLBACK</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'my_assert_handler'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Make&amp;nbsp;an&amp;nbsp;assertion&amp;nbsp;that&amp;nbsp;should&amp;nbsp;fail<br /></span><span style='color: #0000BB'>assert</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysql_query('')'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.assert.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.assert-options.php' class='function' rel='rdfs-seeAlso'>assert_options()</a> - Set/get the various assert flags</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="asort" value="<div id='function.asort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.asort.php'>asort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>asort</span> &amp;mdash; <span class='dc-title'>Sort an array and maintain index association</span></p> </div> <a name='function.asort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>asort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sort_flags</tt><span class='initializer'> = SORT_REGULAR</span></span> ] )</div> <p class='para rdfs-comment'> This function sorts an array such that array indices maintain their correlation with the array elements they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant. </p> </div> <a name='function.asort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sort_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You may modify the behavior of the sort using the optional parameter <i><tt class='parameter'>sort_flags</tt></i> , for details see <a href='http://www.php.net/manual/en/function.sort.php' class='function'>sort()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.asort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.asort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>asort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>asort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> c = apple b = banana d = lemon a = orange </pre></div> </div> <div class='example-contents para'><p> The fruits have been sorted in alphabetical order, and the index associated with each element has been maintained. </p></div> </div><p> </p> </div> <a name='function.asort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.arsort.php' class='function' rel='rdfs-seeAlso'>arsort()</a> - Sort an array in reverse order and maintain index association</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="asin" value="<div id='function.asin' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.asin.php'>asin</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>asin</span> &amp;mdash; <span class='dc-title'>Arc sine</span></p> </div> <a name='function.asin.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>asin</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the arc sine of <i><tt class='parameter'>arg</tt></i> in radians. <b>asin()</b> is the complementary function of <a href='http://www.php.net/manual/en/function.sin.php' class='function'>sin()</a>, which means that <i>a==sin(asin(a))</i> for every value of a that is within <b>asin()</b>&amp;#039;s range. </p> </div> <a name='function.asin.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.asin.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The arc sine of <i><tt class='parameter'>arg</tt></i> in radians </p> </div> <a name='function.asin.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sin.php' class='function' rel='rdfs-seeAlso'>sin()</a> - Sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.asinh.php' class='function' rel='rdfs-seeAlso'>asinh()</a> - Inverse hyperbolic sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.acos.php' class='function' rel='rdfs-seeAlso'>acos()</a> - Arc cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.atan.php' class='function' rel='rdfs-seeAlso'>atan()</a> - Arc tangent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="arsort" value="<div id='function.arsort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.arsort.php'>arsort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>arsort</span> &amp;mdash; <span class='dc-title'>Sort an array in reverse order and maintain index association</span></p> </div> <a name='function.arsort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>arsort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sort_flags</tt><span class='initializer'> = SORT_REGULAR</span></span> ] )</div> <p class='para rdfs-comment'> This function sorts an array such that array indices maintain their correlation with the array elements they are associated with. </p> <p class='para'> This is used mainly when sorting associative arrays where the actual element order is significant. </p> </div> <a name='function.arsort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sort_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You may modify the behavior of the sort using the optional parameter <i><tt class='parameter'>sort_flags</tt></i> , for details see <a href='http://www.php.net/manual/en/function.sort.php' class='function'>sort()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.arsort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.arsort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>arsort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>arsort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> a = orange d = lemon b = banana c = apple </pre></div> </div> <div class='example-contents para'><p> The fruits have been sorted in reverse alphabetical order, and the index associated with each element has been maintained. </p></div> </div><p> </p> </div> <a name='function.arsort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.asort.php' class='function' rel='rdfs-seeAlso'>asort()</a> - Sort an array and maintain index association</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_walk_recursive" value="<div id='function.array-walk-recursive' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-walk-recursive.php'>array_walk_recursive</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_walk_recursive</span> &amp;mdash; <span class='dc-title'>Apply a user function recursively to every member of an array</span></p> </div> <a name='function.array-walk-recursive.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>array_walk_recursive</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$input</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$funcname</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$userdata</tt></span> ] )</div> <p class='para rdfs-comment'> Applies the user-defined function <i><tt class='parameter'>funcname</tt></i> to each element of the <i><tt class='parameter'>input</tt></i> array. This function will recur into deeper arrays. </p> </div> <a name='function.array-walk-recursive.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>funcname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Typically, <i><tt class='parameter'>funcname</tt></i> takes on two parameters. The <i><tt class='parameter'>input</tt></i> parameter&amp;#039;s value being the first, and the key/index second. </p> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>funcname</tt></i> needs to be working with the actual values of the array, specify the first parameter of <i><tt class='parameter'>funcname</tt></i> as a <a href='http://www.php.net/manual/en/language.references.php' class='link'>reference</a>. Then, any changes made to those elements will be made in the original array itself. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>userdata</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>userdata</tt></i> parameter is supplied, it will be passed as the third parameter to the callback <i><tt class='parameter'>funcname</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.array-walk-recursive.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.array-walk-recursive.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_walk_recursive()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sweet&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'sweet'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$sweet</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'sour'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>);<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>test_print</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$item</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;holds&amp;nbsp;</span><span style='color: #0000BB'>$item</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>array_walk_recursive</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test_print'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> a holds apple b holds banana sour holds lemon </pre></div> </div> <div class='example-contents para'><p> You may notice that the key &amp;#039;sweet&amp;#039; is never displayed. Any key that holds an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> will not be passed to the function. </p></div> </div><p> </p> </div> <a name='function.array-walk-recursive.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-walk.php' class='function' rel='rdfs-seeAlso'>array_walk()</a> - Apply a user function to every member of an array</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_walk" value="<div id='function.array-walk' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-walk.php'>array_walk</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_walk</span> &amp;mdash; <span class='dc-title'>Apply a user function to every member of an array</span></p> </div> <a name='function.array-walk.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>array_walk</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$funcname</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$userdata</tt></span> ] )</div> <p class='simpara'> Applies the user-defined function <i><tt class='parameter'>funcname</tt></i> to each element of the <i><tt class='parameter'>array</tt></i> array. </p> <p class='para'> <b>array_walk()</b> is not affected by the internal array pointer of <i><tt class='parameter'>array</tt></i> . <b>array_walk()</b> will walk through the entire array regardless of pointer position. </p> </div> <a name='function.array-walk.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>funcname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Typically, <i><tt class='parameter'>funcname</tt></i> takes on two parameters. The <i><tt class='parameter'>array</tt></i> parameter&amp;#039;s value being the first, and the key/index second. </p> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>funcname</tt></i> needs to be working with the actual values of the array, specify the first parameter of <i><tt class='parameter'>funcname</tt></i> as a <a href='http://www.php.net/manual/en/language.references.php' class='link'>reference</a>. Then, any changes made to those elements will be made in the original array itself. <br /> </p></blockquote> <p class='para'> Users may not change the <i><tt class='parameter'>array</tt></i> itself from the callback function. e.g. Add/delete elements, unset elements, etc. If the array that <b>array_walk()</b> is applied to is changed, the behavior of this function is undefined, and unpredictable. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>userdata</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>userdata</tt></i> parameter is supplied, it will be passed as the third parameter to the callback <i><tt class='parameter'>funcname</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.array-walk.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.array-walk.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If function <i><tt class='parameter'>funcname</tt></i> requires more parameters than given to it, an error of level <a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'> E_WARNING</a> will be generated each time <b>array_walk()</b> calls <i><tt class='parameter'>funcname</tt></i> . These warnings may be suppressed by prepending the PHP error operator <a href='http://www.php.net/manual/en/language.operators.errorcontrol.php' class='link'>@</a> to the <b>array_walk()</b> call, or by using <a href='http://www.php.net/manual/en/function.error-reporting.php' class='function'>error_reporting()</a>. </p> </div> <a name='function.array-walk.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> Passing the key and <i><tt class='parameter'>userdata</tt></i> to <i><tt class='parameter'>funcname</tt></i> was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-walk.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_walk()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>test_alter</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$item1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$prefix</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$item1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$prefix</span><span style='color: #DD0000'>:&amp;nbsp;</span><span style='color: #0000BB'>$item1</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>test_print</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$item2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>.&amp;nbsp;</span><span style='color: #0000BB'>$item2</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Before&amp;nbsp;...:\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>array_walk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test_print'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>array_walk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test_alter'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'...&amp;nbsp;and&amp;nbsp;after:\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>array_walk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test_print'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Before ...: d. lemon a. orange b. banana c. apple ... and after: d. fruit: lemon a. fruit: orange b. fruit: banana c. fruit: apple </pre></div> </div> </div><p> </p> </div> <a name='function.array-walk.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-walk-recursive.php' class='function' rel='rdfs-seeAlso'>array_walk_recursive()</a> - Apply a user function recursively to every member of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.iterator-apply.php' class='function' rel='rdfs-seeAlso'>iterator_apply()</a> - Apply a user function to every element of an iterator</li> <li class='member'><a href='http://www.php.net/manual/en/function.create-function.php' class='function' rel='rdfs-seeAlso'>create_function()</a> - Create an anonymous (lambda-style) function</li> <li class='member'><a href='http://www.php.net/manual/en/function.list.php' class='function' rel='rdfs-seeAlso'>list()</a> - Assign variables as if they were an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> <li class='member'><a href='http://www.php.net/manual/en/function.call-user-func-array.php' class='function' rel='rdfs-seeAlso'>call_user_func_array()</a> - Call a user function given with an array of parameters</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-map.php' class='function' rel='rdfs-seeAlso'>array_map()</a> - Applies the callback to the elements of the given arrays</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> <li class='member'><a href='http://www.php.net/manual/en/control-structures.foreach.php' class='link'>foreach</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_values" value="<div id='function.array-values' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-values.php'>array_values</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_values</span> &amp;mdash; <span class='dc-title'>Return all the values of an array</span></p> </div> <a name='function.array-values.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_values</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> )</div> <p class='para rdfs-comment'> <b>array_values()</b> returns all the values from the <i><tt class='parameter'>input</tt></i> array and indexes numerically the array. </p> </div> <a name='function.array-values.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> </dl> <p> </p> </div> <a name='function.array-values.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array of values. </p> </div> <a name='function.array-values.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_values()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'size'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'XL'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'gold'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_values</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; XL [1] =&amp;gt; gold ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-values.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-keys.php' class='function' rel='rdfs-seeAlso'>array_keys()</a> - Return all the keys of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_unshift" value="<div id='function.array-unshift' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-unshift.php'>array_unshift</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_unshift</span> &amp;mdash; <span class='dc-title'>Prepend one or more elements to the beginning of an array</span></p> </div> <a name='function.array-unshift.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>array_unshift</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_unshift()</b> prepends passed elements to the front of the <i><tt class='parameter'>array</tt></i> . Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order. All numerical array keys will be modified to start counting from zero while literal keys won&amp;#039;t be touched. </p> </div> <a name='function.array-unshift.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The prepended variable. </p> </dd> </dl> <p> </p> </div> <a name='function.array-unshift.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the new number of elements in the <i><tt class='parameter'>array</tt></i> . </p> </div> <a name='function.array-unshift.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_unshift()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$queue&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_unshift</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$queue</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'raspberry'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$queue</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; apple [1] =&amp;gt; raspberry [2] =&amp;gt; orange [3] =&amp;gt; banana ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-unshift.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-shift.php' class='function' rel='rdfs-seeAlso'>array_shift()</a> - Shift an element off the beginning of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-push.php' class='function' rel='rdfs-seeAlso'>array_push()</a> - Push one or more elements onto the end of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-pop.php' class='function' rel='rdfs-seeAlso'>array_pop()</a> - Pop the element off the end of array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_unique" value="<div id='function.array-unique' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-unique.php'>array_unique</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>array_unique</span> &amp;mdash; <span class='dc-title'>Removes duplicate values from an array</span></p> </div> <a name='function.array-unique.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_unique</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sort_flags</tt><span class='initializer'> = SORT_STRING</span></span> ] )</div> <p class='para rdfs-comment'> Takes an input <i><tt class='parameter'>array</tt></i> and returns a new array without duplicate values. </p> <p class='para'> Note that keys are preserved. <b>array_unique()</b> sorts the values treated as string at first, then will keep the first key encountered for every value, and ignore all following keys. It does not mean that the key of the first related value from the unsorted <i><tt class='parameter'>array</tt></i> will be kept. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Two elements are considered equal if and only if <i>(string) $elem1 === (string) $elem2</i>. In words: when the string representation is the same. </span> <span class='simpara'> The first element will be used. </span> </p></blockquote> </div> <a name='function.array-unique.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sort_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional second parameter <i><tt class='parameter'>sort_flags</tt></i> may be used to modify the sorting behavior using these values: </p> <p class='para'> Sorting type flags: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_REGULAR</tt></b> - compare items normally (don&amp;#039;t change types)</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_NUMERIC</tt></b> - compare items numerically</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_STRING</tt></b> - compare items as strings</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_LOCALE_STRING</tt></b> - compare items as strings, based on the current locale. Added in PHP 4.4.0 and 5.0.2. Before PHP 6, it uses the system locale, which can be changed using <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a>. Since PHP 6, you must use the <b>i18n_loc_set_default()</b> function. </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.array-unique.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filtered array. </p> </div> <a name='function.array-unique.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.9</td> <td align='left'> Added the optional <i><tt class='parameter'>sort_flags</tt></i> defaulting to SORT_REGULAR. Prior to 5.2.9, this function used to sort the array with SORT_STRING internally. </td> </tr> <tr valign='middle'> <td align='left'>5.2.10</td> <td align='left'> Changed the default value of <i><tt class='parameter'>sort_flags</tt></i> back to SORT_STRING. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-unique.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_unique()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_unique</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green [0] =&amp;gt; red [1] =&amp;gt; blue ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>array_unique()</b> and types</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'4'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'3'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_unique</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [0] =&amp;gt; int(4) [2] =&amp;gt; string(1) &amp;quot;3&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='function.array-unique.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Note that <b>array_unique()</b> is not intended to work on multi dimensional arrays. </span> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_uintersect_uassoc" value="<div id='function.array-uintersect-uassoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php'>array_uintersect_uassoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_uintersect_uassoc</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</span></p> </div> <a name='function.array-uintersect-uassoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_uintersect_uassoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions Note that the keys are used in the comparison unlike in <a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function'>array_uintersect()</a>. Both the data and the indexes are compared by using separate callback functions. </p> </div> <a name='function.array-uintersect-uassoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For comparison is used the user supplied callback function. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Key comparison callback function. </p> </dd> </dl> <p> </p> </div> <a name='function.array-uintersect-uassoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. </p> </div> <a name='function.array-uintersect-uassoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_uintersect_uassoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'GREEN'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'B'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_uintersect_uassoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcasecmp'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcasecmp'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green [b] =&amp;gt; brown ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-uintersect-uassoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_uintersect_assoc" value="<div id='function.array-uintersect-assoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-uintersect-assoc.php'>array_uintersect_assoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_uintersect_assoc</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays with additional index check, compares data by a callback function</span></p> </div> <a name='function.array-uintersect-assoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_uintersect_assoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the intersection of arrays with additional index check, compares data by a callback function. </p> <p class='para'> Note that the keys are used in the comparison unlike in <a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function'>array_uintersect()</a>. The data is compared by using a callback function. </p> </div> <a name='function.array-uintersect-assoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For comparison is used the user supplied callback function. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-uintersect-assoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. </p> </div> <a name='function.array-uintersect-assoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_uintersect_assoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'GREEN'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'B'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_uintersect_assoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcasecmp'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-uintersect-assoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_uintersect" value="<div id='function.array-uintersect' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-uintersect.php'>array_uintersect</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_uintersect</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays, compares data by a callback function</span></p> </div> <a name='function.array-uintersect.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_uintersect</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the intersection of arrays, compares data by a callback function. </p> </div> <a name='function.array-uintersect.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> The user supplied callback function is used for comparison. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-uintersect.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. </p> </div> <a name='function.array-uintersect.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_uintersect()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'GREEN'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'B'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_uintersect</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcasecmp'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green [b] =&amp;gt; brown [0] =&amp;gt; red ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-uintersect.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_udiff_uassoc" value="<div id='function.array-udiff-uassoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-udiff-uassoc.php'>array_udiff_uassoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_udiff_uassoc</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays with additional index check, compares data and indexes by a callback function</span></p> </div> <a name='function.array-udiff-uassoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_udiff_uassoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the difference of arrays with additional index check, compares data and indexes by a callback function. </p> <p class='para'> Note that the keys are used in the comparison unlike <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> and <a href='http://www.php.net/manual/en/function.array-udiff.php' class='function'>array_udiff()</a>. </p> </div> <a name='function.array-udiff-uassoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> The user supplied callback function is used for comparison. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> <p class='para'> The comparison of arrays&amp;#039; data is performed by using an user-supplied callback : <i><tt class='parameter'>data_compare_func</tt></i> . In this aspect the behaviour is opposite to the behaviour of <a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function'>array_diff_assoc()</a> which uses internal function for comparison. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The comparison of keys (indices) is done also by the callback function <i><tt class='parameter'>key_compare_func</tt></i> . This behaviour is unlike what <a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function'>array_udiff_assoc()</a> does, since the latter compares the indices by using an internal function. </p> </dd> </dl> <p> </p> </div> <a name='function.array-udiff-uassoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the values from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arguments. </p> </div> <a name='function.array-udiff-uassoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_udiff_uassoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>cr&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$priv_member</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>comp_func_cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)?&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>:-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>comp_func_key</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)?&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>:-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>23</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>22</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_udiff_uassoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'cr'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'comp_func_cr'</span><span style='color: #007700'>),&amp;nbsp;array(</span><span style='color: #DD0000'>'cr'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'comp_func_key'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0.1] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 9 ) [0.5] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 12 ) [0] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 23 ) ) </pre></div> </div> </div><p> </p> <p class='simpara'> In our example above you see the <i>&amp;quot;1&amp;quot; =&amp;gt; new cr(4)</i> pair is present in both arrays and thus it is not in the output from the function. Keep in mind that you have to supply 2 callback functions. </p> </div> <a name='function.array-udiff-uassoc.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, <i>array_udiff_uassoc($array1[0], $array2[0], &amp;quot;data_compare_func&amp;quot;, &amp;quot;key_compare_func&amp;quot;);</i>. </span> </p></blockquote> </div> <a name='function.array-udiff-uassoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_udiff_assoc" value="<div id='function.array-udiff-assoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-udiff-assoc.php'>array_udiff_assoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_udiff_assoc</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays with additional index check, compares data by a callback function</span></p> </div> <a name='function.array-udiff-assoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_udiff_assoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the difference of arrays with additional index check, compares data by a callback function. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, <i>array_udiff_assoc($array1[0], $array2[0], &amp;quot;some_comparison_func&amp;quot;);</i>. </span> </p></blockquote> </div> <a name='function.array-udiff-assoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> The user supplied callback function is used for comparison. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-udiff-assoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>array_udiff_assoc()</b> returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the values from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arguments. Note that the keys are used in the comparison unlike <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> and <a href='http://www.php.net/manual/en/function.array-udiff.php' class='function'>array_udiff()</a>. The comparison of arrays&amp;#039; data is performed by using an user-supplied callback. In this aspect the behaviour is opposite to the behaviour of <a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function'>array_diff_assoc()</a> which uses internal function for comparison. </p> </div> <a name='function.array-udiff-assoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_udiff_assoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>cr&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$priv_member</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>comp_func_cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)?&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>:-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>23</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>22</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_udiff_assoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'cr'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'comp_func_cr'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0.1] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 9 ) [0.5] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 12 ) [0] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 23 ) ) </pre></div> </div> </div><p> </p> <p class='simpara'> In our example above you see the <i>&amp;quot;1&amp;quot; =&amp;gt; new cr(4)</i> pair is present in both arrays and thus it is not in the output from the function. </p> </div> <a name='function.array-udiff-assoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_udiff" value="<div id='function.array-udiff' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-udiff.php'>array_udiff</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_udiff</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays by using a callback function for data comparison</span></p> </div> <a name='function.array-udiff.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_udiff</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$data_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Computes the difference of arrays by using a callback function for data comparison. This is unlike <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> which uses an internal function for comparing the data. </p> </div> <a name='function.array-udiff.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> The user supplied callback function is used for comparison. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-udiff.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arguments. </p> </div> <a name='function.array-udiff.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_udiff()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>cr&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$priv_member</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>comp_func_cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>priv_member</span><span style='color: #007700'>)?&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>:-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>23</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'0.2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'0.5'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>22</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>cr</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>15</span><span style='color: #007700'>),);<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_udiff</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'cr'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'comp_func_cr'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0.5] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 12 ) [0] =&amp;gt; cr Object ( [priv_member:private] =&amp;gt; 23 ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-udiff.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using <i>array_udiff($array1[0], $array2[0], &amp;quot;data_compare_func&amp;quot;);</i>. </span> </p></blockquote> </div> <a name='function.array-udiff.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_sum" value="<div id='function.array-sum' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-sum.php'>array_sum</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_sum</span> &amp;mdash; <span class='dc-title'>Calculate the sum of values in an array</span></p> </div> <a name='function.array-sum.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>array_sum</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> )</div> <p class='para rdfs-comment'> <b>array_sum()</b> returns the sum of values in an array. </p> </div> <a name='function.array-sum.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.array-sum.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the sum of values as an integer or float. </p> </div> <a name='function.array-sum.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.1</td> <td align='left'> PHP versions prior to 4.2.1 modified the passed array itself and converted strings to numbers (which most of the time converted them to zero, depending on their value). </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-sum.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_sum()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'sum(a)&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>array_sum</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1.2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2.3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3.4</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'sum(b)&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>array_sum</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> sum(a) = 20 sum(b) = 6.9 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_splice" value="<div id='function.array-splice' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-splice.php'>array_splice</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_splice</span> &amp;mdash; <span class='dc-title'>Remove a portion of the array and replace it with something else</span></p> </div> <a name='function.array-splice.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_splice</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$input</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$replacement</tt></span> ]] )</div> <p class='para rdfs-comment'> Removes the elements designated by <i><tt class='parameter'>offset</tt></i> and <i><tt class='parameter'>length</tt></i> from the <i><tt class='parameter'>input</tt></i> array, and replaces them with the elements of the <i><tt class='parameter'>replacement</tt></i> array, if supplied. </p> <p class='para'> Note that numeric keys in <i><tt class='parameter'>input</tt></i> are not preserved. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> If <i><tt class='parameter'>replacement</tt></i> is not an array, it will be <a href='http://www.php.net/manual/en/language.types.array.php#language.types.array.casting' class='link'>typecast</a> to one (i.e. <code class='code'>(array) $parameter</code>). This may result in unexpected behavior when using an object <i><tt class='parameter'>replacement</tt></i> . </span> </p></blockquote> </div> <a name='function.array-splice.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>offset</tt></i> is positive then the start of removed portion is at that offset from the beginning of the <i><tt class='parameter'>input</tt></i> array. If <i><tt class='parameter'>offset</tt></i> is negative then it starts that far from the end of the <i><tt class='parameter'>input</tt></i> array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>length</tt></i> is omitted, removes everything from <i><tt class='parameter'>offset</tt></i> to the end of the array. If <i><tt class='parameter'>length</tt></i> is specified and is positive, then that many elements will be removed. If <i><tt class='parameter'>length</tt></i> is specified and is negative then the end of the removed portion will be that many elements from the end of the array. Tip: to remove everything from <i><tt class='parameter'>offset</tt></i> to the end of the array when <i><tt class='parameter'>replacement</tt></i> is also specified, use <i>count($input)</i> for <i><tt class='parameter'>length</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replacement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>replacement</tt></i> array is specified, then the removed elements are replaced with elements from this array. </p> <p class='para'> If <i><tt class='parameter'>offset</tt></i> and <i><tt class='parameter'>length</tt></i> are such that nothing is removed, then the elements from the <i><tt class='parameter'>replacement</tt></i> array are inserted in the place specified by the <i><tt class='parameter'>offset</tt></i> . Note that keys in replacement array are not preserved. </p> <p class='para'> If <i><tt class='parameter'>replacement</tt></i> is just one element it is not necessary to put <i>array()</i> around it, unless the element is an array itself. </p> </dd> </dl> <p> </p> </div> <a name='function.array-splice.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the array consisting of the extracted elements. </p> </div> <a name='function.array-splice.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_splice()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$input&amp;nbsp;is&amp;nbsp;now&amp;nbsp;array('red',&amp;nbsp;'green')<br /><br /></span><span style='color: #0000BB'>$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$input&amp;nbsp;is&amp;nbsp;now&amp;nbsp;array('red',&amp;nbsp;'yellow')<br /><br /></span><span style='color: #0000BB'>$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$input&amp;nbsp;is&amp;nbsp;now&amp;nbsp;array('red',&amp;nbsp;'orange')<br /><br /></span><span style='color: #0000BB'>$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'black'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'maroon'</span><span style='color: #007700'>));<br /></span><span style='color: #FF8000'>//&amp;nbsp;$input&amp;nbsp;is&amp;nbsp;now&amp;nbsp;array('red',&amp;nbsp;'green',<br />//&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'blue',&amp;nbsp;'black',&amp;nbsp;'maroon')<br /><br /></span><span style='color: #0000BB'>$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'purple'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;$input&amp;nbsp;is&amp;nbsp;now&amp;nbsp;array('red',&amp;nbsp;'green',<br />//&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'blue',&amp;nbsp;'purple',&amp;nbsp;'yellow');<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>array_splice()</b> examples</b></p> <div class='example-contents para'><p> The following statements change the values of <var class='varname'>$input</var> the same way: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />array_push</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>array_pop</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_shift</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_unshift</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$input</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;for&amp;nbsp;arrays&amp;nbsp;where&amp;nbsp;key&amp;nbsp;equals&amp;nbsp;offset<br /></span><span style='color: #0000BB'>array_splice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$y</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.array-splice.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-slice.php' class='function' rel='rdfs-seeAlso'>array_slice()</a> - Extract a slice of the array</li> <li class='member'><a href='http://www.php.net/manual/en/function.unset.php' class='function' rel='rdfs-seeAlso'>unset()</a> - Unset a given variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-merge.php' class='function' rel='rdfs-seeAlso'>array_merge()</a> - Merge one or more arrays</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_slice" value="<div id='function.array-slice' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-slice.php'>array_slice</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_slice</span> &amp;mdash; <span class='dc-title'>Extract a slice of the array</span></p> </div> <a name='function.array-slice.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_slice</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$preserve_keys</tt><span class='initializer'> = false</span></span> ]] )</div> <p class='para rdfs-comment'> <b>array_slice()</b> returns the sequence of elements from the array <i><tt class='parameter'>array</tt></i> as specified by the <i><tt class='parameter'>offset</tt></i> and <i><tt class='parameter'>length</tt></i> parameters. </p> </div> <a name='function.array-slice.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>offset</tt></i> is non-negative, the sequence will start at that offset in the <i><tt class='parameter'>array</tt></i> . If <i><tt class='parameter'>offset</tt></i> is negative, the sequence will start that far from the end of the <i><tt class='parameter'>array</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>length</tt></i> is given and is positive, then the sequence will have that many elements in it. If <i><tt class='parameter'>length</tt></i> is given and is negative then the sequence will stop that many elements from the end of the array. If it is omitted, then the sequence will have everything from <i><tt class='parameter'>offset</tt></i> up until the end of the <i><tt class='parameter'>array</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preserve_keys</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Note that <b>array_slice()</b> will reorder and reset the array indices by default. You can change this behaviour by setting <i><tt class='parameter'>preserve_keys</tt></i> to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.array-slice.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the slice. </p> </div> <a name='function.array-slice.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.2</td> <td align='left'> The optional <i><tt class='parameter'>preserve_keys</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-slice.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_slice()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$output&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'c',&amp;nbsp;'d',&amp;nbsp;and&amp;nbsp;'e'<br /></span><span style='color: #0000BB'>$output&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'d'<br /></span><span style='color: #0000BB'>$output&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'a',&amp;nbsp;'b',&amp;nbsp;and&amp;nbsp;'c'<br /><br />//&amp;nbsp;note&amp;nbsp;the&amp;nbsp;differences&amp;nbsp;in&amp;nbsp;the&amp;nbsp;array&amp;nbsp;keys<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; c [1] =&amp;gt; d ) Array ( [2] =&amp;gt; c [3] =&amp;gt; d ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-slice.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-splice.php' class='function' rel='rdfs-seeAlso'>array_splice()</a> - Remove a portion of the array and replace it with something else</li> <li class='member'><a href='http://www.php.net/manual/en/function.unset.php' class='function' rel='rdfs-seeAlso'>unset()</a> - Unset a given variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_shift" value="<div id='function.array-shift' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-shift.php'>array_shift</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_shift</span> &amp;mdash; <span class='dc-title'>Shift an element off the beginning of array</span></p> </div> <a name='function.array-shift.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>array_shift</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>array_shift()</b> shifts the first value of the <i><tt class='parameter'>array</tt></i> off and returns it, shortening the <i><tt class='parameter'>array</tt></i> by one element and moving everything down. All numerical array keys will be modified to start counting from zero while literal keys won&amp;#039;t be touched. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will <a href='http://www.php.net/manual/en/function.reset.php' class='function'>reset()</a> the <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> pointer after use.</span></p></blockquote> </div> <a name='function.array-shift.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.array-shift.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the shifted value, or <b><tt class='constant'>NULL</tt></b> if <i><tt class='parameter'>array</tt></i> is empty or is not an array. </p> </div> <a name='function.array-shift.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_shift()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$stack&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'raspberry'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruit&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_shift</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; banana [1] =&amp;gt; apple [2] =&amp;gt; raspberry ) </pre></div> </div> <div class='example-contents para'><p> and <i>orange</i> will be assigned to <var class='varname'>$fruit</var>. </p></div> </div><p> </p> </div> <a name='function.array-shift.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-unshift.php' class='function' rel='rdfs-seeAlso'>array_unshift()</a> - Prepend one or more elements to the beginning of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-push.php' class='function' rel='rdfs-seeAlso'>array_push()</a> - Push one or more elements onto the end of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-pop.php' class='function' rel='rdfs-seeAlso'>array_pop()</a> - Pop the element off the end of array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_search" value="<div id='function.array-search' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-search.php'>array_search</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>array_search</span> &amp;mdash; <span class='dc-title'>Searches the array for a given value and returns the corresponding key if successful</span></p> </div> <a name='function.array-search.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>array_search</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$needle</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$haystack</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$strict</tt></span> ] )</div> <p class='para rdfs-comment'> Searches <i><tt class='parameter'>haystack</tt></i> for <i><tt class='parameter'>needle</tt></i> . </p> </div> <a name='function.array-search.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The searched value. </p> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>needle</tt></i> is a string, the comparison is done in a case-sensitive manner. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>strict</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the third parameter <i><tt class='parameter'>strict</tt></i> is set to <b><tt class='constant'>TRUE</tt></b> then the <b>array_search()</b> function will also check the <a href='http://www.php.net/manual/en/language.types.php' class='link'>types</a> of the <i><tt class='parameter'>needle</tt></i> in the <i><tt class='parameter'>haystack</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.array-search.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the key for <i><tt class='parameter'>needle</tt></i> if it is found in the array, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is found in <i><tt class='parameter'>haystack</tt></i> more than once, the first matching key is returned. To return the keys for all matching values, use <a href='http://www.php.net/manual/en/function.array-keys.php' class='function'>array_keys()</a> with the optional <i><tt class='parameter'>search_value</tt></i> parameter instead. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.array-search.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> Prior to PHP 4.2.0, <b>array_search()</b> returns <b><tt class='constant'>NULL</tt></b> on failure instead of <b><tt class='constant'>FALSE</tt></b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-search.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_search()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_search</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$key&amp;nbsp;=&amp;nbsp;2;<br /></span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_search</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$key&amp;nbsp;=&amp;nbsp;1;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.array-search.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-keys.php' class='function' rel='rdfs-seeAlso'>array_keys()</a> - Return all the keys of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-values.php' class='function' rel='rdfs-seeAlso'>array_values()</a> - Return all the values of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-key-exists.php' class='function' rel='rdfs-seeAlso'>array_key_exists()</a> - Checks if the given key or index exists in the array</li> <li class='member'><a href='http://www.php.net/manual/en/function.in-array.php' class='function' rel='rdfs-seeAlso'>in_array()</a> - Checks if a value exists in an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_reverse" value="<div id='function.array-reverse' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-reverse.php'>array_reverse</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_reverse</span> &amp;mdash; <span class='dc-title'>Return an array with elements in reverse order</span></p> </div> <a name='function.array-reverse.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_reverse</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$preserve_keys</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Takes an input <i><tt class='parameter'>array</tt></i> and returns a new array with the order of the elements reversed. </p> </div> <a name='function.array-reverse.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preserve_keys</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b> keys are preserved. </p> </dd> </dl> <p> </p> </div> <a name='function.array-reverse.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the reversed array. </p> </div> <a name='function.array-reverse.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.3</td> <td align='left'> The <i><tt class='parameter'>preserve_keys</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-reverse.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_reverse()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4.0</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_reverse</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result_keyed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_reverse</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This makes both <var class='varname'>$result</var> and <var class='varname'>$result_keyed</var> have the same elements, but note the difference between the keys. The printout of <var class='varname'>$result</var> and <var class='varname'>$result_keyed</var> will be: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; green [1] =&amp;gt; red ) [1] =&amp;gt; 4 [2] =&amp;gt; php ) Array ( [2] =&amp;gt; Array ( [0] =&amp;gt; green [1] =&amp;gt; red ) [1] =&amp;gt; 4 [0] =&amp;gt; php ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-reverse.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-flip.php' class='function' rel='rdfs-seeAlso'>array_flip()</a> - Exchanges all keys with their associated values in an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_reduce" value="<div id='function.array-reduce' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-reduce.php'>array_reduce</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>array_reduce</span> &amp;mdash; <span class='dc-title'>Iteratively reduce the array to a single value using a callback function</span></p> </div> <a name='function.array-reduce.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>array_reduce</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$function</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$initial</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_reduce()</b> applies iteratively the <i><tt class='parameter'>function</tt></i> function to the elements of the array <i><tt class='parameter'>input</tt></i> , so as to reduce the array to a single value. </p> </div> <a name='function.array-reduce.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback function. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>initial</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>initial</tt></i> is available, it will be used at the beginning of the process, or as a final result in case the array is empty. </p> </dd> </dl> <p> </p> </div> <a name='function.array-reduce.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the resulting value. </p> <p class='para'> If the array is empty and <i><tt class='parameter'>initial</tt></i> is not passed, <b>array_reduce()</b> returns <b><tt class='constant'>NULL</tt></b>. </p> </div> <a name='function.array-reduce.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_reduce()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>rsum</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$v</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$v&amp;nbsp;</span><span style='color: #007700'>+=&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$v</span><span style='color: #007700'>;<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>rmul</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$v</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$v&amp;nbsp;</span><span style='color: #007700'>*=&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$v</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$x&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_reduce</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rsum'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_reduce</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rmul'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_reduce</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$x</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rsum'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This will result in <var class='varname'>$b</var> containing <i>15</i>, <var class='varname'>$c</var> containing <i>1200</i> (= 10*1*2*3*4*5), and <var class='varname'>$d</var> containing <i>1</i>. </p></div> </div><p> </p> </div> <a name='function.array-reduce.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-filter.php' class='function' rel='rdfs-seeAlso'>array_filter()</a> - Filters elements of an array using a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-map.php' class='function' rel='rdfs-seeAlso'>array_map()</a> - Applies the callback to the elements of the given arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-unique.php' class='function' rel='rdfs-seeAlso'>array_unique()</a> - Removes duplicate values from an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-count-values.php' class='function' rel='rdfs-seeAlso'>array_count_values()</a> - Counts all the values of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_rand" value="<div id='function.array-rand' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-rand.php'>array_rand</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_rand</span> &amp;mdash; <span class='dc-title'>Pick one or more random entries out of an array</span></p> </div> <a name='function.array-rand.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>array_rand</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num_req</tt><span class='initializer'> = 1</span></span> ] )</div> <p class='para rdfs-comment'> <b>array_rand()</b> is rather useful when you want to pick one or more random entries out of an array. </p> </div> <a name='function.array-rand.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>num_req</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specifies how many entries you want to pick - if not specified, defaults to 1. </p> </dd> </dl> <p> </p> </div> <a name='function.array-rand.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If you are picking only one entry, <b>array_rand()</b> returns the key for a random entry. Otherwise, it returns an array of keys for the random entries. This is done so that you can pick random keys as well as values out of the array. </p> </div> <a name='function.array-rand.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.10</td> <td align='left'> The resulting array of keys is no longer shuffled. </td> </tr> <tr valign='middle'><td align='left'>4.2.0</td><td align='left'>The random number generator is seeded automatically.</td></tr> </tbody> </table> <p> </p> </div> <a name='function.array-rand.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_rand()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'Neo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Morpheus'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Trinity'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Cypher'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Tank'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$rand_keys&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_rand</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$rand_keys</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$rand_keys</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.array-rand.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.shuffle.php' class='function' rel='rdfs-seeAlso'>shuffle()</a> - Shuffle an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_push" value="<div id='function.array-push' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-push.php'>array_push</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_push</span> &amp;mdash; <span class='dc-title'>Push one or more elements onto the end of array</span></p> </div> <a name='function.array-push.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>array_push</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_push()</b> treats <i><tt class='parameter'>array</tt></i> as a stack, and pushes the passed variables onto the end of <i><tt class='parameter'>array</tt></i> . The length of <i><tt class='parameter'>array</tt></i> increases by the number of variables pushed. Has the same effect as: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> repeated for each <i><tt class='parameter'>var</tt></i> . </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> If you use <b>array_push()</b> to add one element to the array it&amp;#039;s better to use <i>$array[] = </i> because in that way there is no overhead of calling a function. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> <b>array_push()</b> will raise a warning if the first argument is not an array. This differs from the <i>$var[]</i> behaviour where a new array is created. </span> </p></blockquote> </div> <a name='function.array-push.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pushed value. </p> </dd> </dl> <p> </p> </div> <a name='function.array-push.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the new number of elements in the array. </p> </div> <a name='function.array-push.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_push()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$stack&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_push</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'raspberry'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; orange [1] =&amp;gt; banana [2] =&amp;gt; apple [3] =&amp;gt; raspberry ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-push.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-pop.php' class='function' rel='rdfs-seeAlso'>array_pop()</a> - Pop the element off the end of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-shift.php' class='function' rel='rdfs-seeAlso'>array_shift()</a> - Shift an element off the beginning of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-unshift.php' class='function' rel='rdfs-seeAlso'>array_unshift()</a> - Prepend one or more elements to the beginning of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_product" value="<div id='function.array-product' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-product.php'>array_product</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>array_product</span> &amp;mdash; <span class='dc-title'>Calculate the product of values in an array</span></p> </div> <a name='function.array-product.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>array_product</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array</tt></span> )</div> <p class='para rdfs-comment'> <b>array_product()</b> returns the product of values in an array. </p> </div> <a name='function.array-product.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> </dl> <p> </p> </div> <a name='function.array-product.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the product as an integer or float. </p> </div> <a name='function.array-product.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_product()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'product(a)&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>array_product</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> product(a) = 384 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_pop" value="<div id='function.array-pop' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-pop.php'>array_pop</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_pop</span> &amp;mdash; <span class='dc-title'>Pop the element off the end of array</span></p> </div> <a name='function.array-pop.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>array_pop</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>array_pop()</b> pops and returns the last value of the <i><tt class='parameter'>array</tt></i> , shortening the <i><tt class='parameter'>array</tt></i> by one element. If <i><tt class='parameter'>array</tt></i> is empty (or is not an array), <b><tt class='constant'>NULL</tt></b> will be returned. Will additionally produce a <a href='http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-warning' class='link'>Warning</a> when called on a non-array. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function will <a href='http://www.php.net/manual/en/function.reset.php' class='function'>reset()</a> the <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> pointer after use.</span></p></blockquote> </div> <a name='function.array-pop.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to get the value from. </p> </dd> </dl> <p> </p> </div> <a name='function.array-pop.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the last value of <i><tt class='parameter'>array</tt></i> . If <i><tt class='parameter'>array</tt></i> is empty (or is not an array), <b><tt class='constant'>NULL</tt></b> will be returned. </p> </div> <a name='function.array-pop.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_pop()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$stack&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'raspberry'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruit&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_pop</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stack</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> After this, <var class='varname'>$stack</var> will have only 3 elements: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; orange [1] =&amp;gt; banana [2] =&amp;gt; apple ) </pre></div> </div> <div class='example-contents para'><p> and <i>raspberry</i> will be assigned to <var class='varname'>$fruit</var>. </p></div> </div><p> </p> </div> <a name='function.array-pop.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-push.php' class='function' rel='rdfs-seeAlso'>array_push()</a> - Push one or more elements onto the end of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-shift.php' class='function' rel='rdfs-seeAlso'>array_shift()</a> - Shift an element off the beginning of array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-unshift.php' class='function' rel='rdfs-seeAlso'>array_unshift()</a> - Prepend one or more elements to the beginning of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_pad" value="<div id='function.array-pad' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-pad.php'>array_pad</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_pad</span> &amp;mdash; <span class='dc-title'>Pad array to the specified length with a value</span></p> </div> <a name='function.array-pad.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_pad</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$pad_size</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$pad_value</tt></span> )</div> <p class='para rdfs-comment'> <b>array_pad()</b> returns a copy of the <i><tt class='parameter'>input</tt></i> padded to size specified by <i><tt class='parameter'>pad_size</tt></i> with value <i><tt class='parameter'>pad_value</tt></i> . If <i><tt class='parameter'>pad_size</tt></i> is positive then the array is padded on the right, if it&amp;#039;s negative then on the left. If the absolute value of <i><tt class='parameter'>pad_size</tt></i> is less than or equal to the length of the <i><tt class='parameter'>input</tt></i> then no padding takes place. It is possible to add most 1048576 elements at a time. </p> </div> <a name='function.array-pad.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Initial array of values to pad. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pad_size</tt></i> </span> </dt><dd class='listitem'> <p class='para'> New size of the array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pad_value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Value to pad if <i><tt class='parameter'>input</tt></i> is less than <i><tt class='parameter'>pad_size</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.array-pad.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a copy of the <i><tt class='parameter'>input</tt></i> padded to size specified by <i><tt class='parameter'>pad_size</tt></i> with value <i><tt class='parameter'>pad_value</tt></i> . If <i><tt class='parameter'>pad_size</tt></i> is positive then the array is padded on the right, if it&amp;#039;s negative then on the left. If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place. </p> </div> <a name='function.array-pad.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_pad()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>9</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;result&amp;nbsp;is&amp;nbsp;array(12,&amp;nbsp;10,&amp;nbsp;9,&amp;nbsp;0,&amp;nbsp;0)<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;result&amp;nbsp;is&amp;nbsp;array(-1,&amp;nbsp;-1,&amp;nbsp;-1,&amp;nbsp;-1,&amp;nbsp;12,&amp;nbsp;10,&amp;nbsp;9)<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'noop'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;not&amp;nbsp;padded<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.array-pad.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-fill.php' class='function' rel='rdfs-seeAlso'>array_fill()</a> - Fill an array with values</li> <li class='member'><a href='http://www.php.net/manual/en/function.range.php' class='function' rel='rdfs-seeAlso'>range()</a> - Create an array containing a range of elements</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_multisort" value="<div id='function.array-multisort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-multisort.php'>array_multisort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_multisort</span> &amp;mdash; <span class='dc-title'>Sort multiple or multi-dimensional arrays</span></p> </div> <a name='function.array-multisort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>array_multisort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$arr</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$arg</tt><span class='initializer'> = SORT_ASC</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$arg</tt><span class='initializer'> = SORT_REGULAR</span></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]]] )</div> <p class='para rdfs-comment'> <b>array_multisort()</b> can be used to sort several arrays at once, or a multi-dimensional array by one or more dimensions. </p> <p class='para'> Associative (<a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>) keys will be maintained, but numeric keys will be re-indexed. </p> </div> <a name='function.array-multisort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> being sorted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optionally another <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>, or sort options for the previous <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> argument: <b><tt class='constant'>SORT_ASC</tt></b>, <b><tt class='constant'>SORT_DESC</tt></b>, <b><tt class='constant'>SORT_REGULAR</tt></b>, <b><tt class='constant'>SORT_NUMERIC</tt></b>, <b><tt class='constant'>SORT_STRING</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Additional <i><tt class='parameter'>arg</tt></i> &amp;#039;s. </p> </dd> </dl> <p> </p> </div> <a name='function.array-multisort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.array-multisort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Sorting multiple arrays</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ar1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$ar2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>array_multisort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ar2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> In this example, after sorting, the first array will contain 0, 10, 100, 100. The second array will contain 4, 1, 2, 3. The entries in the second array corresponding to the identical entries in the first array (100 and 100) were sorted as well. </p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(4) { [0]=&amp;gt; int(0) [1]=&amp;gt; int(10) [2]=&amp;gt; int(100) [3]=&amp;gt; int(100) } array(4) { [0]=&amp;gt; int(4) [1]=&amp;gt; int(1) [2]=&amp;gt; int(2) [3]=&amp;gt; int(3) } </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Sorting multi-dimensional array</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(</span><span style='color: #DD0000'>'10'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>11</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'2'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br /></span><span style='color: #0000BB'>array_multisort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #0000BB'>SORT_ASC</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_STRING</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$ar</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #0000BB'>SORT_NUMERIC</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_DESC</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> In this example, after sorting, the first array will transform to &amp;quot;10&amp;quot;, 100, 100, 11, &amp;quot;a&amp;quot; (it was sorted as strings in ascending order). The second will contain 1, 3, &amp;quot;2&amp;quot;, 2, 1 (sorted as numbers, in descending order). </p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [0]=&amp;gt; array(5) { [0]=&amp;gt; string(2) &amp;quot;10&amp;quot; [1]=&amp;gt; int(100) [2]=&amp;gt; int(100) [3]=&amp;gt; int(11) [4]=&amp;gt; string(1) &amp;quot;a&amp;quot; } [1]=&amp;gt; array(5) { [0]=&amp;gt; int(1) [1]=&amp;gt; int(3) [2]=&amp;gt; string(1) &amp;quot;2&amp;quot; [3]=&amp;gt; int(2) [4]=&amp;gt; int(1) } } </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Sorting database results</b></p> <div class='example-contents para'><p> For this example, each element in the <var class='varname'>data</var> array represents one row in a table. This type of dataset is typical of database records. </p></div> <div class='example-contents para'><p> Example data: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> volume | edition -------+-------- 67 | 2 86 | 1 85 | 6 98 | 2 86 | 6 67 | 7 </pre></div> </div> <div class='example-contents para'><p> The data as an array, called <var class='varname'>data</var>. This would usually, for example, be obtained by looping with <a href='http://www.php.net/manual/en/function.mysql-fetch-assoc.php' class='function'>mysql_fetch_assoc()</a>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>67</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>86</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>85</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>98</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>86</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$data</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #DD0000'>'volume'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>67</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'edition'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> In this example, we will order by <var class='varname'>volume</var> descending, <var class='varname'>edition</var> ascending. </p></div> <div class='example-contents para'><p> We have an array of rows, but <b>array_multisort()</b> requires an array of columns, so we use the below code to obtain the columns, then perform the sorting. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Obtain&amp;nbsp;a&amp;nbsp;list&amp;nbsp;of&amp;nbsp;columns<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$volume</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>]&amp;nbsp;&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'volume'</span><span style='color: #007700'>];<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$edition</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'edition'</span><span style='color: #007700'>];<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Sort&amp;nbsp;the&amp;nbsp;data&amp;nbsp;with&amp;nbsp;volume&amp;nbsp;descending,&amp;nbsp;edition&amp;nbsp;ascending<br />//&amp;nbsp;Add&amp;nbsp;$data&amp;nbsp;as&amp;nbsp;the&amp;nbsp;last&amp;nbsp;parameter,&amp;nbsp;to&amp;nbsp;sort&amp;nbsp;by&amp;nbsp;the&amp;nbsp;common&amp;nbsp;key<br /></span><span style='color: #0000BB'>array_multisort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$volume</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_DESC</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$edition</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_ASC</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> The dataset is now sorted, and will look like this: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> volume | edition -------+-------- 98 | 2 86 | 1 86 | 6 85 | 6 67 | 2 67 | 7 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #4 Case insensitive sorting</b></p> <div class='example-contents para'><p> Both <b><tt class='constant'>SORT_STRING</tt></b> and <b><tt class='constant'>SORT_REGULAR</tt></b> are case sensitive, strings starting with a capital letter will come before strings starting with a lowercase letter. </p></div> <div class='example-contents para'><p> To perform a case insensitive search, force the sorting order to be determined by a lowercase copy of the original array. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'Alpha'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'atomic'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Beta'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bank'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array_lowercase&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'strtolower'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>array_multisort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array_lowercase</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_ASC</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SORT_STRING</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Alpha [1] =&amp;gt; atomic [2] =&amp;gt; bank [3] =&amp;gt; Beta ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-multisort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.usort.php' class='function' rel='rdfs-seeAlso'>usort()</a> - Sort an array by values using a user-defined comparison function</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_merge_recursive" value="<div id='function.array-merge-recursive' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-merge-recursive.php'>array_merge_recursive</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>array_merge_recursive</span> &amp;mdash; <span class='dc-title'>Merge two or more arrays recursively</span></p> </div> <a name='function.array-merge-recursive.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_merge_recursive</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_merge_recursive()</b> merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array. </p> <p class='para'> If the input arrays have the same string keys, then the values for these keys are merged together into an array, and this is done recursively, so that if one of the values is an array itself, the function will merge it with a corresponding entry in another array too. If, however, the arrays have the same numeric key, the later value will not overwrite the original value, but will be appended. </p> </div> <a name='function.array-merge-recursive.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Initial array to merge. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Variable list of arrays to recursively merge. </p> </dd> </dl> <p> </p> </div> <a name='function.array-merge-recursive.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array of values resulted from merging the arguments together. </p> </div> <a name='function.array-merge-recursive.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_merge_recursive()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ar1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'favorite'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$ar2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'favorite'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_merge_recursive</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ar1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$ar2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [color] =&amp;gt; Array ( [favorite] =&amp;gt; Array ( [0] =&amp;gt; red [1] =&amp;gt; green ) [0] =&amp;gt; blue ) [0] =&amp;gt; 5 [1] =&amp;gt; 10 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-merge-recursive.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-merge.php' class='function' rel='rdfs-seeAlso'>array_merge()</a> - Merge one or more arrays</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_merge" value="<div id='function.array-merge' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-merge.php'>array_merge</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_merge</span> &amp;mdash; <span class='dc-title'>Merge one or more arrays</span></p> </div> <a name='function.array-merge.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_merge</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array. </p> <p class='para'> If the input arrays have the same string keys, then the later value for that key will overwrite the previous one. If, however, the arrays contain numeric keys, the later value will <em class='emphasis'>not</em> overwrite the original value, but will be appended. </p> <p class='para'> If only one array is given and the array is numerically indexed, the keys get reindexed in a continuous way. </p> </div> <a name='function.array-merge.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Initial array to merge. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Variable list of arrays to recursively merge. </p> </dd> </dl> <p> </p> </div> <a name='function.array-merge.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the resulting array. </p> </div> <a name='function.array-merge.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The behavior of <b>array_merge()</b> was modified in PHP 5. Unlike PHP 4, <b>array_merge()</b> now only accepts parameters of type <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. However, you can use typecasting to merge other types. See the example below for details. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_merge()</b> PHP 5 example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$beginning&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$end&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_merge</span><span style='color: #007700'>((array)</span><span style='color: #0000BB'>$beginning</span><span style='color: #007700'>,&amp;nbsp;(array)</span><span style='color: #0000BB'>$end</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; foo [1] =&amp;gt; bar ) </pre></div> </div> </div><p> </p> </div> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-merge.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>array_merge()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'shape'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'trapezoid'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_merge</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [color] =&amp;gt; green [0] =&amp;gt; 2 [1] =&amp;gt; 4 [2] =&amp;gt; a [3] =&amp;gt; b [shape] =&amp;gt; trapezoid [4] =&amp;gt; 4 ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Simple <b>array_merge()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'data'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_merge</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Don&amp;#039;t forget that numeric keys will be renumbered! </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; data ) </pre></div> </div> <div class='example-contents para'><p> If you want to append array elements from the second array to the first array while not overwriting the elements from the first array and not re-indexing, use the <i>+</i> array union operator: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'zero_a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'two_a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'three_a'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'one_b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'three_b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'four_b'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$array1&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> The keys from the first array will be preserved. If an array key exists in both arrays, then the element from the first array will be used and the matching key&amp;#039;s element from the second array will be ignored. </p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(5) { [0]=&amp;gt; string(6) &amp;quot;zero_a&amp;quot; [2]=&amp;gt; string(5) &amp;quot;two_a&amp;quot; [3]=&amp;gt; string(7) &amp;quot;three_a&amp;quot; [1]=&amp;gt; string(5) &amp;quot;one_b&amp;quot; [4]=&amp;gt; string(6) &amp;quot;four_b&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='function.array-merge.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-merge-recursive.php' class='function' rel='rdfs-seeAlso'>array_merge_recursive()</a> - Merge two or more arrays recursively</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-combine.php' class='function' rel='rdfs-seeAlso'>array_combine()</a> - Creates an array by using one array for keys and another for its values</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.array.php' class='link'>array operators</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_map" value="<div id='function.array-map' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-map.php'>array_map</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.6, PHP 5)</p><p class='refpurpose'><span class='refname'>array_map</span> &amp;mdash; <span class='dc-title'>Applies the callback to the elements of the given arrays</span></p> </div> <a name='function.array-map.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_map</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$callback</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$arr1</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_map()</b> returns an array containing all the elements of <i><tt class='parameter'>arr1</tt></i> after applying the <i><tt class='parameter'>callback</tt></i> function to each one. The number of parameters that the <i><tt class='parameter'>callback</tt></i> function accepts should match the number of arrays passed to the <b>array_map()</b> </p> </div> <a name='function.array-map.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>callback</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Callback function to run for each element in each array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arr1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to run through the <i><tt class='parameter'>callback</tt></i> function. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Variable list of array arguments to run through the <i><tt class='parameter'>callback</tt></i> function. </p> </dd> </dl> <p> </p> </div> <a name='function.array-map.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all the elements of <i><tt class='parameter'>arr1</tt></i> after applying the <i><tt class='parameter'>callback</tt></i> function to each one. </p> </div> <a name='function.array-map.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_map()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cube</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>$n&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>$n&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cube'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This makes <var class='varname'>$b</var> have: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; 1 [1] =&amp;gt; 8 [2] =&amp;gt; 27 [3] =&amp;gt; 64 [4] =&amp;gt; 125 ) </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>array_map()</b> using a lambda function (as of PHP 5.3.0)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$func&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;function(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>;<br />};<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; 2 [1] =&amp;gt; 4 [2] =&amp;gt; 6 [3] =&amp;gt; 8 [4] =&amp;gt; 10 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-map.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #3 <b>array_map()</b> - using more arrays</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>show_Spanish</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$m</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #DD0000'>'The&amp;nbsp;number&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #DD0000'>&amp;nbsp;is&amp;nbsp;called&amp;nbsp;</span><span style='color: #0000BB'>$m</span><span style='color: #DD0000'>&amp;nbsp;in&amp;nbsp;Spanish'</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>map_Spanish</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$m</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(array(</span><span style='color: #0000BB'>$n&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$m</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'uno'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'dos'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'tres'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cuatro'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cinco'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'show_Spanish'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'map_Spanish'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> // printout of $c Array ( [0] =&amp;gt; The number 1 is called uno in Spanish [1] =&amp;gt; The number 2 is called dos in Spanish [2] =&amp;gt; The number 3 is called tres in Spanish [3] =&amp;gt; The number 4 is called cuatro in Spanish [4] =&amp;gt; The number 5 is called cinco in Spanish ) // printout of $d Array ( [0] =&amp;gt; Array ( [1] =&amp;gt; uno ) [1] =&amp;gt; Array ( [2] =&amp;gt; dos ) [2] =&amp;gt; Array ( [3] =&amp;gt; tres ) [3] =&amp;gt; Array ( [4] =&amp;gt; cuatro ) [4] =&amp;gt; Array ( [5] =&amp;gt; cinco ) ) </pre></div> </div> </div><p> </p> <p class='para'> Usually when using two or more arrays, they should be of equal length because the callback function is applied in parallel to the corresponding elements. If the arrays are of unequal length, the shortest one will be extended with empty elements. </p> <p class='para'> An interesting use of this function is to construct an array of arrays, which can be easily performed by using <b><tt class='constant'>NULL</tt></b> as the name of the callback function </p> <p class='para'> </p><div class='example'> <p><b>Example #4 Creating an array of arrays</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'five'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'uno'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'dos'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'tres'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cuatro'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cinco'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; 1 [1] =&amp;gt; one [2] =&amp;gt; uno ) [1] =&amp;gt; Array ( [0] =&amp;gt; 2 [1] =&amp;gt; two [2] =&amp;gt; dos ) [2] =&amp;gt; Array ( [0] =&amp;gt; 3 [1] =&amp;gt; three [2] =&amp;gt; tres ) [3] =&amp;gt; Array ( [0] =&amp;gt; 4 [1] =&amp;gt; four [2] =&amp;gt; cuatro ) [4] =&amp;gt; Array ( [0] =&amp;gt; 5 [1] =&amp;gt; five [2] =&amp;gt; cinco ) ) </pre></div> </div> </div><p> </p> <p class='para'> If the array argument contains string keys then the returned array will contain string keys if and only if exactly one array is passed. If more than one argument is passed then the returned array always has integer keys. </p> <p class='para'> </p><div class='example'> <p><b>Example #5 <b>array_map()</b> - with string keys</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'stringkey'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'value'</span><span style='color: #007700'>);<br />function&amp;nbsp;</span><span style='color: #0000BB'>cb1</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;array&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br />}<br />function&amp;nbsp;</span><span style='color: #0000BB'>cb2</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;array&amp;nbsp;(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cb1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cb2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [&amp;quot;stringkey&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(5) &amp;quot;value&amp;quot; } } array(1) { [0]=&amp;gt; array(2) { [0]=&amp;gt; string(5) &amp;quot;value&amp;quot; [1]=&amp;gt; string(5) &amp;quot;value&amp;quot; } } array(1) { [&amp;quot;stringkey&amp;quot;]=&amp;gt; string(5) &amp;quot;value&amp;quot; } array(1) { [0]=&amp;gt; array(2) { [0]=&amp;gt; string(5) &amp;quot;value&amp;quot; [1]=&amp;gt; string(5) &amp;quot;value&amp;quot; } } </pre></div> </div> </div><p> </p> </div> <a name='function.array-map.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-filter.php' class='function' rel='rdfs-seeAlso'>array_filter()</a> - Filters elements of an array using a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-reduce.php' class='function' rel='rdfs-seeAlso'>array_reduce()</a> - Iteratively reduce the array to a single value using a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-walk.php' class='function' rel='rdfs-seeAlso'>array_walk()</a> - Apply a user function to every member of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.create-function.php' class='function' rel='rdfs-seeAlso'>create_function()</a> - Create an anonymous (lambda-style) function</li> </ul><p> information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_key_exists" value="<div id='function.array-key-exists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-key-exists.php'>array_key_exists</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.7, PHP 5)</p><p class='refpurpose'><span class='refname'>array_key_exists</span> &amp;mdash; <span class='dc-title'>Checks if the given key or index exists in the array</span></p> </div> <a name='function.array-key-exists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>array_key_exists</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$key</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$search</tt></span> )</div> <p class='para rdfs-comment'> <b>array_key_exists()</b> returns <b><tt class='constant'>TRUE</tt></b> if the given <i><tt class='parameter'>key</tt></i> is set in the array. <i><tt class='parameter'>key</tt></i> can be any value possible for an array index. </p> </div> <a name='function.array-key-exists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Value to check. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>search</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array with keys to check. </p> </dd> </dl> <p> </p> </div> <a name='function.array-key-exists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.array-key-exists.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function doesn&amp;#039;t work with objects anymore, <a href='http://www.php.net/manual/en/function.property-exists.php' class='function'>property_exists()</a> should be used in this case. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-key-exists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_key_exists()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$search_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'first'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'second'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>array_key_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$search_array</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;'first'&amp;nbsp;element&amp;nbsp;is&amp;nbsp;in&amp;nbsp;the&amp;nbsp;array'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> The name of this function is <b>key_exists()</b> in PHP 4.0.6. </span> </p></blockquote> <div class='example'> <p><b>Example #2 <b>array_key_exists()</b> vs <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a></b></p> <div class='example-contents para'><p> <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a> does not return <b><tt class='constant'>TRUE</tt></b> for array keys that correspond to a <b><tt class='constant'>NULL</tt></b> value, while <b>array_key_exists()</b> does. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$search_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'first'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'second'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;false<br /></span><span style='color: #007700'>isset(</span><span style='color: #0000BB'>$search_array</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;true<br /></span><span style='color: #0000BB'>array_key_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$search_array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='function.array-key-exists.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.isset.php' class='function' rel='rdfs-seeAlso'>isset()</a> - Determine if a variable is set and is not NULL</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-keys.php' class='function' rel='rdfs-seeAlso'>array_keys()</a> - Return all the keys of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.in-array.php' class='function' rel='rdfs-seeAlso'>in_array()</a> - Checks if a value exists in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.property-exists.php' class='function' rel='rdfs-seeAlso'>property_exists()</a> - Checks if the object or class has a property</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_keys" value="<div id='function.array-keys' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-keys.php'>array_keys</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_keys</span> &amp;mdash; <span class='dc-title'>Return all the keys of an array</span></p> </div> <a name='function.array-keys.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_keys</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$search_value</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$strict</tt><span class='initializer'> = false</span></span> ]] )</div> <p class='para rdfs-comment'> <b>array_keys()</b> returns the keys, numeric and string, from the <i><tt class='parameter'>input</tt></i> array. </p> <p class='para'> If the optional <i><tt class='parameter'>search_value</tt></i> is specified, then only the keys for that value are returned. Otherwise, all the keys from the <i><tt class='parameter'>input</tt></i> are returned. </p> </div> <a name='function.array-keys.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array containing keys to return. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>search_value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If specified, then only keys containing these values are returned. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>strict</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Determines if strict comparison (===) should be used during the search. </p> </dd> </dl> <p> </p> </div> <a name='function.array-keys.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of all the keys in <i><tt class='parameter'>input</tt></i> . </p> </div> <a name='function.array-keys.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Added the <i><tt class='parameter'>strict</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.array-keys.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_keys()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'color'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'size'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'small'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'medium'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'large'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; 0 [1] =&amp;gt; color ) Array ( [0] =&amp;gt; 0 [1] =&amp;gt; 3 [2] =&amp;gt; 4 ) Array ( [0] =&amp;gt; color [1] =&amp;gt; size ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-keys.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-values.php' class='function' rel='rdfs-seeAlso'>array_values()</a> - Return all the values of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-key-exists.php' class='function' rel='rdfs-seeAlso'>array_key_exists()</a> - Checks if the given key or index exists in the array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_intersect_ukey" value="<div id='function.array-intersect-ukey' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-intersect-ukey.php'>array_intersect_ukey</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>array_intersect_ukey</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays using a callback function on the keys for comparison</span></p> </div> <a name='function.array-intersect-ukey.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_intersect_ukey</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> <b>array_intersect_ukey()</b> returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> which have matching keys that are present in all the arguments. </p> <p class='para'> This comparison is done by a user supplied callback function. It must return an integer less than, equal to, or greater than zero if the first key is considered to be respectively less than, equal to, or greater than the second. </p> </div> <a name='function.array-intersect-ukey.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Initial array for comparison of the arrays. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> First array to compare keys against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Variable list of array arguments to compare keys against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> User supplied callback function to do the comparison. </p> </dd> </dl> <p> </p> </div> <a name='function.array-intersect-ukey.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the values of <i><tt class='parameter'>array1</tt></i> whose keys exist in all the arguments. </p> </div> <a name='function.array-intersect-ukey.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_intersect_ukey()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>key_compare_func</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$key1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'purple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'green'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cyan'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_intersect_ukey</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'key_compare_func'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [&amp;quot;blue&amp;quot;]=&amp;gt; int(1) [&amp;quot;green&amp;quot;]=&amp;gt; int(3) } </pre></div> </div> </div><p> </p> <p class='para'> In our example you see that only the keys <i>&amp;#039;blue&amp;#039;</i> and <i>&amp;#039;green&amp;#039;</i> are present in both arrays and thus returned. Also notice that the values for the keys <i>&amp;#039;blue&amp;#039;</i> and <i>&amp;#039;green&amp;#039;</i> differ between the two arrays. A match still occurs because only the keys are checked. The values returned are those of <i><tt class='parameter'>array1</tt></i> . </p> </div> <a name='function.array-intersect-ukey.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-key.php' class='function' rel='rdfs-seeAlso'>array_diff_key()</a> - Computes the difference of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-ukey.php' class='function' rel='rdfs-seeAlso'>array_diff_ukey()</a> - Computes the difference of arrays using a callback function on the keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-key.php' class='function' rel='rdfs-seeAlso'>array_intersect_key()</a> - Computes the intersection of arrays using keys for comparison</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_intersect_uassoc" value="<div id='function.array-intersect-uassoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-intersect-uassoc.php'>array_intersect_uassoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_intersect_uassoc</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays with additional index check, compares indexes by a callback function</span></p> </div> <a name='function.array-intersect-uassoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_intersect_uassoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> <b>array_intersect_uassoc()</b> returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. Note that the keys are used in the comparison unlike in <a href='http://www.php.net/manual/en/function.array-intersect.php' class='function'>array_intersect()</a>. </p> <p class='para'> The index comparison is done by a user supplied callback function. It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </div> <a name='function.array-intersect-uassoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Initial array for comparison of the arrays. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> First array to compare keys against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Variable list of array arguments to compare values against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> User supplied callback function to do the comparison. </p> </dd> </dl> <p> </p> </div> <a name='function.array-intersect-uassoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the values of <i><tt class='parameter'>array1</tt></i> whose values exist in all of the arguments. </p> </div> <a name='function.array-intersect-uassoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_intersect_uassoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'GREEN'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'B'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_intersect_uassoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcasecmp'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [b] =&amp;gt; brown ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-intersect-uassoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-key.php' class='function' rel='rdfs-seeAlso'>array_intersect_key()</a> - Computes the intersection of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-ukey.php' class='function' rel='rdfs-seeAlso'>array_intersect_ukey()</a> - Computes the intersection of arrays using a callback function on the keys for comparison</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_intersect_key" value="<div id='function.array-intersect-key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-intersect-key.php'>array_intersect_key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>array_intersect_key</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays using keys for comparison</span></p> </div> <a name='function.array-intersect-key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_intersect_key</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_intersect_key()</b> returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> which have matching keys that are present in all the arguments. </p> </div> <a name='function.array-intersect-key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array with master keys to check. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare keys against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A variable list of arrays to compare. </p> </dd> </dl> <p> </p> </div> <a name='function.array-intersect-key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array containing all the values of <i><tt class='parameter'>array1</tt></i> which have matching keys that are present in all arguments. </p> </div> <a name='function.array-intersect-key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_intersect_key()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'purple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'green'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cyan'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_intersect_key</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [&amp;quot;blue&amp;quot;]=&amp;gt; int(1) [&amp;quot;green&amp;quot;]=&amp;gt; int(3) } </pre></div> </div> </div><p> </p> <p class='para'> In our example you see that only the keys <i>&amp;#039;blue&amp;#039;</i> and <i>&amp;#039;green&amp;#039;</i> are present in both arrays and thus returned. Also notice that the values for the keys <i>&amp;#039;blue&amp;#039;</i> and <i>&amp;#039;green&amp;#039;</i> differ between the two arrays. A match still occurs because only the keys are checked. The values returned are those of <i><tt class='parameter'>array1</tt></i> . </p> <p class='para'> The two keys from the <i>key =&amp;gt; value</i> pairs are considered equal only if <i>(string) $key1 === (string) $key2 </i>. In other words a strict type check is executed so the string representation must be the same. </p> </div> <a name='function.array-intersect-key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-key.php' class='function' rel='rdfs-seeAlso'>array_diff_key()</a> - Computes the difference of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-ukey.php' class='function' rel='rdfs-seeAlso'>array_diff_ukey()</a> - Computes the difference of arrays using a callback function on the keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-ukey.php' class='function' rel='rdfs-seeAlso'>array_intersect_ukey()</a> - Computes the intersection of arrays using a callback function on the keys for comparison</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_intersect_assoc" value="<div id='function.array-intersect-assoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-intersect-assoc.php'>array_intersect_assoc</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>array_intersect_assoc</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays with additional index check</span></p> </div> <a name='function.array-intersect-assoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_intersect_assoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ] )</div> <p class='simpara'> <b>array_intersect_assoc()</b> returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. Note that the keys are used in the comparison unlike in <a href='http://www.php.net/manual/en/function.array-intersect.php' class='function'>array_intersect()</a>. </p> </div> <a name='function.array-intersect-assoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array with master values to check. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare values against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A variable list of arrays to compare. </p> </dd> </dl> <p> </p> </div> <a name='function.array-intersect-assoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array containing all the values in <i><tt class='parameter'>array1</tt></i> that are present in all of the arguments. </p> </div> <a name='function.array-intersect-assoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_intersect_assoc()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_intersect_assoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result_array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green ) </pre></div> </div> </div><p> </p> <p class='simpara'> In our example you see that only the pair <i>&amp;quot;a&amp;quot; =&amp;gt; &amp;quot;green&amp;quot;</i> is present in both arrays and thus is returned. The value <i>&amp;quot;red&amp;quot;</i> is not returned because in <var class='varname'>$array1</var> its key is <i>0</i> while the key of &amp;quot;red&amp;quot; in <var class='varname'>$array2</var> is <i>1</i>. </p> <p class='simpara'> The two values from the <i>key =&amp;gt; value</i> pairs are considered equal only if <i>(string) $elem1 === (string) $elem2 </i>. In other words a strict type check is executed so the string representation must be the same. </p> </div> <a name='function.array-intersect-assoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_intersect" value="<div id='function.array-intersect' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-intersect.php'>array_intersect</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>array_intersect</span> &amp;mdash; <span class='dc-title'>Computes the intersection of arrays</span></p> </div> <a name='function.array-intersect.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_intersect</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>array_intersect()</b> returns an array containing all the values of <i><tt class='parameter'>array1</tt></i> that are present in all the arguments. Note that keys are preserved. </p> </div> <a name='function.array-intersect.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array with master values to check. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare values against. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A variable list of arrays to compare. </p> </dd> </dl> <p> </p> </div> <a name='function.array-intersect.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing all of the values in <i><tt class='parameter'>array1</tt></i> whose values exist in all of the parameters. </p> </div> <a name='function.array-intersect.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_intersect()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_intersect</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; green [0] =&amp;gt; red ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-intersect.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Two elements are considered equal if and only if <i>(string) $elem1 === (string) $elem2</i>. In words: when the string representation is the same. </span> </p></blockquote> </div> <a name='function.array-intersect.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_flip" value="<div id='function.array-flip' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-flip.php'>array_flip</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_flip</span> &amp;mdash; <span class='dc-title'>Exchanges all keys with their associated values in an array</span></p> </div> <a name='function.array-flip.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_flip</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$trans</tt></span> )</div> <p class='para rdfs-comment'> <b>array_flip()</b> returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> in flip order, i.e. keys from <i><tt class='parameter'>trans</tt></i> become values and values from <i><tt class='parameter'>trans</tt></i> become keys. </p> <p class='para'> Note that the values of <i><tt class='parameter'>trans</tt></i> need to be valid keys, i.e. they need to be either <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> or <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. A warning will be emitted if a value has the wrong type, and the key/value pair in question <em class='emphasis'>will not be flipped</em>. </p> <p class='para'> If a value has several occurrences, the latest key will be used as its values, and all others will be lost. </p> </div> <a name='function.array-flip.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>trans</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array of key/value pairs to be flipped. </p> </dd> </dl> <p> </p> </div> <a name='function.array-flip.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the flipped array on success and <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.array-flip.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_flip()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$trans&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_flip</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$original&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>array_flip()</b> example : collision</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$trans&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$trans&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_flip</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> now <var class='varname'>$trans</var> is: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [1] =&amp;gt; b [2] =&amp;gt; c ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-flip.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-values.php' class='function' rel='rdfs-seeAlso'>array_values()</a> - Return all the values of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-keys.php' class='function' rel='rdfs-seeAlso'>array_keys()</a> - Return all the keys of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-reverse.php' class='function' rel='rdfs-seeAlso'>array_reverse()</a> - Return an array with elements in reverse order</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_filter" value="<div id='function.array-filter' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-filter.php'>array_filter</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.6, PHP 5)</p><p class='refpurpose'><span class='refname'>array_filter</span> &amp;mdash; <span class='dc-title'>Filters elements of an array using a callback function</span></p> </div> <a name='function.array-filter.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_filter</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$callback</tt></span> ] )</div> <p class='para rdfs-comment'> Iterates over each value in the <i><tt class='parameter'>input</tt></i> array passing them to the <i><tt class='parameter'>callback</tt></i> function. If the <i><tt class='parameter'> callback</tt></i> function returns true, the current value from <i><tt class='parameter'>input</tt></i> is returned into the result array. Array keys are preserved. </p> </div> <a name='function.array-filter.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to iterate over </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>callback</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback function to use </p> <p class='para'> If no <i><tt class='parameter'>callback</tt></i> is supplied, all entries of <i><tt class='parameter'>input</tt></i> equal to <b><tt class='constant'>FALSE</tt></b> (see <a href='http://www.php.net/manual/en/language.types.boolean.php#language.types.boolean.casting' class='link'>converting to boolean</a>) will be removed. </p> </dd> </dl> <p> </p> </div> <a name='function.array-filter.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filtered array. </p> </div> <a name='function.array-filter.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_filter()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>odd</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>even</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(!(</span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>9</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>11</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Odd&amp;nbsp;:\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_filter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'odd'</span><span style='color: #007700'>));<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Even:\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_filter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'even'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Odd : Array ( [a] =&amp;gt; 1 [c] =&amp;gt; 3 [e] =&amp;gt; 5 ) Even: Array ( [0] =&amp;gt; 6 [2] =&amp;gt; 8 [4] =&amp;gt; 10 [6] =&amp;gt; 12 ) </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>array_filter()</b> without <i><tt class='parameter'>callback</tt></i> </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$entry&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>3&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>4&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>''<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_filter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; foo [2] =&amp;gt; -1 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-filter.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='caution'><b class='caution'>Caution</b> <p class='para'> If the array is changed from the callback function (e.g. element added, deleted or unset) the behavior of this function is undefined. </p> </div> </div> <a name='function.array-filter.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-map.php' class='function' rel='rdfs-seeAlso'>array_map()</a> - Applies the callback to the elements of the given arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-reduce.php' class='function' rel='rdfs-seeAlso'>array_reduce()</a> - Iteratively reduce the array to a single value using a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-walk.php' class='function' rel='rdfs-seeAlso'>array_walk()</a> - Apply a user function to every member of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_fill_keys" value="<div id='function.array-fill-keys' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-fill-keys.php'>array_fill_keys</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>array_fill_keys</span> &amp;mdash; <span class='dc-title'>Fill an array with values, specifying keys</span></p> </div> <a name='function.array-fill-keys.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_fill_keys</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$keys</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Fills an array with the value of the <i><tt class='parameter'>value</tt></i> parameter, using the values of the <i><tt class='parameter'>keys</tt></i> array as keys. </p> </div> <a name='function.array-fill-keys.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>keys</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Array of values that will be used as keys. Illegal values for key will be converted to <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Value to use for filling </p> </dd> </dl> <p> </p> </div> <a name='function.array-fill-keys.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filled array </p> </div> <a name='function.array-fill-keys.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_fill_keys()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$keys&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_fill_keys</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$keys</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [foo] =&amp;gt; banana [5] =&amp;gt; banana [10] =&amp;gt; banana [bar] =&amp;gt; banana ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-fill-keys.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-fill.php' class='function' rel='rdfs-seeAlso'>array_fill()</a> - Fill an array with values</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-combine.php' class='function' rel='rdfs-seeAlso'>array_combine()</a> - Creates an array by using one array for keys and another for its values</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_fill" value="<div id='function.array-fill' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-fill.php'>array_fill</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>array_fill</span> &amp;mdash; <span class='dc-title'>Fill an array with values</span></p> </div> <a name='function.array-fill.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_fill</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$start_index</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Fills an array with <i><tt class='parameter'>num</tt></i> entries of the value of the <i><tt class='parameter'>value</tt></i> parameter, keys starting at the <i><tt class='parameter'>start_index</tt></i> parameter. </p> </div> <a name='function.array-fill.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>start_index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first index of the returned array </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>num</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of elements to insert </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Value to use for filling </p> </dd> </dl> <p> </p> </div> <a name='function.array-fill.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filled array </p> </div> <a name='function.array-fill.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <b><tt class='constant'>E_WARNING</tt></b> if <i><tt class='parameter'>num</tt></i> is less than one. </p> </div> <a name='function.array-fill.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_fill()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_fill</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_fill</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'pear'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [5] =&amp;gt; banana [6] =&amp;gt; banana [7] =&amp;gt; banana [8] =&amp;gt; banana [9] =&amp;gt; banana [10] =&amp;gt; banana ) Array ( [-2] =&amp;gt; pear [0] =&amp;gt; pear ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-fill.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <p class='para'> See also the <a href='http://www.php.net/manual/en/language.types.array.php' class='link'>Arrays</a> section of manual for a detailed explanation of negative keys. </p> </div> <a name='function.array-fill.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-fill-keys.php' class='function' rel='rdfs-seeAlso'>array_fill_keys()</a> - Fill an array with values, specifying keys</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-repeat.php' class='function' rel='rdfs-seeAlso'>str_repeat()</a> - Repeat a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.range.php' class='function' rel='rdfs-seeAlso'>range()</a> - Create an array containing a range of elements</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_diff_ukey" value="<div id='function.array-diff-ukey' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-diff-ukey.php'>array_diff_ukey</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>array_diff_ukey</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays using a callback function on the keys for comparison</span></p> </div> <a name='function.array-diff-ukey.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_diff_ukey</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Compares the keys from <i><tt class='parameter'>array1</tt></i> against the keys from <i><tt class='parameter'>array2</tt></i> and returns the difference. This function is like <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> except the comparison is done on the keys instead of the values. </p> <p class='para'> Unlike <a href='http://www.php.net/manual/en/function.array-diff-key.php' class='function'>array_diff_key()</a> an user supplied callback function is used for the indices comparison, not internal function. </p> </div> <a name='function.array-diff-ukey.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to compare from </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> More arrays to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a> function to use. The callback function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-diff-ukey.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the entries from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arrays. </p> </div> <a name='function.array-diff-ukey.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_diff_ukey()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>key_compare_func</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$key1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$key2</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'purple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'green'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cyan'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_diff_ukey</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'key_compare_func'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [&amp;quot;red&amp;quot;]=&amp;gt; int(2) [&amp;quot;purple&amp;quot;]=&amp;gt; int(4) } </pre></div> </div> </div><p> </p> </div> <a name='function.array-diff-ukey.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using <i>array_diff_ukey($array1[0], $array2[0], &amp;#039;callback_func&amp;#039;);</i>. <br /> </p></blockquote> </div> <a name='function.array-diff-ukey.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-key.php' class='function' rel='rdfs-seeAlso'>array_diff_key()</a> - Computes the difference of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-key.php' class='function' rel='rdfs-seeAlso'>array_intersect_key()</a> - Computes the intersection of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-ukey.php' class='function' rel='rdfs-seeAlso'>array_intersect_ukey()</a> - Computes the intersection of arrays using a callback function on the keys for comparison</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_diff_uassoc" value="<div id='function.array-diff-uassoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-diff-uassoc.php'>array_diff_uassoc</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_diff_uassoc</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays with additional index check which is performed by a user supplied callback function</span></p> </div> <a name='function.array-diff-uassoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_diff_uassoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ], <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$key_compare_func</tt></span> )</div> <p class='para rdfs-comment'> Compares <i><tt class='parameter'>array1</tt></i> against <i><tt class='parameter'>array2</tt></i> and returns the difference. Unlike <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> the array keys are used in the comparison. </p> <p class='para'> Unlike <a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function'>array_diff_assoc()</a> an user supplied callback function is used for the indices comparison, not internal function. </p> </div> <a name='function.array-diff-uassoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to compare from </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> More arrays to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>key_compare_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a> function to use. The callback function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.array-diff-uassoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the entries from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arrays. </p> </div> <a name='function.array-diff-uassoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_diff_uassoc()</b> example</b></p> <div class='example-contents para'><p> The <i>&amp;quot;a&amp;quot; =&amp;gt; &amp;quot;green&amp;quot;</i> pair is present in both arrays and thus it is not in the output from the function. Unlike this, the pair <i>0 =&amp;gt; &amp;quot;red&amp;quot;</i> is in the output because in the second argument <i>&amp;quot;red&amp;quot;</i> has key which is <i>1</i>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>key_compare_func</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)?&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>:-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_diff_uassoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'key_compare_func'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [b] =&amp;gt; brown [c] =&amp;gt; blue [0] =&amp;gt; red ) </pre></div> </div> <div class='example-contents simpara'><p> The equality of 2 indices is checked by the user supplied callback function. </p></div> </div><p> </p> </div> <a name='function.array-diff-uassoc.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, <i>array_diff_uassoc($array1[0], $array2[0], &amp;quot;key_compare_func&amp;quot;);</i>. <br /> </p></blockquote> </div> <a name='function.array-diff-uassoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect.php' class='function' rel='rdfs-seeAlso'>array_uintersect()</a> - Computes the intersection of arrays, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_assoc()</a> - Computes the intersection of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-uintersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_uintersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_diff_key" value="<div id='function.array-diff-key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-diff-key.php'>array_diff_key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>array_diff_key</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays using keys for comparison</span></p> </div> <a name='function.array-diff-key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_diff_key</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> Compares the keys from <i><tt class='parameter'>array1</tt></i> against the keys from <i><tt class='parameter'>array2</tt></i> and returns the difference. This function is like <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> except the comparison is done on the keys instead of the values. </p> </div> <a name='function.array-diff-key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to compare from </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> More arrays to compare against </p> </dd> </dl> <p> </p> </div> <a name='function.array-diff-key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the entries from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arrays. </p> </div> <a name='function.array-diff-key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_diff_key()</b> example</b></p> <div class='example-contents para'><p> The two keys from the <i>key =&amp;gt; value</i> pairs are considered equal only if <i>(string) $key1 === (string) $key2 </i>. In other words a strict type check is executed so the string representation must be the same. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'blue'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'purple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'green'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cyan'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_diff_key</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(2) { [&amp;quot;red&amp;quot;]=&amp;gt; int(2) [&amp;quot;purple&amp;quot;]=&amp;gt; int(4) } </pre></div> </div> </div><p> </p> </div> <a name='function.array-diff-key.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using <i>array_diff_key($array1[0], $array2[0]);</i>. <br /> </p></blockquote> </div> <a name='function.array-diff-key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff.php' class='function' rel='rdfs-seeAlso'>array_udiff()</a> - Computes the difference of arrays by using a callback function for data comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_diff_uassoc()</a> - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-assoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_assoc()</a> - Computes the difference of arrays with additional index check, compares data by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-udiff-uassoc.php' class='function' rel='rdfs-seeAlso'>array_udiff_uassoc()</a> - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-ukey.php' class='function' rel='rdfs-seeAlso'>array_diff_ukey()</a> - Computes the difference of arrays using a callback function on the keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-uassoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_uassoc()</a> - Computes the intersection of arrays with additional index check, compares indexes by a callback function</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-key.php' class='function' rel='rdfs-seeAlso'>array_intersect_key()</a> - Computes the intersection of arrays using keys for comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-ukey.php' class='function' rel='rdfs-seeAlso'>array_intersect_ukey()</a> - Computes the intersection of arrays using a callback function on the keys for comparison</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_diff_assoc" value="<div id='function.array-diff-assoc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-diff-assoc.php'>array_diff_assoc</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>array_diff_assoc</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays with additional index check</span></p> </div> <a name='function.array-diff-assoc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_diff_assoc</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> Compares <i><tt class='parameter'>array1</tt></i> against <i><tt class='parameter'>array2</tt></i> and returns the difference. Unlike <a href='http://www.php.net/manual/en/function.array-diff.php' class='function'>array_diff()</a> the array keys are used in the comparison. </p> </div> <a name='function.array-diff-assoc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to compare from </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> More arrays to compare against </p> </dd> </dl> <p> </p> </div> <a name='function.array-diff-assoc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the values from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arrays. </p> </div> <a name='function.array-diff-assoc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_diff_assoc()</b> example</b></p> <div class='example-contents para'><p> In this example you see the <i>&amp;quot;a&amp;quot; =&amp;gt; &amp;quot;green&amp;quot;</i> pair is present in both arrays and thus it is not in the output from the function. Unlike this, the pair <i>0 =&amp;gt; &amp;quot;red&amp;quot;</i> is in the output because in the second argument <i>&amp;quot;red&amp;quot;</i> has key which is <i>1</i>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'brown'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_diff_assoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [b] =&amp;gt; brown [c] =&amp;gt; blue [0] =&amp;gt; red ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>array_diff_assoc()</b> example</b></p> <div class='example-contents para'><p> Two values from <em class='emphasis'>key =&amp;gt; value</em> pairs are considered equal only if <i>(string) $elem1 === (string) $elem2 </i>. In other words a strict check takes place so the string representations must be the same. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'00'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'01'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'2'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_diff_assoc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; 0 [1] =&amp;gt; 1 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-diff-assoc.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, <i>array_diff_assoc($array1[0], $array2[0]);</i>. </span> </p></blockquote> </div> <a name='function.array-diff-assoc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff.php' class='function' rel='rdfs-seeAlso'>array_diff()</a> - Computes the difference of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_diff" value="<div id='function.array-diff' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-diff.php'>array_diff</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>array_diff</span> &amp;mdash; <span class='dc-title'>Computes the difference of arrays</span></p> </div> <a name='function.array-diff.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_diff</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array1</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$array2</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ ...</tt></span> ] )</div> <p class='para rdfs-comment'> Compares <i><tt class='parameter'>array1</tt></i> against <i><tt class='parameter'>array2</tt></i> and returns the difference. </p> </div> <a name='function.array-diff.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to compare from </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array to compare against </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> More arrays to compare against </p> </dd> </dl> <p> </p> </div> <a name='function.array-diff.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> containing all the entries from <i><tt class='parameter'>array1</tt></i> that are not present in any of the other arrays. </p> </div> <a name='function.array-diff.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_diff()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'blue'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_diff</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> Multiple occurrences in <var class='varname'>$array1</var> are all treated the same way. This will output : </p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [1] =&amp;gt; blue ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-diff.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Two elements are considered equal if and only if <i>(string) $elem1 === (string) $elem2</i>. In words: when the string representation is the same. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using <i>array_diff($array1[0], $array2[0]);</i>. <br /> </p></blockquote> </div> <a name='function.array-diff.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-diff-assoc.php' class='function' rel='rdfs-seeAlso'>array_diff_assoc()</a> - Computes the difference of arrays with additional index check</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect.php' class='function' rel='rdfs-seeAlso'>array_intersect()</a> - Computes the intersection of arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-intersect-assoc.php' class='function' rel='rdfs-seeAlso'>array_intersect_assoc()</a> - Computes the intersection of arrays with additional index check</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_count_values" value="<div id='function.array-count-values' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-count-values.php'>array_count_values</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>array_count_values</span> &amp;mdash; <span class='dc-title'>Counts all the values of an array</span></p> </div> <a name='function.array-count-values.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_count_values</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> )</div> <p class='para rdfs-comment'> <b>array_count_values()</b> returns an array using the values of the <i><tt class='parameter'>input</tt></i> array as keys and their frequency in <i><tt class='parameter'>input</tt></i> as values. </p> </div> <a name='function.array-count-values.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array of values to count </p> </dd> </dl> <p> </p> </div> <a name='function.array-count-values.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array of values from <i><tt class='parameter'>input</tt></i> as keys and their count as value. </p> </div> <a name='function.array-count-values.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <b><tt class='constant'>E_WARNING</tt></b> for every element which is not <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> or <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='function.array-count-values.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_count_values()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'world'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_count_values</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [1] =&amp;gt; 2 [hello] =&amp;gt; 2 [world] =&amp;gt; 1 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-count-values.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.count.php' class='function' rel='rdfs-seeAlso'>count()</a> - Count all elements in an array, or properties in an object</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-unique.php' class='function' rel='rdfs-seeAlso'>array_unique()</a> - Removes duplicate values from an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-values.php' class='function' rel='rdfs-seeAlso'>array_values()</a> - Return all the values of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.count-chars.php' class='function' rel='rdfs-seeAlso'>count_chars()</a> - Return information about characters used in a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_combine" value="<div id='function.array-combine' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-combine.php'>array_combine</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>array_combine</span> &amp;mdash; <span class='dc-title'>Creates an array by using one array for keys and another for its values</span></p> </div> <a name='function.array-combine.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_combine</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$keys</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$values</tt></span> )</div> <p class='para rdfs-comment'> Creates an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> by using the values from the <i><tt class='parameter'>keys</tt></i> array as keys and the values from the <i><tt class='parameter'>values</tt></i> array as the corresponding values. </p> </div> <a name='function.array-combine.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>keys</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Array of keys to be used. Illegal values for key will be converted to <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>values</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Array of values to be used </p> </dd> </dl> <p> </p> </div> <a name='function.array-combine.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the combined <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>, <b><tt class='constant'>FALSE</tt></b> if the number of elements for each array isn&amp;#039;t equal or if the arrays are empty. </p> </div> <a name='function.array-combine.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <b><tt class='constant'>E_WARNING</tt></b> if <i><tt class='parameter'>keys</tt></i> and <i><tt class='parameter'>values</tt></i> are either empty or the number of elements does not match. </p> </div> <a name='function.array-combine.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>array_combine()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'avocado'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>array_combine</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [green] =&amp;gt; avocado [red] =&amp;gt; apple [yellow] =&amp;gt; banana ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-combine.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.array-merge.php' class='function' rel='rdfs-seeAlso'>array_merge()</a> - Merge one or more arrays</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-walk.php' class='function' rel='rdfs-seeAlso'>array_walk()</a> - Apply a user function to every member of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-values.php' class='function' rel='rdfs-seeAlso'>array_values()</a> - Return all the values of an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_chunk" value="<div id='function.array-chunk' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-chunk.php'>array_chunk</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>array_chunk</span> &amp;mdash; <span class='dc-title'>Split an array into chunks</span></p> </div> <a name='function.array-chunk.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_chunk</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$size</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$preserve_keys</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Chunks an array into <i><tt class='parameter'>size</tt></i> large chunks. The last chunk may contain less than <i><tt class='parameter'>size</tt></i> elements. </p> </div> <a name='function.array-chunk.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to work on </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>size</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The size of each chunk </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preserve_keys</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When set to <b><tt class='constant'>TRUE</tt></b> keys will be preserved. Default is <b><tt class='constant'>FALSE</tt></b> which will reindex the chunk numerically </p> </dd> </dl> <p> </p> </div> <a name='function.array-chunk.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a multidimensional numerically indexed array, starting with zero, with each dimension containing <i><tt class='parameter'>size</tt></i> elements. </p> </div> <a name='function.array-chunk.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If <i><tt class='parameter'>size</tt></i> is less than 1 <b><tt class='constant'>E_WARNING</tt></b> will be thrown and <b><tt class='constant'>NULL</tt></b> returned. </p> </div> <a name='function.array-chunk.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_chunk()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_chunk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input_array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_chunk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input_array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; a [1] =&amp;gt; b ) [1] =&amp;gt; Array ( [0] =&amp;gt; c [1] =&amp;gt; d ) [2] =&amp;gt; Array ( [0] =&amp;gt; e ) ) Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; a [1] =&amp;gt; b ) [1] =&amp;gt; Array ( [2] =&amp;gt; c [3] =&amp;gt; d ) [2] =&amp;gt; Array ( [4] =&amp;gt; e ) ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="array_change_key_case" value="<div id='function.array-change-key-case' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.array-change-key-case.php'>array_change_key_case</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>array_change_key_case</span> &amp;mdash; <span class='dc-title'>Changes all keys in an array</span></p> </div> <a name='function.array-change-key-case.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>array_change_key_case</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$case</tt><span class='initializer'> = CASE_LOWER</span></span> ] )</div> <p class='para rdfs-comment'> Returns an array with all keys from <i><tt class='parameter'>input</tt></i> lowercased or uppercased. Numbered indices are left as is. </p> </div> <a name='function.array-change-key-case.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array to work on </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>case</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Either <b><tt class='constant'>CASE_UPPER</tt></b> or <b><tt class='constant'>CASE_LOWER</tt></b> (default) </p> </dd> </dl> <p> </p> </div> <a name='function.array-change-key-case.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with its keys lower or uppercased, or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>input</tt></i> is not an array. </p> </div> <a name='function.array-change-key-case.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <b><tt class='constant'>E_WARNING</tt></b> if <i><tt class='parameter'>input</tt></i> is not an array. </p> </div> <a name='function.array-change-key-case.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>array_change_key_case()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'FirSt'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SecOnd'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_change_key_case</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input_array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>CASE_UPPER</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [FIRST] =&amp;gt; 1 [SECOND] =&amp;gt; 4 ) </pre></div> </div> </div><p> </p> </div> <a name='function.array-change-key-case.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If an array has indices that will be the same once run through this function (e.g. &amp;quot;<i>keY</i>&amp;quot; and &amp;quot;<i>kEY</i>&amp;quot;), the value that is later in the array will override other indices. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::__construct" value="<div id='arrayobject.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.construct.php'>ArrayObject::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::__construct</span> &amp;mdash; <span class='dc-title'>Construct a new array object</span></p> </div> <a name='arrayobject.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='methodname'><b>ArrayObject::__construct</b></span> ([ <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$iterator_class</tt></span> ]]] )</div> <p class='para rdfs-comment'> This constructs a new array <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='arrayobject.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>input</tt></i> parameter accepts an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or an <a href='http://www.php.net/manual/en/language.types.object.php' class='type Object'>Object</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Flags to control the behaviour of the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> object. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator_class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specify the class that will be used for iteration of the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> object. <a href='http://www.php.net/manual/en/class.arrayiterator.php' class='classname'>ArrayIterator</a> is the default class used. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::__construct()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(ArrayObject)#1 (3) { [1]=&amp;gt; string(3) &amp;quot;one&amp;quot; [2]=&amp;gt; string(3) &amp;quot;two&amp;quot; [3]=&amp;gt; string(5) &amp;quot;three&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='arrayobject.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.setflags.php' class='function' rel='rdfs-seeAlso'>ArrayObject::setflags</a> - Sets the behavior flags.</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::uksort" value="<div id='arrayobject.uksort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.uksort.php'>ArrayObject::uksort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::uksort</span> &amp;mdash; <span class='dc-title'>Sort the entries by keys using a user-defined comparison function</span></p> </div> <a name='arrayobject.uksort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::uksort</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <p class='para rdfs-comment'> This function sorts the the keys of the entries using a user-supplied comparison function. The key to entry correlations will be maintained. </p> </div> <a name='arrayobject.uksort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmp_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> Function <i><tt class='parameter'>cmp_function</tt></i> should accept two parameters which will be filled by pairs of entry keys. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.uksort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.uksort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::uksort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'@^(a|an|the)&amp;nbsp;@'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'@^(a|an|the)&amp;nbsp;@'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>strcasecmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'John'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'the&amp;nbsp;Earth'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'an&amp;nbsp;apple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;banana'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>uksort</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$arrayObject&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>:&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> an apple: 3 a banana: 4 the Earth: 2 John: 1 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::uasort" value="<div id='arrayobject.uasort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.uasort.php'>ArrayObject::uasort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::uasort</span> &amp;mdash; <span class='dc-title'>Sort the entries with a user-defined comparison function and maintain key association</span></p> </div> <a name='arrayobject.uasort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::uasort</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <p class='para rdfs-comment'> This function sorts the entries such that keys maintain their correlation with the entry that they are associated with, using a user-defined comparison function. </p> <p class='para'> This is used mainly when sorting associative arrays where the actual element order is significant. </p> </div> <a name='arrayobject.uasort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmp_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Function <i><tt class='parameter'>cmp_function</tt></i> should accept two parameters which will be filled by pairs of entries. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.uasort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.uasort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::uasort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Comparison&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;-</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;to&amp;nbsp;be&amp;nbsp;sorted<br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>9</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'f'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'g'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'h'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayObject</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Sort&amp;nbsp;and&amp;nbsp;print&amp;nbsp;the&amp;nbsp;resulting&amp;nbsp;array<br /></span><span style='color: #0000BB'>$arrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>uasort</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayObject</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; 4 [b] =&amp;gt; 8 [c] =&amp;gt; -1 [d] =&amp;gt; -9 [e] =&amp;gt; 2 [f] =&amp;gt; 5 [g] =&amp;gt; 3 [h] =&amp;gt; -4 ) Array ( [d] =&amp;gt; -9 [h] =&amp;gt; -4 [c] =&amp;gt; -1 [e] =&amp;gt; 2 [g] =&amp;gt; 3 [a] =&amp;gt; 4 [f] =&amp;gt; 5 [b] =&amp;gt; 8 ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::setIteratorClass" value="<div id='arrayobject.setiteratorclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.setiteratorclass.php'>ArrayObject::setIteratorClass</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::setIteratorClass</span> &amp;mdash; <span class='dc-title'>Sets the iterator classname for the ArrayObject.</span></p> </div> <a name='arrayobject.setiteratorclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::setIteratorClass</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$iterator_class</tt></span> )</div> <p class='para rdfs-comment'> Sets the classname of the array iterator that is used by <a href='http://www.php.net/manual/en/arrayobject.getiterator.php' class='link'>ArrayObject::getIterator()</a>. </p> </div> <a name='arrayobject.setiteratorclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator_class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The classname of the array iterator to use when iterating over this object. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.setiteratorclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.setiteratorclass.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::setIteratorClass()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Custom&amp;nbsp;ArrayIterator&amp;nbsp;(inherits&amp;nbsp;from&amp;nbsp;ArrayIterator)<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>MyArrayIterator&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;custom&amp;nbsp;implementation<br /></span><span style='color: #007700'>}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;iterator&amp;nbsp;classname&amp;nbsp;to&amp;nbsp;the&amp;nbsp;newly<br /></span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setIteratorClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyArrayIterator'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> MyArrayIterator Object ( [lemons] =&amp;gt; 1 [oranges] =&amp;gt; 4 [bananas] =&amp;gt; 5 [apples] =&amp;gt; 10 ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::setFlags" value="<div id='arrayobject.setflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.setflags.php'>ArrayObject::setFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::setFlags</span> &amp;mdash; <span class='dc-title'>Sets the behavior flags.</span></p> </div> <a name='arrayobject.setflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::setFlags</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <p class='para rdfs-comment'> Set the flags that change the behavior of the ArrayObject. </p> </div> <a name='arrayobject.setflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new ArrayObject behavior. It takes on either a bitmask, or named constants. Using named constants is strongly encouraged to ensure compatibility for future versions. </p> <p class='para'> The available behavior flags are listed below. The actual meanings of these flags are described in the <a href='http://www.php.net/manual/en/class.arrayobject.php#arrayobject.constants' class='link'>predefined constants</a>. </p><table class='doctable table'> <caption><b>ArrayObject behavior flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>value</th> <th>constant</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>1</td> <td align='left'> <a href='http://www.php.net/manual/en/class.arrayobject.php#arrayobject.constants.std-prop-list' class='link'>ArrayObject::STD_PROP_LIST</a> </td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'> <a href='http://www.php.net/manual/en/class.arrayobject.php#arrayobject.constants.array-as-props' class='link'>ArrayObject::ARRAY_AS_PROPS</a> </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.setflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.setflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::setFlags()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Try&amp;nbsp;to&amp;nbsp;use&amp;nbsp;array&amp;nbsp;key&amp;nbsp;as&amp;nbsp;property<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>lemons</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;so&amp;nbsp;that&amp;nbsp;the&amp;nbsp;array&amp;nbsp;keys&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;as&amp;nbsp;properties&amp;nbsp;of&amp;nbsp;the&amp;nbsp;ArrayObject<br /></span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ARRAY_AS_PROPS</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Try&amp;nbsp;it&amp;nbsp;again<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>lemons</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> NULL int(1) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::offsetUnset" value="<div id='arrayobject.offsetunset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.offsetunset.php'>ArrayObject::offsetUnset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::offsetUnset</span> &amp;mdash; <span class='dc-title'>Unsets the value at the specified index</span></p> </div> <a name='arrayobject.offsetunset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::offsetUnset</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> <p class='para rdfs-comment'> Unsets the value at the specified index. </p> </div> <a name='arrayobject.offsetunset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index being unset. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.offsetunset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.offsetunset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::offsetunset</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>2</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetunset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(ArrayObject)#1 (1) { [0]=&amp;gt; string(4) &amp;quot;zero&amp;quot; } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::offsetSet" value="<div id='arrayobject.offsetset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.offsetset.php'>ArrayObject::offsetSet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::offsetSet</span> &amp;mdash; <span class='dc-title'>Sets the value at the specified index to newval</span></p> </div> <a name='arrayobject.offsetset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::offsetSet</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$newval</tt></span> )</div> <p class='para rdfs-comment'> Sets the value at the specified index to newval. </p> </div> <a name='arrayobject.offsetset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index being set. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>newval</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new value for the <i><tt class='parameter'>index</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.offsetset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.offsetset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::offsetset</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Example&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$property&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'prop:public'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>Example</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetset</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'group'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'g1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'g2'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>null</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'last'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(ArrayObject)#1 (3) { [&amp;quot;property&amp;quot;]=&amp;gt; string(11) &amp;quot;prop:public&amp;quot; [4]=&amp;gt; string(4) &amp;quot;four&amp;quot; [&amp;quot;group&amp;quot;]=&amp;gt; array(2) { [0]=&amp;gt; string(2) &amp;quot;g1&amp;quot; [1]=&amp;gt; string(2) &amp;quot;g2&amp;quot; } } object(ArrayObject)#3 (3) { [0]=&amp;gt; string(4) &amp;quot;zero&amp;quot; [1]=&amp;gt; string(3) &amp;quot;one&amp;quot; [2]=&amp;gt; string(4) &amp;quot;last&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='arrayobject.offsetset.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.append.php' class='function' rel='rdfs-seeAlso'>ArrayObject::append</a> - Appends the value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::offsetGet" value="<div id='arrayobject.offsetget' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.offsetget.php'>ArrayObject::offsetGet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::offsetGet</span> &amp;mdash; <span class='dc-title'>Returns the value at the specified index</span></p> </div> <a name='arrayobject.offsetget.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ArrayObject::offsetGet</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> </div> <a name='arrayobject.offsetget.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index with the value. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.offsetget.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The value at the specified index or <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='arrayobject.offsetget.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::offsetget</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'example'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'e.g.'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetget</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetget</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'example'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetexists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'notfound'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(7) string(4) &amp;quot;e.g.&amp;quot; bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::offsetExists" value="<div id='arrayobject.offsetexists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.offsetexists.php'>ArrayObject::offsetExists</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::offsetExists</span> &amp;mdash; <span class='dc-title'>Returns whether the requested index exists</span></p> </div> <a name='arrayobject.offsetexists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ArrayObject::offsetExists</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> </div> <a name='arrayobject.offsetexists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The index being checked. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.offsetexists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the requested index exists, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='arrayobject.offsetexists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::offsetexists</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'example'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'e.g.'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetexists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetexists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'example'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>offsetexists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'notfound'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::natsort" value="<div id='arrayobject.natsort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.natsort.php'>ArrayObject::natsort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::natsort</span> &amp;mdash; <span class='dc-title'>Sort entries using a &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='arrayobject.natsort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::natsort</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a &amp;quot;natural ordering&amp;quot;. An example of the difference between this algorithm and the regular computer string sorting algorithms (used in <a href='http://www.php.net/manual/en/arrayobject.asort.php' class='link'>ArrayObject::asort</a>) method can be seen in the example below. </p> </div> <a name='arrayobject.natsort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.natsort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.natsort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::natsort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'img12.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img10.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img2.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img1.png'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arr1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arr2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;clone&amp;nbsp;</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>asort</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>natsort</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nNatural&amp;nbsp;order&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Standard sorting ArrayObject Object ( [3] =&amp;gt; img1.png [1] =&amp;gt; img10.png [0] =&amp;gt; img12.png [2] =&amp;gt; img2.png ) Natural order sorting ArrayObject Object ( [3] =&amp;gt; img1.png [2] =&amp;gt; img2.png [1] =&amp;gt; img10.png [0] =&amp;gt; img12.png ) </pre></div> </div> <div class='example-contents para'><p> For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p></div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::natcasesort" value="<div id='arrayobject.natcasesort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.natcasesort.php'>ArrayObject::natcasesort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::natcasesort</span> &amp;mdash; <span class='dc-title'>Sort an array using a case insensitive &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='arrayobject.natcasesort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::natcasesort</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method is a case insensitive version of <a href='http://www.php.net/manual/en/arrayobject.natsort.php' class='link'>ArrayObject::natsort</a>. </p> <p class='para'> This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a &amp;quot;natural ordering&amp;quot;. </p> </div> <a name='arrayobject.natcasesort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.natcasesort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.natcasesort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::natcasesort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'IMG0.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img12.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img10.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img2.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img1.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'IMG3.png'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arr1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arr2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;clone&amp;nbsp;</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>asort</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>natcasesort</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nNatural&amp;nbsp;order&amp;nbsp;sorting&amp;nbsp;(case-insensitive)\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Standard sorting ArrayObject Object ( [0] =&amp;gt; IMG0.png [5] =&amp;gt; IMG3.png [4] =&amp;gt; img1.png [2] =&amp;gt; img10.png [1] =&amp;gt; img12.png [3] =&amp;gt; img2.png ) Natural order sorting (case-insensitive) ArrayObject Object ( [0] =&amp;gt; IMG0.png [4] =&amp;gt; img1.png [3] =&amp;gt; img2.png [5] =&amp;gt; IMG3.png [2] =&amp;gt; img10.png [1] =&amp;gt; img12.png ) </pre></div> </div> <div class='example-contents para'><p> For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p></div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::ksort" value="<div id='arrayobject.ksort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.ksort.php'>ArrayObject::ksort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::ksort</span> &amp;mdash; <span class='dc-title'>Sort the entries by key</span></p> </div> <a name='arrayobject.ksort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::ksort</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Sorts the entries by key, maintaining key to entry correlations. This is useful mainly for associative arrays. </p> </div> <a name='arrayobject.ksort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.ksort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.ksort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::ksort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruitArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruitArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ksort</span><span style='color: #007700'>();<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruitArrayObject&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br />&amp;nbsp;</span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> a = orange b = banana c = apple d = lemon </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::getIteratorClass" value="<div id='arrayobject.getiteratorclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.getiteratorclass.php'>ArrayObject::getIteratorClass</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::getIteratorClass</span> &amp;mdash; <span class='dc-title'>Gets the iterator classname for the ArrayObject.</span></p> </div> <a name='arrayobject.getiteratorclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ArrayObject::getIteratorClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the classname of the array iterator that is used by <a href='http://www.php.net/manual/en/arrayobject.getiterator.php' class='link'>ArrayObject::getIterator()</a>. </p> </div> <a name='arrayobject.getiteratorclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.getiteratorclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the iterator class name that is used to iterate over this object. </p> </div> <a name='arrayobject.getiteratorclass.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::getIteratorClass()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Custom&amp;nbsp;ArrayIterator&amp;nbsp;(inherits&amp;nbsp;from&amp;nbsp;ArrayIterator)<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>MyArrayIterator&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;custom&amp;nbsp;implementation<br /></span><span style='color: #007700'>}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;current&amp;nbsp;class&amp;nbsp;name<br /></span><span style='color: #0000BB'>$className&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIteratorClass</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$className</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;new&amp;nbsp;classname<br /></span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setIteratorClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyArrayIterator'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;new&amp;nbsp;iterator&amp;nbsp;classname<br /></span><span style='color: #0000BB'>$className&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIteratorClass</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$className</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(13) &amp;quot;ArrayIterator&amp;quot; string(15) &amp;quot;MyArrayIterator&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='arrayobject.getiteratorclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'>The <a href='http://www.php.net/manual/en/arrayobject.setiteratorclass.php' class='link'>ArrayObject::setIteratorClass</a> method</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::getIterator" value="<div id='arrayobject.getiterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.getiterator.php'>ArrayObject::getIterator</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::getIterator</span> &amp;mdash; <span class='dc-title'>Create a new iterator from an ArrayObject instance</span></p> </div> <a name='arrayobject.getiterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.arrayiterator.php' class='type ArrayIterator'>ArrayIterator</a></span> <span class='methodname'><b>ArrayObject::getIterator</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Create a new iterator from an <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> instance. </p> </div> <a name='arrayobject.getiterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.getiterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An iterator from an <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a>. </p> </div> <a name='arrayobject.getiterator.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::getIterator()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br /><br />while(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1 =&amp;gt; one 2 =&amp;gt; two 3 =&amp;gt; three </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::getFlags" value="<div id='arrayobject.getflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.getflags.php'>ArrayObject::getFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::getFlags</span> &amp;mdash; <span class='dc-title'>Gets the behavior flags.</span></p> </div> <a name='arrayobject.getflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ArrayObject::getFlags</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the behavior flags of the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a>. See the <a href='http://www.php.net/manual/en/arrayobject.setflags.php' class='link'>ArrayObject::setFlags</a> method for a list of the available flags. </p> </div> <a name='arrayobject.getflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.getflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the behavior flags of the ArrayObject. </p> </div> <a name='arrayobject.getflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::getFlags()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;current&amp;nbsp;flags<br /></span><span style='color: #0000BB'>$flags&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFlags</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$flags</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;new&amp;nbsp;flags<br /></span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ARRAY_AS_PROPS</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;new&amp;nbsp;flags<br /></span><span style='color: #0000BB'>$flags&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFlags</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$flags</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(0) int(2) </pre></div> </div> </div><p> </p> </div> <a name='arrayobject.getflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'>The <a href='http://www.php.net/manual/en/arrayobject.setflags.php' class='link'>ArrayObject::setFlags</a> method</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::getArrayCopy" value="<div id='arrayobject.getarraycopy' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.getarraycopy.php'>ArrayObject::getArrayCopy</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::getArrayCopy</span> &amp;mdash; <span class='dc-title'>Creates a copy of the ArrayObject.</span></p> </div> <a name='arrayobject.getarraycopy.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>ArrayObject::getArrayCopy</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Exports the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> to an array. </p> </div> <a name='arrayobject.getarraycopy.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.getarraycopy.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a copy of the array. When the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> refers to an object an array of the public properties of that object will be returned. </p> </div> <a name='arrayobject.getarraycopy.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::getArrayCopy()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'pears'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;create&amp;nbsp;a&amp;nbsp;copy&amp;nbsp;of&amp;nbsp;the&amp;nbsp;array<br /></span><span style='color: #0000BB'>$copy&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getArrayCopy</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$copy</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [lemons] =&amp;gt; 1 [oranges] =&amp;gt; 4 [bananas] =&amp;gt; 5 [apples] =&amp;gt; 10 [pears] =&amp;gt; 4 ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::exchangeArray" value="<div id='arrayobject.exchangearray' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.exchangearray.php'>ArrayObject::exchangeArray</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::exchangeArray</span> &amp;mdash; <span class='dc-title'>Exchange the array for another one.</span></p> </div> <a name='arrayobject.exchangearray.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>ArrayObject::exchangeArray</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$input</tt></span> )</div> <p class='para rdfs-comment'> Exchange the current <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> with another <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='arrayobject.exchangearray.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> to exchange with the current array. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.exchangearray.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the old <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. </p> </div> <a name='arrayobject.exchangearray.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::exchangeArray()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;available&amp;nbsp;fruits<br /></span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemons'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bananas'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apples'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;of&amp;nbsp;locations&amp;nbsp;in&amp;nbsp;Europe<br /></span><span style='color: #0000BB'>$locations&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'Amsterdam'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Paris'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'London'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fruitsArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Now&amp;nbsp;exchange&amp;nbsp;fruits&amp;nbsp;for&amp;nbsp;locations<br /></span><span style='color: #0000BB'>$old&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exchangeArray</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$locations</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$old</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruitsArrayObject</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [lemons] =&amp;gt; 1 [oranges] =&amp;gt; 4 [bananas] =&amp;gt; 5 [apples] =&amp;gt; 10 ) ArrayObject Object ( [0] =&amp;gt; Amsterdam [1] =&amp;gt; Paris [2] =&amp;gt; London ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::count" value="<div id='arrayobject.count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.count.php'>ArrayObject::count</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::count</span> &amp;mdash; <span class='dc-title'>Get the number of public properties in the ArrayObject</span></p> </div> <a name='arrayobject.count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ArrayObject::count</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the number of public properties in the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a>. </p> </div> <a name='arrayobject.count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The number of public properties in the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a>. </p> <blockquote><p><b class='note'>Note</b>: When the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> is constructed from an array all properties are public. <br /> </p></blockquote> </div> <a name='arrayobject.count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::count</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Example&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$public&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'prop:public'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$prv&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'prop:private'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$prt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'prop:protected'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>Example</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'second'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'third'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(1) int(3) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::asort" value="<div id='arrayobject.asort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.asort.php'>ArrayObject::asort</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::asort</span> &amp;mdash; <span class='dc-title'>Sort the entries by value</span></p> </div> <a name='arrayobject.asort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::asort</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Sorts the entries such that the keys maintain their correlation with the entries they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant. </p> </div> <a name='arrayobject.asort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayobject.asort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.asort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayObject::asort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruitArrayObject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruitArrayObject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>asort</span><span style='color: #007700'>();<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruitArrayObject&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> c = apple b = banana d = lemon a = orange </pre></div> </div> <div class='example-contents para'><p> The fruits have been sorted in alphabetical order, and the key associated with each entry has been maintained. </p></div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject::append" value="<div id='arrayobject.append' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayobject.append.php'>ArrayObject::append</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayObject::append</span> &amp;mdash; <span class='dc-title'>Appends the value</span></p> </div> <a name='arrayobject.append.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayObject::append</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Appends a new value as the last element. </p> <blockquote><p><b class='note'>Note</b>: This method cannot be called when the <a href='http://www.php.net/manual/en/class.arrayobject.php' class='classname'>ArrayObject</a> was constructed from an object. Use <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetset.php' class='function'>ArrayObject::offsetset</a></span> instead. <br /> </p></blockquote> </div> <a name='arrayobject.append.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value being appended. </p> </dd> </dl> <p> </p> </div> <a name='arrayobject.append.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayobject.append.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ArrayObject::append</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'second'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'third'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>append</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'fourth'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>append</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'five'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'six'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayobj</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(ArrayObject)#1 (5) { [0]=&amp;gt; string(5) &amp;quot;first&amp;quot; [1]=&amp;gt; string(6) &amp;quot;second&amp;quot; [2]=&amp;gt; string(5) &amp;quot;third&amp;quot; [3]=&amp;gt; string(6) &amp;quot;fourth&amp;quot; [4]=&amp;gt; array(2) { [0]=&amp;gt; string(4) &amp;quot;five&amp;quot; [1]=&amp;gt; string(3) &amp;quot;six&amp;quot; } } </pre></div> </div> </div><p> </p> </div> <a name='arrayobject.append.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetset.php' class='function' rel='rdfs-seeAlso'>ArrayObject::offsetset</a> - Sets the value at the specified index to newval</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayObject" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.arrayobject.php'>The ArrayObject class</a></h1> <div class='partintro'> <div id='arrayobject.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This class allows objects to work as arrays. </p> </div> <div id='arrayobject.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ArrayObject</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ArrayObject</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.iteratoraggregate.php' class='interfacename'>IteratorAggregate</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='interfacename'>ArrayAccess</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.arrayobject.php#arrayobject.constants.std-prop-list'>STD_PROP_LIST</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.arrayobject.php#arrayobject.constants.array-as-props'>ARRAY_AS_PROPS</a></var> <span class='initializer'> = 2</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.construct.php' class='function'>__construct</a></span> ([ <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$iterator_class</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.append.php' class='function'>append</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.asort.php' class='function'>asort</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.count.php' class='function'>count</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.exchangearray.php' class='function'>exchangeArray</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$input</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.getarraycopy.php' class='function'>getArrayCopy</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.getflags.php' class='function'>getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>ArrayIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.getiterator.php' class='function'>getIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.getiteratorclass.php' class='function'>getIteratorClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.ksort.php' class='function'>ksort</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.natcasesort.php' class='function'>natcasesort</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.natsort.php' class='function'>natsort</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetexists.php' class='function'>offsetExists</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetget.php' class='function'>offsetGet</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetset.php' class='function'>offsetSet</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$newval</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.offsetunset.php' class='function'>offsetUnset</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.setflags.php' class='function'>setFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.setiteratorclass.php' class='function'>setIteratorClass</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$iterator_class</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.uasort.php' class='function'>uasort</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayobject.uksort.php' class='function'>uksort</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> }</div> </div> <div id='arrayobject.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='arrayobject.constants.flags' class='section'> <h2 class='title'>ArrayObject Flags</h2> <dl> <dt id='arrayobject.constants.std-prop-list' class='varlistentry'> <span class='term'><b><tt class='constant'>ArrayObject::STD_PROP_LIST</tt></b></span> </dt><dd class='listitem'> <p class='para'>Properties of the object have their normal functionality when accessed as list (var_dump, foreach, etc.).</p> </dd> <dt id='arrayobject.constants.array-as-props' class='varlistentry'> <span class='term'><b><tt class='constant'>ArrayObject::ARRAY_AS_PROPS</tt></b></span> </dt><dd class='listitem'> <p class='para'>Entries can be accessed as properties (read and write).</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/arrayobject.append.php'>ArrayObject::append</a> &amp;acirc;&amp;#128;&amp;#148; Appends the value</li><li><a href='http://www.php.net/manual/en/arrayobject.asort.php'>ArrayObject::asort</a> &amp;acirc;&amp;#128;&amp;#148; Sort the entries by value</li><li><a href='http://www.php.net/manual/en/arrayobject.construct.php'>ArrayObject::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a new array object</li><li><a href='http://www.php.net/manual/en/arrayobject.count.php'>ArrayObject::count</a> &amp;acirc;&amp;#128;&amp;#148; Get the number of public properties in the ArrayObject</li><li><a href='http://www.php.net/manual/en/arrayobject.exchangearray.php'>ArrayObject::exchangeArray</a> &amp;acirc;&amp;#128;&amp;#148; Exchange the array for another one.</li><li><a href='http://www.php.net/manual/en/arrayobject.getarraycopy.php'>ArrayObject::getArrayCopy</a> &amp;acirc;&amp;#128;&amp;#148; Creates a copy of the ArrayObject.</li><li><a href='http://www.php.net/manual/en/arrayobject.getflags.php'>ArrayObject::getFlags</a> &amp;acirc;&amp;#128;&amp;#148; Gets the behavior flags.</li><li><a href='http://www.php.net/manual/en/arrayobject.getiterator.php'>ArrayObject::getIterator</a> &amp;acirc;&amp;#128;&amp;#148; Create a new iterator from an ArrayObject instance</li><li><a href='http://www.php.net/manual/en/arrayobject.getiteratorclass.php'>ArrayObject::getIteratorClass</a> &amp;acirc;&amp;#128;&amp;#148; Gets the iterator classname for the ArrayObject.</li><li><a href='http://www.php.net/manual/en/arrayobject.ksort.php'>ArrayObject::ksort</a> &amp;acirc;&amp;#128;&amp;#148; Sort the entries by key</li><li><a href='http://www.php.net/manual/en/arrayobject.natcasesort.php'>ArrayObject::natcasesort</a> &amp;acirc;&amp;#128;&amp;#148; Sort an array using a case insensitive 'natural order' algorithm</li><li><a href='http://www.php.net/manual/en/arrayobject.natsort.php'>ArrayObject::natsort</a> &amp;acirc;&amp;#128;&amp;#148; Sort entries using a 'natural order' algorithm</li><li><a href='http://www.php.net/manual/en/arrayobject.offsetexists.php'>ArrayObject::offsetExists</a> &amp;acirc;&amp;#128;&amp;#148; Returns whether the requested index exists</li><li><a href='http://www.php.net/manual/en/arrayobject.offsetget.php'>ArrayObject::offsetGet</a> &amp;acirc;&amp;#128;&amp;#148; Returns the value at the specified index</li><li><a href='http://www.php.net/manual/en/arrayobject.offsetset.php'>ArrayObject::offsetSet</a> &amp;acirc;&amp;#128;&amp;#148; Sets the value at the specified index to newval</li><li><a href='http://www.php.net/manual/en/arrayobject.offsetunset.php'>ArrayObject::offsetUnset</a> &amp;acirc;&amp;#128;&amp;#148; Unsets the value at the specified index</li><li><a href='http://www.php.net/manual/en/arrayobject.setflags.php'>ArrayObject::setFlags</a> &amp;acirc;&amp;#128;&amp;#148; Sets the behavior flags.</li><li><a href='http://www.php.net/manual/en/arrayobject.setiteratorclass.php'>ArrayObject::setIteratorClass</a> &amp;acirc;&amp;#128;&amp;#148; Sets the iterator classname for the ArrayObject.</li><li><a href='http://www.php.net/manual/en/arrayobject.uasort.php'>ArrayObject::uasort</a> &amp;acirc;&amp;#128;&amp;#148; Sort the entries with a user-defined comparison function and maintain key association</li><li><a href='http://www.php.net/manual/en/arrayobject.uksort.php'>ArrayObject::uksort</a> &amp;acirc;&amp;#128;&amp;#148; Sort the entries by keys using a user-defined comparison function</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::valid" value="<div id='arrayiterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.valid.php'>ArrayIterator::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether array contains more entries</span></p> </div> <a name='arrayiterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ArrayIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> contains any more entries. </p> </div> <a name='arrayiterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayiterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayiterator.valid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayIterator::valid()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>());&amp;nbsp;</span><span style='color: #FF8000'>//bool(true)<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;advance&amp;nbsp;to&amp;nbsp;the&amp;nbsp;next&amp;nbsp;item<br /><br />//bool(false)&amp;nbsp;because&amp;nbsp;there&amp;nbsp;is&amp;nbsp;only&amp;nbsp;one&amp;nbsp;array&amp;nbsp;element<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::seek" value="<div id='arrayiterator.seek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.seek.php'>ArrayIterator::seek</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::seek</span> &amp;mdash; <span class='dc-title'>Seek to position</span></p> </div> <a name='arrayiterator.seek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayIterator::seek</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='arrayiterator.seek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>position</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The position to seek to. </p> </dd> </dl> <p> </p> </div> <a name='arrayiterator.seek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::rewind" value="<div id='arrayiterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.rewind.php'>ArrayIterator::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind array back to the start</span></p> </div> <a name='arrayiterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This rewinds the iterator to the beginning. </p> </div> <a name='arrayiterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayiterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayiterator.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayIterator::rewind()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//1<br /><br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//rewinding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;begining<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//0<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::next" value="<div id='arrayiterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.next.php'>ArrayIterator::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::next</span> &amp;mdash; <span class='dc-title'>Move to next entry</span></p> </div> <a name='arrayiterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> The iterator to the next entry. </p> </div> <a name='arrayiterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayiterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='arrayiterator.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayIterator::next()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'zero'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br /><br />while(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 =&amp;gt; zero 1 =&amp;gt; one </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::key" value="<div id='arrayiterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.key.php'>ArrayIterator::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::key</span> &amp;mdash; <span class='dc-title'>Return current array key</span></p> </div> <a name='arrayiterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ArrayIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns the current array key </p> </div> <a name='arrayiterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayiterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> key. </p> </div> <a name='arrayiterator.key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayIterator::key()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'key'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'value'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//key<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator::current" value="<div id='arrayiterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayiterator.current.php'>ArrayIterator::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayIterator::current</span> &amp;mdash; <span class='dc-title'>Return current array entry</span></p> </div> <a name='arrayiterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ArrayIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the current <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> entry. </p> </div> <a name='arrayiterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='arrayiterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> entry. </p> </div> <a name='arrayiterator.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayIterator::current()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayobject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br />for(</span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arrayobject</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getIterator</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1 =&amp;gt; one 2 =&amp;gt; two 3 =&amp;gt; three </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.arrayiterator.php'>The ArrayIterator class</a></h1> <div class='partintro'> <div id='arrayiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This iterator allows to unset and modify values and keys while iterating over Arrays and Objects. </p> <p class='para'> When you want to iterate over the same array multiple times you need to instantiate ArrayObject and let it create ArrayIterator instances that refer to it either by using <a href='http://www.php.net/manual/en/control-structures.foreach.php' class='link'>foreach</a> or by calling its getIterator() method manually. </p> </div> <div id='arrayiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ArrayIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ArrayIterator</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='interfacename'>ArrayAccess</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.seekableiterator.php' class='interfacename'>SeekableIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.seek.php' class='function'>seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/arrayiterator.current.php'>ArrayIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Return current array entry</li><li><a href='http://www.php.net/manual/en/arrayiterator.key.php'>ArrayIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Return current array key</li><li><a href='http://www.php.net/manual/en/arrayiterator.next.php'>ArrayIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move to next entry</li><li><a href='http://www.php.net/manual/en/arrayiterator.rewind.php'>ArrayIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind array back to the start</li><li><a href='http://www.php.net/manual/en/arrayiterator.seek.php'>ArrayIterator::seek</a> &amp;acirc;&amp;#128;&amp;#148; Seek to position</li><li><a href='http://www.php.net/manual/en/arrayiterator.valid.php'>ArrayIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether array contains more entries</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayAccess::offsetUnset" value="<div id='arrayaccess.offsetunset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayaccess.offsetunset.php'>ArrayAccess::offsetUnset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayAccess::offsetUnset</span> &amp;mdash; <span class='dc-title'>Offset to unset</span></p> </div> <a name='arrayaccess.offsetunset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayAccess::offsetUnset</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> <p class='para rdfs-comment'> Unsets an offset. </p> <blockquote><p><b class='note'>Note</b>: This method will <em class='emphasis'>not</em> be called when type-casting to <a href='http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting' class='link'>(unset)</a> <br /> </p></blockquote> </div> <a name='arrayaccess.offsetunset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset to unset. </p> </dd> </dl> <p> </p> </div> <a name='arrayaccess.offsetunset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayAccess::offsetSet" value="<div id='arrayaccess.offsetset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayaccess.offsetset.php'>ArrayAccess::offsetSet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayAccess::offsetSet</span> &amp;mdash; <span class='dc-title'>Offset to set</span></p> </div> <a name='arrayaccess.offsetset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ArrayAccess::offsetSet</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Assigns a value to the specified offset. </p> </div> <a name='arrayaccess.offsetset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset to assign the value to. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to set. </p> </dd> </dl> <p> </p> </div> <a name='arrayaccess.offsetset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayAccess::offsetGet" value="<div id='arrayaccess.offsetget' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayaccess.offsetget.php'>ArrayAccess::offsetGet</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayAccess::offsetGet</span> &amp;mdash; <span class='dc-title'>Offset to retrieve</span></p> </div> <a name='arrayaccess.offsetget.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ArrayAccess::offsetGet</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> <p class='para rdfs-comment'> Returns the value at specified offset. </p> <p class='para'> This method is executed when checking if offset is <a href='http://www.php.net/manual/en/function.empty.php' class='function'>empty()</a>. </p> </div> <a name='arrayaccess.offsetget.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset to retrieve. </p> </dd> </dl> <p> </p> </div> <a name='arrayaccess.offsetget.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Can return all value types. </p> </div> <a name='arrayaccess.offsetget.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/arrayaccess.offsetexists.php' class='function' rel='rdfs-seeAlso'>ArrayAccess::offsetExists</a> - Whether a offset exists</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayAccess::offsetExists" value="<div id='arrayaccess.offsetexists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/arrayaccess.offsetexists.php'>ArrayAccess::offsetExists</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ArrayAccess::offsetExists</span> &amp;mdash; <span class='dc-title'>Whether a offset exists</span></p> </div> <a name='arrayaccess.offsetexists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><b>ArrayAccess::offsetExists</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> <p class='para rdfs-comment'> Whether or not an offset exists. </p> <p class='para'> This method is executed when using <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a> or <a href='http://www.php.net/manual/en/function.empty.php' class='function'>empty()</a> on objects implementing <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='classname'>ArrayAccess</a>. </p> <blockquote><p><b class='note'>Note</b>: When using <a href='http://www.php.net/manual/en/function.empty.php' class='function'>empty()</a> <a href='http://www.php.net/manual/en/arrayaccess.offsetget.php' class='function'>ArrayAccess::offsetGet()</a> will be called and checked if empty only if <b>ArrayAccess::offsetExists()</b> returns <b><tt class='constant'>TRUE</tt></b>. <br /> </p></blockquote> </div> <a name='arrayaccess.offsetexists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An offset to check for. </p> </dd> </dl> <p> </p> </div> <a name='arrayaccess.offsetexists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <blockquote><p><b class='note'>Note</b>: The return value will be casted to <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> if non-boolean was returned. <br /> </p></blockquote> </div> <a name='arrayaccess.offsetexists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ArrayAccess::offsetExists()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>obj&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>arrayaccess&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetSet</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__METHOD__</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetExists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__METHOD__</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$var&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #DD0000'>'foobar'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetUnset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__METHOD__</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetGet</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__METHOD__</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #DD0000'>'value'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>obj</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Runs&amp;nbsp;obj::offsetExists()\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(isset(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'foobar'</span><span style='color: #007700'>]));<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nRuns&amp;nbsp;obj::offsetExists()&amp;nbsp;and&amp;nbsp;obj::offsetGet()\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(empty(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'foobar'</span><span style='color: #007700'>]));<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nRuns&amp;nbsp;obj::offsetExists(),&amp;nbsp;*not*&amp;nbsp;obj:offsetGet()&amp;nbsp;as&amp;nbsp;there&amp;nbsp;is&amp;nbsp;nothing&amp;nbsp;to&amp;nbsp;get\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(empty(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'foobaz'</span><span style='color: #007700'>]));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Runs obj::offsetExists() string(17) &amp;quot;obj::offsetExists&amp;quot; bool(true) Runs obj::offsetExists() and obj::offsetGet() string(17) &amp;quot;obj::offsetExists&amp;quot; string(14) &amp;quot;obj::offsetGet&amp;quot; bool(false) Runs obj::offsetExists(), *not* obj:offsetGet() as there is nothing to get string(17) &amp;quot;obj::offsetExists&amp;quot; bool(true) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ArrayAccess" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.arrayaccess.php'>The ArrayAccess interface</a></h1> <div class='partintro'> <div id='arrayaccess.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Interface to provide accessing objects as arrays. </p> </div> <div id='arrayaccess.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ArrayAccess</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ArrayAccess</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayaccess.offsetexists.php' class='function'>offsetExists</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayaccess.offsetget.php' class='function'>offsetGet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayaccess.offsetset.php' class='function'>offsetSet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayaccess.offsetunset.php' class='function'>offsetUnset</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$offset</tt></span> )</div> }</div> </div> <div id='arrayaccess.examples' class='section'> <div class='example'> <p><b>Example #1 Basic usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>obj&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>arrayaccess&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$container&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'one'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'two'&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'three'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetSet</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetExists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;isset(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetUnset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unset(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>offsetGet</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;isset(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>])&amp;nbsp;?&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>container</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$offset</span><span style='color: #007700'>]&amp;nbsp;:&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>obj</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(isset(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]);<br />unset(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(isset(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]));<br /></span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;value'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) int(2) bool(false) string(7) &amp;quot;A value&amp;quot; </pre></div> </div> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/arrayaccess.offsetexists.php'>ArrayAccess::offsetExists</a> &amp;acirc;&amp;#128;&amp;#148; Whether a offset exists</li><li><a href='http://www.php.net/manual/en/arrayaccess.offsetget.php'>ArrayAccess::offsetGet</a> &amp;acirc;&amp;#128;&amp;#148; Offset to retrieve</li><li><a href='http://www.php.net/manual/en/arrayaccess.offsetset.php'>ArrayAccess::offsetSet</a> &amp;acirc;&amp;#128;&amp;#148; Offset to set</li><li><a href='http://www.php.net/manual/en/arrayaccess.offsetunset.php'>ArrayAccess::offsetUnset</a> &amp;acirc;&amp;#128;&amp;#148; Offset to unset</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::__construct" value="<div id='appenditerator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.construct.php'>AppendIterator::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::__construct</span> &amp;mdash; <span class='dc-title'>Constructs an AppendIterator</span></p> </div> <a name='appenditerator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>AppendIterator::__construct</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Constructs an AppendIterator. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='appenditerator.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.append.php' class='function' rel='rdfs-seeAlso'>AppendIterator::append</a> - Appends an iterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::valid" value="<div id='appenditerator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.valid.php'>AppendIterator::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::valid</span> &amp;mdash; <span class='dc-title'>Checks validity of the current element</span></p> </div> <a name='appenditerator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks validity of the current element. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='appenditerator.valid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.append.php' class='function' rel='rdfs-seeAlso'>AppendIterator::append</a> - Appends an iterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::rewind" value="<div id='appenditerator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.rewind.php'>AppendIterator::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewinds the Iterator</span></p> </div> <a name='appenditerator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Rewind to the first element of the first inner Iterator. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='appenditerator.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.next.php' class='function' rel='rdfs-seeAlso'>AppendIterator::next</a> - Moves to the next element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::next" value="<div id='appenditerator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.next.php'>AppendIterator::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::next</span> &amp;mdash; <span class='dc-title'>Moves to the next element</span></p> </div> <a name='appenditerator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Moves to the next element. If this means to another Iterator then it rewinds that Iterator. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='appenditerator.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.rewind.php' class='function' rel='rdfs-seeAlso'>AppendIterator::rewind</a> - Rewinds the Iterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::key" value="<div id='appenditerator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.key.php'>AppendIterator::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::key</span> &amp;mdash; <span class='dc-title'>Gets the current key</span></p> </div> <a name='appenditerator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the current key </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current key if it is valid or <b><tt class='constant'>NULL</tt></b> otherwise. </p> </div> <a name='appenditerator.key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.current.php' class='function' rel='rdfs-seeAlso'>AppendIterator::current</a> - Gets the current value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::getIteratorIndex" value="<div id='appenditerator.getiteratorindex' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.getiteratorindex.php'>AppendIterator::getIteratorIndex</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::getIteratorIndex</span> &amp;mdash; <span class='dc-title'>Gets an index of iterators</span></p> </div> <a name='appenditerator.getiteratorindex.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::getIteratorIndex</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get an index of iterators. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.getiteratorindex.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.getiteratorindex.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The index of iterators. </p> </div> <a name='appenditerator.getiteratorindex.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getinneriterator.php' class='function' rel='rdfs-seeAlso'>AppendIterator::getInnerIterator</a> - Gets an inner iterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::getInnerIterator" value="<div id='appenditerator.getinneriterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.getinneriterator.php'>AppendIterator::getInnerIterator</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::getInnerIterator</span> &amp;mdash; <span class='dc-title'>Gets an inner iterator</span></p> </div> <a name='appenditerator.getinneriterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::getInnerIterator</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get an inner iterator </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.getinneriterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.getinneriterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current inner Iterator. </p> </div> <a name='appenditerator.getinneriterator.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getarrayiterator.php' class='function' rel='rdfs-seeAlso'>AppendIterator::getArrayIterator</a> - The getArrayIterator method</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::getArrayIterator" value="<div id='appenditerator.getarrayiterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.getarrayiterator.php'>AppendIterator::getArrayIterator</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::getArrayIterator</span> &amp;mdash; <span class='dc-title'>The getArrayIterator method</span></p> </div> <a name='appenditerator.getarrayiterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::getArrayIterator</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> The getArrayIterator method </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.getarrayiterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.getarrayiterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='appenditerator.getarrayiterator.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getinneriterator.php' class='function' rel='rdfs-seeAlso'>AppendIterator::getInnerIterator</a> - Gets an inner iterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::current" value="<div id='appenditerator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.current.php'>AppendIterator::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::current</span> &amp;mdash; <span class='dc-title'>Gets the current value</span></p> </div> <a name='appenditerator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the current value. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='appenditerator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current value if it is valid or <b><tt class='constant'>NULL</tt></b> otherwise. </p> </div> <a name='appenditerator.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.next.php' class='function' rel='rdfs-seeAlso'>AppendIterator::next</a> - Moves to the next element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator::append" value="<div id='appenditerator.append' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/appenditerator.append.php'>AppendIterator::append</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>AppendIterator::append</span> &amp;mdash; <span class='dc-title'>Appends an iterator</span></p> </div> <a name='appenditerator.append.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>AppendIterator::append</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <p class='para rdfs-comment'> Appends an iterator. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='appenditerator.append.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The iterator to append. </p> </dd> </dl> <p> </p> </div> <a name='appenditerator.append.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='appenditerator.append.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.construct.php' class='function' rel='rdfs-seeAlso'>AppendIterator::__construct</a> - Constructs an AppendIterator</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="AppendIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.appenditerator.php'>The AppendIterator class</a></h1> <div class='partintro'> <div id='appenditerator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Iterate over multiple collections. </p> </div> <div id='appenditerator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>AppendIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>AppendIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iteratoriterator.php' class='classname'>IteratorIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.append.php' class='function'>append</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getarrayiterator.php' class='function'>getArrayIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getinneriterator.php' class='function'>getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.getiteratorindex.php' class='function'>getIteratorIndex</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/appenditerator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.construct.php' class='function'>IteratorIterator::__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.traversable.php' class='type Traversable'>Traversable</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.current.php' class='function'>IteratorIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.getinneriterator.php' class='function'>IteratorIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.key.php' class='function'>IteratorIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.next.php' class='function'>IteratorIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.rewind.php' class='function'>IteratorIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.valid.php' class='function'>IteratorIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/appenditerator.append.php'>AppendIterator::append</a> &amp;acirc;&amp;#128;&amp;#148; Appends an iterator</li><li><a href='http://www.php.net/manual/en/appenditerator.construct.php'>AppendIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs an AppendIterator</li><li><a href='http://www.php.net/manual/en/appenditerator.current.php'>AppendIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Gets the current value</li><li><a href='http://www.php.net/manual/en/appenditerator.getarrayiterator.php'>AppendIterator::getArrayIterator</a> &amp;acirc;&amp;#128;&amp;#148; The getArrayIterator method</li><li><a href='http://www.php.net/manual/en/appenditerator.getinneriterator.php'>AppendIterator::getInnerIterator</a> &amp;acirc;&amp;#128;&amp;#148; Gets an inner iterator</li><li><a href='http://www.php.net/manual/en/appenditerator.getiteratorindex.php'>AppendIterator::getIteratorIndex</a> &amp;acirc;&amp;#128;&amp;#148; Gets an index of iterators</li><li><a href='http://www.php.net/manual/en/appenditerator.key.php'>AppendIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Gets the current key</li><li><a href='http://www.php.net/manual/en/appenditerator.next.php'>AppendIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Moves to the next element</li><li><a href='http://www.php.net/manual/en/appenditerator.rewind.php'>AppendIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewinds the Iterator</li><li><a href='http://www.php.net/manual/en/appenditerator.valid.php'>AppendIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Checks validity of the current element</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="addslashes" value="<div id='function.addslashes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.addslashes.php'>addslashes</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>addslashes</span> &amp;mdash; <span class='dc-title'>Quote string with slashes</span></p> </div> <a name='function.addslashes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>addslashes</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a string with backslashes before characters that need to be quoted in database queries etc. These characters are single quote (<i>&amp;#039;</i>), double quote (<i>&amp;quot;</i>), backslash (<i>\</i>) and NUL (the <b><tt class='constant'>NULL</tt></b> byte). </p> <p class='para'> An example use of <b>addslashes()</b> is when you&amp;#039;re entering data into a database. For example, to insert the name <i>O&amp;#039;reilly</i> into a database, you will need to escape it. It&amp;#039;s highly recommeneded to use DBMS specific escape function (e.g. <a href='http://www.php.net/manual/en/mysqli.real-escape-string.php' class='function'>mysqli_real_escape_string()</a> for MySQL or <a href='http://www.php.net/manual/en/function.pg-escape-string.php' class='function'>pg_escape_string()</a> for PostgreSQL), but if the DBMS you&amp;#039;re using does&amp;#039;t have an escape function and the DBMS uses <i>\</i> to escape special chars, you can use this function. This would only be to get the data into the database, the extra <i>\</i> will not be inserted. Having the PHP directive <a href='http://www.php.net/manual/en/sybase.configuration.php#ini.magic-quotes-sybase' class='link'> magic_quotes_sybase</a> set to <i>on</i> will mean <i>&amp;#039;</i> is instead escaped with another <i>&amp;#039;</i>. </p> <p class='para'> The PHP directive <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'> magic_quotes_gpc</a> is <i>on</i> by default, and it essentially runs <b>addslashes()</b> on all GET, POST, and COOKIE data. Do not use <b>addslashes()</b> on strings that have already been escaped with <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'>magic_quotes_gpc</a> as you&amp;#039;ll then do double escaping. The function <a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function'>get_magic_quotes_gpc()</a> may come in handy for checking this. </p> </div> <a name='function.addslashes.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be escaped. </p> </dd> </dl> <p> </p> </div> <a name='function.addslashes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the escaped string. </p> </div> <a name='function.addslashes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 An <b>addslashes()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Is&amp;nbsp;your&amp;nbsp;name&amp;nbsp;O'reilly?'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;Is&amp;nbsp;your&amp;nbsp;name&amp;nbsp;O\'reilly?<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>addslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.addslashes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stripcslashes.php' class='function' rel='rdfs-seeAlso'>stripcslashes()</a> - Un-quote string quoted with addcslashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripslashes.php' class='function' rel='rdfs-seeAlso'>stripslashes()</a> - Un-quotes a quoted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.addcslashes.php' class='function' rel='rdfs-seeAlso'>addcslashes()</a> - Quote string with slashes in a C style</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.quotemeta.php' class='function' rel='rdfs-seeAlso'>quotemeta()</a> - Quote meta characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_gpc()</a> - Gets the current configuration setting of magic quotes gpc</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="addcslashes" value="<div id='function.addcslashes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.addcslashes.php'>addcslashes</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>addcslashes</span> &amp;mdash; <span class='dc-title'>Quote string with slashes in a C style</span></p> </div> <a name='function.addcslashes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>addcslashes</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$charlist</tt></span> )</div> <p class='para rdfs-comment'> Returns a string with backslashes before characters that are listed in <i><tt class='parameter'>charlist</tt></i> parameter. </p> </div> <a name='function.addcslashes.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be escaped. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>charlist</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A list of characters to be escaped. If <i><tt class='parameter'>charlist</tt></i> contains characters <i>\n</i>, <i>\r</i> etc., they are converted in C-like style, while other non-alphanumeric characters with ASCII codes lower than 32 and higher than 126 converted to octal representation. </p> <p class='para'> When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>addcslashes</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo[&amp;nbsp;]'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'A..z'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;output:&amp;nbsp;&amp;nbsp;\f\o\o\[&amp;nbsp;\]<br />//&amp;nbsp;All&amp;nbsp;upper&amp;nbsp;and&amp;nbsp;lower-case&amp;nbsp;letters&amp;nbsp;will&amp;nbsp;be&amp;nbsp;escaped<br />//&amp;nbsp;...&amp;nbsp;but&amp;nbsp;so&amp;nbsp;will&amp;nbsp;the&amp;nbsp;[\]^_`<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> Also, if the first character in a range has a higher ASCII value than the second character in the range, no range will be constructed. Only the start, end and period characters will be escaped. Use the <a href='http://www.php.net/manual/en/function.ord.php' class='function'>ord()</a> function to find the ASCII value for a character. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>addcslashes</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'zoo['.']'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'z..A'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;output:&amp;nbsp;&amp;nbsp;\zoo['\.']<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v. In PHP \0 (NULL), \r (carriage return), \n (newline), \f (form feed), \v (vertical tab) and \t (tab) are predefined escape sequences, while in C all of these are predefined escape sequences. </p> </dd> </dl> <p> </p> </div> <a name='function.addcslashes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the escaped string. </p> </div> <a name='function.addcslashes.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.5</td> <td align='left'> The escape sequences \v and \f were added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.addcslashes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> <i><tt class='parameter'>charlist</tt></i> like &amp;quot;\0..\37&amp;quot;, which would escape all characters with ASCII code between 0 and 31. </p><div class='example'> <p><b>Example #1 <b>addcslashes()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$escaped&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>addcslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$not_escaped</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\0..\37!@\177..\377'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.addcslashes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stripcslashes.php' class='function' rel='rdfs-seeAlso'>stripcslashes()</a> - Un-quote string quoted with addcslashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripslashes.php' class='function' rel='rdfs-seeAlso'>stripslashes()</a> - Un-quotes a quoted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.addslashes.php' class='function' rel='rdfs-seeAlso'>addslashes()</a> - Quote string with slashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.quotemeta.php' class='function' rel='rdfs-seeAlso'>quotemeta()</a> - Quote meta characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="acos" value="<div id='function.acos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.acos.php'>acos</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>acos</span> &amp;mdash; <span class='dc-title'>Arc cosine</span></p> </div> <a name='function.acos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>acos</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the arc cosine of <i><tt class='parameter'>arg</tt></i> in radians. <b>acos()</b> is the complementary function of <a href='http://www.php.net/manual/en/function.cos.php' class='function'>cos()</a>, which means that <i>a==cos(acos(a))</i> for every value of a that is within <b>acos()</b>&amp;#039; range. </p> </div> <a name='function.acos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.acos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The arc cosine of <i><tt class='parameter'>arg</tt></i> in radians. </p> </div> <a name='function.acos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.cos.php' class='function' rel='rdfs-seeAlso'>cos()</a> - Cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.acosh.php' class='function' rel='rdfs-seeAlso'>acosh()</a> - Inverse hyperbolic cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.asin.php' class='function' rel='rdfs-seeAlso'>asin()</a> - Arc sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.atan.php' class='function' rel='rdfs-seeAlso'>atan()</a> - Arc tangent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="abs" value="<div id='function.abs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.abs.php'>abs</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>abs</span> &amp;mdash; <span class='dc-title'>Absolute value</span></p> </div> <a name='function.abs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>abs</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> Returns the absolute value of <i><tt class='parameter'>number</tt></i> . </p> </div> <a name='function.abs.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The numeric value to process </p> </dd> </dl> <p> </p> </div> <a name='function.abs.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The absolute value of <i><tt class='parameter'>number</tt></i> . If the argument <i><tt class='parameter'>number</tt></i> is of type <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, the return type is also <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, otherwise it is <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> (as <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> usually has a bigger value range than <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>). </p> </div> <a name='function.abs.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>abs()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$abs&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>abs</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>4.2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$abs&amp;nbsp;=&amp;nbsp;4.2;&amp;nbsp;(double/float)<br /></span><span style='color: #0000BB'>$abs2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>abs</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$abs2&amp;nbsp;=&amp;nbsp;5;&amp;nbsp;(integer)<br /></span><span style='color: #0000BB'>$abs3&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>abs</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$abs3&amp;nbsp;=&amp;nbsp;5;&amp;nbsp;(integer)<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
</strings>
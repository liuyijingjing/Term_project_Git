<strings>
<string id="RuntimeException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.runtimeexception.php'>The RuntimeException class</a></h1> <div class='partintro'> <div id='runtimeexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown if an error which can only be found on runtime occurs </p> </div> <div id='runtimeexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RuntimeException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RuntimeException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rtrim" value="<div id='function.rtrim' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rtrim.php'>rtrim</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rtrim</span> &amp;mdash; <span class='dc-title'>Strip whitespace (or other characters) from the end of a string</span></p> </div> <a name='function.rtrim.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>rtrim</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$charlist</tt></span> ] )</div> <p class='para rdfs-comment'> This function returns a string with whitespace stripped from the end of <i><tt class='parameter'>str</tt></i> . </p> <p class='para'> Without the second parameter, <b>rtrim()</b> will strip these characters: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot; &amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>32</i> (<i>0x20</i>)), an ordinary space. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\t&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>9</i> (<i>0x09</i>)), a tab. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\n&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>10</i> (<i>0x0A</i>)), a new line (line feed). </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\r&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>13</i> (<i>0x0D</i>)), a carriage return. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\0&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>0</i> (<i>0x00</i>)), the <i>NUL</i>-byte. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\x0B&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>11</i> (<i>0x0B</i>)), a vertical tab. </span> </li> </ul><p> </p> </div> <a name='function.rtrim.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>charlist</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can also specify the characters you want to strip, by means of the <i><tt class='parameter'>charlist</tt></i> parameter. Simply list all characters that you want to be stripped. With <i>..</i> you can specify a range of characters. </p> </dd> </dl> <p> </p> </div> <a name='function.rtrim.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified string. </p> </div> <a name='function.rtrim.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> The <i><tt class='parameter'>charlist</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.rtrim.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Usage example of <b>rtrim()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\t\tThese&amp;nbsp;are&amp;nbsp;a&amp;nbsp;few&amp;nbsp;words&amp;nbsp;:)&amp;nbsp;...&amp;nbsp;&amp;nbsp;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$binary&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\x09Example&amp;nbsp;string\x0A'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$hello&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$binary</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$hello</span><span style='color: #007700'>);<br /><br />print&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>rtrim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>rtrim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;\t.'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>rtrim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$hello</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Hdle'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;trim&amp;nbsp;the&amp;nbsp;ASCII&amp;nbsp;control&amp;nbsp;characters&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;$binary<br />//&amp;nbsp;(from&amp;nbsp;0&amp;nbsp;to&amp;nbsp;31&amp;nbsp;inclusive)<br /></span><span style='color: #0000BB'>$clean&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>rtrim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$binary</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\x00..\x1F'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$clean</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(32) &amp;quot; These are a few words :) ... &amp;quot; string(16) &amp;quot; Example string &amp;quot; string(11) &amp;quot;Hello World&amp;quot; string(30) &amp;quot; These are a few words :) ...&amp;quot; string(26) &amp;quot; These are a few words :)&amp;quot; string(9) &amp;quot;Hello Wor&amp;quot; string(15) &amp;quot; Example string&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='function.rtrim.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.trim.php' class='function' rel='rdfs-seeAlso'>trim()</a> - Strip whitespace (or other characters) from the beginning and end of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.ltrim.php' class='function' rel='rdfs-seeAlso'>ltrim()</a> - Strip whitespace (or other characters) from the beginning of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rsort" value="<div id='function.rsort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rsort.php'>rsort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rsort</span> &amp;mdash; <span class='dc-title'>Sort an array in reverse order</span></p> </div> <a name='function.rsort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>rsort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sort_flags</tt><span class='initializer'> = SORT_REGULAR</span></span> ] )</div> <p class='para rdfs-comment'> This function sorts an array in reverse order (highest to lowest). </p> </div> <a name='function.rsort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sort_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You may modify the behavior of the sort using the optional parameter <i><tt class='parameter'>sort_flags</tt></i> , for details see <a href='http://www.php.net/manual/en/function.sort.php' class='function'>sort()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.rsort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.rsort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rsort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>rsort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 = orange 1 = lemon 2 = banana 3 = apple </pre></div> </div> <div class='example-contents para'><p> The fruits have been sorted in reverse alphabetical order. </p></div> </div><p> </p> </div> <a name='function.rsort.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function assigns new keys to the elements in <i><tt class='parameter'>array</tt></i> . It will remove any existing keys that may have been assigned, rather than just reordering the keys.</span></p></blockquote> </div> <a name='function.rsort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.arsort.php' class='function' rel='rdfs-seeAlso'>arsort()</a> - Sort an array in reverse order and maintain index association</li> <li class='member'><a href='http://www.php.net/manual/en/function.krsort.php' class='function' rel='rdfs-seeAlso'>krsort()</a> - Sort an array by key in reverse order</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="round" value="<div id='function.round' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.round.php'>round</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>round</span> &amp;mdash; <span class='dc-title'>Rounds a float</span></p> </div> <a name='function.round.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>round</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$val</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$precision</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = PHP_ROUND_HALF_UP</span></span> ]] )</div> <p class='para rdfs-comment'> Returns the rounded value of <i><tt class='parameter'>val</tt></i> to specified <i><tt class='parameter'>precision</tt></i> (number of digits after the decimal point). <i><tt class='parameter'>precision</tt></i> can also be negative or zero (default). </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'> PHP doesn&amp;#039;t handle strings like <i>&amp;quot;12,300.2&amp;quot;</i> correctly by default. See <a href='http://www.php.net/manual/en/language.types.string.php#language.types.string.conversion' class='link'>converting from strings</a>. </span> </p></blockquote><p> </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'> The <i><tt class='parameter'>precision</tt></i> parameter was introduced in PHP 4. </span> </p></blockquote><p> </p> </div> <a name='function.round.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>val</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to round </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>precision</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional number of decimal digits to round to, defaults to 0 </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of <b><tt class='constant'>PHP_ROUND_HALF_UP</tt></b>, <b><tt class='constant'>PHP_ROUND_HALF_DOWN</tt></b>, <b><tt class='constant'>PHP_ROUND_HALF_EVEN</tt></b>, or <b><tt class='constant'>PHP_ROUND_HALF_ODD</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.round.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The rounded value </p> </div> <a name='function.round.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>round()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3.4</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;3<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3.5</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;4<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3.6</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;4<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3.6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;4<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1.95583</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1.96<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1241757</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1242000<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5.045</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;5.05<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>round</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5.055</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;5.06<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.round.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> The <i><tt class='parameter'>mode</tt></i> parameter was introduced. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.round.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ceil.php' class='function' rel='rdfs-seeAlso'>ceil()</a> - Round fractions up</li> <li class='member'><a href='http://www.php.net/manual/en/function.floor.php' class='function' rel='rdfs-seeAlso'>floor()</a> - Round fractions down</li> <li class='member'><a href='http://www.php.net/manual/en/function.number-format.php' class='function' rel='rdfs-seeAlso'>number_format()</a> - Format a number with grouped thousands</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rmdir" value="<div id='function.rmdir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rmdir.php'>rmdir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rmdir</span> &amp;mdash; <span class='dc-title'>Removes directory</span></p> </div> <a name='function.rmdir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>rmdir</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dirname</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ] )</div> <p class='para rdfs-comment'> Attempts to remove the directory named by <i><tt class='parameter'>dirname</tt></i> . The directory must be empty, and the relevant permissions must permit this. </p> </div> <a name='function.rmdir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dirname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the directory. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.rmdir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.rmdir.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> As of PHP 5.0.0 <b>rmdir()</b> can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <b>rmdir()</b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.rmdir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rmdir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!</span><span style='color: #0000BB'>is_dir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'examples'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>mkdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'examples'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>rmdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'examples'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.rmdir.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</span></p></blockquote> </div> <a name='function.rmdir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-dir.php' class='function' rel='rdfs-seeAlso'>is_dir()</a> - Tells whether the filename is a directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.mkdir.php' class='function' rel='rdfs-seeAlso'>mkdir()</a> - Makes directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.unlink.php' class='function' rel='rdfs-seeAlso'>unlink()</a> - Deletes a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rewinddir" value="<div id='function.rewinddir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rewinddir.php'>rewinddir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rewinddir</span> &amp;mdash; <span class='dc-title'>Rewind directory handle</span></p> </div> <a name='function.rewinddir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>rewinddir</b></span> ([ <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dir_handle</tt></span> ] )</div> <p class='para rdfs-comment'> Resets the directory stream indicated by <i><tt class='parameter'>dir_handle</tt></i> to the beginning of the directory. </p> </div> <a name='function.rewinddir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dir_handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory handle <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> previously opened with <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a>. If the directory handle is not specified, the last link opened by <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a> is assumed. </p> </dd> </dl> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rewind" value="<div id='function.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rewind.php'>rewind</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rewind</span> &amp;mdash; <span class='dc-title'>Rewind the position of a file pointer</span></p> </div> <a name='function.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>rewind</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Sets the file position indicator for <i><tt class='parameter'>handle</tt></i> to the beginning of the file stream. </p> <blockquote><p><b class='note'>Note</b>: If you have opened the file in append (&amp;quot;a&amp;quot; or &amp;quot;a+&amp;quot;) mode, any data you write to the file will always be appended, regardless of the file position. <br /> </p></blockquote> </div> <a name='function.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer must be valid, and must point to a file successfully opened by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rewind()</b> overwriting example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'output.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r+'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Really&amp;nbsp;long&amp;nbsp;sentence.'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'output.txt'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Foolly long sentence. </pre></div> </div> </div><p> </p> </div> <a name='function.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fseek.php' class='function' rel='rdfs-seeAlso'>fseek()</a> - Seeks on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ftell.php' class='function' rel='rdfs-seeAlso'>ftell()</a> - Returns the current position of the file read/write pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="restore_include_path" value="<div id='function.restore-include-path' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.restore-include-path.php'>restore_include_path</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>restore_include_path</span> &amp;mdash; <span class='dc-title'>Restores the value of the include_path configuration option</span></p> </div> <a name='function.restore-include-path.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>restore_include_path</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Restores the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> configuration option back to its original master value as set in <var class='filename'>php.ini</var> </p> </div> <a name='function.restore-include-path.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.restore-include-path.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>restore_include_path()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>get_include_path</span><span style='color: #007700'>();&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;.:/usr/local/lib/php<br /><br /></span><span style='color: #0000BB'>set_include_path</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/inc'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>get_include_path</span><span style='color: #007700'>();&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;/inc<br /><br />//&amp;nbsp;Works&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #0000BB'>restore_include_path</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;in&amp;nbsp;all&amp;nbsp;PHP&amp;nbsp;versions<br /></span><span style='color: #0000BB'>ini_restore</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'include_path'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>get_include_path</span><span style='color: #007700'>();&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;.:/usr/local/lib/php<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.restore-include-path.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ini-restore.php' class='function' rel='rdfs-seeAlso'>ini_restore()</a> - Restores the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-include-path.php' class='function' rel='rdfs-seeAlso'>get_include_path()</a> - Gets the current include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-include-path.php' class='function' rel='rdfs-seeAlso'>set_include_path()</a> - Sets the include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="restore_exception_handler" value="<div id='function.restore-exception-handler' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.restore-exception-handler.php'>restore_exception_handler</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>restore_exception_handler</span> &amp;mdash; <span class='dc-title'> Restores the previously defined exception handler function </span></p> </div> <a name='function.restore-exception-handler.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>restore_exception_handler</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Used after changing the exception handler function using <a href='http://www.php.net/manual/en/function.set-exception-handler.php' class='function'>set_exception_handler()</a>, to revert to the previous exception handler (which could be the built-in or a user defined function). </p> </div> <a name='function.restore-exception-handler.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function always returns <b><tt class='constant'>TRUE</tt></b>. </p> </div> <a name='function.restore-exception-handler.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>restore_exception_handler()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>exception_handler_1</span><span style='color: #007700'>(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'['&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>__FUNCTION__&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>']&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>exception_handler_2</span><span style='color: #007700'>(</span><span style='color: #0000BB'>Exception&amp;nbsp;$e</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'['&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>__FUNCTION__&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>']&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>set_exception_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'exception_handler_1'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>set_exception_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'exception_handler_2'</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>restore_exception_handler</span><span style='color: #007700'>();<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'This&amp;nbsp;triggers&amp;nbsp;the&amp;nbsp;first&amp;nbsp;exception&amp;nbsp;handler...'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> [exception_handler_1] This triggers the first exception handler... </pre></div> </div> </div><p> </p> </div> <a name='function.restore-exception-handler.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.set-exception-handler.php' class='function' rel='rdfs-seeAlso'>set_exception_handler()</a> - Sets a user-defined exception handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function' rel='rdfs-seeAlso'>set_error_handler()</a> - Sets a user-defined error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-error-handler.php' class='function' rel='rdfs-seeAlso'>restore_error_handler()</a> - Restores the previous error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.error-reporting.php' class='function' rel='rdfs-seeAlso'>error_reporting()</a> - Sets which PHP errors are reported</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="restore_error_handler" value="<div id='function.restore-error-handler' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.restore-error-handler.php'>restore_error_handler</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>restore_error_handler</span> &amp;mdash; <span class='dc-title'>Restores the previous error handler function</span></p> </div> <a name='function.restore-error-handler.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>restore_error_handler</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Used after changing the error handler function using <a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function'>set_error_handler()</a>, to revert to the previous error handler (which could be the built-in or a user defined function). </p> </div> <a name='function.restore-error-handler.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function always returns <b><tt class='constant'>TRUE</tt></b>. </p> </div> <a name='function.restore-error-handler.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>restore_error_handler()</b> example</b></p> <div class='example-contents para'><p> Decide if <a href='http://www.php.net/manual/en/function.unserialize.php' class='function'>unserialize()</a> caused an error, then restore the original error handler. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>unserialize_handler</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Invalid&amp;nbsp;serialized&amp;nbsp;value.\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$serialized&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>set_error_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'unserialize_handler'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$original&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$serialized</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>restore_error_handler</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Invalid serialized value. </pre></div> </div> </div><p> </p> </div> <a name='function.restore-error-handler.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Calling <b>restore_error_handler()</b> from the <i>error_handler</i> function is ignored. <br /> </p></blockquote> </div> <a name='function.restore-error-handler.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.error-reporting.php' class='function' rel='rdfs-seeAlso'>error_reporting()</a> - Sets which PHP errors are reported</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function' rel='rdfs-seeAlso'>set_error_handler()</a> - Sets a user-defined error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-exception-handler.php' class='function' rel='rdfs-seeAlso'>restore_exception_handler()</a> - Restores the previously defined exception handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.trigger-error.php' class='function' rel='rdfs-seeAlso'>trigger_error()</a> - Generates a user-level error/warning/notice message</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="reset" value="<div id='function.reset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.reset.php'>reset</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>reset</span> &amp;mdash; <span class='dc-title'>Set the internal pointer of an array to its first element</span></p> </div> <a name='function.reset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>reset</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>reset()</b> rewinds <i><tt class='parameter'>array</tt></i> &amp;#039;s internal pointer to the first element and returns the value of the first array element. </p> </div> <a name='function.reset.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.reset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the value of the first array element, or <b><tt class='constant'>FALSE</tt></b> if the array is empty. </p> </div> <a name='function.reset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>reset()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'step&amp;nbsp;one'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'step&amp;nbsp;two'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'step&amp;nbsp;three'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'step&amp;nbsp;four'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;by&amp;nbsp;default,&amp;nbsp;the&amp;nbsp;pointer&amp;nbsp;is&amp;nbsp;on&amp;nbsp;the&amp;nbsp;first&amp;nbsp;element<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;'step&amp;nbsp;one'<br /><br />//&amp;nbsp;skip&amp;nbsp;two&amp;nbsp;steps<br /></span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;'step&amp;nbsp;three'<br /><br />//&amp;nbsp;reset&amp;nbsp;pointer,&amp;nbsp;start&amp;nbsp;again&amp;nbsp;on&amp;nbsp;step&amp;nbsp;one<br /></span><span style='color: #0000BB'>reset</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;'step&amp;nbsp;one'<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.reset.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.current.php' class='function' rel='rdfs-seeAlso'>current()</a> - Return the current element in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> <li class='member'><a href='http://www.php.net/manual/en/function.end.php' class='function' rel='rdfs-seeAlso'>end()</a> - Set the internal pointer of an array to its last element</li> <li class='member'><a href='http://www.php.net/manual/en/function.next.php' class='function' rel='rdfs-seeAlso'>next()</a> - Advance the internal array pointer of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.prev.php' class='function' rel='rdfs-seeAlso'>prev()</a> - Rewind the internal array pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rename" value="<div id='function.rename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rename.php'>rename</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rename</span> &amp;mdash; <span class='dc-title'>Renames a file or directory</span></p> </div> <a name='function.rename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>rename</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$oldname</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$newname</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ] )</div> <p class='para rdfs-comment'> Attempts to rename <i><tt class='parameter'>oldname</tt></i> to <i><tt class='parameter'>newname</tt></i> . </p> </div> <a name='function.rename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>oldname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> <blockquote><p><b class='note'>Note</b>: The old name. The wrapper used in <i><tt class='parameter'>oldname</tt></i> <em class='emphasis'>must</em> match the wrapper used in <i><tt class='parameter'>newname</tt></i> . <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>newname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.rename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.rename.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> <b>rename()</b> can now also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <b>rename()</b>. </td> </tr> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> <b>rename()</b> is now able to rename files across partitions on *nix based systems. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.rename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Example with <b>rename()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />rename</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/tmp_file.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/home/user/login/docs/my_file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.rename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.copy.php' class='function' rel='rdfs-seeAlso'>copy()</a> - Copies file</li> <li class='member'><a href='http://www.php.net/manual/en/function.unlink.php' class='function' rel='rdfs-seeAlso'>unlink()</a> - Deletes a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.move-uploaded-file.php' class='function' rel='rdfs-seeAlso'>move_uploaded_file()</a> - Moves an uploaded file to a new location</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="register_tick_function" value="<div id='function.register-tick-function' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.register-tick-function.php'>register_tick_function</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>register_tick_function</span> &amp;mdash; <span class='dc-title'>Register a function for execution on each tick</span></p> </div> <a name='function.register-tick-function.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>register_tick_function</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$function</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$arg</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='simpara'> Registers the given <i><tt class='parameter'>function</tt></i> to be executed when a <a href='http://www.php.net/manual/en/control-structures.declare.php#control-structures.declare.ticks' class='link'>tick</a> is called. </p> </div> <a name='function.register-tick-function.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function name as a string, or an array consisting of an object and a method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.register-tick-function.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.register-tick-function.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>register_tick_function()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;using&amp;nbsp;a&amp;nbsp;function&amp;nbsp;as&amp;nbsp;the&amp;nbsp;callback<br /></span><span style='color: #0000BB'>register_tick_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'my_function'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;using&amp;nbsp;an&amp;nbsp;object-&amp;gt;method<br /></span><span style='color: #0000BB'>$object&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>my_class</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>register_tick_function</span><span style='color: #007700'>(array(&amp;amp;</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'my_method'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.register-tick-function.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Ticks are now supported on threaded web server modules. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.register-tick-function.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> <b>register_tick_function()</b> should not be used with threaded web server modules with PHP 5.2 or lower. </p> </div> </div> <a name='function.register-tick-function.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/control-structures.declare.php' class='link'>declare</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.unregister-tick-function.php' class='function' rel='rdfs-seeAlso'>unregister_tick_function()</a> - De-register a function for execution on each tick</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="register_shutdown_function" value="<div id='function.register-shutdown-function' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.register-shutdown-function.php'>register_shutdown_function</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>register_shutdown_function</span> &amp;mdash; <span class='dc-title'>Register a function for execution on shutdown</span></p> </div> <a name='function.register-shutdown-function.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>register_shutdown_function</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$function</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Registers the function named by <i><tt class='parameter'>function</tt></i> to be executed when script processing is complete. </p> <p class='para'> Multiple calls to <b>register_shutdown_function()</b> can be made, and each will be called in the same order as they were registered. If you call <a href='http://www.php.net/manual/en/function.exit.php' class='function'>exit()</a> within one registered shutdown function, processing will stop completely and no other registered shutdown functions will be called. </p> </div> <a name='function.register-shutdown-function.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The shutdown function to register. </p> <p class='para'> The shutdown functions are called as the part of the request so that it&amp;#039;s possible to send the output from them. There is currently no way to process the data with output buffering functions in the shutdown function. </p> <p class='para'> Shutdown functions are called after closing all opened output buffers thus, for example, its output will not be compressed if <a href='http://www.php.net/manual/en/zlib.configuration.php#ini.zlib.output-compression' class='link'>zlib.output_compression</a> is enabled. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> It is possible to pass parameters to the shutdown function by passing additional parameters. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.register-shutdown-function.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.register-shutdown-function.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> The shutdown functions are now called as a part of the request. In earlier versions under Apache, the registered shutdown functions were called after the request has been completed (including sending any output buffers), so it was not possible to send output to the browser using <a href='http://www.php.net/manual/en/function.echo.php' class='function'>echo()</a> or <a href='http://www.php.net/manual/en/function.print.php' class='function'>print()</a>, or retrieve the contents of any output buffers using <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a>. Headers were also always already sent. </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> Added the possibility to pass parameters to the shutdown function. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.register-shutdown-function.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>register_shutdown_function()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>shutdown</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;our&amp;nbsp;shutdown&amp;nbsp;function,&amp;nbsp;in&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;here&amp;nbsp;we&amp;nbsp;can&amp;nbsp;do&amp;nbsp;any&amp;nbsp;last&amp;nbsp;operations<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;before&amp;nbsp;the&amp;nbsp;script&amp;nbsp;is&amp;nbsp;complete.<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Script&amp;nbsp;executed&amp;nbsp;with&amp;nbsp;success'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>register_shutdown_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'shutdown'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.register-shutdown-function.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Typically undefined functions cause fatal errors in PHP, but when the <i><tt class='parameter'>function</tt></i> called with <b>register_shutdown_function()</b> is undefined, an error of level <b><tt class='constant'>E_WARNING</tt></b> is generated instead. Also, for reasons internal to PHP, this error will refer to <i>Unknown</i> at line #0. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Working directory of the script can change inside the shutdown function under some web servers, e.g. Apache. <br /> </p></blockquote> </div> <a name='function.register-shutdown-function.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/ini.core.php#ini.auto-append-file' class='link'>auto_append_file</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.exit.php' class='function' rel='rdfs-seeAlso'>exit()</a> - Output a message and terminate the current script</li> <li class='member'>The section on <a href='http://www.php.net/manual/en/features.connection-handling.php' class='link'>connection handling</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::__construct" value="<div id='regexiterator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.construct.php'>RegexIterator::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::__construct</span> &amp;mdash; <span class='dc-title'>Creates a new RegexIterator.</span></p> </div> <a name='regexiterator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='methodname'><b>RegexIterator::__construct</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$regex</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> ]]] )</div> <p class='para rdfs-comment'> Creates a new regular expression iterator. </p> </div> <a name='regexiterator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The iterator to apply this regex filter to. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>regex</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The regular expression to match. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Operation mode, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function'>RegexIterator::setMode</a></span> for a list of modes. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Special flags, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function'>RegexIterator::setFlags</a></span> for a list of available flags. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preg_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The regular expression flags. These flags depend on the operation mode parameter: </p> <p class='para'> </p><table class='doctable table'> <caption><b><a href='http://www.php.net/manual/en/class.regexiterator.php' class='classname'>RegexIterator</a> preg_flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>operation mode</th> <th>available flags</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><var class='varname'>RegexIterator::ALL_MATCHES</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function'>preg_match_all()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RegexIterator::GET_MATCH</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RegexIterator::MATCH</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RegexIterator::REPLACE</var></td> <td align='left'> none. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RegexIterator::SPLIT</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-split.php' class='function'>preg_split()</a>. </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='regexiterator.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RegexIterator::__construct()</b> example</b></p> <div class='example-contents para'><p> Creates a new RegexIterator that filters all strings that start with &amp;#039;test&amp;#039;. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'test&amp;nbsp;1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'another&amp;nbsp;test'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;123'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> test 1 test 123 </pre></div> </div> </div><p> </p> </div> <a name='regexiterator.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function' rel='rdfs-seeAlso'>preg_match_all()</a> - Perform a global regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::setPregFlags" value="<div id='regexiterator.setpregflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.setpregflags.php'>RegexIterator::setPregFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::setPregFlags</span> &amp;mdash; <span class='dc-title'>Sets the regular expression flags.</span></p> </div> <a name='regexiterator.setpregflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RegexIterator::setPregFlags</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> )</div> <p class='para rdfs-comment'> Sets the regular expression flags. </p> </div> <a name='regexiterator.setpregflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preg_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The regular expression flags. See <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.construct.php' class='function'>RegexIterator::__construct</a></span> for an overview of available flags. </p> </dd> </dl> <p> </p> </div> <a name='regexiterator.setpregflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='regexiterator.setpregflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RegexIterator::setPregFlags()</b> example</b></p> <div class='example-contents para'><p> Creates a new RegexIterator that filters all entries with where the array key starts with &amp;#039;test&amp;#039;. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'test&amp;nbsp;1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'another&amp;nbsp;test'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;123'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$test</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>GET_MATCH</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$regexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setPregFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PREG_OFFSET_CAPTURE</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [0]=&amp;gt; array(2) { [0]=&amp;gt; string(4) &amp;quot;test&amp;quot; [1]=&amp;gt; int(0) } } array(1) { [0]=&amp;gt; array(2) { [0]=&amp;gt; string(4) &amp;quot;test&amp;quot; [1]=&amp;gt; int(0) } } </pre></div> </div> </div><p> </p> </div> <a name='regexiterator.setpregflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.getpregflags.php' class='function' rel='rdfs-seeAlso'>RegexIterator::getPregFlags()</a> - Returns the regular expression flags.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::setMode" value="<div id='regexiterator.setmode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.setmode.php'>RegexIterator::setMode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::setMode</span> &amp;mdash; <span class='dc-title'>Sets the operation mode.</span></p> </div> <a name='regexiterator.setmode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RegexIterator::setMode</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <p class='para rdfs-comment'> Sets the operation mode. </p> </div> <a name='regexiterator.setmode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The operation mode. </p> <p class='para'> The available modes are listed below. The actual meanings of these modes are described in the <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants' class='link'>predefined constants</a>. </p><table class='doctable table'> <caption><b><a href='http://www.php.net/manual/en/class.regexiterator.php' class='classname'>RegexIterator</a> modes</b></caption> <thead valign='middle'> <tr valign='middle'> <th>value</th> <th>constant</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.match' class='link'>RegexIterator::MATCH</a> </td> </tr> <tr valign='middle'> <td align='left'>1</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.get-match' class='link'>RegexIterator::GET_MATCH</a> </td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.all-matches' class='link'>RegexIterator::ALL_MATCHES</a> </td> </tr> <tr valign='middle'> <td align='left'>3</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.split' class='link'>RegexIterator::SPLIT</a> </td> </tr> <tr valign='middle'> <td align='left'>4</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.replace' class='link'>RegexIterator::REPLACE</a> </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='regexiterator.setmode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='regexiterator.setmode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RegexIterator::setMode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'str1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;str2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'another&amp;nbsp;test'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'str3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;123'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$test</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Filter&amp;nbsp;everything&amp;nbsp;that&amp;nbsp;starts&amp;nbsp;with&amp;nbsp;'test&amp;nbsp;'&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;numbers.<br /></span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test&amp;nbsp;(\d+)/'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Operation&amp;nbsp;mode:&amp;nbsp;Replace&amp;nbsp;actual&amp;nbsp;value&amp;nbsp;with&amp;nbsp;the&amp;nbsp;matches<br /></span><span style='color: #0000BB'>$regexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setMode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>GET_MATCH</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;out&amp;nbsp;the&amp;nbsp;matched&amp;nbsp;number(s)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> str1 =&amp;gt; 1 str3 =&amp;gt; 123 </pre></div> </div> </div><p> </p> </div> <a name='regexiterator.setmode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.getmode.php' class='function' rel='rdfs-seeAlso'>RegexIterator::getMode()</a> - Returns operation mode.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::setFlags" value="<div id='regexiterator.setflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.setflags.php'>RegexIterator::setFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::setFlags</span> &amp;mdash; <span class='dc-title'>Sets the special flags.</span></p> </div> <a name='regexiterator.setflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RegexIterator::setFlags</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <p class='para rdfs-comment'> Sets the special flags. </p> </div> <a name='regexiterator.setflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The special flags. It takes a bitmask of class constants. </p> <p class='para'> The available flags are listed below. The actual meanings of these flags are described in the <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants' class='link'>predefined constants</a>. </p><table class='doctable table'> <caption><b><a href='http://www.php.net/manual/en/class.regexiterator.php' class='classname'>RegexIterator</a> special flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>value</th> <th>constant</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>1</td> <td align='left'> <a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.use-key' class='link'>RegexIterator::USE_KEY</a> </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='regexiterator.setflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='regexiterator.setflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RegexIterator::setFlags()</b> example</b></p> <div class='example-contents para'><p> Creates a new RegexIterator that filters all entries with where the array key starts with &amp;#039;test&amp;#039;. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$test&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'str1'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'teststr2'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'another&amp;nbsp;test'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'str3'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'test&amp;nbsp;123'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$arrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$test</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$regexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>RegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>USE_KEY</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$regexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;=&amp;gt;&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> teststr2 =&amp;gt; another test </pre></div> </div> </div><p> </p> </div> <a name='regexiterator.setflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.getflags.php' class='function' rel='rdfs-seeAlso'>RegexIterator::getFlags()</a> - Returns the special flags.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::getPregFlags" value="<div id='regexiterator.getpregflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.getpregflags.php'>RegexIterator::getPregFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::getPregFlags</span> &amp;mdash; <span class='dc-title'>Returns the regular expression flags.</span></p> </div> <a name='regexiterator.getpregflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>RegexIterator::getPregFlags</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the special flags, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.construct.php' class='function'>RegexIterator::__construct</a></span> for the list of flags. </p> </div> <a name='regexiterator.getpregflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the regular expression flags. </p> </div> <a name='regexiterator.getpregflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.setpregflags.php' class='function' rel='rdfs-seeAlso'>RegexIterator::setPregFlags()</a> - Sets the regular expression flags.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::getMode" value="<div id='regexiterator.getmode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.getmode.php'>RegexIterator::getMode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::getMode</span> &amp;mdash; <span class='dc-title'>Returns operation mode.</span></p> </div> <a name='regexiterator.getmode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>RegexIterator::getMode</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the operation mode, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function'>RegexIterator::setMode</a></span> for the list of operation modes. </p> </div> <a name='regexiterator.getmode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the operation mode. </p> </div> <a name='regexiterator.getmode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function' rel='rdfs-seeAlso'>RegexIterator::setMode()</a> - Sets the operation mode.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator::getFlags" value="<div id='regexiterator.getflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/regexiterator.getflags.php'>RegexIterator::getFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RegexIterator::getFlags</span> &amp;mdash; <span class='dc-title'>Returns the special flags.</span></p> </div> <a name='regexiterator.getflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>RegexIterator::getFlags</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the special flags, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function'>RegexIterator::setFlags</a></span> for the list of special flags. </p> </div> <a name='regexiterator.getflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the special flags. </p> </div> <a name='regexiterator.getflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function' rel='rdfs-seeAlso'>RegexIterator::setFlags()</a> - Sets the special flags.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RegexIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.regexiterator.php'>The RegexIterator class</a></h1> <div class='partintro'> <div id='regexiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This iterator can be used to filter another iterator via a regular expression. </p> </div> <div id='regexiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RegexIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RegexIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.filteriterator.php' class='classname'>FilterIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.match'>MATCH</a></var> <span class='initializer'> = 0</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.get-match'>GET_MATCH</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.all-matches'>ALL_MATCHES</a></var> <span class='initializer'> = 2</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.split'>SPLIT</a></var> <span class='initializer'> = 3</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.replace'>REPLACE</a></var> <span class='initializer'> = 4</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.regexiterator.php#regexiterator.constants.use-key'>USE_KEY</a></var> <span class='initializer'> = 1</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$regex</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getflags.php' class='function'>getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getmode.php' class='function'>getMode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getpregflags.php' class='function'>getPregFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function'>setFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function'>setMode</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setpregflags.php' class='function'>setPregFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.accept.php' class='function'>FilterIterator::accept</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function'>FilterIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>Iterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.getinneriterator.php' class='function'>FilterIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.key.php' class='function'>FilterIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function'>FilterIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.rewind.php' class='function'>FilterIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.valid.php' class='function'>FilterIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='regexiterator.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='regexiterator.constants.operation-modes' class='section'> <h2 class='title'>RegexIterator operation modes</h2> <dl> <dt id='regexiterator.constants.all-matches' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::ALL_MATCHES</tt></b></span> </dt><dd class='listitem'> <p class='para'> Return all matches for the current entry (see <a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function'>preg_match_all()</a>). </p> </dd> <dt id='regexiterator.constants.get-match' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::GET_MATCH</tt></b></span> </dt><dd class='listitem'> <p class='para'> Return the first match for the current entry (see <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>). </p> </dd> <dt id='regexiterator.constants.match' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::MATCH</tt></b></span> </dt><dd class='listitem'> <p class='para'> Only execute match (filter) for the current entry (see <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>). </p> </dd> <dt id='regexiterator.constants.replace' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::REPLACE</tt></b></span> </dt><dd class='listitem'> <p class='para'> Replace the current entry or the current key (see <a href='http://www.php.net/manual/en/function.preg-replace.php' class='function'>preg_replace()</a>). </p> </dd> <dt id='regexiterator.constants.split' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::SPLIT</tt></b></span> </dt><dd class='listitem'> <p class='para'> Returns the split values for the current entry (see <a href='http://www.php.net/manual/en/function.preg-split.php' class='function'>preg_split()</a>). </p> </dd> </dl> </div> <div id='regexiterator.constants.flags' class='section'> <h2 class='title'>RegexIterator Flags</h2> <dl> <dt id='regexiterator.constants.use-key' class='varlistentry'> <span class='term'><b><tt class='constant'>RegexIterator::USE_KEY</tt></b></span> </dt><dd class='listitem'> <p class='para'> Special flag: Match the entry key instead of the entry value. </p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/regexiterator.construct.php'>RegexIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Creates a new RegexIterator.</li><li><a href='http://www.php.net/manual/en/regexiterator.getflags.php'>RegexIterator::getFlags</a> &amp;acirc;&amp;#128;&amp;#148; Returns the special flags.</li><li><a href='http://www.php.net/manual/en/regexiterator.getmode.php'>RegexIterator::getMode</a> &amp;acirc;&amp;#128;&amp;#148; Returns operation mode.</li><li><a href='http://www.php.net/manual/en/regexiterator.getpregflags.php'>RegexIterator::getPregFlags</a> &amp;acirc;&amp;#128;&amp;#148; Returns the regular expression flags.</li><li><a href='http://www.php.net/manual/en/regexiterator.setflags.php'>RegexIterator::setFlags</a> &amp;acirc;&amp;#128;&amp;#148; Sets the special flags.</li><li><a href='http://www.php.net/manual/en/regexiterator.setmode.php'>RegexIterator::setMode</a> &amp;acirc;&amp;#128;&amp;#148; Sets the operation mode.</li><li><a href='http://www.php.net/manual/en/regexiterator.setpregflags.php'>RegexIterator::setPregFlags</a> &amp;acirc;&amp;#128;&amp;#148; Sets the regular expression flags.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflector::__toString" value="<div id='reflector.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflector.tostring.php'>Reflector::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>Reflector::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflector.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Reflector::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflector.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflector.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflector.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.export.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::export</a> - Export</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflector::export" value="<div id='reflector.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflector.export.php'>Reflector::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>Reflector::export</span> &amp;mdash; <span class='dc-title'>Exports</span></p> </div> <a name='reflector.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>Reflector::export</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Exports. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflector.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflector.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflector.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>Reflection::__toString</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflector" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflector.php'>The Reflector interface</a></h1> <div class='partintro'> <div id='reflector.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> <b class='classname'>Reflector</b> is an interface implemented by all exportable Reflection classes. </p> </div> <div id='reflector.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Reflector</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Reflector</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflector.export.php' class='function'>export</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflector.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflector.export.php'>Reflector::export</a> &amp;acirc;&amp;#128;&amp;#148; Exports</li><li><a href='http://www.php.net/manual/en/reflector.tostring.php'>Reflector::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::__toString" value="<div id='reflectionproperty.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.tostring.php'>ReflectionProperty::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionproperty.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionProperty::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionproperty.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionProperty::</b></span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::__construct" value="<div id='reflectionproperty.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.construct.php'>ReflectionProperty::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::__construct</span> &amp;mdash; <span class='dc-title'>Construct a ReflectionProperty object</span></p> </div> <a name='reflectionproperty.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionProperty::__construct</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name, that contains the property. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the property being reflected. </p> </dd> </dl> <p> </p> </div> <a name='reflectionproperty.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionproperty.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Trying to get or set private or protected class property&amp;#039;s values will result in an exception being thrown. </p> </div> <a name='reflectionproperty.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionProperty::__construct</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>String<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$length&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;ReflectionProperty&amp;nbsp;class<br /></span><span style='color: #0000BB'>$prop&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'String'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'length'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;basic&amp;nbsp;information<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'===&amp;gt;&amp;nbsp;The%s%s%s%s&amp;nbsp;property&amp;nbsp;'%s'&amp;nbsp;(which&amp;nbsp;was&amp;nbsp;%s)\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;having&amp;nbsp;the&amp;nbsp;modifiers&amp;nbsp;%s\n'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isPublic</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;public'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isPrivate</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;private'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isProtected</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;protected'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isStatic</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;static'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDefault</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'declared&amp;nbsp;at&amp;nbsp;compile-time'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'created&amp;nbsp;at&amp;nbsp;run-time'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>Reflection</span><span style='color: #007700'>::</span><span style='color: #0000BB'>getModifierNames</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)<br />);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;String<br /></span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>String</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;current&amp;nbsp;value<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Value&amp;nbsp;is:&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Change&amp;nbsp;value<br /></span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Setting&amp;nbsp;value&amp;nbsp;to&amp;nbsp;10,&amp;nbsp;new&amp;nbsp;value&amp;nbsp;is:&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Dump&amp;nbsp;object<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> ===&amp;gt; The public property &amp;#039;length&amp;#039; (which was declared at compile-time) having the modifiers array ( 0 =&amp;gt; &amp;#039;public&amp;#039;, ) ---&amp;gt; Value is: int(5) ---&amp;gt; Setting value to 10, new value is: int(10) object(String)#2 (1) { [&amp;quot;length&amp;quot;]=&amp;gt; int(10) } </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Getting value from private and protected properties using <a href='http://www.php.net/manual/en/class.reflectionproperty.php' class='classname'>ReflectionProperty</a> class</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$x&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$y&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$z&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Foo</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$prop&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'y'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setAccessible</span><span style='color: #007700'>(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0&amp;nbsp;*/<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;int(2)<br /><br /></span><span style='color: #0000BB'>$prop&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'z'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setAccessible</span><span style='color: #007700'>(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0&amp;nbsp;*/<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$prop</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;int(2)<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(2) int(3) </pre></div> </div> </div><p> </p> </div> <a name='reflectionproperty.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getName</a> - Gets property name</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::__clone" value="<div id='reflectionproperty.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.clone.php'>ReflectionProperty::__clone</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::__clone</span> &amp;mdash; <span class='dc-title'>Clone</span></p> </div> <a name='reflectionproperty.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionProperty::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Clones. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionproperty.clone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.export.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::export</a> - Export</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.cloning.php' class='link'>Object cloning</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::setValue" value="<div id='reflectionproperty.setvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.setvalue.php'>ReflectionProperty::setValue</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::setValue</span> &amp;mdash; <span class='dc-title'>Set property value</span></p> </div> <a name='reflectionproperty.setvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionProperty::setValue</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Sets (changes) a properties value. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.setvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The object name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new value. </p> </dd> </dl> <p> </p> </div> <a name='reflectionproperty.setvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionproperty.setvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getValue</a> - Gets value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::isStatic" value="<div id='reflectionproperty.isstatic' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.isstatic.php'>ReflectionProperty::isStatic</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::isStatic</span> &amp;mdash; <span class='dc-title'>Checks if property is static</span></p> </div> <a name='reflectionproperty.isstatic.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionProperty::isStatic</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the property is static. </p> </div> <a name='reflectionproperty.isstatic.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.isstatic.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the property is static, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='reflectionproperty.isstatic.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::isPrivate</a> - Checks if property is private</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::isPublic" value="<div id='reflectionproperty.ispublic' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.ispublic.php'>ReflectionProperty::isPublic</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::isPublic</span> &amp;mdash; <span class='dc-title'>Checks if property is public</span></p> </div> <a name='reflectionproperty.ispublic.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionProperty::isPublic</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the property is public. </p> </div> <a name='reflectionproperty.ispublic.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.ispublic.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the property is public, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='reflectionproperty.ispublic.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::isPrivate</a> - Checks if property is private</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::isProtected" value="<div id='reflectionproperty.isprotected' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.isprotected.php'>ReflectionProperty::isProtected</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::isProtected</span> &amp;mdash; <span class='dc-title'>Checks if property is protected</span></p> </div> <a name='reflectionproperty.isprotected.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionProperty::isProtected</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the property is protected. </p> </div> <a name='reflectionproperty.isprotected.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.isprotected.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the property is protected, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='reflectionproperty.isprotected.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::isPrivate</a> - Checks if property is private</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::isPrivate" value="<div id='reflectionproperty.isprivate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.isprivate.php'>ReflectionProperty::isPrivate</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::isPrivate</span> &amp;mdash; <span class='dc-title'>Checks if property is private</span></p> </div> <a name='reflectionproperty.isprivate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionProperty::isPrivate</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the property is private. </p> </div> <a name='reflectionproperty.isprivate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.isprivate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the property is private, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='reflectionproperty.isprivate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.ispublic.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::isPublic</a> - Checks if property is public</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::isDefault" value="<div id='reflectionproperty.isdefault' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.isdefault.php'>ReflectionProperty::isDefault</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::isDefault</span> &amp;mdash; <span class='dc-title'>Checks if default value </span></p> </div> <a name='reflectionproperty.isdefault.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionProperty::isDefault</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the property is the default. </p> </div> <a name='reflectionproperty.isdefault.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.isdefault.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the property was declared at compile-time, or <b><tt class='constant'>FALSE</tt></b> if it was created at run-time. </p> </div> <a name='reflectionproperty.isdefault.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getValue</a> - Gets value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::getValue" value="<div id='reflectionproperty.getvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.getvalue.php'>ReflectionProperty::getValue</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::getValue</span> &amp;mdash; <span class='dc-title'>Gets value</span></p> </div> <a name='reflectionproperty.getvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionProperty::getValue</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> ] )</div> <p class='para rdfs-comment'> Gets the properties value. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.getvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The object being reflected. </p> </dd> </dl> <p> </p> </div> <a name='reflectionproperty.getvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current value of the property. </p> </div> <a name='reflectionproperty.getvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getName</a> - Gets property name</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.setvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::setValue</a> - Set property value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::getName" value="<div id='reflectionproperty.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.getname.php'>ReflectionProperty::getName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::getName</span> &amp;mdash; <span class='dc-title'>Gets property name</span></p> </div> <a name='reflectionproperty.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionProperty::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the properties name. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The name of the reflected property. </p> </div> <a name='reflectionproperty.getname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getValue</a> - Gets value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::getModifiers" value="<div id='reflectionproperty.getmodifiers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.getmodifiers.php'>ReflectionProperty::getModifiers</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::getModifiers</span> &amp;mdash; <span class='dc-title'>Gets modifiers</span></p> </div> <a name='reflectionproperty.getmodifiers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionProperty::getModifiers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the modifiers. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.getmodifiers.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.getmodifiers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A numeric representation of the modifiers. </p> </div> <a name='reflectionproperty.getmodifiers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::isPrivate</a> - Checks if property is private</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.getmodifiernames.php' class='function' rel='rdfs-seeAlso'>Reflection::getModifierNames</a> - Gets modifier names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::getDocComment" value="<div id='reflectionproperty.getdoccomment' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.getdoccomment.php'>ReflectionProperty::getDocComment</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::getDocComment</span> &amp;mdash; <span class='dc-title'>Gets doc comment</span></p> </div> <a name='reflectionproperty.getdoccomment.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionProperty::getDocComment</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the doc comment. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.getdoccomment.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.getdoccomment.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The doc comment. </p> </div> <a name='reflectionproperty.getdoccomment.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.export.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::export</a> - Export</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::getDeclaringClass" value="<div id='reflectionproperty.getdeclaringclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.getdeclaringclass.php'>ReflectionProperty::getDeclaringClass</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::getDeclaringClass</span> &amp;mdash; <span class='dc-title'>Gets declaring class</span></p> </div> <a name='reflectionproperty.getdeclaringclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionclass.php' class='type ReflectionClass'>ReflectionClass</a></span> <span class='methodname'><b>ReflectionProperty::getDeclaringClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declaring class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.getdeclaringclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionproperty.getdeclaringclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> object. </p> </div> <a name='reflectionproperty.getdeclaringclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionProperty::getName</a> - Gets property name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty::export" value="<div id='reflectionproperty.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionproperty.export.php'>ReflectionProperty::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionProperty::export</span> &amp;mdash; <span class='dc-title'>Export</span></p> </div> <a name='reflectionproperty.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionProperty::export</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <p class='para rdfs-comment'> Exports a reflection. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionproperty.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>argument</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The property name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionproperty.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionproperty.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionProperty::toString</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionProperty" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionproperty.php'>The ReflectionProperty class</a></h1> <div class='partintro'> <div id='reflectionproperty.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionProperty</b> class reports information about a classes properties. </p> </div> <div id='reflectionproperty.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionProperty</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionProperty</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.constants.is-static'>ReflectionProperty::IS_STATIC</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.constants.is-public'>ReflectionProperty::IS_PUBLIC</a></var> <span class='initializer'> = 256</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.constants.is-protected'>ReflectionProperty::IS_PROTECTED</a></var> <span class='initializer'> = 512</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.constants.is-private'>ReflectionProperty::IS_PRIVATE</a></var> <span class='initializer'> = 1024</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.props.name'>$name</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionproperty.php#reflectionproperty.props.class'>$class</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionClass</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getdeclaringclass.php' class='function'>getDeclaringClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getdoccomment.php' class='function'>getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getmodifiers.php' class='function'>getModifiers</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.getvalue.php' class='function'>getValue</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isdefault.php' class='function'>isDefault</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php' class='function'>isPrivate</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isprotected.php' class='function'>isProtected</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.ispublic.php' class='function'>isPublic</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.isstatic.php' class='function'>isStatic</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.setaccessible.php' class='function'>setAccessible</a></span> ( <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$accessible</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.setvalue.php' class='function'>setValue</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionproperty.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionproperty.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionproperty.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> <dt id='reflectionproperty.props.class' class='varlistentry'> <span class='term'><var class='varname'>class</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> <div id='reflectionproperty.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='reflectionproperty.constants.types' class='section'> <h2 class='title'>ReflectionProperty Node Types</h2> <dl> <dt id='reflectionproperty.constants.is-static' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionProperty::IS_STATIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionproperty.constants.is-public' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionProperty::IS_PUBLIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionproperty.constants.is-protected' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionProperty::IS_PROTECTED</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionproperty.constants.is-private' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionProperty::IS_PRIVATE</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionproperty.clone.php'>ReflectionProperty::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clone</li><li><a href='http://www.php.net/manual/en/reflectionproperty.construct.php'>ReflectionProperty::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a ReflectionProperty object</li><li><a href='http://www.php.net/manual/en/reflectionproperty.export.php'>ReflectionProperty::export</a> &amp;acirc;&amp;#128;&amp;#148; Export</li><li><a href='http://www.php.net/manual/en/reflectionproperty.getdeclaringclass.php'>ReflectionProperty::getDeclaringClass</a> &amp;acirc;&amp;#128;&amp;#148; Gets declaring class</li><li><a href='http://www.php.net/manual/en/reflectionproperty.getdoccomment.php'>ReflectionProperty::getDocComment</a> &amp;acirc;&amp;#128;&amp;#148; Gets doc comment</li><li><a href='http://www.php.net/manual/en/reflectionproperty.getmodifiers.php'>ReflectionProperty::getModifiers</a> &amp;acirc;&amp;#128;&amp;#148; Gets modifiers</li><li><a href='http://www.php.net/manual/en/reflectionproperty.getname.php'>ReflectionProperty::getName</a> &amp;acirc;&amp;#128;&amp;#148; Gets property name</li><li><a href='http://www.php.net/manual/en/reflectionproperty.getvalue.php'>ReflectionProperty::getValue</a> &amp;acirc;&amp;#128;&amp;#148; Gets value</li><li><a href='http://www.php.net/manual/en/reflectionproperty.isdefault.php'>ReflectionProperty::isDefault</a> &amp;acirc;&amp;#128;&amp;#148; Checks if default value</li><li><a href='http://www.php.net/manual/en/reflectionproperty.isprivate.php'>ReflectionProperty::isPrivate</a> &amp;acirc;&amp;#128;&amp;#148; Checks if property is private</li><li><a href='http://www.php.net/manual/en/reflectionproperty.isprotected.php'>ReflectionProperty::isProtected</a> &amp;acirc;&amp;#128;&amp;#148; Checks if property is protected</li><li><a href='http://www.php.net/manual/en/reflectionproperty.ispublic.php'>ReflectionProperty::isPublic</a> &amp;acirc;&amp;#128;&amp;#148; Checks if property is public</li><li><a href='http://www.php.net/manual/en/reflectionproperty.isstatic.php'>ReflectionProperty::isStatic</a> &amp;acirc;&amp;#128;&amp;#148; Checks if property is static</li><li><a href='http://www.php.net/manual/en/reflectionproperty.setaccessible.php'>ReflectionProperty::setAccessible</a> &amp;acirc;&amp;#128;&amp;#148; Set property accessibility</li><li><a href='http://www.php.net/manual/en/reflectionproperty.setvalue.php'>ReflectionProperty::setValue</a> &amp;acirc;&amp;#128;&amp;#148; Set property value</li><li><a href='http://www.php.net/manual/en/reflectionproperty.tostring.php'>ReflectionProperty::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::__toString" value="<div id='reflectionparameter.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.tostring.php'>ReflectionParameter::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionparameter.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionParameter::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionparameter.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.export.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::export</a> - Exports</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::__construct" value="<div id='reflectionparameter.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.construct.php'>ReflectionParameter::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::__construct</span> &amp;mdash; <span class='dc-title'>Construct</span></p> </div> <a name='reflectionparameter.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionParameter::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$parameter</tt></span> )</div> <p class='para rdfs-comment'> Constructs a <a href='http://www.php.net/manual/en/class.reflectionparameter.php' class='classname'>ReflectionParameter</a> class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function to reflect parameters from. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The parameter. </p> </dd> </dl> <p> </p> </div> <a name='reflectionparameter.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionparameter.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using the <a href='http://www.php.net/manual/en/class.reflectionparameter.php' class='classname'>ReflectionParameter</a> class</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;}<br />function&amp;nbsp;</span><span style='color: #0000BB'>bar</span><span style='color: #007700'>(</span><span style='color: #0000BB'>Exception&amp;nbsp;$a</span><span style='color: #007700'>,&amp;nbsp;&amp;amp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;}<br />function&amp;nbsp;</span><span style='color: #0000BB'>baz</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ReflectionFunction&amp;nbsp;$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;}<br />function&amp;nbsp;</span><span style='color: #0000BB'>abc</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$reflect&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionFunction</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$reflect</span><span style='color: #007700'>;<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$reflect</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getParameters</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'--&amp;nbsp;Parameter&amp;nbsp;#%d:&amp;nbsp;%s&amp;nbsp;{\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;Class:&amp;nbsp;%s\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;Allows&amp;nbsp;NULL:&amp;nbsp;%s\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;Passed&amp;nbsp;to&amp;nbsp;by&amp;nbsp;reference:&amp;nbsp;%s\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;Is&amp;nbsp;optional?:&amp;nbsp;%s\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'}\n'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$param-&amp;gt;getPosition()&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;from&amp;nbsp;PHP&amp;nbsp;5.2.3<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getClass</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>allowsNull</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isPassedByReference</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$param</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isOptional</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'yes'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'no'<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Function [ &amp;lt;user&amp;gt; function foo ] { @@ /Users/philip/cvs/phpdoc/a 2 - 2 - Parameters [3] { Parameter #0 [ &amp;lt;required&amp;gt; $a ] Parameter #1 [ &amp;lt;required&amp;gt; $b ] Parameter #2 [ &amp;lt;required&amp;gt; $c ] } } -- Parameter #0: a { Class: NULL Allows NULL: true Passed to by reference: false Is optional?: no } -- Parameter #1: b { Class: NULL Allows NULL: true Passed to by reference: false Is optional?: no } -- Parameter #2: c { Class: NULL Allows NULL: true Passed to by reference: false Is optional?: no } </pre></div> </div> </div><p> </p> </div> <a name='reflectionparameter.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionFunction::__construct</a> - Constructs a ReflectionFunction object</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::__construct</a> - Constructs a ReflectionMethod</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::__clone" value="<div id='reflectionparameter.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.clone.php'>ReflectionParameter::__clone</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::__clone</span> &amp;mdash; <span class='dc-title'>Clone</span></p> </div> <a name='reflectionparameter.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionParameter::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Clones. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionparameter.clone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionParameter::toString</b></span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.cloning.php' class='link'>Object cloning</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::isPassedByReference" value="<div id='reflectionparameter.ispassedbyreference' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.ispassedbyreference.php'>ReflectionParameter::isPassedByReference</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::isPassedByReference</span> &amp;mdash; <span class='dc-title'>Checks if passed by reference</span></p> </div> <a name='reflectionparameter.ispassedbyreference.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionParameter::isPassedByReference</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the parameter is passed in by reference. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.ispassedbyreference.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.ispassedbyreference.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the parameter is passed in by reference, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionparameter.ispassedbyreference.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getName</a> - Gets parameter name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::isOptional" value="<div id='reflectionparameter.isoptional' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.isoptional.php'>ReflectionParameter::isOptional</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.0.3)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::isOptional</span> &amp;mdash; <span class='dc-title'>Checks if optional</span></p> </div> <a name='reflectionparameter.isoptional.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionParameter::isOptional</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the parameter is optional. </p> </div> <a name='reflectionparameter.isoptional.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.isoptional.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the parameter is optional, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionparameter.isoptional.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getName</a> - Gets parameter name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::isDefaultValueAvailable" value="<div id='reflectionparameter.isdefaultvalueavailable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.isdefaultvalueavailable.php'>ReflectionParameter::isDefaultValueAvailable</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.0.3)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::isDefaultValueAvailable</span> &amp;mdash; <span class='dc-title'>Checks if a default value is available</span></p> </div> <a name='reflectionparameter.isdefaultvalueavailable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionParameter::isDefaultValueAvailable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if a default value for the parameter is available. </p> </div> <a name='reflectionparameter.isdefaultvalueavailable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.isdefaultvalueavailable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if a default value is available, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionparameter.isdefaultvalueavailable.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdefaultvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getDefaultValue</a> - Gets default parameter value</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getName</a> - Gets parameter name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::isArray" value="<div id='reflectionparameter.isarray' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.isarray.php'>ReflectionParameter::isArray</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::isArray</span> &amp;mdash; <span class='dc-title'>Checks if parameter expects an array</span></p> </div> <a name='reflectionparameter.isarray.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionParameter::isArray</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the parameter expects an array. </p> </div> <a name='reflectionparameter.isarray.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.isarray.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> is expected, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='reflectionparameter.isarray.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isoptional.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::isOptional</a> - Checks if optional</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getPosition" value="<div id='reflectionparameter.getposition' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getposition.php'>ReflectionParameter::getPosition</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.3)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getPosition</span> &amp;mdash; <span class='dc-title'>Gets parameter position</span></p> </div> <a name='reflectionparameter.getposition.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionParameter::getPosition</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the position of the parameter. </p> </div> <a name='reflectionparameter.getposition.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getposition.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The position of the parameter, left to right, starting at position #0. </p> </div> <a name='reflectionparameter.getposition.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getName</a> - Gets parameter name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getName" value="<div id='reflectionparameter.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getname.php'>ReflectionParameter::getName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getName</span> &amp;mdash; <span class='dc-title'>Gets parameter name</span></p> </div> <a name='reflectionparameter.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionParameter::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the name of the parameter. </p> </div> <a name='reflectionparameter.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The name of the reflected parameter. </p> </div> <a name='reflectionparameter.getname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionParameter::getValue</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getDefaultValue" value="<div id='reflectionparameter.getdefaultvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getdefaultvalue.php'>ReflectionParameter::getDefaultValue</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.0.3)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getDefaultValue</span> &amp;mdash; <span class='dc-title'>Gets default parameter value</span></p> </div> <a name='reflectionparameter.getdefaultvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionParameter::getDefaultValue</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the parameters default value. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.getdefaultvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getdefaultvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The parameters default value. </p> </div> <a name='reflectionparameter.getdefaultvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isoptional.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::isOptional</a> - Checks if optional</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.ispassedbyreference.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::isPassedByReference</a> - Checks if passed by reference</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getDeclaringFunction" value="<div id='reflectionparameter.getdeclaringfunction' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getdeclaringfunction.php'>ReflectionParameter::getDeclaringFunction</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.3)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getDeclaringFunction</span> &amp;mdash; <span class='dc-title'>Gets declaring function</span></p> </div> <a name='reflectionparameter.getdeclaringfunction.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='type ReflectionFunction'>ReflectionFunction</a></span> <span class='methodname'><b>ReflectionParameter::getDeclaringFunction</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declaring function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.getdeclaringfunction.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getdeclaringfunction.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='classname'>ReflectionFunction</a> object. </p> </div> <a name='reflectionparameter.getdeclaringfunction.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringclass.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getDeclaringClass</a> - Gets declaring class</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getDeclaringClass" value="<div id='reflectionparameter.getdeclaringclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getdeclaringclass.php'>ReflectionParameter::getDeclaringClass</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getDeclaringClass</span> &amp;mdash; <span class='dc-title'>Gets declaring class</span></p> </div> <a name='reflectionparameter.getdeclaringclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionclass.php' class='type ReflectionClass'>ReflectionClass</a></span> <span class='methodname'><b>ReflectionParameter::getDeclaringClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declaring class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.getdeclaringclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getdeclaringclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> object. </p> </div> <a name='reflectionparameter.getdeclaringclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getclass.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getClass</a> - Get class</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::getClass" value="<div id='reflectionparameter.getclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.getclass.php'>ReflectionParameter::getClass</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::getClass</span> &amp;mdash; <span class='dc-title'>Get class</span></p> </div> <a name='reflectionparameter.getclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionclass.php' class='type ReflectionClass'>ReflectionClass</a></span> <span class='methodname'><b>ReflectionParameter::getClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.getclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.getclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> object. </p> </div> <a name='reflectionparameter.getclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringclass.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::getDeclaringClass</a> - Gets declaring class</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::export" value="<div id='reflectionparameter.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.export.php'>ReflectionParameter::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::export</span> &amp;mdash; <span class='dc-title'>Exports</span></p> </div> <a name='reflectionparameter.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionParameter::export</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$parameter</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <p class='para rdfs-comment'> Exports. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The parameter name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionparameter.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The exported reflection. </p> </div> <a name='reflectionparameter.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionParameter::toString</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter::allowsNull" value="<div id='reflectionparameter.allowsnull' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionparameter.allowsnull.php'>ReflectionParameter::allowsNull</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionParameter::allowsNull</span> &amp;mdash; <span class='dc-title'>Checks if null is allowed</span></p> </div> <a name='reflectionparameter.allowsnull.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionParameter::allowsNull</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the parameter allows <b><tt class='constant'>NULL</tt></b>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionparameter.allowsnull.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionparameter.allowsnull.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if <b><tt class='constant'>NULL</tt></b> is allowed, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionparameter.allowsnull.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isoptional.php' class='function' rel='rdfs-seeAlso'>ReflectionParameter::isOptional</a> - Checks if optional</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionParameter" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionparameter.php'>The ReflectionParameter class</a></h1> <div class='partintro'> <div id='reflectionparameter.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionParameter</b> class retrieves information about a function&amp;#039;s or method&amp;#039;s parameters. </p> <p class='para'> To introspect function parameters, first create an instance of the <a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='classname'>ReflectionFunction</a> or <a href='http://www.php.net/manual/en/class.reflectionmethod.php' class='classname'>ReflectionMethod</a> classes and then use their <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php' class='function'>ReflectionFunctionAbstract::getParameters</a></span> method to retrieve an array of parameters. </p> </div> <div id='reflectionparameter.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionParameter</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionParameter</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionparameter.php#reflectionparameter.props.name'>$name</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.allowsnull.php' class='function'>allowsNull</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$parameter</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$parameter</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionClass</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getclass.php' class='function'>getClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionClass</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringclass.php' class='function'>getDeclaringClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionFunction</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringfunction.php' class='function'>getDeclaringFunction</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getdefaultvalue.php' class='function'>getDefaultValue</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.getposition.php' class='function'>getPosition</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isarray.php' class='function'>isArray</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isdefaultvalueavailable.php' class='function'>isDefaultValueAvailable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.isoptional.php' class='function'>isOptional</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.ispassedbyreference.php' class='function'>isPassedByReference</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionparameter.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionparameter.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionparameter.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionparameter.allowsnull.php'>ReflectionParameter::allowsNull</a> &amp;acirc;&amp;#128;&amp;#148; Checks if null is allowed</li><li><a href='http://www.php.net/manual/en/reflectionparameter.clone.php'>ReflectionParameter::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clone</li><li><a href='http://www.php.net/manual/en/reflectionparameter.construct.php'>ReflectionParameter::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct</li><li><a href='http://www.php.net/manual/en/reflectionparameter.export.php'>ReflectionParameter::export</a> &amp;acirc;&amp;#128;&amp;#148; Exports</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getclass.php'>ReflectionParameter::getClass</a> &amp;acirc;&amp;#128;&amp;#148; Get class</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringclass.php'>ReflectionParameter::getDeclaringClass</a> &amp;acirc;&amp;#128;&amp;#148; Gets declaring class</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getdeclaringfunction.php'>ReflectionParameter::getDeclaringFunction</a> &amp;acirc;&amp;#128;&amp;#148; Gets declaring function</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getdefaultvalue.php'>ReflectionParameter::getDefaultValue</a> &amp;acirc;&amp;#128;&amp;#148; Gets default parameter value</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getname.php'>ReflectionParameter::getName</a> &amp;acirc;&amp;#128;&amp;#148; Gets parameter name</li><li><a href='http://www.php.net/manual/en/reflectionparameter.getposition.php'>ReflectionParameter::getPosition</a> &amp;acirc;&amp;#128;&amp;#148; Gets parameter position</li><li><a href='http://www.php.net/manual/en/reflectionparameter.isarray.php'>ReflectionParameter::isArray</a> &amp;acirc;&amp;#128;&amp;#148; Checks if parameter expects an array</li><li><a href='http://www.php.net/manual/en/reflectionparameter.isdefaultvalueavailable.php'>ReflectionParameter::isDefaultValueAvailable</a> &amp;acirc;&amp;#128;&amp;#148; Checks if a default value is available</li><li><a href='http://www.php.net/manual/en/reflectionparameter.isoptional.php'>ReflectionParameter::isOptional</a> &amp;acirc;&amp;#128;&amp;#148; Checks if optional</li><li><a href='http://www.php.net/manual/en/reflectionparameter.ispassedbyreference.php'>ReflectionParameter::isPassedByReference</a> &amp;acirc;&amp;#128;&amp;#148; Checks if passed by reference</li><li><a href='http://www.php.net/manual/en/reflectionparameter.tostring.php'>ReflectionParameter::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionObject::__construct" value="<div id='reflectionobject.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionobject.construct.php'>ReflectionObject::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionObject::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a ReflectionObject</span></p> </div> <a name='reflectionobject.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionObject::__construct</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$argument</tt></span> )</div> <p class='para rdfs-comment'> Constructs a <a href='http://www.php.net/manual/en/class.reflectionobject.php' class='classname'>ReflectionObject</a>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionobject.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>argument</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An object instance. </p> </dd> </dl> <p> </p> </div> <a name='reflectionobject.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionobject.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionobject.export.php' class='function' rel='rdfs-seeAlso'>ReflectionObject::export</a> - Export</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionObject::export" value="<div id='reflectionobject.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionobject.export.php'>ReflectionObject::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionObject::export</span> &amp;mdash; <span class='dc-title'>Export</span></p> </div> <a name='reflectionobject.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionObject::export</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$argument</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <p class='para rdfs-comment'> Exports a reflection. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionobject.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>argument</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionobject.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflectionobject.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionobject.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionObject::__construct</a> - Constructs a ReflectionObject</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionObject" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionobject.php'>The ReflectionObject class</a></h1> <div class='partintro'> <div id='reflectionobject.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionObject</b> class reports information about an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <div id='reflectionobject.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionObject</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionObject</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionobject.php#reflectionobject.constants.is-implicit-abstract'>ReflectionObject::IS_IMPLICIT_ABSTRACT</a></var> <span class='initializer'> = 16</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionobject.php#reflectionobject.constants.is-explicit-abstract'>ReflectionObject::IS_EXPLICIT_ABSTRACT</a></var> <span class='initializer'> = 32</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionobject.php#reflectionobject.constants.is-final'>ReflectionObject::IS_FINAL</a></var> <span class='initializer'> = 64</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionobject.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$argument</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionobject.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$argument</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt></span> ] )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.clone.php' class='function'>ReflectionClass::__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.construct.php' class='function'>ReflectionClass::__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$argument</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.export.php' class='function'>ReflectionClass::export</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$argument</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstant.php' class='function'>ReflectionClass::getConstant</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstants.php' class='function'>ReflectionClass::getConstants</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstructor.php' class='function'>ReflectionClass::getConstructor</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getdefaultproperties.php' class='function'>ReflectionClass::getDefaultProperties</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getdoccomment.php' class='function'>ReflectionClass::getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getendline.php' class='function'>ReflectionClass::getEndLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionExtension</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextension.php' class='function'>ReflectionClass::getExtension</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextensionname.php' class='function'>ReflectionClass::getExtensionName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getfilename.php' class='function'>ReflectionClass::getFileName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfacenames.php' class='function'>ReflectionClass::getInterfaceNames</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfaces.php' class='function'>ReflectionClass::getInterfaces</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmethod.php' class='function'>ReflectionClass::getMethod</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmethods.php' class='function'>ReflectionClass::getMethods</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmodifiers.php' class='function'>ReflectionClass::getModifiers</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getname.php' class='function'>ReflectionClass::getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getnamespacename.php' class='function'>ReflectionClass::getNamespaceName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getparentclass.php' class='function'>ReflectionClass::getParentClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionProperty</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php' class='function'>ReflectionClass::getProperties</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionProperty</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperty.php' class='function'>ReflectionClass::getProperty</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getshortname.php' class='function'>ReflectionClass::getShortName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstartline.php' class='function'>ReflectionClass::getStartLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticproperties.php' class='function'>ReflectionClass::getStaticProperties</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php' class='function'>ReflectionClass::getStaticPropertyValue</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$default</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasconstant.php' class='function'>ReflectionClass::hasConstant</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasmethod.php' class='function'>ReflectionClass::hasMethod</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasproperty.php' class='function'>ReflectionClass::hasProperty</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.implementsinterface.php' class='function'>ReflectionClass::implementsInterface</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$interface</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.innamespace.php' class='function'>ReflectionClass::inNamespace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isabstract.php' class='function'>ReflectionClass::isAbstract</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isfinal.php' class='function'>ReflectionClass::isFinal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstance.php' class='function'>ReflectionClass::isInstance</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstantiable.php' class='function'>ReflectionClass::isInstantiable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function'>ReflectionClass::isInterface</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinternal.php' class='function'>ReflectionClass::isInternal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isiterateable.php' class='function'>ReflectionClass::isIterateable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.issubclassof.php' class='function'>ReflectionClass::isSubclassOf</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isuserdefined.php' class='function'>ReflectionClass::isUserDefined</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstance.php' class='function'>ReflectionClass::newInstance</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstanceargs.php' class='function'>ReflectionClass::newInstanceArgs</a></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php' class='function'>ReflectionClass::setStaticPropertyValue</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.tostring.php' class='function'>ReflectionClass::__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionobject.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionobject.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> <div id='reflectionobject.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='reflectionobject.constants.types' class='section'> <h2 class='title'>ReflectionObject Node Types</h2> <dl> <dt id='reflectionobject.constants.is-implicit-abstract' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionObject::IS_IMPLICIT_ABSTRACT</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionobject.constants.is-explicit-abstract' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionObject::IS_EXPLICIT_ABSTRACT</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionobject.constants.is-final' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionObject::IS_FINAL</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionobject.construct.php'>ReflectionObject::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a ReflectionObject</li><li><a href='http://www.php.net/manual/en/reflectionobject.export.php'>ReflectionObject::export</a> &amp;acirc;&amp;#128;&amp;#148; Export</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::__toString" value="<div id='reflectionmethod.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.tostring.php'>ReflectionMethod::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionmethod.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionMethod::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionmethod.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.export.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::export</a> - Export</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::__construct" value="<div id='reflectionmethod.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.construct.php'>ReflectionMethod::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a ReflectionMethod</span></p> </div> <a name='reflectionmethod.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionMethod::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_or_method</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> ] )</div> <p class='para rdfs-comment'> Constructs a new <a href='http://www.php.net/manual/en/class.reflectionmethod.php' class='classname'>ReflectionMethod</a>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_or_method</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='reflectionmethod.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionmethod.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionMethod::__construct</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Counter<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;</span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/**<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Increment&amp;nbsp;counter<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@final<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@static<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@access&amp;nbsp;&amp;nbsp;public<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;&amp;nbsp;int<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>final&amp;nbsp;public&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>increment</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;++</span><span style='color: #0000BB'>self</span><span style='color: #007700'>::</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;ReflectionMethod&amp;nbsp;class<br /></span><span style='color: #0000BB'>$method&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Counter'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'increment'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;basic&amp;nbsp;information<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'===&amp;gt;&amp;nbsp;The&amp;nbsp;%s%s%s%s%s%s%s&amp;nbsp;method&amp;nbsp;'%s'&amp;nbsp;(which&amp;nbsp;is&amp;nbsp;%s)\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declared&amp;nbsp;in&amp;nbsp;%s\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lines&amp;nbsp;%d&amp;nbsp;to&amp;nbsp;%d\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;having&amp;nbsp;the&amp;nbsp;modifiers&amp;nbsp;%d[%s]\n'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isInternal</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'internal'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'user-defined'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isAbstract</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;abstract'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFinal</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;final'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isPublic</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;public'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isPrivate</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;private'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isProtected</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;protected'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isStatic</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;static'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isConstructor</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'the&amp;nbsp;constructor'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;regular&amp;nbsp;method'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFileName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getStartLine</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getEndline</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>implode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>Reflection</span><span style='color: #007700'>::</span><span style='color: #0000BB'>getModifierNames</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()))<br />);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;documentation&amp;nbsp;comment<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Documentation:\n&amp;nbsp;%s\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getDocComment</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;static&amp;nbsp;variables&amp;nbsp;if&amp;nbsp;existant<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$statics</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getStaticVariables</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Static&amp;nbsp;variables:&amp;nbsp;%s\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$statics</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Invoke&amp;nbsp;the&amp;nbsp;method<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Invocation&amp;nbsp;results&amp;nbsp;in:&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$method</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>invoke</span><span style='color: #007700'>(</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> ===&amp;gt; The user-defined final public static method &amp;#039;increment&amp;#039; (which is a regular method) declared in /Users/philip/cvs/phpdoc/test.php lines 14 to 17 having the modifiers 261[final public static] ---&amp;gt; Documentation: &amp;#039;/** * Increment counter * * @final * @static * @access public * @return int */&amp;#039; ---&amp;gt; Invocation results in: int(1) </pre></div> </div> </div><p> </p> </div> <a name='reflectionmethod.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.export.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::export</a> - Export</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isStatic" value="<div id='reflectionmethod.isstatic' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isstatic.php'>ReflectionMethod::isStatic</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isStatic</span> &amp;mdash; <span class='dc-title'>Checks if method is static</span></p> </div> <a name='reflectionmethod.isstatic.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isStatic</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is static. </p> </div> <a name='reflectionmethod.isstatic.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isstatic.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is static, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isstatic.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isfinal.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isFinal</a> - Checks if method is final</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isPublic" value="<div id='reflectionmethod.ispublic' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.ispublic.php'>ReflectionMethod::isPublic</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isPublic</span> &amp;mdash; <span class='dc-title'>Checks if method is public</span></p> </div> <a name='reflectionmethod.ispublic.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isPublic</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is public. </p> </div> <a name='reflectionmethod.ispublic.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.ispublic.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is public, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.ispublic.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isPrivate</a> - Checks if method is private</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isProtected" value="<div id='reflectionmethod.isprotected' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isprotected.php'>ReflectionMethod::isProtected</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isProtected</span> &amp;mdash; <span class='dc-title'>Checks if method is protected</span></p> </div> <a name='reflectionmethod.isprotected.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isProtected</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is protected. </p> </div> <a name='reflectionmethod.isprotected.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isprotected.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is protected, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isprotected.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isprivate.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isPrivate</a> - Checks if method is private</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isPrivate" value="<div id='reflectionmethod.isprivate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isprivate.php'>ReflectionMethod::isPrivate</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isPrivate</span> &amp;mdash; <span class='dc-title'>Checks if method is private</span></p> </div> <a name='reflectionmethod.isprivate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isPrivate</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is private. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.isprivate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isprivate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is private, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isprivate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.ispublic.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isPublic</a> - Checks if method is public</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isFinal" value="<div id='reflectionmethod.isfinal' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isfinal.php'>ReflectionMethod::isFinal</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isFinal</span> &amp;mdash; <span class='dc-title'>Checks if method is final</span></p> </div> <a name='reflectionmethod.isfinal.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isFinal</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is final. </p> </div> <a name='reflectionmethod.isfinal.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isfinal.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is final, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isfinal.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isstatic.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isStatic</a> - Checks if method is static</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isDestructor" value="<div id='reflectionmethod.isdestructor' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isdestructor.php'>ReflectionMethod::isDestructor</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isDestructor</span> &amp;mdash; <span class='dc-title'>Checks if method is a destructor</span></p> </div> <a name='reflectionmethod.isdestructor.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isDestructor</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is a destructor. </p> </div> <a name='reflectionmethod.isdestructor.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isdestructor.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is a destructor, otherwise false; </p> </div> <a name='reflectionmethod.isdestructor.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isconstructor.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isConstructor</a> - Checks if method is a constructor</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isConstructor" value="<div id='reflectionmethod.isconstructor' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isconstructor.php'>ReflectionMethod::isConstructor</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isConstructor</span> &amp;mdash; <span class='dc-title'>Checks if method is a constructor</span></p> </div> <a name='reflectionmethod.isconstructor.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isConstructor</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is a constructor. </p> </div> <a name='reflectionmethod.isconstructor.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isconstructor.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is a constructor, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isconstructor.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::__construct</a> - Constructs a ReflectionMethod</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isabstract.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isAbstract</a> - Checks if method is abstract</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isdestructor.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isDestructor</a> - Checks if method is a destructor</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::isAbstract" value="<div id='reflectionmethod.isabstract' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.isabstract.php'>ReflectionMethod::isAbstract</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::isAbstract</span> &amp;mdash; <span class='dc-title'>Checks if method is abstract</span></p> </div> <a name='reflectionmethod.isabstract.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionMethod::isAbstract</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the method is abstract. </p> </div> <a name='reflectionmethod.isabstract.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.isabstract.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the method is abstract, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionmethod.isabstract.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.getdeclaringclass.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::getDeclaringClass</a> - Gets declaring class</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::invokeArgs" value="<div id='reflectionmethod.invokeargs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.invokeargs.php'>ReflectionMethod::invokeArgs</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::invokeArgs</span> &amp;mdash; <span class='dc-title'>Invoke args</span></p> </div> <a name='reflectionmethod.invokeargs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionMethod::invokeArgs</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Invoke arguments. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.invokeargs.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='reflectionmethod.invokeargs.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionmethod.invokeargs.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.invoke.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::invoke</a> - Invoke</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke' class='link'>__invoke</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::invoke" value="<div id='reflectionmethod.invoke' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.invoke.php'>ReflectionMethod::invoke</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::invoke</span> &amp;mdash; <span class='dc-title'>Invoke</span></p> </div> <a name='reflectionmethod.invoke.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionMethod::invoke</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Invokes a reflected method. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.invoke.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The object to invoke. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The passed in argument list. It accepts a variable number of arguments which are passed to the function much like <a href='http://www.php.net/manual/en/function.call-user-func.php' class='function'>call_user_func()</a> is. </p> </dd> </dl> <p> </p> </div> <a name='reflectionmethod.invoke.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionmethod.invoke.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.invokeargs.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::invokeArgs</a> - Invoke args</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke' class='link'>__invoke</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::getPrototype" value="<div id='reflectionmethod.getprototype' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.getprototype.php'>ReflectionMethod::getPrototype</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::getPrototype</span> &amp;mdash; <span class='dc-title'>Gets prototype</span></p> </div> <a name='reflectionmethod.getprototype.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionMethod::getPrototype</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the methods prototype. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.getprototype.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.getprototype.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The prototype. </p> </div> <a name='reflectionmethod.getprototype.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> A <b class='classname'>ReflectionException</b> exception is thrown if the method does not have a prototype. </p> </div> <a name='reflectionmethod.getprototype.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.getmodifiers.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::getModifiers</a> - Gets modifiers</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::getModifiers" value="<div id='reflectionmethod.getmodifiers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.getmodifiers.php'>ReflectionMethod::getModifiers</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::getModifiers</span> &amp;mdash; <span class='dc-title'>Gets modifiers</span></p> </div> <a name='reflectionmethod.getmodifiers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionMethod::getModifiers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the modifiers. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.getmodifiers.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.getmodifiers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A numeric representation of the modifiers. </p> </div> <a name='reflectionmethod.getmodifiers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionMethod::getModifiers</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Testing<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final&amp;nbsp;public&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>foo</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>bar</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Testing'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Modifiers&amp;nbsp;for&amp;nbsp;method&amp;nbsp;foo():\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>implode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>Reflection</span><span style='color: #007700'>::</span><span style='color: #0000BB'>getModifierNames</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Testing'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Modifiers&amp;nbsp;for&amp;nbsp;method&amp;nbsp;bar():\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>implode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>Reflection</span><span style='color: #007700'>::</span><span style='color: #0000BB'>getModifierNames</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getModifiers</span><span style='color: #007700'>()));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Modifiers for method foo(): 261 final public static Modifiers for method bar(): 65792 </pre></div> </div> </div><p> </p> </div> <a name='reflectionmethod.getmodifiers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.getmodifiernames.php' class='function' rel='rdfs-seeAlso'>Reflection::getModifierNames</a> - Gets modifier names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::getDeclaringClass" value="<div id='reflectionmethod.getdeclaringclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.getdeclaringclass.php'>ReflectionMethod::getDeclaringClass</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::getDeclaringClass</span> &amp;mdash; <span class='dc-title'>Gets declaring class</span></p> </div> <a name='reflectionmethod.getdeclaringclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionclass.php' class='type ReflectionClass'>ReflectionClass</a></span> <span class='methodname'><b>ReflectionMethod::getDeclaringClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the declaring class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.getdeclaringclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionmethod.getdeclaringclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a>. </p> </div> <a name='reflectionmethod.getdeclaringclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isabstract.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::isAbstract</a> - Checks if method is abstract</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod::export" value="<div id='reflectionmethod.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionmethod.export.php'>ReflectionMethod::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionMethod::export</span> &amp;mdash; <span class='dc-title'>Export</span></p> </div> <a name='reflectionmethod.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionMethod::export</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Exports a ReflectionMethod. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionmethod.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionmethod.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflectionmethod.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::__construct</a> - Constructs a ReflectionMethod</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionMethod" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionmethod.php'>The ReflectionMethod class</a></h1> <div class='partintro'> <div id='reflectionmethod.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionMethod</b> class reports information about a method. </p> </div> <div id='reflectionmethod.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionMethod</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionMethod</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.reflectionfunctionabstract.php' class='classname'>ReflectionFunctionAbstract</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-static'>ReflectionMethod::IS_STATIC</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-public'>ReflectionMethod::IS_PUBLIC</a></var> <span class='initializer'> = 256</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-protected'>ReflectionMethod::IS_PROTECTED</a></var> <span class='initializer'> = 512</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-private'>ReflectionMethod::IS_PRIVATE</a></var> <span class='initializer'> = 1024</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-abstract'>ReflectionMethod::IS_ABSTRACT</a></var> <span class='initializer'> = 2</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.constants.is-final'>ReflectionMethod::IS_FINAL</a></var> <span class='initializer'> = 4</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.props.name'>$name</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionmethod.php#reflectionmethod.props.class'>$class</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_or_method</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionClass</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.getdeclaringclass.php' class='function'>getDeclaringClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.getmodifiers.php' class='function'>getModifiers</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.getprototype.php' class='function'>getPrototype</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.invoke.php' class='function'>invoke</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$args</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.invokeargs.php' class='function'>invokeArgs</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isabstract.php' class='function'>isAbstract</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isconstructor.php' class='function'>isConstructor</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isdestructor.php' class='function'>isDestructor</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isfinal.php' class='function'>isFinal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isprivate.php' class='function'>isPrivate</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isprotected.php' class='function'>isProtected</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.ispublic.php' class='function'>isPublic</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.isstatic.php' class='function'>isStatic</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.clone.php' class='function'>ReflectionFunctionAbstract::__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php' class='function'>ReflectionFunctionAbstract::getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php' class='function'>ReflectionFunctionAbstract::getEndLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionExtension</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php' class='function'>ReflectionFunctionAbstract::getExtension</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php' class='function'>ReflectionFunctionAbstract::getExtensionName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getfilename.php' class='function'>ReflectionFunctionAbstract::getFileName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getname.php' class='function'>ReflectionFunctionAbstract::getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php' class='function'>ReflectionFunctionAbstract::getNamespaceName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function'>ReflectionFunctionAbstract::getNumberOfParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php' class='function'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionParameter</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php' class='function'>ReflectionFunctionAbstract::getParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getshortname.php' class='function'>ReflectionFunctionAbstract::getShortName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php' class='function'>ReflectionFunctionAbstract::getStartLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php' class='function'>ReflectionFunctionAbstract::getStaticVariables</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.innamespace.php' class='function'>ReflectionFunctionAbstract::inNamespace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isclosure.php' class='function'>ReflectionFunctionAbstract::isClosure</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php' class='function'>ReflectionFunctionAbstract::isDeprecated</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php' class='function'>ReflectionFunctionAbstract::isInternal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function'>ReflectionFunctionAbstract::isUserDefined</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.returnsreference.php' class='function'>ReflectionFunctionAbstract::returnsReference</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.tostring.php' class='function'>ReflectionFunctionAbstract::__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionmethod.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionmethod.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> <dt id='reflectionmethod.props.class' class='varlistentry'> <span class='term'><var class='varname'>class</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> <div id='reflectionmethod.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='reflectionmethod.constants.types' class='section'> <h2 class='title'>ReflectionMethod Node Types</h2> <dl> <dt id='reflectionmethod.constants.is-static' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_STATIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionmethod.constants.is-public' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_PUBLIC</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionmethod.constants.is-protected' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_PROTECTED</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionmethod.constants.is-private' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_PRIVATE</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionmethod.constants.is-abstract' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_ABSTRACT</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> <dt id='reflectionmethod.constants.is-final' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionMethod::IS_FINAL</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionmethod.construct.php'>ReflectionMethod::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a ReflectionMethod</li><li><a href='http://www.php.net/manual/en/reflectionmethod.export.php'>ReflectionMethod::export</a> &amp;acirc;&amp;#128;&amp;#148; Export</li><li><a href='http://www.php.net/manual/en/reflectionmethod.getdeclaringclass.php'>ReflectionMethod::getDeclaringClass</a> &amp;acirc;&amp;#128;&amp;#148; Gets declaring class</li><li><a href='http://www.php.net/manual/en/reflectionmethod.getmodifiers.php'>ReflectionMethod::getModifiers</a> &amp;acirc;&amp;#128;&amp;#148; Gets modifiers</li><li><a href='http://www.php.net/manual/en/reflectionmethod.getprototype.php'>ReflectionMethod::getPrototype</a> &amp;acirc;&amp;#128;&amp;#148; Gets prototype</li><li><a href='http://www.php.net/manual/en/reflectionmethod.invoke.php'>ReflectionMethod::invoke</a> &amp;acirc;&amp;#128;&amp;#148; Invoke</li><li><a href='http://www.php.net/manual/en/reflectionmethod.invokeargs.php'>ReflectionMethod::invokeArgs</a> &amp;acirc;&amp;#128;&amp;#148; Invoke args</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isabstract.php'>ReflectionMethod::isAbstract</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is abstract</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isconstructor.php'>ReflectionMethod::isConstructor</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is a constructor</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isdestructor.php'>ReflectionMethod::isDestructor</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is a destructor</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isfinal.php'>ReflectionMethod::isFinal</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is final</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isprivate.php'>ReflectionMethod::isPrivate</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is private</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isprotected.php'>ReflectionMethod::isProtected</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is protected</li><li><a href='http://www.php.net/manual/en/reflectionmethod.ispublic.php'>ReflectionMethod::isPublic</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is public</li><li><a href='http://www.php.net/manual/en/reflectionmethod.isstatic.php'>ReflectionMethod::isStatic</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is static</li><li><a href='http://www.php.net/manual/en/reflectionmethod.tostring.php'>ReflectionMethod::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::__toString" value="<div id='reflectionfunctionabstract.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.tostring.php'>ReflectionFunctionAbstract::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionfunctionabstract.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionFunctionAbstract::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The string. </p> </div> <a name='reflectionfunctionabstract.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionClass::clone</b></span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::__clone" value="<div id='reflectionfunctionabstract.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.clone.php'>ReflectionFunctionAbstract::__clone</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::__clone</span> &amp;mdash; <span class='dc-title'>Clones function</span></p> </div> <a name='reflectionfunctionabstract.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionFunctionAbstract::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Clones a function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionfunctionabstract.clone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.cloning.php' class='link'>Object cloning</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::returnsReference" value="<div id='reflectionfunctionabstract.returnsreference' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.returnsreference.php'>ReflectionFunctionAbstract::returnsReference</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::returnsReference</span> &amp;mdash; <span class='dc-title'>Checks if returns reference</span></p> </div> <a name='reflectionfunctionabstract.returnsreference.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionFunctionAbstract::returnsReference</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the function returns a reference. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.returnsreference.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.returnsreference.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it returns a reference, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionfunctionabstract.returnsreference.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isclosure.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::isClosure</a> - Checks if closure</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::isUserDefined" value="<div id='reflectionfunctionabstract.isuserdefined' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php'>ReflectionFunctionAbstract::isUserDefined</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::isUserDefined</span> &amp;mdash; <span class='dc-title'>Checks if user defined</span></p> </div> <a name='reflectionfunctionabstract.isuserdefined.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionFunctionAbstract::isUserDefined</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the function is user-defined, as opposed to internal. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.isuserdefined.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.isuserdefined.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it&amp;#039;s user-defined, otherwise false; </p> </div> <a name='reflectionfunctionabstract.isuserdefined.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::isInternal</a> - Checks if is internal</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::isInternal" value="<div id='reflectionfunctionabstract.isinternal' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php'>ReflectionFunctionAbstract::isInternal</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::isInternal</span> &amp;mdash; <span class='dc-title'>Checks if is internal</span></p> </div> <a name='reflectionfunctionabstract.isinternal.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionFunctionAbstract::isInternal</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the function is internal, as opposed to user-defined. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.isinternal.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.isinternal.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it&amp;#039;s internal, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionfunctionabstract.isinternal.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::isUserDefined</a> - Checks if user defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::isDeprecated" value="<div id='reflectionfunctionabstract.isdeprecated' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php'>ReflectionFunctionAbstract::isDeprecated</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::isDeprecated</span> &amp;mdash; <span class='dc-title'>Checks if deprecated</span></p> </div> <a name='reflectionfunctionabstract.isdeprecated.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionFunctionAbstract::isDeprecated</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the function is deprecated. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.isdeprecated.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.isdeprecated.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it&amp;#039;s deprecated, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionfunctionabstract.isdeprecated.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getDocComment</a> - Gets doc comment</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getStaticVariables" value="<div id='reflectionfunctionabstract.getstaticvariables' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php'>ReflectionFunctionAbstract::getStaticVariables</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getStaticVariables</span> &amp;mdash; <span class='dc-title'>Gets static variables</span></p> </div> <a name='reflectionfunctionabstract.getstaticvariables.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionFunctionAbstract::getStaticVariables</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the static variables. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getstaticvariables.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getstaticvariables.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of static variables. </p> </div> <a name='reflectionfunctionabstract.getstaticvariables.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getParameters</a> - Gets parameters</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getStartLine" value="<div id='reflectionfunctionabstract.getstartline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php'>ReflectionFunctionAbstract::getStartLine</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getStartLine</span> &amp;mdash; <span class='dc-title'>Gets starting line number</span></p> </div> <a name='reflectionfunctionabstract.getstartline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionFunctionAbstract::getStartLine</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the starting line number of the function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getstartline.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getstartline.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The starting line number. </p> </div> <a name='reflectionfunctionabstract.getstartline.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getEndLine</a> - Gets end line number</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getParameters" value="<div id='reflectionfunctionabstract.getparameters' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php'>ReflectionFunctionAbstract::getParameters</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getParameters</span> &amp;mdash; <span class='dc-title'>Gets parameters</span></p> </div> <a name='reflectionfunctionabstract.getparameters.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionparameter.php' class='type ReflectionParameter'>ReflectionParameter</a></span> <span class='methodname'><b>ReflectionFunctionAbstract::getParameters</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the parameters. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getparameters.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getparameters.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The parameters, as a <a href='http://www.php.net/manual/en/class.reflectionparameter.php' class='classname'>ReflectionParameter</a> object. </p> </div> <a name='reflectionfunctionabstract.getparameters.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getNumberOfParameters</a> - Gets number of parameters</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getNumberOfRequiredParameters" value="<div id='reflectionfunctionabstract.getnumberofrequiredparameters' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.0.3)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</span> &amp;mdash; <span class='dc-title'>Gets number of required parameters</span></p> </div> <a name='reflectionfunctionabstract.getnumberofrequiredparameters.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionFunctionAbstract::getNumberOfRequiredParameters</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the number of required parameters that a function defines. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getnumberofrequiredparameters.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getnumberofrequiredparameters.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The number of required parameters. </p> </div> <a name='reflectionfunctionabstract.getnumberofrequiredparameters.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getNumberOfParameters</a> - Gets number of parameters</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getNumberOfParameters" value="<div id='reflectionfunctionabstract.getnumberofparameters' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php'>ReflectionFunctionAbstract::getNumberOfParameters</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.0.3)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getNumberOfParameters</span> &amp;mdash; <span class='dc-title'>Gets number of parameters</span></p> </div> <a name='reflectionfunctionabstract.getnumberofparameters.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionFunctionAbstract::getNumberOfParameters</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the number of parameters that a function defines, both optional and required. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getnumberofparameters.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getnumberofparameters.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The number of parameters. </p> </div> <a name='reflectionfunctionabstract.getnumberofparameters.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</a> - Gets number of required parameters</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getName" value="<div id='reflectionfunctionabstract.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getname.php'>ReflectionFunctionAbstract::getName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getName</span> &amp;mdash; <span class='dc-title'>Gets function name</span></p> </div> <a name='reflectionfunctionabstract.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunctionAbstract::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the name of the function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The name of the function. </p> </div> <a name='reflectionfunctionabstract.getname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getExtensionName</a> - Gets extension name</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::isUserDefined</a> - Checks if user defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getFileName" value="<div id='reflectionfunctionabstract.getfilename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getfilename.php'>ReflectionFunctionAbstract::getFileName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getFileName</span> &amp;mdash; <span class='dc-title'>Gets file name</span></p> </div> <a name='reflectionfunctionabstract.getfilename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunctionAbstract::getFileName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the file name from a user-defined function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getfilename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getfilename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The file name. </p> </div> <a name='reflectionfunctionabstract.getfilename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getNamespaceName</a> - Gets namespace name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getExtensionName" value="<div id='reflectionfunctionabstract.getextensionname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php'>ReflectionFunctionAbstract::getExtensionName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getExtensionName</span> &amp;mdash; <span class='dc-title'>Gets extension name</span></p> </div> <a name='reflectionfunctionabstract.getextensionname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunctionAbstract::getExtensionName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the extensions name. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getextensionname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getextensionname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The extensions name. </p> </div> <a name='reflectionfunctionabstract.getextensionname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getExtension</a> - Gets extension info</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getExtension" value="<div id='reflectionfunctionabstract.getextension' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php'>ReflectionFunctionAbstract::getExtension</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getExtension</span> &amp;mdash; <span class='dc-title'>Gets extension info</span></p> </div> <a name='reflectionfunctionabstract.getextension.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionextension.php' class='type ReflectionExtension'>ReflectionExtension</a></span> <span class='methodname'><b>ReflectionFunctionAbstract::getExtension</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the extension information of a function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getextension.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getextension.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The extension information, as a <a href='http://www.php.net/manual/en/class.reflectionextension.php' class='classname'>ReflectionExtension</a> object. </p> </div> <a name='reflectionfunctionabstract.getextension.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getExtensionName</a> - Gets extension name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getEndLine" value="<div id='reflectionfunctionabstract.getendline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php'>ReflectionFunctionAbstract::getEndLine</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getEndLine</span> &amp;mdash; <span class='dc-title'>Gets end line number</span></p> </div> <a name='reflectionfunctionabstract.getendline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionFunctionAbstract::getEndLine</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the ending line number. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getendline.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getendline.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The ending line number of the user defined class, or <b><tt class='constant'>FALSE</tt></b> if unknown. </p> </div> <a name='reflectionfunctionabstract.getendline.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getStartLine</a> - Gets starting line number</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract::getDocComment" value="<div id='reflectionfunctionabstract.getdoccomment' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php'>ReflectionFunctionAbstract::getDocComment</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionFunctionAbstract::getDocComment</span> &amp;mdash; <span class='dc-title'>Gets doc comment</span></p> </div> <a name='reflectionfunctionabstract.getdoccomment.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunctionAbstract::getDocComment</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get a Doc comment from a function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunctionabstract.getdoccomment.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunctionabstract.getdoccomment.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The doc comment if it exists, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionfunctionabstract.getdoccomment.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getStartLine</a> - Gets starting line number</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunctionAbstract" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionfunctionabstract.php'>The ReflectionFunctionAbstract class</a></h1> <div class='partintro'> <div id='reflectionfunctionabstract.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> A parent class to <a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='classname'>ReflectionFunction</a>, read its description for details. </p> </div> <div id='reflectionfunctionabstract.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionFunctionAbstract</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionFunctionAbstract</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionfunctionabstract.php#reflectionfunctionabstract.props.name'>$name</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php' class='function'>getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php' class='function'>getEndLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionExtension</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php' class='function'>getExtension</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php' class='function'>getExtensionName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getfilename.php' class='function'>getFileName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php' class='function'>getNamespaceName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function'>getNumberOfParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php' class='function'>getNumberOfRequiredParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionParameter</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php' class='function'>getParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getshortname.php' class='function'>getShortName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php' class='function'>getStartLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php' class='function'>getStaticVariables</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.innamespace.php' class='function'>inNamespace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isclosure.php' class='function'>isClosure</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php' class='function'>isDeprecated</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php' class='function'>isInternal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function'>isUserDefined</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.returnsreference.php' class='function'>returnsReference</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionfunctionabstract.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionfunctionabstract.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.clone.php'>ReflectionFunctionAbstract::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clones function</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php'>ReflectionFunctionAbstract::getDocComment</a> &amp;acirc;&amp;#128;&amp;#148; Gets doc comment</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php'>ReflectionFunctionAbstract::getEndLine</a> &amp;acirc;&amp;#128;&amp;#148; Gets end line number</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php'>ReflectionFunctionAbstract::getExtension</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension info</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php'>ReflectionFunctionAbstract::getExtensionName</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension name</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getfilename.php'>ReflectionFunctionAbstract::getFileName</a> &amp;acirc;&amp;#128;&amp;#148; Gets file name</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getname.php'>ReflectionFunctionAbstract::getName</a> &amp;acirc;&amp;#128;&amp;#148; Gets function name</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php'>ReflectionFunctionAbstract::getNamespaceName</a> &amp;acirc;&amp;#128;&amp;#148; Gets namespace name</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php'>ReflectionFunctionAbstract::getNumberOfParameters</a> &amp;acirc;&amp;#128;&amp;#148; Gets number of parameters</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</a> &amp;acirc;&amp;#128;&amp;#148; Gets number of required parameters</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php'>ReflectionFunctionAbstract::getParameters</a> &amp;acirc;&amp;#128;&amp;#148; Gets parameters</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getshortname.php'>ReflectionFunctionAbstract::getShortName</a> &amp;acirc;&amp;#128;&amp;#148; Gets function short name</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php'>ReflectionFunctionAbstract::getStartLine</a> &amp;acirc;&amp;#128;&amp;#148; Gets starting line number</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php'>ReflectionFunctionAbstract::getStaticVariables</a> &amp;acirc;&amp;#128;&amp;#148; Gets static variables</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.innamespace.php'>ReflectionFunctionAbstract::inNamespace</a> &amp;acirc;&amp;#128;&amp;#148; Checks if function in namespace</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isclosure.php'>ReflectionFunctionAbstract::isClosure</a> &amp;acirc;&amp;#128;&amp;#148; Checks if closure</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php'>ReflectionFunctionAbstract::isDeprecated</a> &amp;acirc;&amp;#128;&amp;#148; Checks if deprecated</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php'>ReflectionFunctionAbstract::isInternal</a> &amp;acirc;&amp;#128;&amp;#148; Checks if is internal</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php'>ReflectionFunctionAbstract::isUserDefined</a> &amp;acirc;&amp;#128;&amp;#148; Checks if user defined</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.returnsreference.php'>ReflectionFunctionAbstract::returnsReference</a> &amp;acirc;&amp;#128;&amp;#148; Checks if returns reference</li><li><a href='http://www.php.net/manual/en/reflectionfunctionabstract.tostring.php'>ReflectionFunctionAbstract::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::__toString" value="<div id='reflectionfunction.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.tostring.php'>ReflectionFunction::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionfunction.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunction::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunction.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunction.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionfunction.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionClassAbstract::clone</b></span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::__construct" value="<div id='reflectionfunction.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.construct.php'>ReflectionFunction::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a ReflectionFunction object</span></p> </div> <a name='reflectionfunction.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionFunction::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Constructs a <a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='classname'>ReflectionFunction</a> object. </p> </div> <a name='reflectionfunction.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the function to reflect. </p> </dd> </dl> <p> </p> </div> <a name='reflectionfunction.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionfunction.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> A <b class='classname'>ReflectionException</b> if the <i><tt class='parameter'>name</tt></i> parameter does not contain a valid function. </p> </div> <a name='reflectionfunction.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionFunction::__construct</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/**<br />&amp;nbsp;*&amp;nbsp;A&amp;nbsp;simple&amp;nbsp;counter<br />&amp;nbsp;*<br />&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int<br />&amp;nbsp;*/<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>counter</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;</span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;++</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;ReflectionFunction&amp;nbsp;class<br /></span><span style='color: #0000BB'>$func&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionFunction</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'counter'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;basic&amp;nbsp;information<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'===&amp;gt;&amp;nbsp;The&amp;nbsp;%s&amp;nbsp;function&amp;nbsp;'%s'\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declared&amp;nbsp;in&amp;nbsp;%s\n'</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lines&amp;nbsp;%d&amp;nbsp;to&amp;nbsp;%d\n'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isInternal</span><span style='color: #007700'>()&amp;nbsp;?&amp;nbsp;</span><span style='color: #DD0000'>'internal'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'user-defined'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFileName</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getStartLine</span><span style='color: #007700'>(),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getEndline</span><span style='color: #007700'>()<br />);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;documentation&amp;nbsp;comment<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Documentation:\n&amp;nbsp;%s\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getDocComment</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;static&amp;nbsp;variables&amp;nbsp;if&amp;nbsp;existant<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$statics&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$func</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getStaticVariables</span><span style='color: #007700'>())<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'---&amp;gt;&amp;nbsp;Static&amp;nbsp;variables:&amp;nbsp;%s\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$statics</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> ===&amp;gt; The user-defined function &amp;#039;counter&amp;#039; declared in /Users/philip/test.php lines 7 to 11 ---&amp;gt; Documentation: &amp;#039;/** * A simple counter * * @return int */&amp;#039; ---&amp;gt; Static variables: array ( &amp;#039;c&amp;#039; =&amp;gt; 0, ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionfunction.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionmethod.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionMethod::__construct</a> - Constructs a ReflectionMethod</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::isDisabled" value="<div id='reflectionfunction.isdisabled' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.isdisabled.php'>ReflectionFunction::isDisabled</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::isDisabled</span> &amp;mdash; <span class='dc-title'>Checks if function is disabled</span></p> </div> <a name='reflectionfunction.isdisabled.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionFunction::isDisabled</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the function is disabled, via the <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.disable-functions' class='link'>disable_functions</a> directive. </p> </div> <a name='reflectionfunction.isdisabled.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionfunction.isdisabled.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it&amp;#039;s disable, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionfunction.isdisabled.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::isUserDefined</a> - Checks if user defined</span></li> <li class='member'><a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.disable-functions' class='link'>disable_functions directive</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::invokeArgs" value="<div id='reflectionfunction.invokeargs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.invokeargs.php'>ReflectionFunction::invokeArgs</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::invokeArgs</span> &amp;mdash; <span class='dc-title'>Invokes function args</span></p> </div> <a name='reflectionfunction.invokeargs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionFunction::invokeArgs</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Invokes args. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunction.invokeargs.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The args to invoke. </p> </dd> </dl> <p> </p> </div> <a name='reflectionfunction.invokeargs.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionfunction.invokeargs.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.invoke.php' class='function' rel='rdfs-seeAlso'>ReflectionFunction::invoke</a> - Invokes function</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function' rel='rdfs-seeAlso'>ReflectionFunctionAbstract::getNumberOfParameters</a> - Gets number of parameters</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke' class='link'>__invoke</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::invoke" value="<div id='reflectionfunction.invoke' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.invoke.php'>ReflectionFunction::invoke</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::invoke</span> &amp;mdash; <span class='dc-title'>Invokes function</span></p> </div> <a name='reflectionfunction.invoke.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionFunction::invoke</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$args</tt></span> ] )</div> <p class='para rdfs-comment'> Invokes a reflected function. </p> </div> <a name='reflectionfunction.invoke.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The passed in argument list. It accepts a variable number of arguments which are passed to the function much like <a href='http://www.php.net/manual/en/function.call-user-func.php' class='function'>call_user_func()</a> is. </p> </dd> </dl> <p> </p> </div> <a name='reflectionfunction.invoke.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionfunction.invoke.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.export.php' class='function' rel='rdfs-seeAlso'>ReflectionFunction::export</a> - Exports function</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke' class='link'>__invoke</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction::export" value="<div id='reflectionfunction.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionfunction.export.php'>ReflectionFunction::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionFunction::export</span> &amp;mdash; <span class='dc-title'>Exports function</span></p> </div> <a name='reflectionfunction.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionFunction::export</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt></span> ] )</div> <p class='para rdfs-comment'> Exports a Reflected function. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionfunction.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionfunction.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflectionfunction.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionExtension::invoke</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionFunction" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionfunction.php'>The ReflectionFunction class</a></h1> <div class='partintro'> <div id='reflectionfunction.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionFunction</b> class reports information about a function. </p> <p class='para'> Parent class <a href='http://www.php.net/manual/en/class.reflectionfunctionabstract.php' class='classname'>ReflectionFunctionAbstract</a> has the same methods except <b>invoke()</b>, <b>invokeArgs()</b>, <b>export()</b> and <b>isDisabled()</b>. </p> </div> <div id='reflectionfunction.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionFunction</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionFunction</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.reflectionfunctionabstract.php' class='classname'>ReflectionFunctionAbstract</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionfunction.php#reflectionfunction.constants.is-deprecated'>ReflectionFunction::IS_DEPRECATED</a></var> <span class='initializer'> = 262144</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionfunction.php#reflectionfunction.props.name'>$name</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.invoke.php' class='function'>invoke</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$args</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.invokeargs.php' class='function'>invokeArgs</a></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.isdisabled.php' class='function'>isDisabled</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunction.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.clone.php' class='function'>ReflectionFunctionAbstract::__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php' class='function'>ReflectionFunctionAbstract::getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getendline.php' class='function'>ReflectionFunctionAbstract::getEndLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionExtension</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextension.php' class='function'>ReflectionFunctionAbstract::getExtension</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getextensionname.php' class='function'>ReflectionFunctionAbstract::getExtensionName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getfilename.php' class='function'>ReflectionFunctionAbstract::getFileName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getname.php' class='function'>ReflectionFunctionAbstract::getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php' class='function'>ReflectionFunctionAbstract::getNamespaceName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php' class='function'>ReflectionFunctionAbstract::getNumberOfParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php' class='function'>ReflectionFunctionAbstract::getNumberOfRequiredParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionParameter</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getparameters.php' class='function'>ReflectionFunctionAbstract::getParameters</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getshortname.php' class='function'>ReflectionFunctionAbstract::getShortName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstartline.php' class='function'>ReflectionFunctionAbstract::getStartLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php' class='function'>ReflectionFunctionAbstract::getStaticVariables</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.innamespace.php' class='function'>ReflectionFunctionAbstract::inNamespace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isclosure.php' class='function'>ReflectionFunctionAbstract::isClosure</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php' class='function'>ReflectionFunctionAbstract::isDeprecated</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isinternal.php' class='function'>ReflectionFunctionAbstract::isInternal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php' class='function'>ReflectionFunctionAbstract::isUserDefined</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.returnsreference.php' class='function'>ReflectionFunctionAbstract::returnsReference</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionfunctionabstract.tostring.php' class='function'>ReflectionFunctionAbstract::__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionfunction.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionfunction.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> <div id='reflectionfunction.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='reflectionfunction.constants.types' class='section'> <h2 class='title'>ReflectionFunction Node Types</h2> <dl> <dt id='reflectionfunction.constants.is-deprecated' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionFunction::IS_DEPRECATED</tt></b></span> </dt><dd class='listitem'> <p class='para'>Description here...</p> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionfunction.construct.php'>ReflectionFunction::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a ReflectionFunction object</li><li><a href='http://www.php.net/manual/en/reflectionfunction.export.php'>ReflectionFunction::export</a> &amp;acirc;&amp;#128;&amp;#148; Exports function</li><li><a href='http://www.php.net/manual/en/reflectionfunction.invoke.php'>ReflectionFunction::invoke</a> &amp;acirc;&amp;#128;&amp;#148; Invokes function</li><li><a href='http://www.php.net/manual/en/reflectionfunction.invokeargs.php'>ReflectionFunction::invokeArgs</a> &amp;acirc;&amp;#128;&amp;#148; Invokes function args</li><li><a href='http://www.php.net/manual/en/reflectionfunction.isdisabled.php'>ReflectionFunction::isDisabled</a> &amp;acirc;&amp;#128;&amp;#148; Checks if function is disabled</li><li><a href='http://www.php.net/manual/en/reflectionfunction.tostring.php'>ReflectionFunction::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::__toString" value="<div id='reflectionextension.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.tostring.php'>ReflectionExtension::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionextension.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionExtension::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To a string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionextension.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A string. </p> </div> <a name='reflectionextension.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::__construct</a> - Constructs a ReflectionExtension</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::__construct" value="<div id='reflectionextension.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.construct.php'>ReflectionExtension::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a ReflectionExtension</span></p> </div> <a name='reflectionextension.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionExtension::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Construct a <a href='http://www.php.net/manual/en/class.reflectionextension.php' class='classname'>ReflectionExtension</a> <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionextension.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the extension. </p> </dd> </dl> <p> </p> </div> <a name='reflectionextension.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionextension.php' class='classname'>ReflectionExtension</a> <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='reflectionextension.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.info.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::info</a> - Gets extension info</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::__clone" value="<div id='reflectionextension.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.clone.php'>ReflectionExtension::__clone</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::__clone</span> &amp;mdash; <span class='dc-title'>Clones</span></p> </div> <a name='reflectionextension.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionExtension::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Clones. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionextension.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionextension.clone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::__construct</a> - Constructs a ReflectionExtension</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.cloning.php' class='link'>Object cloning</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::info" value="<div id='reflectionextension.info' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.info.php'>ReflectionExtension::info</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::info</span> &amp;mdash; <span class='dc-title'>Gets extension info</span></p> </div> <a name='reflectionextension.info.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionExtension::info</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets information about an extension. </p> </div> <a name='reflectionextension.info.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.info.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Information about the extension. </p> </div> <a name='reflectionextension.info.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::info</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqli'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>info</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> mysqli MysqlI Support =&amp;gt; enabled Client API library version =&amp;gt; mysqlnd 5.0.5-dev - 081106 - $Revision: 287332 $ Active Persistent Links =&amp;gt; 0 Inactive Persistent Links =&amp;gt; 0 Active Links =&amp;gt; 0 Persistent cache =&amp;gt; enabled put_hits =&amp;gt; 0 put_misses =&amp;gt; 0 get_hits =&amp;gt; 0 get_misses =&amp;gt; 0 size =&amp;gt; 2000 free_items =&amp;gt; 2000 references =&amp;gt; 2 Directive =&amp;gt; Local Value =&amp;gt; Master Value mysqli.max_links =&amp;gt; Unlimited =&amp;gt; Unlimited mysqli.max_persistent =&amp;gt; Unlimited =&amp;gt; Unlimited mysqli.allow_persistent =&amp;gt; On =&amp;gt; On mysqli.default_host =&amp;gt; no value =&amp;gt; no value mysqli.default_user =&amp;gt; no value =&amp;gt; no value mysqli.default_pw =&amp;gt; no value =&amp;gt; no value mysqli.default_port =&amp;gt; 3306 =&amp;gt; 3306 mysqli.default_socket =&amp;gt; no value =&amp;gt; no value mysqli.reconnect =&amp;gt; Off =&amp;gt; Off mysqli.allow_local_infile =&amp;gt; On =&amp;gt; On mysqli.cache_size =&amp;gt; 2000 =&amp;gt; 2000 NULL </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.info.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getName</a> - Gets extension name</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getVersion" value="<div id='reflectionextension.getversion' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getversion.php'>ReflectionExtension::getVersion</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getVersion</span> &amp;mdash; <span class='dc-title'>Gets extension version</span></p> </div> <a name='reflectionextension.getversion.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionExtension::getVersion</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the version of the extension. </p> </div> <a name='reflectionextension.getversion.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getversion.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The version of the extension. </p> </div> <a name='reflectionextension.getversion.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getVersion</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqli'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getVersion</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(3) &amp;quot;0.1&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getversion.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.info.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::info</a> - Gets extension info</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getName" value="<div id='reflectionextension.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getname.php'>ReflectionExtension::getName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getName</span> &amp;mdash; <span class='dc-title'>Gets extension name</span></p> </div> <a name='reflectionextension.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionExtension::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the extensions name. </p> </div> <a name='reflectionextension.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The extensions name. </p> </div> <a name='reflectionextension.getname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getName</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqli'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(6) &amp;quot;mysqli&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclassnames.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getClassNames</a> - Gets class names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getINIEntries" value="<div id='reflectionextension.getinientries' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getinientries.php'>ReflectionExtension::getINIEntries</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getINIEntries</span> &amp;mdash; <span class='dc-title'>Gets extension ini entries</span></p> </div> <a name='reflectionextension.getinientries.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getINIEntries</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the ini entries for an extension. </p> </div> <a name='reflectionextension.getinientries.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getinientries.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> with the ini entries as keys, with their defined values as values. </p> </div> <a name='reflectionextension.getinientries.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getfunctions.php' class='function'>ReflectionExtension::getFunctions</a></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dom&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysql'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dom</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getINIEntries</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [mysql.allow_persistent] =&amp;gt; 1 [mysql.max_persistent] =&amp;gt; -1 [mysql.max_links] =&amp;gt; -1 [mysql.default_host] =&amp;gt; [mysql.default_user] =&amp;gt; [mysql.default_password] =&amp;gt; [mysql.default_port] =&amp;gt; [mysql.default_socket] =&amp;gt; [mysql.connect_timeout] =&amp;gt; 60 [mysql.trace_mode] =&amp;gt; [mysql.allow_local_infile] =&amp;gt; 1 [mysql.cache_size] =&amp;gt; 2000 ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getinientries.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getconstants.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getConstants</a> - Gets constants</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getFunctions" value="<div id='reflectionextension.getfunctions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getfunctions.php'>ReflectionExtension::getFunctions</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getFunctions</span> &amp;mdash; <span class='dc-title'>Gets extension functions</span></p> </div> <a name='reflectionextension.getfunctions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getFunctions</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get defined functions from an extension. </p> </div> <a name='reflectionextension.getfunctions.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getfunctions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An associative array of <a href='http://www.php.net/manual/en/class.reflectionfunction.php' class='classname'>ReflectionFunction</a> objects, for each function defined in the extension with the keys being the function names. If no function are defined, an empty array is returned. </p> </div> <a name='reflectionextension.getfunctions.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getFunctions</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dom&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SimpleXML'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dom</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFunctions</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [simplexml_load_file] =&amp;gt; ReflectionFunction Object ( [name] =&amp;gt; simplexml_load_file ) [simplexml_load_string] =&amp;gt; ReflectionFunction Object ( [name] =&amp;gt; simplexml_load_string ) [simplexml_import_dom] =&amp;gt; ReflectionFunction Object ( [name] =&amp;gt; simplexml_import_dom ) ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getfunctions.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclasses.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getClasses</a> - Gets classes</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getDependencies" value="<div id='reflectionextension.getdependencies' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getdependencies.php'>ReflectionExtension::getDependencies</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getDependencies</span> &amp;mdash; <span class='dc-title'>Gets dependencies</span></p> </div> <a name='reflectionextension.getdependencies.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getDependencies</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets dependencies, by listing both required and conflicting dependencies. </p> </div> <a name='reflectionextension.getdependencies.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getdependencies.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> with dependencies as keys and either <i>Required</i> or <i>Conflicts</i> as the values. </p> </div> <a name='reflectionextension.getdependencies.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getDependencies</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dom&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'dom'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dom</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getDependencies</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [libxml] =&amp;gt; Required [domxml] =&amp;gt; Conflicts ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getdependencies.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionClass::getVersion</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getConstants" value="<div id='reflectionextension.getconstants' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getconstants.php'>ReflectionExtension::getConstants</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getConstants</span> &amp;mdash; <span class='dc-title'>Gets constants</span></p> </div> <a name='reflectionextension.getconstants.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getConstants</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get defined constants from an extension. </p> </div> <a name='reflectionextension.getconstants.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getconstants.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An associative array with constant names as keys. </p> </div> <a name='reflectionextension.getconstants.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclasses.php' class='function'>ReflectionExtension::getClasses</a></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DOM'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getConstants</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [XML_ELEMENT_NODE] =&amp;gt; 1 [XML_ATTRIBUTE_NODE] =&amp;gt; 2 [XML_TEXT_NODE] =&amp;gt; 3 [XML_CDATA_SECTION_NODE] =&amp;gt; 4 [XML_ENTITY_REF_NODE] =&amp;gt; 5 [XML_ENTITY_NODE] =&amp;gt; 6 [XML_PI_NODE] =&amp;gt; 7 [XML_COMMENT_NODE] =&amp;gt; 8 [XML_DOCUMENT_NODE] =&amp;gt; 9 [XML_DOCUMENT_TYPE_NODE] =&amp;gt; 10 [XML_DOCUMENT_FRAG_NODE] =&amp;gt; 11 [XML_NOTATION_NODE] =&amp;gt; 12 [XML_HTML_DOCUMENT_NODE] =&amp;gt; 13 [XML_DTD_NODE] =&amp;gt; 14 [XML_ELEMENT_DECL_NODE] =&amp;gt; 15 [XML_ATTRIBUTE_DECL_NODE] =&amp;gt; 16 [XML_ENTITY_DECL_NODE] =&amp;gt; 17 [XML_NAMESPACE_DECL_NODE] =&amp;gt; 18 [XML_LOCAL_NAMESPACE] =&amp;gt; 18 [XML_ATTRIBUTE_CDATA] =&amp;gt; 1 [XML_ATTRIBUTE_ID] =&amp;gt; 2 [XML_ATTRIBUTE_IDREF] =&amp;gt; 3 [XML_ATTRIBUTE_IDREFS] =&amp;gt; 4 [XML_ATTRIBUTE_ENTITY] =&amp;gt; 6 [XML_ATTRIBUTE_NMTOKEN] =&amp;gt; 7 [XML_ATTRIBUTE_NMTOKENS] =&amp;gt; 8 [XML_ATTRIBUTE_ENUMERATION] =&amp;gt; 9 [XML_ATTRIBUTE_NOTATION] =&amp;gt; 10 [DOM_PHP_ERR] =&amp;gt; 0 [DOM_INDEX_SIZE_ERR] =&amp;gt; 1 [DOMSTRING_SIZE_ERR] =&amp;gt; 2 [DOM_HIERARCHY_REQUEST_ERR] =&amp;gt; 3 [DOM_WRONG_DOCUMENT_ERR] =&amp;gt; 4 [DOM_INVALID_CHARACTER_ERR] =&amp;gt; 5 [DOM_NO_DATA_ALLOWED_ERR] =&amp;gt; 6 [DOM_NO_MODIFICATION_ALLOWED_ERR] =&amp;gt; 7 [DOM_NOT_FOUND_ERR] =&amp;gt; 8 [DOM_NOT_SUPPORTED_ERR] =&amp;gt; 9 [DOM_INUSE_ATTRIBUTE_ERR] =&amp;gt; 10 [DOM_INVALID_STATE_ERR] =&amp;gt; 11 [DOM_SYNTAX_ERR] =&amp;gt; 12 [DOM_INVALID_MODIFICATION_ERR] =&amp;gt; 13 [DOM_NAMESPACE_ERR] =&amp;gt; 14 [DOM_INVALID_ACCESS_ERR] =&amp;gt; 15 [DOM_VALIDATION_ERR] =&amp;gt; 16 ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getconstants.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getinientries.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getINIEntries</a> - Gets extension ini entries</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getClassNames" value="<div id='reflectionextension.getclassnames' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getclassnames.php'>ReflectionExtension::getClassNames</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getClassNames</span> &amp;mdash; <span class='dc-title'>Gets class names</span></p> </div> <a name='reflectionextension.getclassnames.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getClassNames</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a listing of class names as defined in the extension. </p> </div> <a name='reflectionextension.getclassnames.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getclassnames.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of class names, as defined in the extension. If no classes are defined, an empty array is returned. </p> </div> <a name='reflectionextension.getclassnames.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getClassNames</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'XMLWriter'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getClassNames</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [0]=&amp;gt; string(9) &amp;quot;XMLWriter&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getclassnames.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclasses.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getClasses</a> - Gets classes</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getName</a> - Gets extension name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::getClasses" value="<div id='reflectionextension.getclasses' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.getclasses.php'>ReflectionExtension::getClasses</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::getClasses</span> &amp;mdash; <span class='dc-title'>Gets classes</span></p> </div> <a name='reflectionextension.getclasses.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionExtension::getClasses</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a list of classes from an extension. </p> </div> <a name='reflectionextension.getclasses.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionextension.getclasses.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array of <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> objects, one for each class within the extension. If no classes are defined, an empty array is returned. </p> </div> <a name='reflectionextension.getclasses.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionExtension::getClasses</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$ext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionExtension</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'XMLWriter'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ext</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getClasses</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [&amp;quot;XMLWriter&amp;quot;]=&amp;gt; &amp;amp;object(ReflectionClass)#2 (1) { [&amp;quot;name&amp;quot;]=&amp;gt; string(9) &amp;quot;XMLWriter&amp;quot; } } </pre></div> </div> </div><p> </p> </div> <a name='reflectionextension.getclasses.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclassnames.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::getClassNames</a> - Gets class names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension::export" value="<div id='reflectionextension.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionextension.export.php'>ReflectionExtension::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionExtension::export</span> &amp;mdash; <span class='dc-title'>Export</span></p> </div> <a name='reflectionextension.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionExtension::export</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Exports a reflected extension. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionextension.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionextension.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflectionextension.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.info.php' class='function' rel='rdfs-seeAlso'>ReflectionExtension::info</a> - Gets extension info</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionExtension" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionextension.php'>The ReflectionExtension class</a></h1> <div class='partintro'> <div id='reflectionextension.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionExtension</b> class reports information about an extension. </p> </div> <div id='reflectionextension.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionExtension</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionExtension</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionextension.php#reflectionextension.props.name'>$name</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclasses.php' class='function'>getClasses</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getclassnames.php' class='function'>getClassNames</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getconstants.php' class='function'>getConstants</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getdependencies.php' class='function'>getDependencies</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getfunctions.php' class='function'>getFunctions</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getinientries.php' class='function'>getINIEntries</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.getversion.php' class='function'>getVersion</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.info.php' class='function'>info</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionextension.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionextension.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionextension.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionextension.clone.php'>ReflectionExtension::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clones</li><li><a href='http://www.php.net/manual/en/reflectionextension.construct.php'>ReflectionExtension::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a ReflectionExtension</li><li><a href='http://www.php.net/manual/en/reflectionextension.export.php'>ReflectionExtension::export</a> &amp;acirc;&amp;#128;&amp;#148; Export</li><li><a href='http://www.php.net/manual/en/reflectionextension.getclasses.php'>ReflectionExtension::getClasses</a> &amp;acirc;&amp;#128;&amp;#148; Gets classes</li><li><a href='http://www.php.net/manual/en/reflectionextension.getclassnames.php'>ReflectionExtension::getClassNames</a> &amp;acirc;&amp;#128;&amp;#148; Gets class names</li><li><a href='http://www.php.net/manual/en/reflectionextension.getconstants.php'>ReflectionExtension::getConstants</a> &amp;acirc;&amp;#128;&amp;#148; Gets constants</li><li><a href='http://www.php.net/manual/en/reflectionextension.getdependencies.php'>ReflectionExtension::getDependencies</a> &amp;acirc;&amp;#128;&amp;#148; Gets dependencies</li><li><a href='http://www.php.net/manual/en/reflectionextension.getfunctions.php'>ReflectionExtension::getFunctions</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension functions</li><li><a href='http://www.php.net/manual/en/reflectionextension.getinientries.php'>ReflectionExtension::getINIEntries</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension ini entries</li><li><a href='http://www.php.net/manual/en/reflectionextension.getname.php'>ReflectionExtension::getName</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension name</li><li><a href='http://www.php.net/manual/en/reflectionextension.getversion.php'>ReflectionExtension::getVersion</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension version</li><li><a href='http://www.php.net/manual/en/reflectionextension.info.php'>ReflectionExtension::info</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension info</li><li><a href='http://www.php.net/manual/en/reflectionextension.tostring.php'>ReflectionExtension::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::__toString" value="<div id='reflectionclass.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.tostring.php'>ReflectionClass::__toString</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::__toString</span> &amp;mdash; <span class='dc-title'>To string</span></p> </div> <a name='reflectionclass.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> To a string. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.tostring.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.export.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::export</a> - Exports a class</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring' class='link'>__toString</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::__construct" value="<div id='reflectionclass.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.construct.php'>ReflectionClass::__construct</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::__construct</span> &amp;mdash; <span class='dc-title'>Constructs a ReflectionClass</span></p> </div> <a name='reflectionclass.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>ReflectionClass::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$argument</tt></span> )</div> <p class='para rdfs-comment'> Constructs a new <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> object. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>argument</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class being reflected. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionclass.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Basic usage ReflectionClass</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />Reflection</span><span style='color: #007700'>::</span><span style='color: #0000BB'>export</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Exception'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Class [ &amp;lt;internal:Core&amp;gt; class Exception ] { - Constants [0] { } - Static properties [0] { } - Static methods [0] { } - Properties [7] { Property [ &amp;lt;default&amp;gt; protected $message ] Property [ &amp;lt;default&amp;gt; private $string ] Property [ &amp;lt;default&amp;gt; protected $code ] Property [ &amp;lt;default&amp;gt; protected $file ] Property [ &amp;lt;default&amp;gt; protected $line ] Property [ &amp;lt;default&amp;gt; private $trace ] Property [ &amp;lt;default&amp;gt; private $previous ] } - Methods [10] { Method [ &amp;lt;internal:Core&amp;gt; final private method __clone ] { } Method [ &amp;lt;internal:Core, ctor&amp;gt; public method __construct ] { - Parameters [3] { Parameter #0 [ &amp;lt;optional&amp;gt; $message ] Parameter #1 [ &amp;lt;optional&amp;gt; $code ] Parameter #2 [ &amp;lt;optional&amp;gt; $previous ] } } Method [ &amp;lt;internal:Core&amp;gt; final public method getMessage ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getCode ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getFile ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getLine ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getTrace ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getPrevious ] { } Method [ &amp;lt;internal:Core&amp;gt; final public method getTraceAsString ] { } Method [ &amp;lt;internal:Core&amp;gt; public method __toString ] { } } } </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionobject.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionObject::__construct</a> - Constructs a ReflectionObject</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>Constructors</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::__clone" value="<div id='reflectionclass.clone' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.clone.php'>ReflectionClass::__clone</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::__clone</span> &amp;mdash; <span class='dc-title'>Clones object</span></p> </div> <a name='reflectionclass.clone.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionClass::__clone</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Clones. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.clone.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.clone.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionclass.clone.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.tostring.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::__tostring</a> - To string</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.cloning.php' class='link'>Object cloning</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::setStaticPropertyValue" value="<div id='reflectionclass.setstaticpropertyvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php'>ReflectionClass::setStaticPropertyValue</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::setStaticPropertyValue</span> &amp;mdash; <span class='dc-title'>Sets static property value</span></p> </div> <a name='reflectionclass.setstaticpropertyvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ReflectionClass::setStaticPropertyValue</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Sets static property value. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.setstaticpropertyvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Property name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> New property value. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.setstaticpropertyvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='reflectionclass.setstaticpropertyvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getStaticPropertyValue</a> - Gets static property value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::newInstanceArgs" value="<div id='reflectionclass.newinstanceargs' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.newinstanceargs.php'>ReflectionClass::newInstanceArgs</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.3)</p><p class='refpurpose'><span class='refname'>ReflectionClass::newInstanceArgs</span> &amp;mdash; <span class='dc-title'>New instance args</span></p> </div> <a name='reflectionclass.newinstanceargs.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>ReflectionClass::newInstanceArgs</b></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> ] )</div> <p class='para rdfs-comment'> New instance args. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.newinstanceargs.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.newinstanceargs.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.newinstanceargs.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstance.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::newInstance</a> - New instance</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::newInstance" value="<div id='reflectionclass.newinstance' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.newinstance.php'>ReflectionClass::newInstance</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::newInstance</span> &amp;mdash; <span class='dc-title'>New instance</span></p> </div> <a name='reflectionclass.newinstance.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>ReflectionClass::newInstance</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> A new instance. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.newinstance.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Accepts a variable number of arguments which are passed to the function much like <a href='http://www.php.net/manual/en/function.call-user-func.php' class='function'>call_user_func()</a>. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.newinstance.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.newinstance.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstanceargs.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::newInstanceArgs</a> - New instance args</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isUserDefined" value="<div id='reflectionclass.isuserdefined' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isuserdefined.php'>ReflectionClass::isUserDefined</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isUserDefined</span> &amp;mdash; <span class='dc-title'>Checks if user defined</span></p> </div> <a name='reflectionclass.isuserdefined.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isUserDefined</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the class is user-defined, as opposed to internal. </p> </div> <a name='reflectionclass.isuserdefined.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isuserdefined.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isuserdefined.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinternal.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInternal</a> - Checks if internal</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isSubclassOf" value="<div id='reflectionclass.issubclassof' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.issubclassof.php'>ReflectionClass::isSubclassOf</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isSubclassOf</span> &amp;mdash; <span class='dc-title'>Checks if a subclass</span></p> </div> <a name='reflectionclass.issubclassof.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isSubclassOf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class</tt></span> )</div> <p class='para rdfs-comment'> Checks if the class is a subclass of a specified class. </p> </div> <a name='reflectionclass.issubclassof.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name being checked against. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.issubclassof.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.issubclassof.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInterface</a> - Checks if interface</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.is-subclass-of.php' class='function' rel='rdfs-seeAlso'>is_subclass_of()</a> - Checks if the object has this class as one of its parents</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-parent-class.php' class='function' rel='rdfs-seeAlso'>get_parent_class()</a> - Retrieves the parent class name for object or class</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isIterateable" value="<div id='reflectionclass.isiterateable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isiterateable.php'>ReflectionClass::isIterateable</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isIterateable</span> &amp;mdash; <span class='dc-title'>Checks if iterateable</span></p> </div> <a name='reflectionclass.isiterateable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isIterateable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the class is iterateable. </p> </div> <a name='reflectionclass.isiterateable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isiterateable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isiterateable.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::isIterateable</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>IteratorClass&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>Iterator&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>()&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />}<br />class&amp;nbsp;</span><span style='color: #0000BB'>DerivedClass&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>IteratorClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br />class&amp;nbsp;</span><span style='color: #0000BB'>NonIterator&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>dump_iterateable</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$reflection&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$reflection</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isIterateable</span><span style='color: #007700'>());<br />}<br /><br /></span><span style='color: #0000BB'>$classes&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'ArrayObject'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'IteratorClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'DerivedClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'NonIterator'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$classes&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Is&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #DD0000'>&amp;nbsp;iterateable?&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>dump_iterateable</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Is ArrayObject iterateable? bool(true) Is IteratorClass iterateable? bool(true) Is DerivedClass iterateable? bool(true) Is NonIterator iterateable? bool(false) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.isiterateable.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::__construct</a> - Constructs a ReflectionClass</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isInternal" value="<div id='reflectionclass.isinternal' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isinternal.php'>ReflectionClass::isInternal</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isInternal</span> &amp;mdash; <span class='dc-title'>Checks if internal</span></p> </div> <a name='reflectionclass.isinternal.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isInternal</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the class is internal, as opposed to user-defined. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.isinternal.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isinternal.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isinternal.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isuserdefined.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isUserDefined</a> - Checks if user defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isInterface" value="<div id='reflectionclass.isinterface' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isinterface.php'>ReflectionClass::isInterface</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isInterface</span> &amp;mdash; <span class='dc-title'>Checks if interface</span></p> </div> <a name='reflectionclass.isinterface.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isInterface</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks whether the class is an interface. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.isinterface.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isinterface.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isinterface.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstance.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInstance</a> - Checks class for instance</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isInstantiable" value="<div id='reflectionclass.isinstantiable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isinstantiable.php'>ReflectionClass::isInstantiable</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isInstantiable</span> &amp;mdash; <span class='dc-title'>Checks if instantiable</span></p> </div> <a name='reflectionclass.isinstantiable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isInstantiable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the class is instanciable. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.isinstantiable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isinstantiable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isinstantiable.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::isInstantiable</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>C&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />interface&amp;nbsp;</span><span style='color: #0000BB'>iface&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>f1</span><span style='color: #007700'>();<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>ifaceImpl&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>iface&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>f1</span><span style='color: #007700'>()&amp;nbsp;{}<br />}<br /><br />abstract&amp;nbsp;class&amp;nbsp;</span><span style='color: #0000BB'>abstractClass&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>f1</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;abstract&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>f2</span><span style='color: #007700'>();<br />}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>D&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>abstractClass&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>f2</span><span style='color: #007700'>()&amp;nbsp;{&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$classes&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'C'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'iface'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ifaceImpl'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'abstractClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'D'</span><span style='color: #007700'>);<br /><br />foreach(</span><span style='color: #0000BB'>$classes&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$class&amp;nbsp;</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$reflectionClass&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Is&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #DD0000'>&amp;nbsp;instantiable?&amp;nbsp;&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$reflectionClass</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>IsInstantiable</span><span style='color: #007700'>());&amp;nbsp;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Is C instantiable? bool(true) Is iface instantiable? bool(false) Is ifaceImpl instantiable? bool(true) Is abstractClass instantiable? bool(false) Is D instantiable? bool(true) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.isinstantiable.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstance.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInstance</a> - Checks class for instance</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isInstance" value="<div id='reflectionclass.isinstance' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isinstance.php'>ReflectionClass::isInstance</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isInstance</span> &amp;mdash; <span class='dc-title'>Checks class for instance</span></p> </div> <a name='reflectionclass.isinstance.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isInstance</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> )</div> <p class='para rdfs-comment'> Checks if a class is an instance of an object. </p> </div> <a name='reflectionclass.isinstance.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The object being compared to. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.isinstance.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isinstance.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::isInstance</b></span> related examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Example&amp;nbsp;usage<br /></span><span style='color: #0000BB'>$class&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isInstance</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arg</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Yes'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Equivalent&amp;nbsp;to<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$arg&amp;nbsp;</span><span style='color: #007700'>instanceof&amp;nbsp;</span><span style='color: #0000BB'>Foo</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Yes'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Equivalent&amp;nbsp;to<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>is_a</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arg</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Yes'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Yes Yes Yes </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.isinstance.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInterface</a> - Checks if interface</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.type.php' class='link'>Type operators (instanceof)</a></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.interfaces.php' class='link'>Object Interfaces</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.is-a.php' class='function' rel='rdfs-seeAlso'>is_a()</a> - Checks if the object is of this class or has this class as one of its parents</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isFinal" value="<div id='reflectionclass.isfinal' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isfinal.php'>ReflectionClass::isFinal</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isFinal</span> &amp;mdash; <span class='dc-title'>Checks if class is final</span></p> </div> <a name='reflectionclass.isfinal.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isFinal</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if a class is final. </p> </div> <a name='reflectionclass.isfinal.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isfinal.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isfinal.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isabstract.php' class='function'>ReflectionClass::isAbstract</a></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>TestClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br />final&amp;nbsp;class&amp;nbsp;</span><span style='color: #0000BB'>TestFinalClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$normalClass&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestClass'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$finalClass&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestFinalClass'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$normalClass</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFinal</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$finalClass</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFinal</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) bool(true) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.isfinal.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isabstract.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isAbstract</a> - Checks if class is abstract</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.final.php' class='link'>Final Keyword</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::isAbstract" value="<div id='reflectionclass.isabstract' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.isabstract.php'>ReflectionClass::isAbstract</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::isAbstract</span> &amp;mdash; <span class='dc-title'>Checks if class is abstract</span></p> </div> <a name='reflectionclass.isabstract.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::isAbstract</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the class is abstract. </p> </div> <a name='reflectionclass.isabstract.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.isabstract.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.isabstract.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::isAbstract</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>TestClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br />abstract&amp;nbsp;class&amp;nbsp;</span><span style='color: #0000BB'>TestAbstractClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$testClass&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestClass'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$abstractClass&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestAbstractClass'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$testClass</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isAbstract</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$abstractClass</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isAbstract</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) bool(true) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.isabstract.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInterface</a> - Checks if interface</span></li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.abstract.php' class='link'>Class Abstraction</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::implementsInterface" value="<div id='reflectionclass.implementsinterface' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.implementsinterface.php'>ReflectionClass::implementsInterface</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::implementsInterface</span> &amp;mdash; <span class='dc-title'>Implements interface</span></p> </div> <a name='reflectionclass.implementsinterface.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::implementsInterface</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$interface</tt></span> )</div> <p class='para rdfs-comment'> Checks whether it implements an interface. </p> </div> <a name='reflectionclass.implementsinterface.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>interface</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The interface name. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.implementsinterface.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='reflectionclass.implementsinterface.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::isInterface</a> - Checks if interface</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.interface-exists.php' class='function' rel='rdfs-seeAlso'>interface_exists()</a> - Checks if the interface has been defined</li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.interfaces.php' class='link'>Object Interfaces</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::hasProperty" value="<div id='reflectionclass.hasproperty' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.hasproperty.php'>ReflectionClass::hasProperty</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::hasProperty</span> &amp;mdash; <span class='dc-title'>Checks if property is defined</span></p> </div> <a name='reflectionclass.hasproperty.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::hasProperty</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Checks whether the specified property is defined. </p> </div> <a name='reflectionclass.hasproperty.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the property being checked for. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.hasproperty.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it has the property, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionclass.hasproperty.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::hasProperty</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$p1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$p2</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$p3</span><span style='color: #007700'>;<br /><br />}<br /><br /></span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionObject</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>Foo</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'p1'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'p2'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'p3'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasProperty</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'p4'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(true) bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.hasproperty.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasconstant.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasConstant</a> - Checks if constant is defined</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasmethod.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasMethod</a> - Checks if method is defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::hasMethod" value="<div id='reflectionclass.hasmethod' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.hasmethod.php'>ReflectionClass::hasMethod</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::hasMethod</span> &amp;mdash; <span class='dc-title'>Checks if method is defined</span></p> </div> <a name='reflectionclass.hasmethod.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::hasMethod</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Checks whether a specific method is defined in a class. </p> </div> <a name='reflectionclass.hasmethod.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the method being checked for. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.hasmethod.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if it has the method, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionclass.hasmethod.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::hasMethod</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>Class&amp;nbsp;</span><span style='color: #0000BB'>C&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>publicFoo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>protectedFoo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>privateFoo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>staticFoo</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$rc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'C'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'publicFoo'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'protectedFoo'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'privateFoo'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'staticFoo'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;C&amp;nbsp;should&amp;nbsp;not&amp;nbsp;have&amp;nbsp;method&amp;nbsp;bar<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Method&amp;nbsp;names&amp;nbsp;are&amp;nbsp;case&amp;nbsp;insensitive<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasMethod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PUBLICfOO'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(true) bool(true) bool(true) bool(false) bool(true) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.hasmethod.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasconstant.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasConstant</a> - Checks if constant is defined</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasproperty.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasProperty</a> - Checks if property is defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::hasConstant" value="<div id='reflectionclass.hasconstant' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.hasconstant.php'>ReflectionClass::hasConstant</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::hasConstant</span> &amp;mdash; <span class='dc-title'>Checks if constant is defined</span></p> </div> <a name='reflectionclass.hasconstant.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>ReflectionClass::hasConstant</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Checks whether the class has a specific constant defined or not. </p> </div> <a name='reflectionclass.hasconstant.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the constant being checked for. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.hasconstant.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the constant is defined, otherwise <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='reflectionclass.hasconstant.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::hasConstant</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const&amp;nbsp;</span><span style='color: #0000BB'>c1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$class&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasConstant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c1'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasConstant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c2'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.hasconstant.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasmethod.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasMethod</a> - Checks if method is defined</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasproperty.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::hasProperty</a> - Checks if property is defined</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getStaticPropertyValue" value="<div id='reflectionclass.getstaticpropertyvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php'>ReflectionClass::getStaticPropertyValue</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getStaticPropertyValue</span> &amp;mdash; <span class='dc-title'>Gets static property value</span></p> </div> <a name='reflectionclass.getstaticpropertyvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionClass::getStaticPropertyValue</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$default</tt></span> ] )</div> <p class='para rdfs-comment'> Gets the static property values. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getstaticpropertyvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>default</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getstaticpropertyvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.getstaticpropertyvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticproperties.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getStaticProperties</a> - Gets static properties</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::setStaticPropertyValue</a> - Sets static property value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getStaticProperties" value="<div id='reflectionclass.getstaticproperties' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getstaticproperties.php'>ReflectionClass::getStaticProperties</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getStaticProperties</span> &amp;mdash; <span class='dc-title'>Gets static properties</span></p> </div> <a name='reflectionclass.getstaticproperties.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getStaticProperties</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the static properties. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getstaticproperties.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getstaticproperties.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The static properties, as an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. </p> </div> <a name='reflectionclass.getstaticproperties.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getStaticPropertyValue</a> - Gets static property value</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::setStaticPropertyValue</a> - Sets static property value</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getStartLine" value="<div id='reflectionclass.getstartline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getstartline.php'>ReflectionClass::getStartLine</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getStartLine</span> &amp;mdash; <span class='dc-title'>Gets starting line number</span></p> </div> <a name='reflectionclass.getstartline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionClass::getStartLine</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the starting line number. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getstartline.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getstartline.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The starting line number, as an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='reflectionclass.getstartline.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getendline.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getEndLine</a> - Gets end line</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getProperty" value="<div id='reflectionclass.getproperty' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getproperty.php'>ReflectionClass::getProperty</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getProperty</span> &amp;mdash; <span class='dc-title'>Gets property</span></p> </div> <a name='reflectionclass.getproperty.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionproperty.php' class='type ReflectionProperty'>ReflectionProperty</a></span> <span class='methodname'><b>ReflectionClass::getProperty</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Gets a property. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getproperty.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The property name. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getproperty.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionproperty.php' class='classname'>ReflectionProperty</a>. </p> </div> <a name='reflectionclass.getproperty.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getProperties</a> - Gets properties</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getProperties" value="<div id='reflectionclass.getproperties' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getproperties.php'>ReflectionClass::getProperties</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getProperties</span> &amp;mdash; <span class='dc-title'>Gets properties</span></p> </div> <a name='reflectionclass.getproperties.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionproperty.php' class='type ReflectionProperty'>ReflectionProperty</a></span> <span class='methodname'><b>ReflectionClass::getProperties</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <p class='para rdfs-comment'> Gets the properties. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getproperties.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional filter. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getproperties.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionproperty.php' class='classname'>ReflectionProperty</a>. </p> </div> <a name='reflectionclass.getproperties.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperty.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getProperty</a> - Gets property</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getParentClass" value="<div id='reflectionclass.getparentclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getparentclass.php'>ReflectionClass::getParentClass</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getParentClass</span> &amp;mdash; <span class='dc-title'>Gets parent class</span></p> </div> <a name='reflectionclass.getparentclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>ReflectionClass::getParentClass</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getparentclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getparentclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a>. </p> </div> <a name='reflectionclass.getparentclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.construct.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::__construct</a> - Constructs a ReflectionClass</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getName" value="<div id='reflectionclass.getname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getname.php'>ReflectionClass::getName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getName</span> &amp;mdash; <span class='dc-title'>Gets class name</span></p> </div> <a name='reflectionclass.getname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::getName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the class name. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The class name. </p> </div> <a name='reflectionclass.getname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::getName</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>namespace&amp;nbsp;</span><span style='color: #0000BB'>A</span><span style='color: #007700'>\</span><span style='color: #0000BB'>B</span><span style='color: #007700'>;<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$function&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;\</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'stdClass'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>inNamespace</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getNamespaceName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getShortName</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$function&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;\</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'A\\B\\Foo'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>inNamespace</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getNamespaceName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$function</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getShortName</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) string(8) &amp;quot;stdClass&amp;quot; string(0) &amp;quot;&amp;quot; string(8) &amp;quot;stdClass&amp;quot; bool(true) string(7) &amp;quot;A\B\Foo&amp;quot; string(3) &amp;quot;A\B&amp;quot; string(3) &amp;quot;Foo&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.getname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getnamespacename.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getNamespaceName</a> - Gets namespace name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getModifiers" value="<div id='reflectionclass.getmodifiers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getmodifiers.php'>ReflectionClass::getModifiers</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getModifiers</span> &amp;mdash; <span class='dc-title'>Gets modifiers</span></p> </div> <a name='reflectionclass.getmodifiers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionClass::getModifiers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getmodifiers.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getmodifiers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.getmodifiers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getProperties</a> - Gets properties</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getMethods" value="<div id='reflectionclass.getmethods' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getmethods.php'>ReflectionClass::getMethods</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getMethods</span> &amp;mdash; <span class='dc-title'>Gets a list of methods</span></p> </div> <a name='reflectionclass.getmethods.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getMethods</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <p class='para rdfs-comment'> Gets a list of methods. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getmethods.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filter. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getmethods.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of methods. </p> </div> <a name='reflectionclass.getmethods.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmethod.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getMethod</a> - Gets a ReflectionMethod</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getMethod" value="<div id='reflectionclass.getmethod' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getmethod.php'>ReflectionClass::getMethod</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getMethod</span> &amp;mdash; <span class='dc-title'>Gets a ReflectionMethod</span></p> </div> <a name='reflectionclass.getmethod.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>ReflectionClass::getMethod</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Gets a <a href='http://www.php.net/manual/en/class.reflectionmethod.php' class='classname'>ReflectionMethod</a> about a method. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getmethod.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The method name to reflect. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getmethod.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionmethod.php' class='classname'>ReflectionMethod</a>. </p> </div> <a name='reflectionclass.getmethod.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>ReflectionClass::getMethod</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getInterfaces" value="<div id='reflectionclass.getinterfaces' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getinterfaces.php'>ReflectionClass::getInterfaces</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getInterfaces</span> &amp;mdash; <span class='dc-title'>Gets the interfaces</span></p> </div> <a name='reflectionclass.getinterfaces.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getInterfaces</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the interfaces. </p> </div> <a name='reflectionclass.getinterfaces.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getinterfaces.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of interfaces, with keys as interface names and the array values as <a href='http://www.php.net/manual/en/class.reflectionclass.php' class='classname'>ReflectionClass</a> objects. </p> </div> <a name='reflectionclass.getinterfaces.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::getInterfaces</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>interface&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />interface&amp;nbsp;</span><span style='color: #0000BB'>Bar&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Baz&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>Foo</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>Bar&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$rc1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Baz'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc1</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getInterfaces</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array Array ( [Foo] =&amp;gt; ReflectionClass Object ( [name] =&amp;gt; Foo ) [Bar] =&amp;gt; ReflectionClass Object ( [name] =&amp;gt; Bar ) ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.getinterfaces.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfacenames.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getInterfaceNames</a> - Gets the interface names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getInterfaceNames" value="<div id='reflectionclass.getinterfacenames' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getinterfacenames.php'>ReflectionClass::getInterfaceNames</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getInterfaceNames</span> &amp;mdash; <span class='dc-title'>Gets the interface names</span></p> </div> <a name='reflectionclass.getinterfacenames.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getInterfaceNames</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get the interface names. </p> </div> <a name='reflectionclass.getinterfacenames.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getinterfacenames.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A numerical array with interface names as the values. </p> </div> <a name='reflectionclass.getinterfacenames.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::getInterfaceNames</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>interface&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />interface&amp;nbsp;</span><span style='color: #0000BB'>Bar&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Baz&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>Foo</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>Bar&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$rc1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Baz'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc1</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getInterfaceNames</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Foo [1] =&amp;gt; Bar ) </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.getinterfacenames.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfaces.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getInterfaces</a> - Gets the interfaces</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getFileName" value="<div id='reflectionclass.getfilename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getfilename.php'>ReflectionClass::getFileName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getFileName</span> &amp;mdash; <span class='dc-title'>Gets a filename</span></p> </div> <a name='reflectionclass.getfilename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::getFileName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a filename. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getfilename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getfilename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The filename. </p> </div> <a name='reflectionclass.getfilename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextensionname.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getExtensionName</a> - Gets an extensions name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getExtensionName" value="<div id='reflectionclass.getextensionname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getextensionname.php'>ReflectionClass::getExtensionName</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getExtensionName</span> &amp;mdash; <span class='dc-title'>Gets an extensions name</span></p> </div> <a name='reflectionclass.getextensionname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::getExtensionName</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets an extensions name. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getextensionname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getextensionname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The extensions name. </p> </div> <a name='reflectionclass.getextensionname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextension.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getExtension</a> - Gets extension info</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getExtension" value="<div id='reflectionclass.getextension' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getextension.php'>ReflectionClass::getExtension</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getExtension</span> &amp;mdash; <span class='dc-title'>Gets extension info</span></p> </div> <a name='reflectionclass.getextension.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.reflectionextension.php' class='type ReflectionExtension'>ReflectionExtension</a></span> <span class='methodname'><b>ReflectionClass::getExtension</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets an extensions <a href='http://www.php.net/manual/en/class.reflectionextension.php' class='classname'>ReflectionExtension</a> object. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getextension.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getextension.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionextension.php' class='classname'>ReflectionExtension</a> object. </p> </div> <a name='reflectionclass.getextension.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextensionname.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getExtensionName</a> - Gets an extensions name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getEndLine" value="<div id='reflectionclass.getendline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getendline.php'>ReflectionClass::getEndLine</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getEndLine</span> &amp;mdash; <span class='dc-title'>Gets end line</span></p> </div> <a name='reflectionclass.getendline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>ReflectionClass::getEndLine</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets end line number from a user-defined class definition. </p> </div> <a name='reflectionclass.getendline.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getendline.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The ending line number of the user defined class, or <b><tt class='constant'>FALSE</tt></b> if unknown. </p> </div> <a name='reflectionclass.getendline.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::getEndLine</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Test&amp;nbsp;Class<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>TestClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$rc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestClass'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getEndLine</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 3 </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.getendline.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstartline.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getStartLine</a> - Gets starting line number</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getDocComment" value="<div id='reflectionclass.getdoccomment' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getdoccomment.php'>ReflectionClass::getDocComment</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getDocComment</span> &amp;mdash; <span class='dc-title'>Gets doc comments</span></p> </div> <a name='reflectionclass.getdoccomment.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::getDocComment</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets doc comments from a class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getdoccomment.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getdoccomment.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The doc comment if it exists, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='reflectionclass.getdoccomment.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>ReflectionClass::getDocComment</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/**&amp;nbsp;<br />*&amp;nbsp;A&amp;nbsp;test&amp;nbsp;class<br />*<br />*&amp;nbsp;@param&amp;nbsp;&amp;nbsp;foo&amp;nbsp;bar<br />*&amp;nbsp;@return&amp;nbsp;baz<br />*/<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>TestClass&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;}<br /><br /></span><span style='color: #0000BB'>$rc&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ReflectionClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestClass'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rc</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getDocComment</span><span style='color: #007700'>())<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(55) &amp;quot;/** * A test class * * @param foo bar * @return baz */&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='reflectionclass.getdoccomment.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getName</a> - Gets class name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getDefaultProperties" value="<div id='reflectionclass.getdefaultproperties' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getdefaultproperties.php'>ReflectionClass::getDefaultProperties</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getDefaultProperties</span> &amp;mdash; <span class='dc-title'>Gets default properties</span></p> </div> <a name='reflectionclass.getdefaultproperties.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getDefaultProperties</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets default properties from a class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getdefaultproperties.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getdefaultproperties.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of default properties. </p> </div> <a name='reflectionclass.getdefaultproperties.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getProperties</a> - Gets properties</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getConstructor" value="<div id='reflectionclass.getconstructor' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getconstructor.php'>ReflectionClass::getConstructor</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getConstructor</span> &amp;mdash; <span class='dc-title'>Gets constructor</span></p> </div> <a name='reflectionclass.getconstructor.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>ReflectionClass::getConstructor</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the constructor from a class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getconstructor.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getconstructor.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.reflectionmethod.php' class='classname'>ReflectionMethod</a> object. </p> </div> <a name='reflectionclass.getconstructor.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getName</a> - Gets class name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getConstants" value="<div id='reflectionclass.getconstants' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getconstants.php'>ReflectionClass::getConstants</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getConstants</span> &amp;mdash; <span class='dc-title'>Gets constants</span></p> </div> <a name='reflectionclass.getconstants.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>ReflectionClass::getConstants</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets defined constants from a class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getconstants.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='reflectionclass.getconstants.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of constants. </p> </div> <a name='reflectionclass.getconstants.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstant.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getConstant</a> - Gets defined constants</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::getConstant" value="<div id='reflectionclass.getconstant' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.getconstant.php'>ReflectionClass::getConstant</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::getConstant</span> &amp;mdash; <span class='dc-title'>Gets defined constants</span></p> </div> <a name='reflectionclass.getconstant.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>ReflectionClass::getConstant</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Gets the defined constants. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.getconstant.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.getconstant.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='reflectionclass.getconstant.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstants.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getConstants</a> - Gets constants</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass::export" value="<div id='reflectionclass.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflectionclass.export.php'>ReflectionClass::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>ReflectionClass::export</span> &amp;mdash; <span class='dc-title'>Exports a class</span></p> </div> <a name='reflectionclass.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><b>ReflectionClass::export</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$argument</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Exports a reflected class. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflectionclass.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>argument</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflectionclass.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflectionclass.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getname.php' class='function' rel='rdfs-seeAlso'>ReflectionClass::getName</a> - Gets class name</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ReflectionClass" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflectionclass.php'>The ReflectionClass class</a></h1> <div class='partintro'> <div id='reflectionclass.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The <b class='classname'>ReflectionClass</b> class reports information about a class. </p> </div> <div id='reflectionclass.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ReflectionClass</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ReflectionClass</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.reflector.php' class='interfacename'>Reflector</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionclass.php#reflectionclass.constants.is-implicit-abstract'>ReflectionClass::IS_IMPLICIT_ABSTRACT</a></var> <span class='initializer'> = 16</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionclass.php#reflectionclass.constants.is-explicit-abstract'>ReflectionClass::IS_EXPLICIT_ABSTRACT</a></var> <span class='initializer'> = 32</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.reflectionclass.php#reflectionclass.constants.is-final'>ReflectionClass::IS_FINAL</a></var> <span class='initializer'> = 64</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <var class='varname'><a href='http://www.php.net/manual/en/class.reflectionclass.php#reflectionclass.props.name'>$name</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.clone.php' class='function'>__clone</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$argument</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$argument</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstant.php' class='function'>getConstant</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstants.php' class='function'>getConstants</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getconstructor.php' class='function'>getConstructor</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getdefaultproperties.php' class='function'>getDefaultProperties</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getdoccomment.php' class='function'>getDocComment</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getendline.php' class='function'>getEndLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionExtension</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextension.php' class='function'>getExtension</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getextensionname.php' class='function'>getExtensionName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getfilename.php' class='function'>getFileName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfacenames.php' class='function'>getInterfaceNames</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getinterfaces.php' class='function'>getInterfaces</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmethod.php' class='function'>getMethod</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmethods.php' class='function'>getMethods</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getmodifiers.php' class='function'>getModifiers</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getname.php' class='function'>getName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getnamespacename.php' class='function'>getNamespaceName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getparentclass.php' class='function'>getParentClass</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionProperty</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php' class='function'>getProperties</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filter</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>ReflectionProperty</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getproperty.php' class='function'>getProperty</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getshortname.php' class='function'>getShortName</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstartline.php' class='function'>getStartLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticproperties.php' class='function'>getStaticProperties</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php' class='function'>getStaticPropertyValue</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$default</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasconstant.php' class='function'>hasConstant</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasmethod.php' class='function'>hasMethod</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.hasproperty.php' class='function'>hasProperty</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.implementsinterface.php' class='function'>implementsInterface</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$interface</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.innamespace.php' class='function'>inNamespace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isabstract.php' class='function'>isAbstract</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isfinal.php' class='function'>isFinal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstance.php' class='function'>isInstance</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinstantiable.php' class='function'>isInstantiable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php' class='function'>isInterface</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isinternal.php' class='function'>isInternal</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isiterateable.php' class='function'>isIterateable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.issubclassof.php' class='function'>isSubclassOf</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.isuserdefined.php' class='function'>isUserDefined</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstance.php' class='function'>newInstance</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.newinstanceargs.php' class='function'>newInstanceArgs</a></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php' class='function'>setStaticPropertyValue</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflectionclass.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='reflectionclass.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='reflectionclass.props.name' class='varlistentry'> <span class='term'><var class='varname'>name</var></span> </dt><dd class='listitem'> <p class='para'>Prop description</p> </dd> </dl> </div> <div id='reflectionclass.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <div id='reflectionclass.constants.types' class='section'> <h2 class='title'>ReflectionClass Node Types</h2> <dl> <dt id='reflectionclass.constants.is-implicit-abstract' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionClass::IS_IMPLICIT_ABSTRACT</tt></b></span> </dt><dd class='listitem'> </dd> <dt id='reflectionclass.constants.is-explicit-abstract' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionClass::IS_EXPLICIT_ABSTRACT</tt></b></span> </dt><dd class='listitem'> </dd> <dt id='reflectionclass.constants.is-final' class='varlistentry'> <span class='term'><b><tt class='constant'>ReflectionClass::IS_FINAL</tt></b></span> </dt><dd class='listitem'> </dd> </dl> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflectionclass.clone.php'>ReflectionClass::__clone</a> &amp;acirc;&amp;#128;&amp;#148; Clones object</li><li><a href='http://www.php.net/manual/en/reflectionclass.construct.php'>ReflectionClass::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Constructs a ReflectionClass</li><li><a href='http://www.php.net/manual/en/reflectionclass.export.php'>ReflectionClass::export</a> &amp;acirc;&amp;#128;&amp;#148; Exports a class</li><li><a href='http://www.php.net/manual/en/reflectionclass.getconstant.php'>ReflectionClass::getConstant</a> &amp;acirc;&amp;#128;&amp;#148; Gets defined constants</li><li><a href='http://www.php.net/manual/en/reflectionclass.getconstants.php'>ReflectionClass::getConstants</a> &amp;acirc;&amp;#128;&amp;#148; Gets constants</li><li><a href='http://www.php.net/manual/en/reflectionclass.getconstructor.php'>ReflectionClass::getConstructor</a> &amp;acirc;&amp;#128;&amp;#148; Gets constructor</li><li><a href='http://www.php.net/manual/en/reflectionclass.getdefaultproperties.php'>ReflectionClass::getDefaultProperties</a> &amp;acirc;&amp;#128;&amp;#148; Gets default properties</li><li><a href='http://www.php.net/manual/en/reflectionclass.getdoccomment.php'>ReflectionClass::getDocComment</a> &amp;acirc;&amp;#128;&amp;#148; Gets doc comments</li><li><a href='http://www.php.net/manual/en/reflectionclass.getendline.php'>ReflectionClass::getEndLine</a> &amp;acirc;&amp;#128;&amp;#148; Gets end line</li><li><a href='http://www.php.net/manual/en/reflectionclass.getextension.php'>ReflectionClass::getExtension</a> &amp;acirc;&amp;#128;&amp;#148; Gets extension info</li><li><a href='http://www.php.net/manual/en/reflectionclass.getextensionname.php'>ReflectionClass::getExtensionName</a> &amp;acirc;&amp;#128;&amp;#148; Gets an extensions name</li><li><a href='http://www.php.net/manual/en/reflectionclass.getfilename.php'>ReflectionClass::getFileName</a> &amp;acirc;&amp;#128;&amp;#148; Gets a filename</li><li><a href='http://www.php.net/manual/en/reflectionclass.getinterfacenames.php'>ReflectionClass::getInterfaceNames</a> &amp;acirc;&amp;#128;&amp;#148; Gets the interface names</li><li><a href='http://www.php.net/manual/en/reflectionclass.getinterfaces.php'>ReflectionClass::getInterfaces</a> &amp;acirc;&amp;#128;&amp;#148; Gets the interfaces</li><li><a href='http://www.php.net/manual/en/reflectionclass.getmethod.php'>ReflectionClass::getMethod</a> &amp;acirc;&amp;#128;&amp;#148; Gets a ReflectionMethod</li><li><a href='http://www.php.net/manual/en/reflectionclass.getmethods.php'>ReflectionClass::getMethods</a> &amp;acirc;&amp;#128;&amp;#148; Gets a list of methods</li><li><a href='http://www.php.net/manual/en/reflectionclass.getmodifiers.php'>ReflectionClass::getModifiers</a> &amp;acirc;&amp;#128;&amp;#148; Gets modifiers</li><li><a href='http://www.php.net/manual/en/reflectionclass.getname.php'>ReflectionClass::getName</a> &amp;acirc;&amp;#128;&amp;#148; Gets class name</li><li><a href='http://www.php.net/manual/en/reflectionclass.getnamespacename.php'>ReflectionClass::getNamespaceName</a> &amp;acirc;&amp;#128;&amp;#148; Gets namespace name</li><li><a href='http://www.php.net/manual/en/reflectionclass.getparentclass.php'>ReflectionClass::getParentClass</a> &amp;acirc;&amp;#128;&amp;#148; Gets parent class</li><li><a href='http://www.php.net/manual/en/reflectionclass.getproperties.php'>ReflectionClass::getProperties</a> &amp;acirc;&amp;#128;&amp;#148; Gets properties</li><li><a href='http://www.php.net/manual/en/reflectionclass.getproperty.php'>ReflectionClass::getProperty</a> &amp;acirc;&amp;#128;&amp;#148; Gets property</li><li><a href='http://www.php.net/manual/en/reflectionclass.getshortname.php'>ReflectionClass::getShortName</a> &amp;acirc;&amp;#128;&amp;#148; Gets short name</li><li><a href='http://www.php.net/manual/en/reflectionclass.getstartline.php'>ReflectionClass::getStartLine</a> &amp;acirc;&amp;#128;&amp;#148; Gets starting line number</li><li><a href='http://www.php.net/manual/en/reflectionclass.getstaticproperties.php'>ReflectionClass::getStaticProperties</a> &amp;acirc;&amp;#128;&amp;#148; Gets static properties</li><li><a href='http://www.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php'>ReflectionClass::getStaticPropertyValue</a> &amp;acirc;&amp;#128;&amp;#148; Gets static property value</li><li><a href='http://www.php.net/manual/en/reflectionclass.hasconstant.php'>ReflectionClass::hasConstant</a> &amp;acirc;&amp;#128;&amp;#148; Checks if constant is defined</li><li><a href='http://www.php.net/manual/en/reflectionclass.hasmethod.php'>ReflectionClass::hasMethod</a> &amp;acirc;&amp;#128;&amp;#148; Checks if method is defined</li><li><a href='http://www.php.net/manual/en/reflectionclass.hasproperty.php'>ReflectionClass::hasProperty</a> &amp;acirc;&amp;#128;&amp;#148; Checks if property is defined</li><li><a href='http://www.php.net/manual/en/reflectionclass.implementsinterface.php'>ReflectionClass::implementsInterface</a> &amp;acirc;&amp;#128;&amp;#148; Implements interface</li><li><a href='http://www.php.net/manual/en/reflectionclass.innamespace.php'>ReflectionClass::inNamespace</a> &amp;acirc;&amp;#128;&amp;#148; Checks if in namespace</li><li><a href='http://www.php.net/manual/en/reflectionclass.isabstract.php'>ReflectionClass::isAbstract</a> &amp;acirc;&amp;#128;&amp;#148; Checks if class is abstract</li><li><a href='http://www.php.net/manual/en/reflectionclass.isfinal.php'>ReflectionClass::isFinal</a> &amp;acirc;&amp;#128;&amp;#148; Checks if class is final</li><li><a href='http://www.php.net/manual/en/reflectionclass.isinstance.php'>ReflectionClass::isInstance</a> &amp;acirc;&amp;#128;&amp;#148; Checks class for instance</li><li><a href='http://www.php.net/manual/en/reflectionclass.isinstantiable.php'>ReflectionClass::isInstantiable</a> &amp;acirc;&amp;#128;&amp;#148; Checks if instantiable</li><li><a href='http://www.php.net/manual/en/reflectionclass.isinterface.php'>ReflectionClass::isInterface</a> &amp;acirc;&amp;#128;&amp;#148; Checks if interface</li><li><a href='http://www.php.net/manual/en/reflectionclass.isinternal.php'>ReflectionClass::isInternal</a> &amp;acirc;&amp;#128;&amp;#148; Checks if internal</li><li><a href='http://www.php.net/manual/en/reflectionclass.isiterateable.php'>ReflectionClass::isIterateable</a> &amp;acirc;&amp;#128;&amp;#148; Checks if iterateable</li><li><a href='http://www.php.net/manual/en/reflectionclass.issubclassof.php'>ReflectionClass::isSubclassOf</a> &amp;acirc;&amp;#128;&amp;#148; Checks if a subclass</li><li><a href='http://www.php.net/manual/en/reflectionclass.isuserdefined.php'>ReflectionClass::isUserDefined</a> &amp;acirc;&amp;#128;&amp;#148; Checks if user defined</li><li><a href='http://www.php.net/manual/en/reflectionclass.newinstance.php'>ReflectionClass::newInstance</a> &amp;acirc;&amp;#128;&amp;#148; New instance</li><li><a href='http://www.php.net/manual/en/reflectionclass.newinstanceargs.php'>ReflectionClass::newInstanceArgs</a> &amp;acirc;&amp;#128;&amp;#148; New instance args</li><li><a href='http://www.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php'>ReflectionClass::setStaticPropertyValue</a> &amp;acirc;&amp;#128;&amp;#148; Sets static property value</li><li><a href='http://www.php.net/manual/en/reflectionclass.tostring.php'>ReflectionClass::__toString</a> &amp;acirc;&amp;#128;&amp;#148; To string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflection::getModifierNames" value="<div id='reflection.getmodifiernames' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflection.getmodifiernames.php'>Reflection::getModifierNames</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>Reflection::getModifierNames</span> &amp;mdash; <span class='dc-title'>Gets modifier names</span></p> </div> <a name='reflection.getmodifiernames.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>array</span> <span class='methodname'><b>Reflection::getModifierNames</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$modifiers</tt></span> )</div> <p class='para rdfs-comment'> Gets modifier names. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflection.getmodifiernames.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>modifiers</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The modifiers to get, which is from a numeric value. </p> </dd> </dl> <p> </p> </div> <a name='reflection.getmodifiernames.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array of modifier names. </p> </div> <a name='reflection.getmodifiernames.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.export.php' class='function' rel='rdfs-seeAlso'>Reflection::export</a> - Exports</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflection::export" value="<div id='reflection.export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/reflection.export.php'>Reflection::export</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>Reflection::export</span> &amp;mdash; <span class='dc-title'>Exports</span></p> </div> <a name='reflection.export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>Reflection::export</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.reflector.php' class='type Reflector'>Reflector</a></span> <tt class='parameter'>$reflector</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Exports a reflection. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='reflection.export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>reflector</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The reflection to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setting to <b><tt class='constant'>TRUE</tt></b> will return the export, as opposed to emitting it. Setting to <b><tt class='constant'>FALSE</tt></b> (the default) will do the opposite. </p> </dd> </dl> <p> </p> </div> <a name='reflection.export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the <i><tt class='parameter'>return</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b>, then the export is returned as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, otherwise <b><tt class='constant'>NULL</tt></b> is returned. </p> </div> <a name='reflection.export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.getmodifiernames.php' class='function' rel='rdfs-seeAlso'>Reflection::getModifierNames</a> - Gets modifier names</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Reflection" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.reflection.php'>The Reflection class</a></h1> <div class='partintro'> <div id='reflection.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The reflection class. </p> </div> <div id='reflection.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Reflection</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Reflection</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.export.php' class='function'>export</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.reflector.php' class='type Reflector'>Reflector</a></span> <tt class='parameter'>$reflector</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='modifier'>static</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/reflection.getmodifiernames.php' class='function'>getModifierNames</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$modifiers</tt></span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/reflection.export.php'>Reflection::export</a> &amp;acirc;&amp;#128;&amp;#148; Exports</li><li><a href='http://www.php.net/manual/en/reflection.getmodifiernames.php'>Reflection::getModifierNames</a> &amp;acirc;&amp;#128;&amp;#148; Gets modifier names</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveRegexIterator::__construct" value="<div id='recursiveregexiterator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveregexiterator.construct.php'>RecursiveRegexIterator::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RecursiveRegexIterator::__construct</span> &amp;mdash; <span class='dc-title'>Creates a new RecursiveRegexIterator.</span></p> </div> <a name='recursiveregexiterator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><b>RecursiveRegexIterator::__construct</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <tt class='parameter'>$iterator</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$regex</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> ]]] )</div> <p class='para rdfs-comment'> Creates a new regular expression iterator. </p> </div> <a name='recursiveregexiterator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The recursive iterator to apply this regex filter to. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>regex</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The regular expression to match. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Operation mode, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function'>RegexIterator::setMode</a></span> for a list of modes. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Special flags, see <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function'>RegexIterator::setFlags</a></span> for a list of available flags. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>preg_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The regular expression flags. These flags depend on the operation mode parameter: </p> <p class='para'> </p><table class='doctable table'> <caption><b><a href='http://www.php.net/manual/en/class.regexiterator.php' class='classname'>RegexIterator</a> preg_flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>operation mode</th> <th>available flags</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><var class='varname'>RecursiveRegexIterator::ALL_MATCHES</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function'>preg_match_all()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RecursiveRegexIterator::GET_MATCH</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RecursiveRegexIterator::MATCH</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a>. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RecursiveRegexIterator::REPLACE</var></td> <td align='left'> none. </td> </tr> <tr valign='middle'> <td align='left'><var class='varname'>RecursiveRegexIterator::SPLIT</var></td> <td align='left'> See <a href='http://www.php.net/manual/en/function.preg-split.php' class='function'>preg_split()</a>. </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='recursiveregexiterator.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RecursiveRegexIterator::__construct()</b> example</b></p> <div class='example-contents para'><p> Creates a new RegexIterator that filters all strings that start with &amp;#039;test&amp;#039;. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rArrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'tet3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test4'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test5'</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rArrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ALL_MATCHES</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value1</span><span style='color: #007700'>)&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;children<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Children:&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'No&amp;nbsp;children\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> No children Children: test4 test5 </pre></div> </div> </div><p> </p> </div> <a name='recursiveregexiterator.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function' rel='rdfs-seeAlso'>preg_match_all()</a> - Perform a global regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveRegexIterator::hasChildren" value="<div id='recursiveregexiterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveregexiterator.haschildren.php'>RecursiveRegexIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RecursiveRegexIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Returns whether an iterator can be obtained for the current entry.</span></p> </div> <a name='recursiveregexiterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>RecursiveRegexIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns whether an iterator can be obtained for the current entry. This iterator can be obtained via <span class='methodname'><a href='http://www.php.net/manual/en/recursiveregexiterator.getchildren.php' class='function'>RecursiveRegexIterator::getChildren</a></span>. </p> </div> <a name='recursiveregexiterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveregexiterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if an iterator can be obtained for the current entry, otherwise returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='recursiveregexiterator.haschildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RecursiveRegexIterator::hasChildren()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rArrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'tet3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test4'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test5'</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rArrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ALL_MATCHES</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rRegexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>());<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) bool(true) </pre></div> </div> </div><p> </p> </div> <a name='recursiveregexiterator.haschildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursiveregexiterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveRegexIterator::getChildren()</a> - Returns an iterator for the current entry.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveRegexIterator::getChildren" value="<div id='recursiveregexiterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveregexiterator.getchildren.php'>RecursiveRegexIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>RecursiveRegexIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Returns an iterator for the current entry.</span></p> </div> <a name='recursiveregexiterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.recursiveregexiterator.php' class='type RecursiveRegexIterator'>RecursiveRegexIterator</a></span> <span class='methodname'><b>RecursiveRegexIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns an iterator for the current iterator entry. </p> </div> <a name='recursiveregexiterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveregexiterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An iterator for the current entry, if it can be iterated over by the inner iterator. </p> </div> <a name='recursiveregexiterator.getchildren.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> An <a href='http://www.php.net/manual/en/class.invalidargumentexception.php' class='classname'>InvalidArgumentException</a> will be thrown if the current entry does not contain a value that can be iterated over by the inner iterator. </p> </div> <a name='recursiveregexiterator.getchildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RecursiveRegexIterator::getChildren()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rArrayIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'tet3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test4'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test5'</span><span style='color: #007700'>)));<br /></span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rArrayIterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/^test/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>RecursiveRegexIterator</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ALL_MATCHES</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value1</span><span style='color: #007700'>)&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;children<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Children:&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rRegexIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'No&amp;nbsp;children\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> No children Children: test4 test5 </pre></div> </div> </div><p> </p> </div> <a name='recursiveregexiterator.getchildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursiveregexiterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveRegexIterator::hasChildren()</a> - Returns whether an iterator can be obtained for the current entry.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveRegexIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursiveregexiterator.php'>The RecursiveRegexIterator class</a></h1> <div class='partintro'> <div id='recursiveregexiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This recursive iterator can filter another recursive iterator via a regular expression. </p> </div> <div id='recursiveregexiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveRegexIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveRegexIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.regexiterator.php' class='classname'>RegexIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='constructorsynopsis dc-description'> <span class='modifier'>public</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveregexiterator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <tt class='parameter'>$iterator</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$regex</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>RecursiveRegexIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveregexiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveregexiterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>RecursiveIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function'>RecursiveIterator::getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php' class='function'>RecursiveIterator::hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getflags.php' class='function'>RegexIterator::getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getmode.php' class='function'>RegexIterator::getMode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.getpregflags.php' class='function'>RegexIterator::getPregFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setflags.php' class='function'>RegexIterator::setFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setmode.php' class='function'>RegexIterator::setMode</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/regexiterator.setpregflags.php' class='function'>RegexIterator::setPregFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$preg_flags</tt></span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursiveregexiterator.construct.php'>RecursiveRegexIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Creates a new RecursiveRegexIterator.</li><li><a href='http://www.php.net/manual/en/recursiveregexiterator.getchildren.php'>RecursiveRegexIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns an iterator for the current entry.</li><li><a href='http://www.php.net/manual/en/recursiveregexiterator.haschildren.php'>RecursiveRegexIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns whether an iterator can be obtained for the current entry.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::valid" value="<div id='recursiveiteratoriterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.valid.php'>RecursiveIteratorIterator::valid</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether the current position is valid</span></p> </div> <a name='recursiveiteratoriterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>RecursiveIteratorIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the current position is valid, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::rewind" value="<div id='recursiveiteratoriterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.rewind.php'>RecursiveIteratorIterator::rewind</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the iterator to the first element of the top level inner iterator</span></p> </div> <a name='recursiveiteratoriterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveIteratorIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::next" value="<div id='recursiveiteratoriterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.next.php'>RecursiveIteratorIterator::next</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::next</span> &amp;mdash; <span class='dc-title'>Move forward to the next element</span></p> </div> <a name='recursiveiteratoriterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveIteratorIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::key" value="<div id='recursiveiteratoriterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.key.php'>RecursiveIteratorIterator::key</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::key</span> &amp;mdash; <span class='dc-title'>Access the current key</span></p> </div> <a name='recursiveiteratoriterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>RecursiveIteratorIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current key. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::getSubIterator" value="<div id='recursiveiteratoriterator.getsubiterator' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.getsubiterator.php'>RecursiveIteratorIterator::getSubIterator</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::getSubIterator</span> &amp;mdash; <span class='dc-title'>The current active sub iterator</span></p> </div> <a name='recursiveiteratoriterator.getsubiterator.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <span class='methodname'><b>RecursiveIteratorIterator::getSubIterator</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.getsubiterator.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.getsubiterator.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current active sub iterator. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::getDepth" value="<div id='recursiveiteratoriterator.getdepth' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.getdepth.php'>RecursiveIteratorIterator::getDepth</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::getDepth</span> &amp;mdash; <span class='dc-title'>Get the current depth of the recursive iteration</span></p> </div> <a name='recursiveiteratoriterator.getdepth.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>RecursiveIteratorIterator::getDepth</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.getdepth.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.getdepth.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current depth of the recursive iteration. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator::current" value="<div id='recursiveiteratoriterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiteratoriterator.current.php'>RecursiveIteratorIterator::current</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveIteratorIterator::current</span> &amp;mdash; <span class='dc-title'>Access the current element value</span></p> </div> <a name='recursiveiteratoriterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>RecursiveIteratorIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursiveiteratoriterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiteratoriterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The current elements value. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIteratorIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursiveiteratoriterator.php'>The RecursiveIteratorIterator class</a></h1> <div class='partintro'> <div id='recursiveiteratoriterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Can be used to iterate through recursive iterators. </p> </div> <div id='recursiveiteratoriterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveIteratorIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveIteratorIterator</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.getdepth.php' class='function'>getDepth</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>RecursiveIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.getsubiterator.php' class='function'>getSubIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiteratoriterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>Iterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/outeriterator.getchildren.php' class='function'>OuterIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.current.php'>RecursiveIteratorIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Access the current element value</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.getdepth.php'>RecursiveIteratorIterator::getDepth</a> &amp;acirc;&amp;#128;&amp;#148; Get the current depth of the recursive iteration</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.getsubiterator.php'>RecursiveIteratorIterator::getSubIterator</a> &amp;acirc;&amp;#128;&amp;#148; The current active sub iterator</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.key.php'>RecursiveIteratorIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Access the current key</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.next.php'>RecursiveIteratorIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move forward to the next element</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.rewind.php'>RecursiveIteratorIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the iterator to the first element of the top level inner iterator</li><li><a href='http://www.php.net/manual/en/recursiveiteratoriterator.valid.php'>RecursiveIteratorIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current position is valid</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIterator::hasChildren" value="<div id='recursiveiterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiterator.haschildren.php'>RecursiveIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Returns if an iterator can be created fot the current entry.</span></p> </div> <a name='recursiveiterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>RecursiveIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns if an iterator can be created fot the current entry. <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function'>RecursiveIterator::getChildren</a></span>. </p> </div> <a name='recursiveiterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the current entry can be iterated over, otherwise returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='recursiveiterator.haschildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::getChildren()</a> - Returns an iterator for the current entry.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIterator::getChildren" value="<div id='recursiveiterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursiveiterator.getchildren.php'>RecursiveIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Returns an iterator for the current entry.</span></p> </div> <a name='recursiveiterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <span class='methodname'><b>RecursiveIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns an iterator for the current iterator entry. </p> </div> <a name='recursiveiterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursiveiterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An iterator for the current entry. </p> </div> <a name='recursiveiterator.getchildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::hasChildren()</a> - Returns if an iterator can be created fot the current entry.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursiveiterator.php'>The RecursiveIterator interface</a></h1> <div class='partintro'> <div id='recursiveiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Classes implementing <b class='classname'>RecursiveIterator</b> can be used to iterate over iterators recursively. </p> </div> <div id='recursiveiterator.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iterator.php' class='classname'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>RecursiveIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.current.php' class='function'>Iterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>scalar</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.key.php' class='function'>Iterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.next.php' class='function'>Iterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.rewind.php' class='function'>Iterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.valid.php' class='function'>Iterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php'>RecursiveIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns an iterator for the current entry.</li><li><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php'>RecursiveIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns if an iterator can be created fot the current entry.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveFilterIterator::__construct" value="<div id='recursivefilteriterator.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivefilteriterator.construct.php'>RecursiveFilterIterator::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveFilterIterator::__construct</span> &amp;mdash; <span class='dc-title'>Create a RecursiveFilterIterator from a RecursiveIterator</span></p> </div> <a name='recursivefilteriterator.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>RecursiveFilterIterator::__construct</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <p class='para rdfs-comment'> Create a <a href='http://www.php.net/manual/en/class.recursivefilteriterator.php' class='classname'>RecursiveFilterIterator</a> from a <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='classname'>RecursiveIterator</a>. </p> </div> <a name='recursivefilteriterator.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>iterator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='classname'>RecursiveIterator</a> to be filtered. </p> </dd> </dl> <p> </p> </div> <a name='recursivefilteriterator.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='recursivefilteriterator.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Basic <span class='methodname'><b>RecursiveFilterIterator</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>TestsOnlyFilter&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>RecursiveFilterIterator&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>accept</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Accept&amp;nbsp;the&amp;nbsp;current&amp;nbsp;item&amp;nbsp;if&amp;nbsp;we&amp;nbsp;can&amp;nbsp;recurse&amp;nbsp;into&amp;nbsp;it<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;or&amp;nbsp;it&amp;nbsp;is&amp;nbsp;a&amp;nbsp;value&amp;nbsp;starting&amp;nbsp;with&amp;nbsp;'test'<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>()&amp;nbsp;||&amp;nbsp;(</span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>)&amp;nbsp;!==&amp;nbsp;</span><span style='color: #0000BB'>FALSE</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$arrary&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'taste2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test4'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'test5'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$filter&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>TestsOnlyFilter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>);<br /><br />foreach(new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveIteratorIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filter</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> test1 test3 test4 test5 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <span class='methodname'><b>RecursiveFilterIterator</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>StartsWithFilter&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>RecursiveFilterIterator&amp;nbsp;</span><span style='color: #007700'>{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$word</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>RecursiveIterator&amp;nbsp;$rit</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$word</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>word&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$word</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>parent</span><span style='color: #007700'>::</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rit</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>accept</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>()&amp;nbsp;OR&amp;nbsp;</span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>word</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>self</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getInnerIterator</span><span style='color: #007700'>()-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>word</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$array&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'test1'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'taste2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test3'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test4'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'test5'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$filter&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StartsWithFilter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>);<br /><br />foreach(new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveIteratorIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filter</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> test1 test3 test4 test5 </pre></div> </div> </div><p> </p> </div> <a name='recursivefilteriterator.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveFilterIterator::getChildren</a> - Return the inner iterator's children contained in a RecursiveFilterIterator</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveFilterIterator::hasChildren</a> - Check whether the inner iterator's current element has children</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.accept.php' class='function' rel='rdfs-seeAlso'>FilterIterator::accept</a> - Check whether the current element of the iterator is acceptable</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveFilterIterator::hasChildren" value="<div id='recursivefilteriterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivefilteriterator.haschildren.php'>RecursiveFilterIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveFilterIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Check whether the inner iterator&amp;#039;s current element has children</span></p> </div> <a name='recursivefilteriterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveFilterIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Check whether the inner iterator&amp;#039;s current element has children. </p> </div> <a name='recursivefilteriterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivefilteriterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the inner iterator has children, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='recursivefilteriterator.haschildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveFilterIterator::getChildren</a> - Return the inner iterator's children contained in a RecursiveFilterIterator</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::hasChildren</a> - Returns if an iterator can be created fot the current entry.</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveFilterIterator::getChildren" value="<div id='recursivefilteriterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivefilteriterator.getchildren.php'>RecursiveFilterIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveFilterIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Return the inner iterator&amp;#039;s children contained in a RecursiveFilterIterator</span></p> </div> <a name='recursivefilteriterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveFilterIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Return the inner iterator&amp;#039;s children contained in a <a href='http://www.php.net/manual/en/class.recursivefilteriterator.php' class='classname'>RecursiveFilterIterator</a>. </p> </div> <a name='recursivefilteriterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivefilteriterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a <a href='http://www.php.net/manual/en/class.recursivefilteriterator.php' class='classname'>RecursiveFilterIterator</a> containing the inner iterator&amp;#039;s children. </p> </div> <a name='recursivefilteriterator.getchildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveFilterIterator::hasChildren</a> - Check whether the inner iterator's current element has children</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::getChildren</a> - Returns an iterator for the current entry.</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveFilterIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursivefilteriterator.php'>The RecursiveFilterIterator class</a></h1> <div class='partintro'> <div id='recursivefilteriterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This abstract iterator filters out unwanted values for a <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='classname'>RecursiveIterator</a>. This class should be extended to implement custom filters. The <span class='methodname'><b>RecursiveFilterIterator::accept()</b></span> must be implemented in the subclass. </p> </div> <div id='recursivefilteriterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveFilterIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveFilterIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.filteriterator.php' class='classname'>FilterIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='type RecursiveIterator'>RecursiveIterator</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivefilteriterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.accept.php' class='function'>FilterIterator::accept</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.current.php' class='function'>FilterIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>Iterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.getinneriterator.php' class='function'>FilterIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.key.php' class='function'>FilterIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.next.php' class='function'>FilterIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.rewind.php' class='function'>FilterIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/filteriterator.valid.php' class='function'>FilterIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursivefilteriterator.construct.php'>RecursiveFilterIterator::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Create a RecursiveFilterIterator from a RecursiveIterator</li><li><a href='http://www.php.net/manual/en/recursivefilteriterator.getchildren.php'>RecursiveFilterIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Return the inner iterator's children contained in a RecursiveFilterIterator</li><li><a href='http://www.php.net/manual/en/recursivefilteriterator.haschildren.php'>RecursiveFilterIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the inner iterator's current element has children</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator::rewind" value="<div id='recursivedirectoryiterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivedirectoryiterator.rewind.php'>RecursiveDirectoryIterator::rewind</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveDirectoryIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind dir back to the start</span></p> </div> <a name='recursivedirectoryiterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveDirectoryIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivedirectoryiterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivedirectoryiterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator::next" value="<div id='recursivedirectoryiterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivedirectoryiterator.next.php'>RecursiveDirectoryIterator::next</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveDirectoryIterator::next</span> &amp;mdash; <span class='dc-title'>Move to next entry</span></p> </div> <a name='recursivedirectoryiterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>RecursiveDirectoryIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivedirectoryiterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivedirectoryiterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator::key" value="<div id='recursivedirectoryiterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivedirectoryiterator.key.php'>RecursiveDirectoryIterator::key</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveDirectoryIterator::key</span> &amp;mdash; <span class='dc-title'>Return path and filename of current dir entry</span></p> </div> <a name='recursivedirectoryiterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>RecursiveDirectoryIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivedirectoryiterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivedirectoryiterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The path and filename of the current dir entry. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator::hasChildren" value="<div id='recursivedirectoryiterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivedirectoryiterator.haschildren.php'>RecursiveDirectoryIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>RecursiveDirectoryIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Returns whether current entry is a directory and not &amp;#039;.&amp;#039; or &amp;#039;..&amp;#039;</span></p> </div> <a name='recursivedirectoryiterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>RecursiveDirectoryIterator::hasChildren</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$allow_links</tt></span> ] )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivedirectoryiterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>allow_links</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='recursivedirectoryiterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns whether the current entry is a directory, but not &amp;#039;.&amp;#039; or &amp;#039;..&amp;#039; </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator::getChildren" value="<div id='recursivedirectoryiterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivedirectoryiterator.getchildren.php'>RecursiveDirectoryIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveDirectoryIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Returns an iterator for the current entry if it is a directory</span></p> </div> <a name='recursivedirectoryiterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>RecursiveDirectoryIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivedirectoryiterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivedirectoryiterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An iterator for the current entry, if it is a directory. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveDirectoryIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursivedirectoryiterator.php'>The RecursiveDirectoryIterator class</a></h1> <div class='partintro'> <div id='recursivedirectoryiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> ... </p> </div> <div id='recursivedirectoryiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveDirectoryIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveDirectoryIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.directoryiterator.php' class='classname'>DirectoryIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivedirectoryiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivedirectoryiterator.haschildren.php' class='function'>hasChildren</a></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$allow_links</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivedirectoryiterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivedirectoryiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivedirectoryiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherits */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>DirectoryIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.current.php' class='function'>DirectoryIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getatime.php' class='function'>DirectoryIterator::getATime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getbasename.php' class='function'>DirectoryIterator::getBasename</a></span> ([ <span class='methodparam'> <span class='type'>string</span> <tt class='parameter'>$suffix</tt> </span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getctime.php' class='function'>DirectoryIterator::getCTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getfilename.php' class='function'>DirectoryIterator::getFilename</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getgroup.php' class='function'>DirectoryIterator::getGroup</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getinode.php' class='function'>DirectoryIterator::getInode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getmtime.php' class='function'>DirectoryIterator::getMTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getowner.php' class='function'>DirectoryIterator::getOwner</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpath.php' class='function'>DirectoryIterator::getPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getpathname.php' class='function'>DirectoryIterator::getPathname</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getperms.php' class='function'>DirectoryIterator::getPerms</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.getsize.php' class='function'>DirectoryIterator::getSize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.gettype.php' class='function'>DirectoryIterator::getType</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isdir.php' class='function'>DirectoryIterator::isDir</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isdot.php' class='function'>DirectoryIterator::isDot</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isexecutable.php' class='function'>DirectoryIterator::isExecutable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isfile.php' class='function'>DirectoryIterator::isFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.islink.php' class='function'>DirectoryIterator::isLink</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.isreadable.php' class='function'>DirectoryIterator::isReadable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.iswritable.php' class='function'>DirectoryIterator::isWritable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.key.php' class='function'>DirectoryIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.next.php' class='function'>DirectoryIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.rewind.php' class='function'>DirectoryIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.seek.php' class='function'>DirectoryIterator::seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.tostring.php' class='function'>DirectoryIterator::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/directoryiterator.valid.php' class='function'>DirectoryIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursivedirectoryiterator.getchildren.php'>RecursiveDirectoryIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns an iterator for the current entry if it is a directory</li><li><a href='http://www.php.net/manual/en/recursivedirectoryiterator.haschildren.php'>RecursiveDirectoryIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns whether current entry is a directory and not '.' or '..'</li><li><a href='http://www.php.net/manual/en/recursivedirectoryiterator.key.php'>RecursiveDirectoryIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Return path and filename of current dir entry</li><li><a href='http://www.php.net/manual/en/recursivedirectoryiterator.next.php'>RecursiveDirectoryIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move to next entry</li><li><a href='http://www.php.net/manual/en/recursivedirectoryiterator.rewind.php'>RecursiveDirectoryIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind dir back to the start</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveCachingIterator::hasChildren" value="<div id='recursivecachingiterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivecachingiterator.haschildren.php'>RecursiveCachingIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveCachingIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Check whether the current element of the inner iterator has children</span></p> </div> <a name='recursivecachingiterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>RecursiveCachingIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivecachingiterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivecachingiterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the inner iterator has children, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveCachingIterator::getChildren" value="<div id='recursivecachingiterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivecachingiterator.getchildren.php'>RecursiveCachingIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveCachingIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Return the inner iterator&amp;#039;s children as a RecursiveCachingIterator</span></p> </div> <a name='recursivecachingiterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.recursivecachingiterator.php' class='type RecursiveCachingIterator'>RecursiveCachingIterator</a></span> <span class='methodname'><b>RecursiveCachingIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> <a name='recursivecachingiterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivecachingiterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The inner iterator&amp;#039;s children, as a RecursiveCachingIterator. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveCachingIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursivecachingiterator.php'>The RecursiveCachingIterator class</a></h1> <div class='partintro'> <div id='recursivecachingiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> ... </p> </div> <div id='recursivecachingiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveCachingIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveCachingIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.cachingiterator.php' class='classname'>CachingIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='interfacename'>ArrayAccess</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>RecursiveCachingIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivecachingiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivecachingiterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherits */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.construct.php' class='function'>CachingIterator::__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.iterator.php' class='type Iterator'>Iterator</a></span> <tt class='parameter'>$iterator</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$flags</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.count.php' class='function'>CachingIterator::count</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.current.php' class='function'>CachingIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getcache.php' class='function'>CachingIterator::getCache</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getflags.php' class='function'>CachingIterator::getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.getinneriterator.php' class='function'>CachingIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.hasnext.php' class='function'>CachingIterator::hasNext</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.key.php' class='function'>CachingIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.next.php' class='function'>CachingIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetexists.php' class='function'>CachingIterator::offsetExists</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetget.php' class='function'>CachingIterator::offsetGet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetset.php' class='function'>CachingIterator::offsetSet</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$newval</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.offsetunset.php' class='function'>CachingIterator::offsetUnset</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$index</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.rewind.php' class='function'>CachingIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.setflags.php' class='function'>CachingIterator::setFlags</a></span> ( <span class='methodparam'><span class='type'><span class='type bitmask'>bitmask</span></span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.tostring.php' class='function'>CachingIterator::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/cachingiterator.valid.php' class='function'>CachingIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursivecachingiterator.getchildren.php'>RecursiveCachingIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Return the inner iterator's children as a RecursiveCachingIterator</li><li><a href='http://www.php.net/manual/en/recursivecachingiterator.haschildren.php'>RecursiveCachingIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current element of the inner iterator has children</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveArrayIterator::hasChildren" value="<div id='recursivearrayiterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivearrayiterator.haschildren.php'>RecursiveArrayIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveArrayIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Returns whether current entry is an array or an object.</span></p> </div> <a name='recursivearrayiterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>RecursiveArrayIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns whether current entry is an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> for which an iterator can be obtained via <span class='methodname'><a href='http://www.php.net/manual/en/recursivearrayiterator.getchildren.php' class='function'>RecursiveArrayIterator::getChildren</a></span>. </p> </div> <a name='recursivearrayiterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivearrayiterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the current entry is an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>, otherwise <b><tt class='constant'>FALSE</tt></b> is returned. </p> </div> <a name='recursivearrayiterator.haschildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RecursiveArrayIterator::hasChildren()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'p'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'pear'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;there&amp;nbsp;are&amp;nbsp;children<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;children<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'No&amp;nbsp;children.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> No children. No children. a : apple p : pear </pre></div> </div> </div><p> </p> </div> <a name='recursivearrayiterator.haschildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursivearrayiterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveArrayIterator::getChildren()</a> - Returns an iterator for the current entry if it is an array or an object.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveArrayIterator::getChildren" value="<div id='recursivearrayiterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/recursivearrayiterator.getchildren.php'>RecursiveArrayIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>RecursiveArrayIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Returns an iterator for the current entry if it is an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>.</span></p> </div> <a name='recursivearrayiterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.recursivearrayiterator.php' class='type RecursiveArrayIterator'>RecursiveArrayIterator</a></span> <span class='methodname'><b>RecursiveArrayIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns an iterator for the current iterator entry. </p> </div> <a name='recursivearrayiterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='recursivearrayiterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An iterator for the current entry, if it is an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='recursivearrayiterator.getchildren.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> An <a href='http://www.php.net/manual/en/class.invalidargumentexception.php' class='classname'>InvalidArgumentException</a> will be thrown if the current entry does not contain an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='recursivearrayiterator.getchildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>RecursiveArrayIterator::getChildren()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'p'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'pear'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>RecursiveArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;children<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'No&amp;nbsp;children.\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> No children. No children. a : apple p : pear </pre></div> </div> </div><p> </p> </div> <a name='recursivearrayiterator.getchildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/recursivearrayiterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveArrayIterator::hasChildren()</a> - Returns whether current entry is an array or an object.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RecursiveArrayIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.recursivearrayiterator.php'>The RecursiveArrayIterator class</a></h1> <div class='partintro'> <div id='recursivearrayiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This iterator allows to unset and modify values and keys while iterating over Arrays and Objects in the same way as the <a href='http://www.php.net/manual/en/class.arrayiterator.php' class='type ArrayIterator'>ArrayIterator</a>. Additionally it is possible to iterate over the current iterator entry. </p> </div> <div id='recursivearrayiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RecursiveArrayIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RecursiveArrayIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.arrayiterator.php' class='classname'>ArrayIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>RecursiveArrayIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivearrayiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/recursivearrayiterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherits */</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.current.php' class='function'>ArrayIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.key.php' class='function'>ArrayIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.next.php' class='function'>ArrayIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.rewind.php' class='function'>ArrayIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.seek.php' class='function'>ArrayIterator::seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/arrayiterator.valid.php' class='function'>ArrayIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/recursivearrayiterator.getchildren.php'>RecursiveArrayIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns an iterator for the current entry if it is an array or an object.</li><li><a href='http://www.php.net/manual/en/recursivearrayiterator.haschildren.php'>RecursiveArrayIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns whether current entry is an array or an object.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="realpath" value="<div id='function.realpath' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.realpath.php'>realpath</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>realpath</span> &amp;mdash; <span class='dc-title'>Returns canonicalized absolute pathname</span></p> </div> <a name='function.realpath.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>realpath</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> )</div> <p class='para rdfs-comment'> <b>realpath()</b> expands all symbolic links and resolves references to &amp;#039;/./&amp;#039;, &amp;#039;/../&amp;#039; and extra &amp;#039;/&amp;#039; characters in the input <i><tt class='parameter'>path</tt></i> . and return the canonicalized absolute pathname. </p> </div> <a name='function.realpath.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The path being checked. </p> </dd> </dl> <p> </p> </div> <a name='function.realpath.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the canonicalized absolute pathname on success. The resulting path will have no symbolic link, &amp;#039;/./&amp;#039; or &amp;#039;/../&amp;#039; components. </p> <p class='para'> <b>realpath()</b> returns <b><tt class='constant'>FALSE</tt></b> on failure, e.g. if the file does not exist. </p> </div> <a name='function.realpath.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Prior to this release <b>realpath()</b> would not fail on *BSD systems if only the last last <i><tt class='parameter'>path</tt></i> component did not exist. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.realpath.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>realpath()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />chdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/var/www/'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>realpath</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'./../../etc/passwd'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> /etc/passwd </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>realpath()</b> on Windows</b></p> <div class='example-contents para'><p> On windows <b>realpath()</b> will change unix style paths to windows style. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>realpath</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/windows/system32'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> C:\WINDOWS\System32 </pre></div> </div> </div><p> </p> </div> <a name='function.realpath.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.basename.php' class='function' rel='rdfs-seeAlso'>basename()</a> - Returns filename component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.dirname.php' class='function' rel='rdfs-seeAlso'>dirname()</a> - Returns directory name component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="readfile" value="<div id='function.readfile' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.readfile.php'>readfile</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>readfile</span> &amp;mdash; <span class='dc-title'>Outputs a file</span></p> </div> <a name='function.readfile.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>readfile</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]] )</div> <p class='para rdfs-comment'> Reads a file and writes it to the output buffer. </p> </div> <a name='function.readfile.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename being read. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>use_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can use the optional second parameter and set it to <b><tt class='constant'>TRUE</tt></b>, if you want to search for the file in the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a>, too. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A context stream <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.readfile.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of bytes read from the file. If an error occurs, <b><tt class='constant'>FALSE</tt></b> is returned and unless the function was called as @<b>readfile()</b>, an error message is printed. </p> </div> <a name='function.readfile.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Forcing a download using <b>readfile()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'monkey.gif'</span><span style='color: #007700'>;<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>file_exists</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Description:&amp;nbsp;File&amp;nbsp;Transfer'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Type:&amp;nbsp;application/octet-stream'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Disposition:&amp;nbsp;attachment;&amp;nbsp;filename='</span><span style='color: #007700'>.</span><span style='color: #0000BB'>basename</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Transfer-Encoding:&amp;nbsp;binary'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Expires:&amp;nbsp;0'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Cache-Control:&amp;nbsp;must-revalidate,&amp;nbsp;post-check=0,&amp;nbsp;pre-check=0'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Pragma:&amp;nbsp;public'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Length:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>filesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>ob_clean</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>flush</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>readfile</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='mediaobject'> <div class='imageobject'> <img src='images/e88cefb5c3fca5060e2490b9763c4433-readfile.png' /> </div> </div> </div><p> </p> </div> <a name='function.readfile.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote> </div> <a name='function.readfile.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fpassthru.php' class='function' rel='rdfs-seeAlso'>fpassthru()</a> - Output all remaining data on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.file.php' class='function' rel='rdfs-seeAlso'>file()</a> - Reads entire file into an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> <li class='member'><a href='http://www.php.net/manual/en/function.require.php' class='function' rel='rdfs-seeAlso'>require()</a> - require</li> <li class='member'><a href='http://www.php.net/manual/en/function.virtual.php' class='function' rel='rdfs-seeAlso'>virtual()</a> - Perform an Apache sub-request</li> <li class='member'><a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function' rel='rdfs-seeAlso'>file_get_contents()</a> - Reads entire file into a string</li> <li class='member'><a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="readdir" value="<div id='function.readdir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.readdir.php'>readdir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>readdir</span> &amp;mdash; <span class='dc-title'>Read entry from directory handle</span></p> </div> <a name='function.readdir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>readdir</b></span> ([ <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dir_handle</tt></span> ] )</div> <p class='para rdfs-comment'> Returns the filename of the next file from the directory. The filenames are returned in the order in which they are stored by the filesystem. </p> </div> <a name='function.readdir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dir_handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory handle <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> previously opened with <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a>. If the directory handle is not specified, the last link opened by <a href='http://www.php.net/manual/en/function.opendir.php' class='function'>opendir()</a> is assumed. </p> </dd> </dl> <p> </p> </div> <a name='function.readdir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the filename on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.readdir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 List all files in a directory</b></p> <div class='example-contents para'><p> Please note the fashion in which <b>readdir()</b>&amp;#039;s return value is checked in the examples below. We are explicitly testing whether the return value is identical to (equal to and of the same type as--see <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>Comparison Operators</a> for more information) <b><tt class='constant'>FALSE</tt></b> since otherwise, any directory entry whose name evaluates to <b><tt class='constant'>FALSE</tt></b> will stop the loop (e.g. a directory named &amp;quot;0&amp;quot;). </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Note&amp;nbsp;that&amp;nbsp;!==&amp;nbsp;did&amp;nbsp;not&amp;nbsp;exist&amp;nbsp;until&amp;nbsp;4.0.0-RC2<br /><br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>opendir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/files'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Directory&amp;nbsp;handle:&amp;nbsp;</span><span style='color: #0000BB'>$handle</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Files:\n'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;correct&amp;nbsp;way&amp;nbsp;to&amp;nbsp;loop&amp;nbsp;over&amp;nbsp;the&amp;nbsp;directory.&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;WRONG&amp;nbsp;way&amp;nbsp;to&amp;nbsp;loop&amp;nbsp;over&amp;nbsp;the&amp;nbsp;directory.&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>while&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>closedir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 List all files in the current directory and strip out <i>.</i> and <i>..</i> </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>opendir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'.'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>!=&amp;nbsp;</span><span style='color: #DD0000'>'.'&amp;nbsp;</span><span style='color: #007700'>&amp;amp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>!=&amp;nbsp;</span><span style='color: #DD0000'>'..'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>closedir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.readdir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-dir.php' class='function' rel='rdfs-seeAlso'>is_dir()</a> - Tells whether the filename is a directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.glob.php' class='function' rel='rdfs-seeAlso'>glob()</a> - Find pathnames matching a pattern</li> <li class='member'><a href='http://www.php.net/manual/en/function.opendir.php' class='function' rel='rdfs-seeAlso'>opendir()</a> - Open directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.scandir.php' class='function' rel='rdfs-seeAlso'>scandir()</a> - List files and directories inside the specified path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rawurlencode" value="<div id='function.rawurlencode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rawurlencode.php'>rawurlencode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rawurlencode</span> &amp;mdash; <span class='dc-title'>URL-encode according to RFC 1738</span></p> </div> <a name='function.rawurlencode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>rawurlencode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Encodes the given string according to <a href='http://www.faqs.org/rfcs/rfc1738' class='link external'>&amp;raquo; RFC 1738</a>. </p> </div> <a name='function.rawurlencode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The URL to be encoded. </p> </dd> </dl> <p> </p> </div> <a name='function.rawurlencode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string in which all non-alphanumeric characters except <i>-_.</i> have been replaced with a percent (<i>%</i>) sign followed by two hex digits. This is the encoding described in <a href='http://www.faqs.org/rfcs/rfc1738' class='link external'>&amp;raquo; RFC 1738</a> for protecting literal characters from being interpreted as special URL delimiters, and for protecting URLs from being mangled by transmission media with character conversions (like some email systems). </p> </div> <a name='function.rawurlencode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 including a password in an FTP URL</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/ftp://user:'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>rawurlencode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo&amp;nbsp;@+%/'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'@ftp.example.com/x.txt'&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;a href=&amp;quot;ftp://user:foo%20%40%2B%25%2F@ftp.example.com/x.txt&amp;quot;&amp;gt; </pre></div> </div> </div><p> </p> <p class='para'> Or, if you pass information in a PATH_INFO component of the URL: </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>rawurlencode()</b> example 2</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://example.com/department_list_script/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>rawurlencode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sales&amp;nbsp;and&amp;nbsp;marketing/Miami'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>''&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;a href=&amp;quot;http://example.com/department_list_script/sales%20and%20marketing%2FMiami&amp;quot;&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.rawurlencode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rawurldecode.php' class='function' rel='rdfs-seeAlso'>rawurldecode()</a> - Decode URL-encoded strings</li> <li class='member'><a href='http://www.php.net/manual/en/function.urldecode.php' class='function' rel='rdfs-seeAlso'>urldecode()</a> - Decodes URL-encoded string</li> <li class='member'><a href='http://www.php.net/manual/en/function.urlencode.php' class='function' rel='rdfs-seeAlso'>urlencode()</a> - URL-encodes string</li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc1738' class='link external'>&amp;raquo; RFC 1738</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rawurldecode" value="<div id='function.rawurldecode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rawurldecode.php'>rawurldecode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rawurldecode</span> &amp;mdash; <span class='dc-title'>Decode URL-encoded strings</span></p> </div> <a name='function.rawurldecode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>rawurldecode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a string in which the sequences with percent (<i>%</i>) signs followed by two hex digits have been replaced with literal characters. </p> </div> <a name='function.rawurldecode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The URL to be decoded. </p> </dd> </dl> <p> </p> </div> <a name='function.rawurldecode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the decoded URL, as a string. </p> </div> <a name='function.rawurldecode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rawurldecode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>rawurldecode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo%20bar%40baz'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;foo&amp;nbsp;bar@baz<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.rawurldecode.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>rawurldecode()</b> does not decode plus symbols (&amp;#039;+&amp;#039;) into spaces. <a href='http://www.php.net/manual/en/function.urldecode.php' class='function'>urldecode()</a> does. <br /> </p></blockquote> </div> <a name='function.rawurldecode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rawurlencode.php' class='function' rel='rdfs-seeAlso'>rawurlencode()</a> - URL-encode according to RFC 1738</li> <li class='member'><a href='http://www.php.net/manual/en/function.urldecode.php' class='function' rel='rdfs-seeAlso'>urldecode()</a> - Decodes URL-encoded string</li> <li class='member'><a href='http://www.php.net/manual/en/function.urlencode.php' class='function' rel='rdfs-seeAlso'>urlencode()</a> - URL-encodes string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="RangeException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.rangeexception.php'>The RangeException class</a></h1> <div class='partintro'> <div id='rangeexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown when an invalid range is given. </p> </div> <div id='rangeexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>RangeException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>RangeException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="range" value="<div id='function.range' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.range.php'>range</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>range</span> &amp;mdash; <span class='dc-title'>Create an array containing a range of elements</span></p> </div> <a name='function.range.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>range</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$low</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$high</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <tt class='parameter'>$step</tt></span> ] )</div> <p class='para rdfs-comment'> Create an array containing a range of elements. </p> </div> <a name='function.range.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>low</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Low value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>high</tt></i> </span> </dt><dd class='listitem'> <p class='para'> High value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>step</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If a <i><tt class='parameter'>step</tt></i> value is given, it will be used as the increment between elements in the sequence. <i><tt class='parameter'>step</tt></i> should be given as a positive number. If not specified, <i><tt class='parameter'>step</tt></i> will default to 1. </p> </dd> </dl> <p> </p> </div> <a name='function.range.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of elements from <i><tt class='parameter'>low</tt></i> to <i><tt class='parameter'>high</tt></i> , inclusive. If low &amp;gt; high, the sequence will be from high to low. </p> </div> <a name='function.range.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The optional <i><tt class='parameter'>step</tt></i> parameter was added. </td> </tr> <tr valign='middle'> <td align='left'>4.1.0 to 4.3.2</td> <td align='left'> In PHP versions 4.1.0 through 4.3.2, <b>range()</b> sees numeric strings as strings and not integers. Instead, they will be used for character sequences. For example, <i>&amp;quot;4242&amp;quot;</i> is treated as <i>&amp;quot;4&amp;quot;</i>. </td> </tr> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> Prior to PHP 4.1.0, <b>range()</b> only generated incrementing integer arrays. Support for character sequences and decrementing arrays was added in 4.1.0. Character sequence values are limited to a length of one. If a length greater than one is entered, only the first character is used. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.range.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>range()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;array(0,&amp;nbsp;1,&amp;nbsp;2,&amp;nbsp;3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6,&amp;nbsp;7,&amp;nbsp;8,&amp;nbsp;9,&amp;nbsp;10,&amp;nbsp;11,&amp;nbsp;12)<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;step&amp;nbsp;parameter&amp;nbsp;was&amp;nbsp;introduced&amp;nbsp;in&amp;nbsp;5.0.0<br />//&amp;nbsp;array(0,&amp;nbsp;10,&amp;nbsp;20,&amp;nbsp;30,&amp;nbsp;40,&amp;nbsp;50,&amp;nbsp;60,&amp;nbsp;70,&amp;nbsp;80,&amp;nbsp;90,&amp;nbsp;100)<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>100</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Use&amp;nbsp;of&amp;nbsp;character&amp;nbsp;sequences&amp;nbsp;introduced&amp;nbsp;in&amp;nbsp;4.1.0<br />//&amp;nbsp;array('a',&amp;nbsp;'b',&amp;nbsp;'c',&amp;nbsp;'d',&amp;nbsp;'e',&amp;nbsp;'f',&amp;nbsp;'g',&amp;nbsp;'h',&amp;nbsp;'i');<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'i'</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$letter</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$letter</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #FF8000'>//&amp;nbsp;array('c',&amp;nbsp;'b',&amp;nbsp;'a');<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$letter</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$letter</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.range.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.shuffle.php' class='function' rel='rdfs-seeAlso'>shuffle()</a> - Shuffle an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.array-fill.php' class='function' rel='rdfs-seeAlso'>array_fill()</a> - Fill an array with values</li> <li class='member'><a href='http://www.php.net/manual/en/control-structures.foreach.php' class='link'>foreach</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rand" value="<div id='function.rand' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rand.php'>rand</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rand</span> &amp;mdash; <span class='dc-title'>Generate a random integer</span></p> </div> <a name='function.rand.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>rand</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>rand</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$min</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$max</tt></span> )</div> <p class='simpara'> If called without the optional <i><tt class='parameter'>min</tt></i> , <i><tt class='parameter'>max</tt></i> arguments <b>rand()</b> returns a pseudo-random integer between 0 and <a href='http://www.php.net/manual/en/function.getrandmax.php' class='function'>getrandmax()</a>. If you want a random number between 5 and 15 (inclusive), for example, use <i>rand(5, 15)</i>. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> On some platforms (such as Windows), <a href='http://www.php.net/manual/en/function.getrandmax.php' class='function'>getrandmax()</a> is only 32768. If you require a range larger than 32768, specifying <i><tt class='parameter'>min</tt></i> and <i><tt class='parameter'>max</tt></i> will allow you to create a range larger than this, or consider using <a href='http://www.php.net/manual/en/function.mt-rand.php' class='function'>mt_rand()</a> instead. </span> </p></blockquote> </div> <a name='function.rand.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>min</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The lowest value to return (default: 0) </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>max</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The highest value to return (default: <a href='http://www.php.net/manual/en/function.getrandmax.php' class='function'>getrandmax()</a>) </p> </dd> </dl> <p> </p> </div> <a name='function.rand.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A pseudo random value between <i><tt class='parameter'>min</tt></i> (or 0) and <i><tt class='parameter'>max</tt></i> (or <a href='http://www.php.net/manual/en/function.getrandmax.php' class='function'>getrandmax()</a>, inclusive). </p> </div> <a name='function.rand.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>4.2.0</td><td align='left'>The random number generator is seeded automatically.</td></tr> </tbody> </table> <p> </p> </div> <a name='function.rand.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rand()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>rand</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>rand</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>rand</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>15</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 7771 22264 11 </pre></div> </div> </div><p> </p> </div> <a name='function.rand.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.srand.php' class='function' rel='rdfs-seeAlso'>srand()</a> - Seed the random number generator</li> <li class='member'><a href='http://www.php.net/manual/en/function.getrandmax.php' class='function' rel='rdfs-seeAlso'>getrandmax()</a> - Show largest possible random value</li> <li class='member'><a href='http://www.php.net/manual/en/function.mt-rand.php' class='function' rel='rdfs-seeAlso'>mt_rand()</a> - Generate a better random value</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="rad2deg" value="<div id='function.rad2deg' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.rad2deg.php'>rad2deg</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>rad2deg</span> &amp;mdash; <span class='dc-title'> Converts the radian number to the equivalent number in degrees </span></p> </div> <a name='function.rad2deg.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>rad2deg</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$number</tt></span> )</div> <p class='para rdfs-comment'> This function converts <i><tt class='parameter'>number</tt></i> from radian to degrees. </p> </div> <a name='function.rad2deg.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A radian value </p> </dd> </dl> <p> </p> </div> <a name='function.rad2deg.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The equivalent of <i><tt class='parameter'>number</tt></i> in degrees </p> </div> <a name='function.rad2deg.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>rad2deg()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>rad2deg</span><span style='color: #007700'>(</span><span style='color: #0000BB'>M_PI_4</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;45<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.rad2deg.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.deg2rad.php' class='function' rel='rdfs-seeAlso'>deg2rad()</a> - Converts the number in degrees to the radian equivalent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="quotemeta" value="<div id='function.quotemeta' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.quotemeta.php'>quotemeta</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>quotemeta</span> &amp;mdash; <span class='dc-title'>Quote meta characters</span></p> </div> <a name='function.quotemeta.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>quotemeta</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a version of str with a backslash character (<i>\</i>) before every character that is among these: <div class='example-contents screen'>. \ + * ? [ ^ ] ( $ )</div> </p> </div> <a name='function.quotemeta.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.quotemeta.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the string with meta characters quoted. </p> </div> <a name='function.quotemeta.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.quotemeta.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.addslashes.php' class='function' rel='rdfs-seeAlso'>addslashes()</a> - Quote string with slashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.addcslashes.php' class='function' rel='rdfs-seeAlso'>addcslashes()</a> - Quote string with slashes in a C style</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlentities.php' class='function' rel='rdfs-seeAlso'>htmlentities()</a> - Convert all applicable characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.nl2br.php' class='function' rel='rdfs-seeAlso'>nl2br()</a> - Inserts HTML line breaks before all newlines in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripslashes.php' class='function' rel='rdfs-seeAlso'>stripslashes()</a> - Un-quotes a quoted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripcslashes.php' class='function' rel='rdfs-seeAlso'>stripcslashes()</a> - Un-quote string quoted with addcslashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="quoted_printable_decode" value="<div id='function.quoted-printable-decode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.quoted-printable-decode.php'>quoted_printable_decode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>quoted_printable_decode</span> &amp;mdash; <span class='dc-title'>Convert a quoted-printable string to an 8 bit string</span></p> </div> <a name='function.quoted-printable-decode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>quoted_printable_decode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> This function returns an 8-bit binary string corresponding to the decoded quoted printable string (according to <a href='http://www.faqs.org/rfcs/rfc2045' class='link external'>&amp;raquo; RFC2045</a>, section 6.7, not <a href='http://www.faqs.org/rfcs/rfc2821' class='link external'>&amp;raquo; RFC2821</a>, section 4.5.2, so additional periods are not stripped from the beginning of line). </p> <p class='para'> This function is similar to <a href='http://www.php.net/manual/en/function.imap-qprint.php' class='function'>imap_qprint()</a>, except this one does not require the IMAP module to work. </p> </div> <a name='function.quoted-printable-decode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.quoted-printable-decode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the 8-bit binary string. </p> </div> <a name='function.quoted-printable-decode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.quoted-printable-encode.php' class='function' rel='rdfs-seeAlso'>quoted_printable_encode()</a> - Convert a 8 bit string to a quoted-printable string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="putenv" value="<div id='function.putenv' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.putenv.php'>putenv</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>putenv</span> &amp;mdash; <span class='dc-title'>Sets the value of an environment variable</span></p> </div> <a name='function.putenv.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>putenv</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$setting</tt></span> )</div> <p class='para rdfs-comment'> Adds <i><tt class='parameter'>setting</tt></i> to the server environment. The environment variable will only exist for the duration of the current request. At the end of the request the environment is restored to its original state. </p> <p class='para'> Setting certain environment variables may be a potential security breach. The <i>safe_mode_allowed_env_vars</i> directive contains a comma-delimited list of prefixes. In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied by this directive. By default, users will only be able to set environment variables that begin with <i>PHP_</i> (e.g. <i>PHP_FOO=BAR</i>). Note: if this directive is empty, PHP will let the user modify ANY environment variable! </p> <p class='para'> The <i>safe_mode_protected_env_vars</i> directive contains a comma-delimited list of environment variables, that the end user won&amp;#039;t be able to change using <b>putenv()</b>. These variables will be protected even if <i>safe_mode_allowed_env_vars</i> is set to allow to change them. </p> </div> <a name='function.putenv.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>setting</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The setting, like <i>&amp;quot;FOO=BAR&amp;quot;</i> </p> </dd> </dl> <p> </p> </div> <a name='function.putenv.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.putenv.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Setting an environment variable</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />putenv</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UNIQID=</span><span style='color: #0000BB'>$uniqid</span><span style='color: #DD0000'>'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.putenv.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> These directives have only effect when <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe-mode</a> itself is enabled! </p> </div> </div> <a name='function.putenv.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.getenv.php' class='function' rel='rdfs-seeAlso'>getenv()</a> - Gets the value of an environment variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="property_exists" value="<div id='function.property-exists' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.property-exists.php'>property_exists</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>property_exists</span> &amp;mdash; <span class='dc-title'> Checks if the object or class has a property </span></p> </div> <a name='function.property-exists.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>property_exists</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$class</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$property</tt></span> )</div> <p class='para rdfs-comment'> This function checks if the given <i><tt class='parameter'>property</tt></i> exists in the specified class. </p> <blockquote><p><b class='note'>Note</b>: As opposed with <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a>, <b>property_exists()</b> returns <b><tt class='constant'>TRUE</tt></b> even if the property has the value <b><tt class='constant'>NULL</tt></b>. <br /> </p></blockquote> </div> <a name='function.property-exists.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name or an object of the class to test for </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>property</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the property </p> </dd> </dl> <p> </p> </div> <a name='function.property-exists.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the property exists, <b><tt class='constant'>FALSE</tt></b> if it doesn&amp;#039;t exist or <b><tt class='constant'>NULL</tt></b> in case of an error. </p> </div> <a name='function.property-exists.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function checks the existence of a property independent of accessibility. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.property-exists.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>property_exists()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>myClass&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$mine</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$xpto</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;protected&amp;nbsp;</span><span style='color: #0000BB'>$test</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'xpto'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//true<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>}<br />}<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'mine'</span><span style='color: #007700'>));&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//true<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>myClass</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'mine'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//true<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'xpto'</span><span style='color: #007700'>));&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//true,&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>));&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//false<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>property_exists</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myClass'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'test'</span><span style='color: #007700'>));&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//true,&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #0000BB'>myClass</span><span style='color: #007700'>::</span><span style='color: #0000BB'>test</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.property-exists.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.method-exists.php' class='function' rel='rdfs-seeAlso'>method_exists()</a> - Checks if the class method exists</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="proc_terminate" value="<div id='function.proc-terminate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.proc-terminate.php'>proc_terminate</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>proc_terminate</span> &amp;mdash; <span class='dc-title'>Kills a process opened by proc_open</span></p> </div> <a name='function.proc-terminate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>proc_terminate</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$process</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$signal</tt><span class='initializer'> = 15</span></span> ] )</div> <p class='para rdfs-comment'> Signals a <i><tt class='parameter'>process</tt></i> (created using <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a>) that it should terminate. <b>proc_terminate()</b> returns immediately and does not wait for the process to terminate. </p> <p class='para'> <b>proc_terminate()</b> allows you terminate the process and continue with other tasks. You may poll the process (to see if it has stopped yet) by using the <a href='http://www.php.net/manual/en/function.proc-get-status.php' class='function'>proc_get_status()</a> function. </p> </div> <a name='function.proc-terminate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>process</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that will be closed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>signal</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This optional parameter is only useful on <acronym title='Portable Operating System Interface'>POSIX</acronym> operating systems; you may specify a signal to send to the process using the <i>kill(2)</i> system call. The default is <i>SIGTERM</i>. </p> </dd> </dl> <p> </p> </div> <a name='function.proc-terminate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the termination status of the process that was run. </p> </div> <a name='function.proc-terminate.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.2</td> <td align='left'> Previous versions used to destroy the given process <i><tt class='parameter'>resource</tt></i> . </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.proc-terminate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.proc-open.php' class='function' rel='rdfs-seeAlso'>proc_open()</a> - Execute a command and open file pointers for input/output</li> <li class='member'><a href='http://www.php.net/manual/en/function.proc-close.php' class='function' rel='rdfs-seeAlso'>proc_close()</a> - Close a process opened by proc_open and return the exit code of that process</li> <li class='member'><a href='http://www.php.net/manual/en/function.proc-get-status.php' class='function' rel='rdfs-seeAlso'>proc_get_status()</a> - Get information about a process opened by proc_open</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="proc_open" value="<div id='function.proc-open' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.proc-open.php'>proc_open</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>proc_open</span> &amp;mdash; <span class='dc-title'> Execute a command and open file pointers for input/output </span></p> </div> <a name='function.proc-open.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>proc_open</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$cmd</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$descriptorspec</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$pipes</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$cwd</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$env</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$other_options</tt></span> ]]] )</div> <p class='para rdfs-comment'> <b>proc_open()</b> is similar to <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a> but provides a much greater degree of control over the program execution. </p> </div> <a name='function.proc-open.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmd</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command to execute </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>descriptorspec</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An indexed array where the key represents the descriptor number and the value represents how PHP will pass that descriptor to the child process. 0 is stdin, 1 is stdout, while 2 is stderr. </p> <p class='para'> Each element can be: </p><ul class='simplelist'> <li class='member'>An array describing the pipe to pass to the process. The first element is the descriptor type and the second element is an option for the given type. Valid types are <i>pipe</i> (the second element is either <i>r</i> to pass the read end of the pipe to the process, or <i>w</i> to pass the write end) and <i>file</i> (the second element is a filename). </li> <li class='member'> A stream resource representing a real file descriptor (e.g. opened file, a socket, <b><tt class='constant'>STDIN</tt></b>). </li> </ul><p> </p> <p class='para'> The file descriptor numbers are not limited to 0, 1 and 2 - you may specify any valid file descriptor number and it will be passed to the child process. This allows your script to interoperate with other scripts that run as &amp;quot;co-processes&amp;quot;. In particular, this is useful for passing passphrases to programs like PGP, GPG and openssl in a more secure manner. It is also useful for reading status information provided by those programs on auxiliary file descriptors. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pipes</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Will be set to an indexed array of file pointers that correspond to PHP&amp;#039;s end of any pipes that are created. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cwd</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The initial working dir for the command. This must be an <em class='emphasis'>absolute</em> directory path, or <b><tt class='constant'>NULL</tt></b> if you want to use the default value (the working dir of the current PHP process) </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>env</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array with the environment variables for the command that will be run, or <b><tt class='constant'>NULL</tt></b> to use the same environment as the current PHP process </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>other_options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Allows you to specify additional options. Currently supported options include: </p><ul class='simplelist'> <li class='member'> <i>suppress_errors</i> (windows only): suppresses errors generated by this function when it&amp;#039;s set to <b><tt class='constant'>TRUE</tt></b> </li> <li class='member'> <i>bypass_shell</i> (windows only): bypass <i>cmd.exe</i> shell when set to <b><tt class='constant'>TRUE</tt></b> </li> <li class='member'> <i>context</i>: stream context used when opening files (created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>) </li> <li class='member'> <i>binary_pipes</i>: open pipes in binary mode, instead of using the usual <i>stream_encoding</i> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.proc-open.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a resource representing the process, which should be freed using <a href='http://www.php.net/manual/en/function.proc-close.php' class='function'>proc_close()</a> when you are finished with it. On failure returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.proc-open.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>6.0.0</td> <td align='left'> Added the <i>context</i> and <i>binary_pipes</i> options to the <i><tt class='parameter'>other_options</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>5.2.1</td> <td align='left'> Added the <i>bypass_shell</i> option to the <i><tt class='parameter'>other_options</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Added the <i><tt class='parameter'>cwd</tt></i> , <i><tt class='parameter'>env</tt></i> and <i><tt class='parameter'>other_options</tt></i> parameters. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.proc-open.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>proc_open()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$descriptorspec&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>0&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'pipe'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>),&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;stdin&amp;nbsp;is&amp;nbsp;a&amp;nbsp;pipe&amp;nbsp;that&amp;nbsp;the&amp;nbsp;child&amp;nbsp;will&amp;nbsp;read&amp;nbsp;from<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'pipe'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>),&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;stdout&amp;nbsp;is&amp;nbsp;a&amp;nbsp;pipe&amp;nbsp;that&amp;nbsp;the&amp;nbsp;child&amp;nbsp;will&amp;nbsp;write&amp;nbsp;to<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>2&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array(</span><span style='color: #DD0000'>'file'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/tmp/error-output.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>)&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;stderr&amp;nbsp;is&amp;nbsp;a&amp;nbsp;file&amp;nbsp;to&amp;nbsp;write&amp;nbsp;to<br /></span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$cwd&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$env&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'some_option'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'aeiou'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$process&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>proc_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$descriptorspec</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$pipes</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$cwd</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$env</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>is_resource</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$process</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$pipes&amp;nbsp;now&amp;nbsp;looks&amp;nbsp;like&amp;nbsp;this:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;0&amp;nbsp;=&amp;gt;&amp;nbsp;writeable&amp;nbsp;handle&amp;nbsp;connected&amp;nbsp;to&amp;nbsp;child&amp;nbsp;stdin<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;1&amp;nbsp;=&amp;gt;&amp;nbsp;readable&amp;nbsp;handle&amp;nbsp;connected&amp;nbsp;to&amp;nbsp;child&amp;nbsp;stdout<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Any&amp;nbsp;error&amp;nbsp;output&amp;nbsp;will&amp;nbsp;be&amp;nbsp;appended&amp;nbsp;to&amp;nbsp;/tmp/error-output.txt<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pipes</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;?php&amp;nbsp;print_r($_ENV);&amp;nbsp;?&amp;gt;'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pipes</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>stream_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pipes</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pipes</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;It&amp;nbsp;is&amp;nbsp;important&amp;nbsp;that&amp;nbsp;you&amp;nbsp;close&amp;nbsp;any&amp;nbsp;pipes&amp;nbsp;before&amp;nbsp;calling<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;proc_close&amp;nbsp;in&amp;nbsp;order&amp;nbsp;to&amp;nbsp;avoid&amp;nbsp;a&amp;nbsp;deadlock<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$return_value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>proc_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$process</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'command&amp;nbsp;returned&amp;nbsp;</span><span style='color: #0000BB'>$return_value</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [some_option] =&amp;gt; aeiou [PWD] =&amp;gt; /tmp [SHLVL] =&amp;gt; 1 [_] =&amp;gt; /usr/local/bin/php ) command returned 0 </pre></div> </div> </div><p> </p> </div> <a name='function.proc-open.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Windows compatibility: Descriptors beyond 2 (stderr) are made available to the child process as inheritable handles, but since the Windows architecture does not associate file descriptor numbers with low-level handles, the child process does not (yet) have a means of accessing those handles. Stdin, stdout and stderr work as expected. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If you only need a uni-directional (one-way) process pipe, use <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a> instead, as it is much easier to use. <br /> </p></blockquote> </div> <a name='function.proc-open.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.system.php' class='function' rel='rdfs-seeAlso'>system()</a> - Execute an external program and display the output</li> <li class='member'><a href='http://www.php.net/manual/en/function.passthru.php' class='function' rel='rdfs-seeAlso'>passthru()</a> - Execute an external program and display raw output</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-select.php' class='function' rel='rdfs-seeAlso'>stream_select()</a> - Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec</li> <li class='member'>The <a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="proc_get_status" value="<div id='function.proc-get-status' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.proc-get-status.php'>proc_get_status</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>proc_get_status</span> &amp;mdash; <span class='dc-title'>Get information about a process opened by <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a></span></p> </div> <a name='function.proc-get-status.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>proc_get_status</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$process</tt></span> )</div> <p class='para rdfs-comment'> <b>proc_get_status()</b> fetches data about a process opened using <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a>. </p> </div> <a name='function.proc-get-status.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>process</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that will be evaluated. </p> </dd> </dl> <p> </p> </div> <a name='function.proc-get-status.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of collected information on success, and <b><tt class='constant'>FALSE</tt></b> on failure. The returned array contains the following elements: </p> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'><th>element</th><th>type</th><th>description</th></tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>command</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a></td> <td align='left'> The command string that was passed to <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a>. </td> </tr> <tr valign='middle'> <td align='left'>pid</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.integer.php' class='type int'>int</a></td> <td align='left'>process id</td> </tr> <tr valign='middle'> <td align='left'>running</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type bool'>bool</a></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> if the process is still running, <b><tt class='constant'>FALSE</tt></b> if it has terminated. </td> </tr> <tr valign='middle'> <td align='left'>signaled</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type bool'>bool</a></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> if the child process has been terminated by an uncaught signal. Always set to <b><tt class='constant'>FALSE</tt></b> on Windows. </td> </tr> <tr valign='middle'> <td align='left'>stopped</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.boolean.php' class='type bool'>bool</a></td> <td align='left'> <b><tt class='constant'>TRUE</tt></b> if the child process has been stopped by a signal. Always set to <b><tt class='constant'>FALSE</tt></b> on Windows. </td> </tr> <tr valign='middle'> <td align='left'>exitcode</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.integer.php' class='type int'>int</a></td> <td align='left'> The exit code returned by the process (which is only meaningful if <i>running</i> is <b><tt class='constant'>FALSE</tt></b>). Only first call of this function return real value, next calls return <i>-1</i>. </td> </tr> <tr valign='middle'> <td align='left'>termsig</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.integer.php' class='type int'>int</a></td> <td align='left'> The number of the signal that caused the child process to terminate its execution (only meaningful if <i>signaled</i> is <b><tt class='constant'>TRUE</tt></b>). </td> </tr> <tr valign='middle'> <td align='left'>stopsig</td> <td align='left'><a href='http://www.php.net/manual/en/language.types.integer.php' class='type int'>int</a></td> <td align='left'> The number of the signal that caused the child process to stop its execution (only meaningful if <i>stopped</i> is <b><tt class='constant'>TRUE</tt></b>). </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.proc-get-status.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.proc-open.php' class='function' rel='rdfs-seeAlso'>proc_open()</a> - Execute a command and open file pointers for input/output</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="proc_close" value="<div id='function.proc-close' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.proc-close.php'>proc_close</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>proc_close</span> &amp;mdash; <span class='dc-title'>Close a process opened by <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> and return the exit code of that process</span></p> </div> <a name='function.proc-close.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>proc_close</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$process</tt></span> )</div> <p class='para rdfs-comment'> <b>proc_close()</b> is similar to <a href='http://www.php.net/manual/en/function.pclose.php' class='function'>pclose()</a> except that it only works on processes opened by <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a>. <b>proc_close()</b> waits for the process to terminate, and returns its exit code. If you have open pipes to that process, you should <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a> them prior to calling this function in order to avoid a deadlock - the child process may not be able to exit while the pipes are open. </p> </div> <a name='function.proc-close.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>process</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> that will be closed. </p> </dd> </dl> <p> </p> </div> <a name='function.proc-close.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the termination status of the process that was run. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="print_r" value="<div id='function.print-r' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.print-r.php'>print_r</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>print_r</span> &amp;mdash; <span class='dc-title'> Prints human-readable information about a variable </span></p> </div> <a name='function.print-r.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>print_r</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$expression</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> <b>print_r()</b> displays information about a variable in a way that&amp;#039;s readable by humans. </p> <p class='para'> <b>print_r()</b>, <a href='http://www.php.net/manual/en/function.var-dump.php' class='function'>var_dump()</a> and <a href='http://www.php.net/manual/en/function.var-export.php' class='function'>var_export()</a> will also show protected and private properties of objects with PHP 5. Static class members will not be shown. </p> <p class='para'> Remember that <b>print_r()</b> will move the array pointer to the end. Use <a href='http://www.php.net/manual/en/function.reset.php' class='function'>reset()</a> to bring it back to beginning. </p> </div> <a name='function.print-r.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>expression</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The expression to be printed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If you would like to capture the output of <b>print_r()</b>, use the <i><tt class='parameter'>return</tt></i> parameter. If this parameter is set to <b><tt class='constant'>TRUE</tt></b>, <b>print_r()</b> will return its output, instead of printing it (which it does by default). </p> </dd> </dl> <p> </p> </div> <a name='function.print-r.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If given a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> or <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, the value itself will be printed. If given an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>, values will be presented in a format that shows keys and elements. Similar notation is used for <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>s. </p> </div> <a name='function.print-r.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function uses internal output buffering with this parameter so it can not be used inside an <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a> callback function.<br /></p></blockquote> </div> <a name='function.print-r.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <i><tt class='parameter'>return</tt></i> parameter was added. If you need to capture the output of <b>print_r()</b> with an older version of PHP prior, use the <a href='http://www.php.net/manual/en/ref.outcontrol.php' class='link'>output-control functions</a>. </td> </tr> <tr valign='middle'> <td align='left'>4.0.4</td> <td align='left'> Prior to PHP 4.0.4, <b>print_r()</b> will continue forever if given an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> that contains a direct or indirect reference to itself. An example is <i>print_r($GLOBALS)</i> because <i>$GLOBALS</i> is itself a global variable that contains a reference to itself. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.print-r.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>print_r()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> &amp;lt;pre&amp;gt;<br /><span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'x'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'z'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span>&amp;lt;/pre&amp;gt;</span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;pre&amp;gt; Array ( [a] =&amp;gt; apple [b] =&amp;gt; banana [c] =&amp;gt; Array ( [0] =&amp;gt; x [1] =&amp;gt; y [2] =&amp;gt; z ) ) &amp;lt;/pre&amp;gt; </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <i><tt class='parameter'>return</tt></i> parameter example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'m'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'monkey'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foo'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'bar'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'x'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'x'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'z'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$results&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$results&amp;nbsp;now&amp;nbsp;contains&amp;nbsp;output&amp;nbsp;from&amp;nbsp;print_r<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.print-r.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.var-dump.php' class='function' rel='rdfs-seeAlso'>var_dump()</a> - Dumps information about a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.var-export.php' class='function' rel='rdfs-seeAlso'>var_export()</a> - Outputs or returns a parsable string representation of a variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="printf" value="<div id='function.printf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.printf.php'>printf</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>printf</span> &amp;mdash; <span class='dc-title'>Output a formatted string</span></p> </div> <a name='function.printf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>printf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='simpara'> Produces output according to <i><tt class='parameter'>format</tt></i> . </p> </div> <a name='function.printf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> for a description of <i><tt class='parameter'>format</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.printf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the outputted string. </p> </div> <a name='function.printf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.print.php' class='function' rel='rdfs-seeAlso'>print()</a> - Output a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.vprintf.php' class='function' rel='rdfs-seeAlso'>vprintf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.flush.php' class='function' rel='rdfs-seeAlso'>flush()</a> - Flush the output buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="prev" value="<div id='function.prev' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.prev.php'>prev</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>prev</span> &amp;mdash; <span class='dc-title'>Rewind the internal array pointer</span></p> </div> <a name='function.prev.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>prev</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> Rewind the internal array pointer. </p> <p class='para'> <b>prev()</b> behaves just like <a href='http://www.php.net/manual/en/function.next.php' class='function'>next()</a>, except it rewinds the internal array pointer one place instead of advancing it. </p> </div> <a name='function.prev.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.prev.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the array value in the previous place that&amp;#039;s pointed to by the internal array pointer, or <b><tt class='constant'>FALSE</tt></b> if there are no more elements. </p> </div> <a name='function.prev.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Example use of <b>prev()</b> and friends</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$transport&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'foot'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bike'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'car'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'plane'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'foot';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'car';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>prev</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>end</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'plane';<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.prev.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> You won&amp;#039;t be able to distinguish the beginning of an array from a <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>FALSE</tt></b> element. To properly traverse an array which may contain <b><tt class='constant'>FALSE</tt></b> elements, see the <a href='http://www.php.net/manual/en/function.each.php' class='function'>each()</a> function. </span> </p></blockquote> </div> <a name='function.prev.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.current.php' class='function' rel='rdfs-seeAlso'>current()</a> - Return the current element in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.end.php' class='function' rel='rdfs-seeAlso'>end()</a> - Set the internal pointer of an array to its last element</li> <li class='member'><a href='http://www.php.net/manual/en/function.next.php' class='function' rel='rdfs-seeAlso'>next()</a> - Advance the internal array pointer of an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.reset.php' class='function' rel='rdfs-seeAlso'>reset()</a> - Set the internal pointer of an array to its first element</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_split" value="<div id='function.preg-split' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-split.php'>preg_split</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_split</span> &amp;mdash; <span class='dc-title'>Split string by a regular expression</span></p> </div> <a name='function.preg-split.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>preg_split</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> ]] )</div> <p class='para rdfs-comment'> Split the given string by a regular expression. </p> </div> <a name='function.preg-split.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for, as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If specified, then only substrings up to <i><tt class='parameter'>limit</tt></i> are returned with the rest of the string being placed in the last substring. A <i><tt class='parameter'>limit</tt></i> of -1, 0 or null means &amp;quot;no limit&amp;quot; and, as is standard across PHP, you can use null to skip to the <i><tt class='parameter'>flags</tt></i> parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>flags</tt></i> can be any combination of the following flags (combined with bitwise | operator): </p><dl> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_SPLIT_NO_EMPTY</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> If this flag is set, only non-empty pieces will be returned by <b>preg_split()</b>. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_SPLIT_DELIM_CAPTURE</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> If this flag is set, parenthesized expression in the delimiter pattern will be captured and returned as well. </span> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_SPLIT_OFFSET_CAPTURE</tt></b></span> </dt><dd class='listitem'> <p class='para'> If this flag is set, for every occurring match the appendant string offset will also be returned. Note that this changes the return value in an array where every element is an array consisting of the matched string at offset <i>0</i> and its string offset into <i><tt class='parameter'>subject</tt></i> at offset <i>1</i>. </p> </dd> </dl> <p> </p> </dd> </dl> <p> </p> </div> <a name='function.preg-split.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array containing substrings of <i><tt class='parameter'>subject</tt></i> split along boundaries matched by <i><tt class='parameter'>pattern</tt></i> . </p> </div> <a name='function.preg-split.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <b><tt class='constant'>PREG_SPLIT_OFFSET_CAPTURE</tt></b> was added </td> </tr> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> The <b><tt class='constant'>PREG_SPLIT_DELIM_CAPTURE</tt></b> was added </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> The <i><tt class='parameter'>flags</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-split.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>preg_split()</b> example : Get the parts of a search string</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;split&amp;nbsp;the&amp;nbsp;phrase&amp;nbsp;by&amp;nbsp;any&amp;nbsp;number&amp;nbsp;of&amp;nbsp;commas&amp;nbsp;or&amp;nbsp;space&amp;nbsp;characters,<br />//&amp;nbsp;which&amp;nbsp;include&amp;nbsp;'&amp;nbsp;',&amp;nbsp;\r,&amp;nbsp;\t,&amp;nbsp;\n&amp;nbsp;and&amp;nbsp;\f<br /></span><span style='color: #0000BB'>$keywords&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/[\s,]+/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hypertext&amp;nbsp;language,&amp;nbsp;programming'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Splitting a string into component characters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'string'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$chars&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'//'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_SPLIT_NO_EMPTY</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$chars</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Splitting a string into matches and their offsets</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'hypertext&amp;nbsp;language&amp;nbsp;programming'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$chars&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/&amp;nbsp;/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_SPLIT_OFFSET_CAPTURE</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$chars</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; hypertext [1] =&amp;gt; 0 ) [1] =&amp;gt; Array ( [0] =&amp;gt; language [1] =&amp;gt; 10 ) [2] =&amp;gt; Array ( [0] =&amp;gt; programming [1] =&amp;gt; 19 ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.preg-split.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b> <p class='para'> If you don&amp;#039;t need the power of regular expressions, you can choose faster (albeit simpler) alternatives like <a href='http://www.php.net/manual/en/function.explode.php' class='function'>explode()</a> or <a href='http://www.php.net/manual/en/function.str-split.php' class='function'>str_split()</a>. </p> </div> </div> <a name='function.preg-split.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.spliti.php' class='function' rel='rdfs-seeAlso'>spliti()</a> - Split string into array by regular expression case insensitive</li> <li class='member'><a href='http://www.php.net/manual/en/function.split.php' class='function' rel='rdfs-seeAlso'>split()</a> - Split string into array by regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.implode.php' class='function' rel='rdfs-seeAlso'>implode()</a> - Join array elements with a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function' rel='rdfs-seeAlso'>preg_match_all()</a> - Perform a global regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_replace_callback" value="<div id='function.preg-replace-callback' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-replace-callback.php'>preg_replace_callback</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_replace_callback</span> &amp;mdash; <span class='dc-title'>Perform a regular expression search and replace using a callback</span></p> </div> <a name='function.preg-replace-callback.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>preg_replace_callback</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$callback</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$count</tt></span> ]] )</div> <p class='para rdfs-comment'> The behavior of this function is almost identical to <a href='http://www.php.net/manual/en/function.preg-replace.php' class='function'>preg_replace()</a>, except for the fact that instead of <i><tt class='parameter'>replacement</tt></i> parameter, one should specify a <i><tt class='parameter'>callback</tt></i> . </p> </div> <a name='function.preg-replace-callback.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for. It can be either a string or an array with strings. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>callback</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A callback that will be called and passed an array of matched elements in the <i><tt class='parameter'>subject</tt></i> string. The callback should return the replacement string. </p> <p class='para'> You&amp;#039;ll often need the <i><tt class='parameter'>callback</tt></i> function for a <b>preg_replace_callback()</b> in just one place. In this case you can use an <a href='http://www.php.net/manual/en/functions.anonymous.php' class='link'>anonymous function</a> (since PHP 5.3.0) or <a href='http://www.php.net/manual/en/function.create-function.php' class='function'>create_function()</a> to declare an anonymous function as callback within the call to <b>preg_replace_callback()</b>. By doing it this way you have all information for the call in one place and do not clutter the function namespace with a callback function&amp;#039;s name not used anywhere else. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>preg_replace_callback()</b> and <a href='http://www.php.net/manual/en/function.create-function.php' class='function'>create_function()</a></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;a&amp;nbsp;unix-style&amp;nbsp;command&amp;nbsp;line&amp;nbsp;filter&amp;nbsp;to&amp;nbsp;convert&amp;nbsp;uppercase<br />&amp;nbsp;*&amp;nbsp;letters&amp;nbsp;at&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;paragraphs&amp;nbsp;to&amp;nbsp;lowercase&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'php://stdin'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>)&amp;nbsp;or&amp;nbsp;die(</span><span style='color: #DD0000'>'can't&amp;nbsp;read&amp;nbsp;stdin'</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$line&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$line&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace_callback</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'|&amp;lt;p&amp;gt;\s*\w|'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;single&amp;nbsp;quotes&amp;nbsp;are&amp;nbsp;essential&amp;nbsp;here,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;or&amp;nbsp;alternative&amp;nbsp;escape&amp;nbsp;all&amp;nbsp;$&amp;nbsp;as&amp;nbsp;\$<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'$matches'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;strtolower($matches[0]);'<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$line<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string or an array with strings to search and replace. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum possible replacements for each pattern in each <i><tt class='parameter'>subject</tt></i> string. Defaults to <i>-1</i> (no limit). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>count</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If specified, this variable will be filled with the number of replacements done. </p> </dd> </dl> <p> </p> </div> <a name='function.preg-replace-callback.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>preg_replace_callback()</b> returns an array if the <i><tt class='parameter'>subject</tt></i> parameter is an array, or a string otherwise. </p> <p class='para'> If matches are found, the new subject will be returned, otherwise <i><tt class='parameter'>subject</tt></i> will be returned unchanged. </p> </div> <a name='function.preg-replace-callback.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> The <i><tt class='parameter'>count</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-replace-callback.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>preg_replace_callback()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;text&amp;nbsp;was&amp;nbsp;used&amp;nbsp;in&amp;nbsp;2002<br />//&amp;nbsp;we&amp;nbsp;want&amp;nbsp;to&amp;nbsp;get&amp;nbsp;this&amp;nbsp;up&amp;nbsp;to&amp;nbsp;date&amp;nbsp;for&amp;nbsp;2003<br /></span><span style='color: #0000BB'>$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'April&amp;nbsp;fools&amp;nbsp;day&amp;nbsp;is&amp;nbsp;04/01/2002\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$text</span><span style='color: #007700'>.=&amp;nbsp;</span><span style='color: #DD0000'>'Last&amp;nbsp;christmas&amp;nbsp;was&amp;nbsp;12/24/2001\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;the&amp;nbsp;callback&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>next_year</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;as&amp;nbsp;usual:&amp;nbsp;$matches[0]&amp;nbsp;is&amp;nbsp;the&amp;nbsp;complete&amp;nbsp;match<br />&amp;nbsp;&amp;nbsp;//&amp;nbsp;$matches[1]&amp;nbsp;the&amp;nbsp;match&amp;nbsp;for&amp;nbsp;the&amp;nbsp;first&amp;nbsp;subpattern<br />&amp;nbsp;&amp;nbsp;//&amp;nbsp;enclosed&amp;nbsp;in&amp;nbsp;'(...)'&amp;nbsp;and&amp;nbsp;so&amp;nbsp;on<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>].(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]+</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />}<br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace_callback</span><span style='color: #007700'>(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'|(\d{2}/\d{2}/)(\d{4})|'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'next_year'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> April fools day is 04/01/2003 Last christmas was 12/24/2002 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 <b>preg_replace_callback()</b> using recursive structure to handle encapsulated BB code</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'plain&amp;nbsp;[indent]&amp;nbsp;deep&amp;nbsp;[indent]&amp;nbsp;deeper&amp;nbsp;[/indent]&amp;nbsp;deep&amp;nbsp;[/indent]&amp;nbsp;plain'</span><span style='color: #007700'>;<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>parseTagsRecursive</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>)<br />{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$regex&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'#\[indent]((?:[^[]|\[(?!/?indent])|(?R))+)\[/indent]#'</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>is_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;div&amp;nbsp;style='margin-left:&amp;nbsp;10px'&amp;gt;'</span><span style='color: #007700'>.</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>].</span><span style='color: #DD0000'>'&amp;lt;/div&amp;gt;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>preg_replace_callback</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$regex</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'parseTagsRecursive'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>$output&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>parseTagsRecursive</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.preg-replace-callback.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.create-function.php' class='function' rel='rdfs-seeAlso'>create_function()</a> - Create an anonymous (lambda-style) function</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_replace" value="<div id='function.preg-replace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-replace.php'>preg_replace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_replace</span> &amp;mdash; <span class='dc-title'>Perform a regular expression search and replace</span></p> </div> <a name='function.preg-replace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>preg_replace</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$replacement</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$count</tt></span> ]] )</div> <p class='para rdfs-comment'> Searches <i><tt class='parameter'>subject</tt></i> for matches to <i><tt class='parameter'>pattern</tt></i> and replaces them with <i><tt class='parameter'>replacement</tt></i> . </p> </div> <a name='function.preg-replace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for. It can be either a string or an array with strings. </p> <p class='para'> The <i>e</i> modifier makes <b>preg_replace()</b> treat the <i><tt class='parameter'>replacement</tt></i> parameter as PHP code after the appropriate references substitution is done. Tip: make sure that <i><tt class='parameter'>replacement</tt></i> constitutes a valid PHP code string, otherwise PHP will complain about a parse error at the line containing <b>preg_replace()</b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replacement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string or an array with strings to replace. If this parameter is a string and the <i><tt class='parameter'>pattern</tt></i> parameter is an array, all patterns will be replaced by that string. If both <i><tt class='parameter'>pattern</tt></i> and <i><tt class='parameter'>replacement</tt></i> parameters are arrays, each <i><tt class='parameter'>pattern</tt></i> will be replaced by the <i><tt class='parameter'>replacement</tt></i> counterpart. If there are fewer elements in the <i><tt class='parameter'>replacement</tt></i> array than in the <i><tt class='parameter'>pattern</tt></i> array, any extra <i><tt class='parameter'>pattern</tt></i> s will be replaced by an empty string. </p> <p class='para'> <i><tt class='parameter'>replacement</tt></i> may contain references of the form <i>\\<span class='replaceable'>n</span></i> or (since PHP 4.0.4) <i>$<span class='replaceable'>n</span></i>, with the latter form being the preferred one. Every such reference will be replaced by the text captured by the <span class='replaceable'>n</span>&amp;#039;th parenthesized pattern. <span class='replaceable'>n</span> can be from 0 to 99, and <i>\\0</i> or <i>$0</i> refers to the text matched by the whole pattern. Opening parentheses are counted from left to right (starting from 1) to obtain the number of the capturing subpattern. To use backslash in replacement, it must be doubled (<i>&amp;quot;\\\\&amp;quot;</i> PHP string). </p> <p class='para'> When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar <i>\\1</i> notation for your backreference. <i>\\11</i>, for example, would confuse <b>preg_replace()</b> since it does not know whether you want the <i>\\1</i> backreference followed by a literal <i>1</i>, or the <i>\\11</i> backreference followed by nothing. In this case the solution is to use <i>\${1}1</i>. This creates an isolated <i>$1</i> backreference, leaving the <i>1</i> as a literal. </p> <p class='para'> When using the <i>e</i> modifier, this function escapes some characters (namely <i>&amp;#039;</i>, <i>&amp;quot;</i>, <i>\</i> and NULL) in the strings that replace the backreferences. This is done to ensure that no syntax errors arise from backreference usage with either single or double quotes (e.g. <i>&amp;#039;strlen(\&amp;#039;$1\&amp;#039;)+strlen(&amp;quot;$2&amp;quot;)&amp;#039;</i>). Make sure you are aware of PHP&amp;#039;s <a href='http://www.php.net/manual/en/language.types.string.php' class='link'>string syntax</a> to know exactly how the interpreted string will look like. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string or an array with strings to search and replace. </p> <p class='para'> If <i><tt class='parameter'>subject</tt></i> is an array, then the search and replace is performed on every entry of <i><tt class='parameter'>subject</tt></i> , and the return value is an array as well. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum possible replacements for each pattern in each <i><tt class='parameter'>subject</tt></i> string. Defaults to <i>-1</i> (no limit). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>count</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If specified, this variable will be filled with the number of replacements done. </p> </dd> </dl> <p> </p> </div> <a name='function.preg-replace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>preg_replace()</b> returns an array if the <i><tt class='parameter'>subject</tt></i> parameter is an array, or a string otherwise. </p> <p class='para'> If matches are found, the new <i><tt class='parameter'>subject</tt></i> will be returned, otherwise <i><tt class='parameter'>subject</tt></i> will be returned unchanged or <b><tt class='constant'>NULL</tt></b> if an error occurred. </p> </div> <a name='function.preg-replace.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>count</tt></i> parameter </td> </tr> <tr valign='middle'> <td align='left'>4.0.4</td> <td align='left'> Added the &amp;#039;$n&amp;#039; form for the <i><tt class='parameter'>replacement</tt></i> parameter </td> </tr> <tr valign='middle'> <td align='left'>4.0.2</td> <td align='left'> Added the <i><tt class='parameter'>limit</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-replace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using backreferences followed by numeric literals</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'April&amp;nbsp;15,&amp;nbsp;2003'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pattern&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/(\w+)&amp;nbsp;(\d+),&amp;nbsp;(\d+)/i'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$replacement&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'${1}1,$3'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pattern</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replacement</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> April1,2003 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Using indexed arrays with <b>preg_replace()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;quick&amp;nbsp;brown&amp;nbsp;fox&amp;nbsp;jumped&amp;nbsp;over&amp;nbsp;the&amp;nbsp;lazy&amp;nbsp;dog.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'/quick/'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'/brown/'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'/fox/'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'bear'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'black'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'slow'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The bear black slow jumped over the lazy dog. </pre></div> </div> <div class='example-contents para'><p> By ksorting patterns and replacements, we should get what we wanted. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />ksort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>ksort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replacements</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The slow black bear jumped over the lazy dog. </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Replacing several values</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$patterns&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'/(19|20)(\d{2})-(\d{1,2})-(\d{1,2})/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'/^\s*{(\w+)}\s*=/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$replace&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'\3/\4/\1\2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'$\1&amp;nbsp;='</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$patterns</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replace</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'{startDate}&amp;nbsp;=&amp;nbsp;1999-5-27'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> $startDate = 5/27/1999 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #4 Using the &amp;#039;e&amp;#039; modifier</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/(&amp;lt;\/?)(\w+)([^&amp;gt;]*&amp;gt;)/e'</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>''\\1'.strtoupper('\\2').'\\3''</span><span style='color: #007700'>,&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$html_body</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This would capitalize all HTML tags in the input text. </p></div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #5 Strip whitespace</b></p> <div class='example-contents para'><p> This example strips excess whitespace from a string. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo&amp;nbsp;&amp;nbsp;&amp;nbsp;o'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/\s\s+/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;will&amp;nbsp;be&amp;nbsp;'foo&amp;nbsp;o'&amp;nbsp;now<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #6 Using the <i><tt class='parameter'>count</tt></i> parameter</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$count&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'/\d/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/\s/'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'*'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'xp&amp;nbsp;4&amp;nbsp;to'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//3<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> xp***to 3 </pre></div> </div> </div><p> </p> </div> <a name='function.preg-replace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: When using arrays with <i><tt class='parameter'>pattern</tt></i> and <i><tt class='parameter'>replacement</tt></i> , the keys are processed in the order they appear in the array. This is <em class='emphasis'>not necessarily</em> the same as the numerical index order. If you use indexes to identify which <i><tt class='parameter'>pattern</tt></i> should be replaced by which <i><tt class='parameter'>replacement</tt></i> , you should perform a <a href='http://www.php.net/manual/en/function.ksort.php' class='function'>ksort()</a> on each array prior to calling <b>preg_replace()</b>. <br /> </p></blockquote> </div> <a name='function.preg-replace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-filter.php' class='function' rel='rdfs-seeAlso'>preg_filter()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace-callback.php' class='function' rel='rdfs-seeAlso'>preg_replace_callback()</a> - Perform a regular expression search and replace using a callback</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_quote" value="<div id='function.preg-quote' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-quote.php'>preg_quote</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_quote</span> &amp;mdash; <span class='dc-title'>Quote regular expression characters</span></p> </div> <a name='function.preg-quote.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>preg_quote</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = NULL</span></span> ] )</div> <p class='para rdfs-comment'> <b>preg_quote()</b> takes <i><tt class='parameter'>str</tt></i> and puts a backslash in front of every character that is part of the regular expression syntax. This is useful if you have a run-time string that you need to match in some text and the string may contain special regex characters. </p> <p class='para'> The special regular expression characters are: <i>. \ + * ? [ ^ ] $ ( ) { } = ! &amp;lt; &amp;gt; | : -</i> </p> </div> <a name='function.preg-quote.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>delimiter</tt></i> is specified, it will also be escaped. This is useful for escaping the delimiter that is required by the PCRE functions. The / is the most commonly used delimiter. </p> </dd> </dl> <p> </p> </div> <a name='function.preg-quote.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the quoted string. </p> </div> <a name='function.preg-quote.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> The <i>-</i> character is now quoted </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-quote.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>preg_quote()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$keywords&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'$40&amp;nbsp;for&amp;nbsp;a&amp;nbsp;g3/400'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$keywords&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_quote</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$keywords</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$keywords</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;\$40&amp;nbsp;for&amp;nbsp;a&amp;nbsp;g3\/400<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Italicizing a word within some text</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;In&amp;nbsp;this&amp;nbsp;example,&amp;nbsp;preg_quote($word)&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&amp;nbsp;keep&amp;nbsp;the<br />//&amp;nbsp;asterisks&amp;nbsp;from&amp;nbsp;having&amp;nbsp;special&amp;nbsp;meaning&amp;nbsp;to&amp;nbsp;the&amp;nbsp;regular<br />//&amp;nbsp;expression.<br /><br /></span><span style='color: #0000BB'>$textbody&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;book&amp;nbsp;is&amp;nbsp;*very*&amp;nbsp;difficult&amp;nbsp;to&amp;nbsp;find.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$word&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'*very*'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$textbody&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>preg_quote</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$word</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;i&amp;gt;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$word&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;/i&amp;gt;'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$textbody</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.preg-quote.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_match_all" value="<div id='function.preg-match-all' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-match-all.php'>preg_match_all</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_match_all</span> &amp;mdash; <span class='dc-title'>Perform a global regular expression match</span></p> </div> <a name='function.preg-match-all.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>preg_match_all</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$subject</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$matches</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> ]] )</div> <p class='para rdfs-comment'> Searches <i><tt class='parameter'>subject</tt></i> for all matches to the regular expression given in <i><tt class='parameter'>pattern</tt></i> and puts them in <i><tt class='parameter'>matches</tt></i> in the order specified by <i><tt class='parameter'>flags</tt></i> . </p> <p class='para'> After the first match is found, the subsequent searches are continued on from end of the last match. </p> </div> <a name='function.preg-match-all.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for, as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>matches</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Array of all matches in multi-dimensional array ordered according to <i><tt class='parameter'>flags</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Can be a combination of the following flags (note that it doesn&amp;#039;t make sense to use <b><tt class='constant'>PREG_PATTERN_ORDER</tt></b> together with <b><tt class='constant'>PREG_SET_ORDER</tt></b>): </p><dl> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_PATTERN_ORDER</tt></b></span> </dt><dd class='listitem'> <p class='para'> Orders results so that <var class='varname'>$matches[0]</var> is an array of full pattern matches, <var class='varname'>$matches[1]</var> is an array of strings matched by the first parenthesized subpattern, and so on. </p> <p class='para'> </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />preg_match_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|&amp;lt;[^&amp;gt;]+&amp;gt;(.*)&amp;lt;/[^&amp;gt;]+&amp;gt;|U'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;example:&amp;nbsp;&amp;lt;/b&amp;gt;&amp;lt;div&amp;nbsp;align=left&amp;gt;this&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test&amp;lt;/div&amp;gt;'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_PATTERN_ORDER</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>][</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>][</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>][</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>][</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'>The above example will output:</p> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;b&amp;gt;example: &amp;lt;/b&amp;gt;, &amp;lt;div align=left&amp;gt;this is a test&amp;lt;/div&amp;gt; example: , this is a test </pre></div> </div> <p class='para'> So, <var class='varname'>$out[0]</var> contains array of strings that matched full pattern, and <var class='varname'>$out[1]</var> contains array of strings enclosed by tags. </p> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_SET_ORDER</tt></b></span> </dt><dd class='listitem'> <p class='para'> Orders results so that <var class='varname'>$matches[0]</var> is an array of first set of matches, <var class='varname'>$matches[1]</var> is an array of second set of matches, and so on. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />preg_match_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|&amp;lt;[^&amp;gt;]+&amp;gt;(.*)&amp;lt;/[^&amp;gt;]+&amp;gt;|U'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;example:&amp;nbsp;&amp;lt;/b&amp;gt;&amp;lt;div&amp;nbsp;align=\'left\'&amp;gt;this&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test&amp;lt;/div&amp;gt;'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_SET_ORDER</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>][</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>][</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>][</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>][</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'>The above example will output:</p> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;b&amp;gt;example: &amp;lt;/b&amp;gt;, example: &amp;lt;div align=&amp;quot;left&amp;quot;&amp;gt;this is a test&amp;lt;/div&amp;gt;, this is a test </pre></div> </div> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_OFFSET_CAPTURE</tt></b></span> </dt><dd class='listitem'> <p class='para'> If this flag is passed, for every occurring match the appendant string offset will also be returned. Note that this changes the value of <i><tt class='parameter'>matches</tt></i> in an array where every element is an array consisting of the matched string at offset <i>0</i> and its string offset into <i><tt class='parameter'>subject</tt></i> at offset <i>1</i>. </p> </dd> </dl> <p> </p> <p class='para'> If no order flag is given, <b><tt class='constant'>PREG_PATTERN_ORDER</tt></b> is assumed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Normally, the search starts from the beginning of the subject string. The optional parameter <i><tt class='parameter'>offset</tt></i> can be used to specify the alternate place from which to start the search (in bytes). </p> <blockquote><p><b class='note'>Note</b>: Using <i><tt class='parameter'>offset</tt></i> is not equivalent to passing <i>substr($subject, $offset)</i> to <b>preg_match_all()</b> in place of the subject string, because <i><tt class='parameter'>pattern</tt></i> can contain assertions such as <em class='emphasis'>^</em>, <em class='emphasis'>$</em> or <em class='emphasis'>(?&amp;lt;=x)</em>. See <a href='http://www.php.net/manual/en/function.preg-match.php' class='function'>preg_match()</a> for examples. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.preg-match-all.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of full pattern matches (which might be zero), or <b><tt class='constant'>FALSE</tt></b> if an error occurred. </p> </div> <a name='function.preg-match-all.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> The <i><tt class='parameter'>offset</tt></i> parameter was added </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <b><tt class='constant'>PREG_OFFSET_CAPTURE</tt></b> flag was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-match-all.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Getting all phone numbers out of some text.</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />preg_match_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/\(?&amp;nbsp;&amp;nbsp;(\d{3})?&amp;nbsp;&amp;nbsp;\)?&amp;nbsp;&amp;nbsp;(?(1)&amp;nbsp;&amp;nbsp;[\-\s]&amp;nbsp;)&amp;nbsp;\d{3}-\d{4}/x'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'Call&amp;nbsp;555-1212&amp;nbsp;or&amp;nbsp;1-800-555-1212'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$phones</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Find matching HTML tags (greedy)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;\\2&amp;nbsp;is&amp;nbsp;an&amp;nbsp;example&amp;nbsp;of&amp;nbsp;backreferencing.&amp;nbsp;This&amp;nbsp;tells&amp;nbsp;pcre&amp;nbsp;that<br />//&amp;nbsp;it&amp;nbsp;must&amp;nbsp;match&amp;nbsp;the&amp;nbsp;second&amp;nbsp;set&amp;nbsp;of&amp;nbsp;parentheses&amp;nbsp;in&amp;nbsp;the&amp;nbsp;regular&amp;nbsp;expression<br />//&amp;nbsp;itself,&amp;nbsp;which&amp;nbsp;would&amp;nbsp;be&amp;nbsp;the&amp;nbsp;([\w]+)&amp;nbsp;in&amp;nbsp;this&amp;nbsp;case.&amp;nbsp;The&amp;nbsp;extra&amp;nbsp;backslash&amp;nbsp;is<br />//&amp;nbsp;required&amp;nbsp;because&amp;nbsp;the&amp;nbsp;string&amp;nbsp;is&amp;nbsp;in&amp;nbsp;double&amp;nbsp;quotes.<br /></span><span style='color: #0000BB'>$html&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;bold&amp;nbsp;text&amp;lt;/b&amp;gt;&amp;lt;a&amp;nbsp;href=howdy.html&amp;gt;click&amp;nbsp;me&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>preg_match_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/(&amp;lt;([\w]+)[^&amp;gt;]*&amp;gt;)(.*?)(&amp;lt;\/\\2&amp;gt;)/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$html</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_SET_ORDER</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$matches&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'matched:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'part&amp;nbsp;1:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'part&amp;nbsp;2:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'part&amp;nbsp;3:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>[</span><span style='color: #0000BB'>3</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'part&amp;nbsp;4:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>[</span><span style='color: #0000BB'>4</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> matched: &amp;lt;b&amp;gt;bold text&amp;lt;/b&amp;gt; part 1: &amp;lt;b&amp;gt; part 2: b part 3: bold text part 4: &amp;lt;/b&amp;gt; matched: &amp;lt;a href=howdy.html&amp;gt;click me&amp;lt;/a&amp;gt; part 1: &amp;lt;a href=howdy.html&amp;gt; part 2: a part 3: click me part 4: &amp;lt;/a&amp;gt; </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Using named subpattern</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;lt;&amp;lt;&amp;lt;FOO<br /></span><span style='color: #DD0000'>a:&amp;nbsp;1<br />b:&amp;nbsp;2<br />c:&amp;nbsp;3<br /></span><span style='color: #007700'>FOO;<br /><br /></span><span style='color: #0000BB'>preg_match_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/(?&amp;lt;name&amp;gt;\w+):&amp;nbsp;(?&amp;lt;digit&amp;gt;\d+)/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; a: 1 [1] =&amp;gt; b: 2 [2] =&amp;gt; c: 3 ) [name] =&amp;gt; Array ( [0] =&amp;gt; a [1] =&amp;gt; b [2] =&amp;gt; c ) [1] =&amp;gt; Array ( [0] =&amp;gt; a [1] =&amp;gt; b [2] =&amp;gt; c ) [digit] =&amp;gt; Array ( [0] =&amp;gt; 1 [1] =&amp;gt; 2 [2] =&amp;gt; 3 ) [2] =&amp;gt; Array ( [0] =&amp;gt; 1 [1] =&amp;gt; 2 [2] =&amp;gt; 3 ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.preg-match-all.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_match" value="<div id='function.preg-match' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-match.php'>preg_match</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_match</span> &amp;mdash; <span class='dc-title'>Perform a regular expression match</span></p> </div> <a name='function.preg-match.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>preg_match</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$matches</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> ]]] )</div> <p class='para rdfs-comment'> Searches <i><tt class='parameter'>subject</tt></i> for a match to the regular expression given in <i><tt class='parameter'>pattern</tt></i> . </p> </div> <a name='function.preg-match.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for, as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>matches</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>matches</tt></i> is provided, then it is filled with the results of search. <var class='varname'>$matches[0]</var> will contain the text that matched the full pattern, <var class='varname'>$matches[1]</var> will have the text that matched the first captured parenthesized subpattern, and so on. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>flags</tt></i> can be the following flag: </p><dl> <dt class='varlistentry'> <span class='term'><b><tt class='constant'>PREG_OFFSET_CAPTURE</tt></b></span> </dt><dd class='listitem'> <span class='simpara'> If this flag is passed, for every occurring match the appendant string offset will also be returned. Note that this changes the return value in an array where every element is an array consisting of the matched string at index <i>0</i> and its string offset into <i><tt class='parameter'>subject</tt></i> at index <i>1</i>. </span> </dd> </dl> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Normally, the search starts from the beginning of the subject string. The optional parameter <i><tt class='parameter'>offset</tt></i> can be used to specify the alternate place from which to start the search (in bytes). </p> <blockquote><p><b class='note'>Note</b>: Using <i><tt class='parameter'>offset</tt></i> is not equivalent to passing <i>substr($subject, $offset)</i> to <b>preg_match()</b> in place of the subject string, because <i><tt class='parameter'>pattern</tt></i> can contain assertions such as <em class='emphasis'>^</em>, <em class='emphasis'>$</em> or <em class='emphasis'>(?&amp;lt;=x)</em>. Compare: </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$subject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pattern&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/^def/'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pattern</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$subject</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_OFFSET_CAPTURE</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'>The above example will output:</p> <div class='example-contents screen'> <div class='cdata'><pre> Array ( ) </pre></div> </div> <p class='para'> while this example </p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$subject&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pattern&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/^def/'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pattern</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$subject</span><span style='color: #007700'>,</span><span style='color: #0000BB'>3</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PREG_OFFSET_CAPTURE</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'> will produce </p> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [0] =&amp;gt; def [1] =&amp;gt; 0 ) ) </pre></div> </div> </div><p> <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.preg-match.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>preg_match()</b> returns the number of times <i><tt class='parameter'>pattern</tt></i> matches. That will be either 0 times (no match) or 1 time because <b>preg_match()</b> will stop searching after the first match. <a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function'>preg_match_all()</a> on the contrary will continue until it reaches the end of <i><tt class='parameter'>subject</tt></i> . <b>preg_match()</b> returns <b><tt class='constant'>FALSE</tt></b> if an error occurred. </p> </div> <a name='function.preg-match.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> The <i><tt class='parameter'>offset</tt></i> parameter was added </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <b><tt class='constant'>PREG_OFFSET_CAPTURE</tt></b> flag was added </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <i><tt class='parameter'>flags</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-match.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Find the string of text &amp;quot;php&amp;quot;</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;'i'&amp;nbsp;after&amp;nbsp;the&amp;nbsp;pattern&amp;nbsp;delimiter&amp;nbsp;indicates&amp;nbsp;a&amp;nbsp;case-insensitive&amp;nbsp;search<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/php/i'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PHP&amp;nbsp;is&amp;nbsp;the&amp;nbsp;web&amp;nbsp;scripting&amp;nbsp;language&amp;nbsp;of&amp;nbsp;choice.'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Find the word &amp;quot;web&amp;quot;</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;The&amp;nbsp;\b&amp;nbsp;in&amp;nbsp;the&amp;nbsp;pattern&amp;nbsp;indicates&amp;nbsp;a&amp;nbsp;word&amp;nbsp;boundary,&amp;nbsp;so&amp;nbsp;only&amp;nbsp;the&amp;nbsp;distinct<br />&amp;nbsp;*&amp;nbsp;word&amp;nbsp;'web'&amp;nbsp;is&amp;nbsp;matched,&amp;nbsp;and&amp;nbsp;not&amp;nbsp;a&amp;nbsp;word&amp;nbsp;partial&amp;nbsp;like&amp;nbsp;'webbing'&amp;nbsp;or&amp;nbsp;'cobweb'&amp;nbsp;*/<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/\bweb\b/i'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PHP&amp;nbsp;is&amp;nbsp;the&amp;nbsp;web&amp;nbsp;scripting&amp;nbsp;language&amp;nbsp;of&amp;nbsp;choice.'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/\bweb\b/i'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PHP&amp;nbsp;is&amp;nbsp;the&amp;nbsp;website&amp;nbsp;scripting&amp;nbsp;language&amp;nbsp;of&amp;nbsp;choice.'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;match&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found.'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Getting the domain name out of a URL</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;host&amp;nbsp;name&amp;nbsp;from&amp;nbsp;URL<br /></span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'@^(?:http://)?([^/]+)@i'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'http://www.php.net/index.html'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$host&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>];<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;last&amp;nbsp;two&amp;nbsp;segments&amp;nbsp;of&amp;nbsp;host&amp;nbsp;name<br /></span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/[^.]+\.[^.]+$/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$host</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'domain&amp;nbsp;name&amp;nbsp;is:&amp;nbsp;</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]}</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> domain name is: php.net </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #4 Using named subpattern</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foobar:&amp;nbsp;2008'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/(?&amp;lt;name&amp;gt;\w+):&amp;nbsp;(?&amp;lt;digit&amp;gt;\d+)/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$matches</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; foobar: 2008 [name] =&amp;gt; foobar [1] =&amp;gt; foobar [digit] =&amp;gt; 2008 [2] =&amp;gt; 2008 ) </pre></div> </div> </div><p> </p> </div> <a name='function.preg-match.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b> <p class='para'> Do not use <b>preg_match()</b> if you only want to check if one string is contained in another string. Use <a href='http://www.php.net/manual/en/function.strpos.php' class='function'>strpos()</a> or <a href='http://www.php.net/manual/en/function.strstr.php' class='function'>strstr()</a> instead as they will be faster. </p> </div> </div> <a name='function.preg-match.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match-all.php' class='function' rel='rdfs-seeAlso'>preg_match_all()</a> - Perform a global regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_last_error" value="<div id='function.preg-last-error' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-last-error.php'>preg_last_error</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>preg_last_error</span> &amp;mdash; <span class='dc-title'>Returns the error code of the last PCRE regex execution</span></p> </div> <a name='function.preg-last-error.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>preg_last_error</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the error code of the last PCRE regex execution. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>preg_last_error()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />preg_match</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/(?:\D+|&amp;lt;\d+&amp;gt;)*[!?]/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foobar&amp;nbsp;foobar&amp;nbsp;foobar'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>preg_last_error</span><span style='color: #007700'>()&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>PREG_BACKTRACK_LIMIT_ERROR</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'Backtrack&amp;nbsp;limit&amp;nbsp;was&amp;nbsp;exhausted!'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Backtrack limit was exhausted! </pre></div> </div> </div><p> </p> </div> <a name='function.preg-last-error.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns one of the following constants (<a href='http://www.php.net/manual/en/pcre.constants.php' class='link'>explained on their own page</a>): </p><ul class='simplelist'> <li class='member'><b><tt class='constant'>PREG_NO_ERROR</tt></b></li> <li class='member'><b><tt class='constant'>PREG_INTERNAL_ERROR</tt></b></li> <li class='member'><b><tt class='constant'>PREG_BACKTRACK_LIMIT_ERROR</tt></b> (see also <a href='http://www.php.net/manual/en/pcre.configuration.php#ini.pcre.backtrack-limit' class='link'>pcre.backtrack_limit</a>)</li> <li class='member'><b><tt class='constant'>PREG_RECURSION_LIMIT_ERROR</tt></b> (see also <a href='http://www.php.net/manual/en/pcre.configuration.php#ini.pcre.recursion-limit' class='link'>pcre.recursion_limit</a>)</li> <li class='member'><b><tt class='constant'>PREG_BAD_UTF8_ERROR</tt></b></li> <li class='member'><b><tt class='constant'>PREG_BAD_UTF8_OFFSET_ERROR</tt></b> (since PHP 5.3.0)</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="preg_grep" value="<div id='function.preg-grep' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.preg-grep.php'>preg_grep</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>preg_grep</span> &amp;mdash; <span class='dc-title'>Return array entries that match the pattern</span></p> </div> <a name='function.preg-grep.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>preg_grep</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Returns the array consisting of the elements of the <i><tt class='parameter'>input</tt></i> array that match the given <i><tt class='parameter'>pattern</tt></i> . </p> </div> <a name='function.preg-grep.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The pattern to search for, as a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>PREG_GREP_INVERT</tt></b>, this function returns the elements of the input array that do <em class='emphasis'>not</em> match the given <i><tt class='parameter'>pattern</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.preg-grep.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array indexed using the keys from the <i><tt class='parameter'>input</tt></i> array. </p> </div> <a name='function.preg-grep.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The <i><tt class='parameter'>flags</tt></i> parameter was added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.4</td> <td align='left'> <p class='para'> Prior to this version, the returned array was indexed regardless of the keys of the <i><tt class='parameter'>input</tt></i> array. </p> <p class='para'> If you want to reproduce this old behavior, use <a href='http://www.php.net/manual/en/function.array-values.php' class='function'>array_values()</a> on the returned array to reindex the values. </p> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.preg-grep.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>preg_grep()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;return&amp;nbsp;all&amp;nbsp;array&amp;nbsp;elements<br />//&amp;nbsp;containing&amp;nbsp;floating&amp;nbsp;point&amp;nbsp;numbers<br /></span><span style='color: #0000BB'>$fl_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_grep</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/^(\d+)?\.\d+$/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pow" value="<div id='function.pow' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pow.php'>pow</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pow</span> &amp;mdash; <span class='dc-title'>Exponential expression</span></p> </div> <a name='function.pow.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>pow</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <tt class='parameter'>$base</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <tt class='parameter'>$exp</tt></span> )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>base</tt></i> raised to the power of <i><tt class='parameter'>exp</tt></i> . </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> In PHP 4.0.6 and earlier <b>pow()</b> always returned a <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, and did not issue warnings. </p> </div> </div> <a name='function.pow.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>base</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The base to use </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>exp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The exponent </p> </dd> </dl> <p> </p> </div> <a name='function.pow.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <i><tt class='parameter'>base</tt></i> raised to the power of <i><tt class='parameter'>exp</tt></i> . If the result can be represented as integer it will be returned as type <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>, else it will be returned as type <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>. If the power cannot be computed <b><tt class='constant'>FALSE</tt></b> will be returned instead. </p> </div> <a name='function.pow.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Since 4.0.6</td> <td align='left'> The function will now return <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> results if possible, before this it always returned a <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> result. For older versions, you may receive a bogus result for complex numbers. </td> </tr> <tr valign='middle'> <td align='left'>Since 4.2.0</td> <td align='left'> PHP stops to emit a warning if the value can&amp;#039;t be computed, it will now silently return <b><tt class='constant'>FALSE</tt></b> only. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.pow.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Some examples of <b>pow()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;int(256)<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5.5</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;&amp;gt;4.0.6&amp;nbsp;&amp;nbsp;NAN<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>pow</span><span style='color: #007700'>(-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5.5</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;&amp;lt;=4.0.6&amp;nbsp;1.#IND<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.pow.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.exp.php' class='function' rel='rdfs-seeAlso'>exp()</a> - Calculates the exponent of e</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqrt.php' class='function' rel='rdfs-seeAlso'>sqrt()</a> - Square root</li> <li class='member'><a href='http://www.php.net/manual/en/function.bcpow.php' class='function' rel='rdfs-seeAlso'>bcpow()</a> - Raise an arbitrary precision number to another</li> <li class='member'><a href='http://www.php.net/manual/en/function.gmp-pow.php' class='function' rel='rdfs-seeAlso'>gmp_pow()</a> - Raise number into power</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pos" value="<div id='function.pos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pos.php'>pos</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pos</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.current.php' class='function'>current()</a></span></p> </div> <a name='function.pos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.current.php' class='function'>current()</a> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="popen" value="<div id='function.popen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.popen.php'>popen</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>popen</span> &amp;mdash; <span class='dc-title'>Opens process file pointer</span></p> </div> <a name='function.popen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>popen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$command</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$mode</tt></span> )</div> <p class='para rdfs-comment'> Opens a pipe to a process executed by forking the command given by command. </p> </div> <a name='function.popen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>command</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode </p> </dd> </dl> <p> </p> </div> <a name='function.popen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a file pointer identical to that returned by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, except that it is unidirectional (may only be used for reading or writing) and must be closed with <a href='http://www.php.net/manual/en/function.pclose.php' class='function'>pclose()</a>. This pointer may be used with <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a>, <a href='http://www.php.net/manual/en/function.fgetss.php' class='function'>fgetss()</a>, and <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a>. </p> <p class='para'> If an error occurs, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.popen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>popen()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>popen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/bin/ls'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> If the command to be executed could not be found, a valid resource is returned. This may seem odd, but makes sense; it allows you to access any error message returned by the shell: </p><div class='example'> <p><b>Example #2 <b>popen()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />error_reporting</span><span style='color: #007700'>(</span><span style='color: #0000BB'>E_ALL</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Add&amp;nbsp;redirection&amp;nbsp;so&amp;nbsp;we&amp;nbsp;can&amp;nbsp;get&amp;nbsp;stderr.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>popen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/spooge&amp;nbsp;2&amp;gt;&amp;amp;1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #0000BB'>$handle</span><span style='color: #DD0000'>';&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>gettype</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$read&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2096</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$read</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>pclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.popen.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If you&amp;#039;re looking for bi-directional support (two-way), use <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a>. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, you can only execute files within the <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir' class='link'>safe_mode_exec_dir</a>. For practical reasons, it is currently not allowed to have <i>..</i> components in the path to the executable.</span></p></blockquote> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>With <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> enabled, the command string is escaped with <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a>. Thus, <i>echo y | echo x</i> becomes <i>echo y \| echo x</i>.</p></div> </div> <a name='function.popen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pclose.php' class='function' rel='rdfs-seeAlso'>pclose()</a> - Closes process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.proc-open.php' class='function' rel='rdfs-seeAlso'>proc_open()</a> - Execute a command and open file pointers for input/output</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="png2wbmp" value="<div id='function.png2wbmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.png2wbmp.php'>png2wbmp</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>png2wbmp</span> &amp;mdash; <span class='dc-title'>Convert PNG image file to WBMP image file</span></p> </div> <a name='function.png2wbmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>png2wbmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pngname</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$wbmpname</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$dest_height</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$dest_width</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$threshold</tt></span> )</div> <p class='para rdfs-comment'> Converts a PNG file into a WBMP file. </p> </div> <a name='function.png2wbmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pngname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to PNG file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>wbmpname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to destination WBMP file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dest_height</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Destination image height. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dest_width</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Destination image width. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>threshold</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Threshold value, between 0 and 8 (inclusive). </p> </dd> </dl> <p> </p> </div> <a name='function.png2wbmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.png2wbmp.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>png2wbmp()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Path&amp;nbsp;to&amp;nbsp;the&amp;nbsp;target&amp;nbsp;png<br /></span><span style='color: #0000BB'>$path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'./test.png'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;image&amp;nbsp;sizes<br /></span><span style='color: #0000BB'>$image&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>getimagesize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Convert&amp;nbsp;image<br /></span><span style='color: #0000BB'>png2wbmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'./test.wbmp'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$image</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #0000BB'>$image</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #0000BB'>7</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.png2wbmp.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>WBMP support is only available if PHP was compiled against GD-1.8 or later.</span></p></blockquote> </div> <a name='function.png2wbmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.jpeg2wbmp.php' class='function' rel='rdfs-seeAlso'>jpeg2wbmp()</a> - Convert JPEG image file to WBMP image file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pi" value="<div id='function.pi' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pi.php'>pi</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pi</span> &amp;mdash; <span class='dc-title'>Get value of pi</span></p> </div> <a name='function.pi.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>pi</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns an approximation of pi. The returned <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> has a precision based on the <a href='http://www.php.net/manual/en/ini.core.php#ini.precision' class='link'>precision</a> directive in <var class='filename'>php.ini</var>, which defaults to <i>14</i>. Also, you can use the <b><tt class='constant'>M_PI</tt></b> constant which yields identical results to <b>pi()</b>. </p> </div> <a name='function.pi.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The value of pi as float. </p> </div> <a name='function.pi.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>pi()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>pi</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;3.1415926535898<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>M_PI</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;3.1415926535898<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_uname" value="<div id='function.php-uname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-uname.php'>php_uname</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>php_uname</span> &amp;mdash; <span class='dc-title'>Returns information about the operating system PHP is running on</span></p> </div> <a name='function.php-uname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_uname</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$mode</tt><span class='initializer'> = &amp;quot;a&amp;quot;</span></span> ] )</div> <p class='para rdfs-comment'> <b>php_uname()</b> returns a description of the operating system PHP is running on. This is the same string you see at the very top of the <a href='http://www.php.net/manual/en/function.phpinfo.php' class='function'>phpinfo()</a> output. For the name of just the operating system, consider using the <b><tt class='constant'>PHP_OS</tt></b> constant, but keep in mind this constant will contain the operating system PHP was <em class='emphasis'>built</em> on. </p> <p class='para'> On some older UNIX platforms, it may not be able to determine the current OS information in which case it will revert to displaying the OS PHP was built on. This will only happen if your uname() library call either doesn&amp;#039;t exist or doesn&amp;#039;t work. </p> </div> <a name='function.php-uname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>mode</tt></i> is a single character that defines what information is returned: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <i>&amp;#039;a&amp;#039;</i>: This is the default. Contains all modes in the sequence <i>&amp;quot;s n r v m&amp;quot;</i>. </span> </li> <li class='listitem'> <span class='simpara'> <i>&amp;#039;s&amp;#039;</i>: Operating system name. eg. <i>FreeBSD</i>. </span> </li> <li class='listitem'> <span class='simpara'> <i>&amp;#039;n&amp;#039;</i>: Host name. eg. <i>localhost.example.com</i>. </span> </li> <li class='listitem'> <span class='simpara'> <i>&amp;#039;r&amp;#039;</i>: Release name. eg. <i>5.1.2-RELEASE</i>. </span> </li> <li class='listitem'> <span class='simpara'> <i>&amp;#039;v&amp;#039;</i>: Version information. Varies a lot between operating systems. </span> </li> <li class='listitem'> <span class='simpara'> <i>&amp;#039;m&amp;#039;</i>: Machine type. eg. <i>i386</i>. </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.php-uname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the description, as a string. </p> </div> <a name='function.php-uname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Some <b>php_uname()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>php_uname</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>PHP_OS</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Some&amp;nbsp;possible&amp;nbsp;outputs:<br />Linux&amp;nbsp;localhost&amp;nbsp;2.4.21-0.13mdk&amp;nbsp;#1&amp;nbsp;Fri&amp;nbsp;Mar&amp;nbsp;14&amp;nbsp;15:08:06&amp;nbsp;EST&amp;nbsp;2003&amp;nbsp;i686<br />Linux<br /><br />FreeBSD&amp;nbsp;localhost&amp;nbsp;3.2-RELEASE&amp;nbsp;#15:&amp;nbsp;Mon&amp;nbsp;Dec&amp;nbsp;17&amp;nbsp;08:46:02&amp;nbsp;GMT&amp;nbsp;2001<br />FreeBSD<br /><br />Windows&amp;nbsp;NT&amp;nbsp;XN1&amp;nbsp;5.1&amp;nbsp;build&amp;nbsp;2600<br />WINNT<br />*/<br /><br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>strtoupper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_OS</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>))&amp;nbsp;===&amp;nbsp;</span><span style='color: #DD0000'>'WIN'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;server&amp;nbsp;using&amp;nbsp;Windows!'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;server&amp;nbsp;not&amp;nbsp;using&amp;nbsp;Windows!'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> There are also some related <a href='http://www.php.net/manual/en/language.constants.predefined.php' class='link'> Predefined PHP constants</a> that may come in handy, for example: </p><div class='example'> <p><b>Example #2 A few OS related constant examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;*nix<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>DIRECTORY_SEPARATOR</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>PHP_SHLIB_SUFFIX</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;so<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>PATH_SEPARATOR</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;:<br /><br />//&amp;nbsp;Win*<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>DIRECTORY_SEPARATOR</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;\<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>PHP_SHLIB_SUFFIX</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;dll<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>PATH_SEPARATOR</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.php-uname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-sapi-name.php' class='function' rel='rdfs-seeAlso'>php_sapi_name()</a> - Returns the type of interface between web server and PHP</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_strip_whitespace" value="<div id='function.php-strip-whitespace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-strip-whitespace.php'>php_strip_whitespace</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>php_strip_whitespace</span> &amp;mdash; <span class='dc-title'>Return source with stripped comments and whitespace</span></p> </div> <a name='function.php-strip-whitespace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_strip_whitespace</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Returns the PHP source code in <i><tt class='parameter'>filename</tt></i> with PHP comments and whitespace removed. This may be useful for determining the amount of actual code in your scripts compared with the amount of comments. This is similar to using <strong class='command'>php -w</strong> from the <a href='http://www.php.net/manual/en/features.commandline.php' class='link'>commandline</a>. </p> </div> <a name='function.php-strip-whitespace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the PHP file. </p> </dd> </dl> <p> </p> </div> <a name='function.php-strip-whitespace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The stripped source code will be returned on success, or an empty string on failure. </p> <blockquote><p><b class='note'>Note</b>: This function works as described as of PHP 5.0.1. Before this it would only return an empty string. For more information on this bug and its prior behavior, see bug report <a href='http://bugs.php.net/29606' class='link external'>&amp;raquo; #29606</a>. <br /> </p></blockquote> </div> <a name='function.php-strip-whitespace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>php_strip_whitespace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;PHP&amp;nbsp;comment&amp;nbsp;here<br /><br />/*<br />&amp;nbsp;*&amp;nbsp;Another&amp;nbsp;PHP&amp;nbsp;comment<br />&amp;nbsp;*/<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>php_strip_whitespace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Newlines&amp;nbsp;are&amp;nbsp;considered&amp;nbsp;whitespace,&amp;nbsp;and&amp;nbsp;are&amp;nbsp;removed&amp;nbsp;too:<br /></span><span style='color: #0000BB'>do_nothing</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;?php echo php_strip_whitespace(__FILE__); do_nothing(); ?&amp;gt; </pre></div> </div> <div class='example-contents para'><p> Notice the PHP comments are gone, as are the whitespace and newline after the first echo statement. </p></div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_sapi_name" value="<div id='function.php-sapi-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-sapi-name.php'>php_sapi_name</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>php_sapi_name</span> &amp;mdash; <span class='dc-title'>Returns the type of interface between web server and PHP</span></p> </div> <a name='function.php-sapi-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_sapi_name</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns a lowercase string that describes the type of interface (the Server API, SAPI) that PHP is using. For example, in CLI PHP this string will be &amp;quot;cli&amp;quot; whereas with Apache it may have several different values depending on the exact SAPI used. Possible values are listed below. </p> </div> <a name='function.php-sapi-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the interface type, as a lowercase string. </p> <p class='para'> Although not exhaustive, the possible return values include <i>aolserver</i>, <i>apache</i>, <i>apache2filter</i>, <i>apache2handler</i>, <i>caudium</i>, <i>cgi</i> (until PHP 5.3), <i>cgi-fcgi</i>, <i>cli</i>, <i>continuity</i>, <i>embed</i>, <i>isapi</i>, <i>litespeed</i>, <i>milter</i>, <i>nsapi</i>, <i>phttpd</i>, <i>pi3web</i>, <i>roxen</i>, <i>thttpd</i>, <i>tux</i>, and <i>webjames</i>. </p> </div> <a name='function.php-sapi-name.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>php_sapi_name()</b> example</b></p> <div class='example-contents para'><p> This example checks for the substring <i>cgi</i> because it may also be <i>cgi-fcgi</i>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sapi_type&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>php_sapi_name</span><span style='color: #007700'>();<br />if&amp;nbsp;(</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sapi_type</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #DD0000'>'cgi'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;are&amp;nbsp;using&amp;nbsp;CGI&amp;nbsp;PHP\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;are&amp;nbsp;not&amp;nbsp;using&amp;nbsp;CGI&amp;nbsp;PHP\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.php-sapi-name.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>An alternative approach</b><br /> The PHP constant <b><tt class='constant'>PHP_SAPI</tt></b> has the same value as <b>php_sapi_name()</b>. <br /> </p></blockquote> <div class='tip'><b class='tip'>Tip</b> <h1 class='title'>A potential gotcha</h1> <p class='para'> The defined <acronym title='Server Application Programming Interface'>SAPI</acronym> may not be obvious, because for example instead of <i>apache</i> it may be defined as <i>apache2handler</i> or <i>apache2filter</i>. </p> </div> </div> <a name='function.php-sapi-name.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/reserved.constants.php#reserved.constants.core' class='link'>PHP_SAPI</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_logo_guid" value="<div id='function.php-logo-guid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-logo-guid.php'>php_logo_guid</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>php_logo_guid</span> &amp;mdash; <span class='dc-title'>Gets the logo guid</span></p> </div> <a name='function.php-logo-guid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_logo_guid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns the ID which can be used to display the PHP logo using the built-in image. Logo is displayed only if <a href='http://www.php.net/manual/en/ini.core.php#ini.expose-php' class='link'>expose_php</a> is On. </p> </div> <a name='function.php-logo-guid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <i>PHPE9568F34-D428-11d2-A769-00AA001ACF42</i>. </p> </div> <a name='function.php-logo-guid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>php_logo_guid()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;img&amp;nbsp;src=''&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'PHP_SELF'</span><span style='color: #007700'>]&amp;nbsp;.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'?='&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>php_logo_guid</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''&amp;nbsp;alt='PHP&amp;nbsp;Logo&amp;nbsp;!'&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.php-logo-guid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpcredits.php' class='function' rel='rdfs-seeAlso'>phpcredits()</a> - Prints out the credits for PHP</li> <li class='member'><a href='http://www.php.net/manual/en/function.zend-logo-guid.php' class='function' rel='rdfs-seeAlso'>zend_logo_guid()</a> - Gets the Zend guid</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_ini_scanned_files" value="<div id='function.php-ini-scanned-files' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-ini-scanned-files.php'>php_ini_scanned_files</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>php_ini_scanned_files</span> &amp;mdash; <span class='dc-title'>Return a list of .ini files parsed from the additional ini dir</span></p> </div> <a name='function.php-ini-scanned-files.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_ini_scanned_files</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>php_ini_scanned_files()</b> returns a comma-separated list of configuration files parsed after <var class='filename'>php.ini</var>. These files are found in a directory defined by the <span class='option'>--with-config-file-scan-dir</span> option which is set during compilation. </p> <p class='para'> The returned configuration files also include the path as declared in the <span class='option'>--with-config-file-scan-dir</span> option. </p> </div> <a name='function.php-ini-scanned-files.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a comma-separated string of .ini files on success. Each comma is followed by a newline. If the directive <span class='option'>--with-config-file-scan-dir</span> wasn&amp;#039;t set, <b><tt class='constant'>FALSE</tt></b> is returned. If it was set and the directory was empty, an empty string is returned. If a file is unrecognizable, the file will still make it into the returned string but a PHP error will also result. This PHP error will be seen both at compile time and while using <b>php_ini_scanned_files()</b>. </p> </div> <a name='function.php-ini-scanned-files.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple example to list the returned ini files</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$filelist&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>php_ini_scanned_files</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filelist</span><span style='color: #007700'>)&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$files&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>','</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$filelist</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$files&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;li&amp;gt;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;/li&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.php-ini-scanned-files.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ini-set.php' class='function' rel='rdfs-seeAlso'>ini_set()</a> - Sets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-ini-loaded-file.php' class='function' rel='rdfs-seeAlso'>php_ini_loaded_file()</a> - Retrieve a path to the loaded php.ini file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="php_ini_loaded_file" value="<div id='function.php-ini-loaded-file' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.php-ini-loaded-file.php'>php_ini_loaded_file</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.4)</p><p class='refpurpose'><span class='refname'>php_ini_loaded_file</span> &amp;mdash; <span class='dc-title'>Retrieve a path to the loaded php.ini file</span></p> </div> <a name='function.php-ini-loaded-file.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>php_ini_loaded_file</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Check if a <var class='filename'>php.ini</var> file is loaded, and retrieve its path. </p> </div> <a name='function.php-ini-loaded-file.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='function.php-ini-loaded-file.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The loaded <var class='filename'>php.ini</var> path, or <b><tt class='constant'>FALSE</tt></b> if one is not loaded. </p> </div> <a name='function.php-ini-loaded-file.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>php_ini_loaded_file()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$inipath&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>php_ini_loaded_file</span><span style='color: #007700'>();<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$inipath</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Loaded&amp;nbsp;php.ini:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$inipath</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;php.ini&amp;nbsp;file&amp;nbsp;is&amp;nbsp;not&amp;nbsp;loaded'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Loaded php.ini: /usr/local/php/php.ini </pre></div> </div> </div><p> </p> </div> <a name='function.php-ini-loaded-file.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.php-ini-scanned-files.php' class='function' rel='rdfs-seeAlso'>php_ini_scanned_files()</a> - Return a list of .ini files parsed from the additional ini dir</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/configuration.file.php' class='link'>The configuration file</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="phpversion" value="<div id='function.phpversion' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.phpversion.php'>phpversion</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>phpversion</span> &amp;mdash; <span class='dc-title'>Gets the current PHP version</span></p> </div> <a name='function.phpversion.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>phpversion</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$extension</tt></span> ] )</div> <p class='para rdfs-comment'> Returns a string containing the version of the currently running PHP parser or extension. </p> </div> <a name='function.phpversion.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>extension</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An optional extension name. </p> </dd> </dl> <p> </p> </div> <a name='function.phpversion.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the optional <i><tt class='parameter'>extension</tt></i> parameter is specified, <b>phpversion()</b> returns the version of that extension, or <b><tt class='constant'>FALSE</tt></b> if there is no version information associated or the extension isn&amp;#039;t enabled. </p> </div> <a name='function.phpversion.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>phpversion()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;e.g.&amp;nbsp;'Current&amp;nbsp;PHP&amp;nbsp;version:&amp;nbsp;4.1.1'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Current&amp;nbsp;PHP&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>phpversion</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;e.g.&amp;nbsp;'2.0'&amp;nbsp;or&amp;nbsp;nothing&amp;nbsp;if&amp;nbsp;the&amp;nbsp;extension&amp;nbsp;isn't&amp;nbsp;enabled<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>phpversion</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tidy'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b><tt class='constant'>PHP_VERSION_ID</tt></b> example and usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;PHP_VERSION_ID&amp;nbsp;is&amp;nbsp;available&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.2.7,&amp;nbsp;if&amp;nbsp;our&amp;nbsp;<br />//&amp;nbsp;version&amp;nbsp;is&amp;nbsp;lower&amp;nbsp;than&amp;nbsp;that,&amp;nbsp;then&amp;nbsp;emulate&amp;nbsp;it<br /></span><span style='color: #007700'>if(!</span><span style='color: #0000BB'>defined</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP_VERSION_ID'</span><span style='color: #007700'>))<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$version&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP_VERSION_ID'</span><span style='color: #007700'>,&amp;nbsp;(</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>0</span><span style='color: #007700'>}&amp;nbsp;*&amp;nbsp;</span><span style='color: #0000BB'>10000&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>2</span><span style='color: #007700'>}&amp;nbsp;*&amp;nbsp;</span><span style='color: #0000BB'>100&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>4</span><span style='color: #007700'>}));<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;PHP_VERSION_ID&amp;nbsp;is&amp;nbsp;defined&amp;nbsp;as&amp;nbsp;a&amp;nbsp;number,&amp;nbsp;where&amp;nbsp;the&amp;nbsp;higher&amp;nbsp;the&amp;nbsp;number&amp;nbsp;<br />//&amp;nbsp;is,&amp;nbsp;the&amp;nbsp;newer&amp;nbsp;a&amp;nbsp;PHP&amp;nbsp;version&amp;nbsp;is&amp;nbsp;used.&amp;nbsp;Its&amp;nbsp;defined&amp;nbsp;as&amp;nbsp;used&amp;nbsp;in&amp;nbsp;the&amp;nbsp;above&amp;nbsp;<br />//&amp;nbsp;expression:<br />//<br />//&amp;nbsp;$version_id&amp;nbsp;=&amp;nbsp;$major_version&amp;nbsp;*&amp;nbsp;10000&amp;nbsp;+&amp;nbsp;$minor_version&amp;nbsp;*&amp;nbsp;100&amp;nbsp;+&amp;nbsp;$release_version;<br />//<br />//&amp;nbsp;Now&amp;nbsp;with&amp;nbsp;PHP_VERSION_ID&amp;nbsp;we&amp;nbsp;can&amp;nbsp;check&amp;nbsp;for&amp;nbsp;features&amp;nbsp;this&amp;nbsp;PHP&amp;nbsp;version&amp;nbsp;<br />//&amp;nbsp;may&amp;nbsp;have,&amp;nbsp;this&amp;nbsp;doesn't&amp;nbsp;require&amp;nbsp;to&amp;nbsp;use&amp;nbsp;version_compare()&amp;nbsp;everytime&amp;nbsp;<br />//&amp;nbsp;you&amp;nbsp;check&amp;nbsp;if&amp;nbsp;the&amp;nbsp;current&amp;nbsp;php&amp;nbsp;version&amp;nbsp;may&amp;nbsp;not&amp;nbsp;support&amp;nbsp;a&amp;nbsp;feature.<br />//<br />//&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;we&amp;nbsp;may&amp;nbsp;here&amp;nbsp;define&amp;nbsp;the&amp;nbsp;PHP_VERSION_*&amp;nbsp;constants&amp;nbsp;thats&amp;nbsp;<br />//&amp;nbsp;not&amp;nbsp;available&amp;nbsp;in&amp;nbsp;versions&amp;nbsp;prior&amp;nbsp;to&amp;nbsp;5.2.7<br /><br /></span><span style='color: #007700'>if(</span><span style='color: #0000BB'>PHP_VERSION_ID&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>50207</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP_MAJOR_VERSION'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>0</span><span style='color: #007700'>});<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP_MINOR_VERSION'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>2</span><span style='color: #007700'>});<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP_RELEASE_VERSION'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$version</span><span style='color: #007700'>{</span><span style='color: #0000BB'>4</span><span style='color: #007700'>});<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;and&amp;nbsp;so&amp;nbsp;on,&amp;nbsp;...<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.phpversion.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This information is also available in the predefined constant <b><tt class='constant'>PHP_VERSION</tt></b>. More versioning information is available using the <b><tt class='constant'>PHP_VERSION_*</tt></b> constants. <br /> </p></blockquote> </div> <a name='function.phpversion.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.version-compare.php' class='function' rel='rdfs-seeAlso'>version_compare()</a> - Compares two 'PHP-standardized' version number strings</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpcredits.php' class='function' rel='rdfs-seeAlso'>phpcredits()</a> - Prints out the credits for PHP</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-logo-guid.php' class='function' rel='rdfs-seeAlso'>php_logo_guid()</a> - Gets the logo guid</li> <li class='member'><a href='http://www.php.net/manual/en/function.zend-version.php' class='function' rel='rdfs-seeAlso'>zend_version()</a> - Gets the version of the current Zend engine</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="phpinfo" value="<div id='function.phpinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.phpinfo.php'>phpinfo</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>phpinfo</span> &amp;mdash; <span class='dc-title'>Outputs lots of PHP information</span></p> </div> <a name='function.phpinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>phpinfo</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$what</tt><span class='initializer'> = INFO_ALL</span></span> ] )</div> <p class='para rdfs-comment'> Outputs a large amount of information about the current state of PHP. This includes information about PHP compilation options and extensions, the PHP version, server information and environment (if compiled as a module), the PHP environment, OS version information, paths, master and local values of configuration options, HTTP headers, and the PHP License. </p> <p class='para'> Because every system is setup differently, <b>phpinfo()</b> is commonly used to check <a href='http://www.php.net/manual/en/configuration.php' class='link'>configuration settings</a> and for available <a href='http://www.php.net/manual/en/language.variables.predefined.php' class='link'>predefined variables</a> on a given system. </p> <p class='para'> <b>phpinfo()</b> is also a valuable debugging tool as it contains all EGPCS (Environment, GET, POST, Cookie, Server) data. </p> </div> <a name='function.phpinfo.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>what</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The output may be customized by passing one or more of the following <em class='emphasis'>constants</em> bitwise values summed together in the optional <i><tt class='parameter'>what</tt></i> parameter. One can also combine the respective constants or bitwise values together with the <a href='http://www.php.net/manual/en/language.operators.bitwise.php' class='link'>or</a> operator. </p> <p class='para'> </p><table class='doctable table'> <caption><b><b>phpinfo()</b> options</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Name (constant)</th> <th>Value</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>INFO_GENERAL</td> <td align='left'>1</td> <td align='left'> The configuration line, <var class='filename'>php.ini</var> location, build date, Web Server, System and more. </td> </tr> <tr valign='middle'> <td align='left'>INFO_CREDITS</td> <td align='left'>2</td> <td align='left'> PHP Credits. See also <a href='http://www.php.net/manual/en/function.phpcredits.php' class='function'>phpcredits()</a>. </td> </tr> <tr valign='middle'> <td align='left'>INFO_CONFIGURATION</td> <td align='left'>4</td> <td align='left'> Current Local and Master values for PHP directives. See also <a href='http://www.php.net/manual/en/function.ini-get.php' class='function'>ini_get()</a>. </td> </tr> <tr valign='middle'> <td align='left'>INFO_MODULES</td> <td align='left'>8</td> <td align='left'> Loaded modules and their respective settings. See also <a href='http://www.php.net/manual/en/function.get-loaded-extensions.php' class='function'>get_loaded_extensions()</a>. </td> </tr> <tr valign='middle'> <td align='left'>INFO_ENVIRONMENT</td> <td align='left'>16</td> <td align='left'> Environment Variable information that&amp;#039;s also available in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.environment.php' class='classname'>$_ENV</a></var>. </td> </tr> <tr valign='middle'> <td align='left'>INFO_VARIABLES</td> <td align='left'>32</td> <td align='left'> Shows all <a href='http://www.php.net/manual/en/language.variables.predefined.php' class='link'> predefined variables</a> from EGPCS (Environment, GET, POST, Cookie, Server). </td> </tr> <tr valign='middle'> <td align='left'>INFO_LICENSE</td> <td align='left'>64</td> <td align='left'> PHP License information. See also the <a href='http://www.php.net/license/' class='link external'>&amp;raquo; license FAQ</a>. </td> </tr> <tr valign='middle'> <td align='left'>INFO_ALL</td> <td align='left'>-1</td> <td align='left'> Shows all of the above. This is the default value. </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='function.phpinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.phpinfo.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.2</td> <td align='left'> The &amp;quot;Loaded Configuration File&amp;quot; information was added, when before only &amp;quot;Configuration File (php.ini) Path&amp;quot; existed. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.phpinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>phpinfo()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Show&amp;nbsp;all&amp;nbsp;information,&amp;nbsp;defaults&amp;nbsp;to&amp;nbsp;INFO_ALL<br /></span><span style='color: #0000BB'>phpinfo</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Show&amp;nbsp;just&amp;nbsp;the&amp;nbsp;module&amp;nbsp;information.<br />//&amp;nbsp;phpinfo(8)&amp;nbsp;yields&amp;nbsp;identical&amp;nbsp;results.<br /></span><span style='color: #0000BB'>phpinfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>INFO_MODULES</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.phpinfo.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Parts of the information displayed are disabled when the <a href='http://www.php.net/manual/en/ini.core.php#ini.expose-php' class='link'>expose_php</a> configuration setting is set to <i>off</i>. This includes the PHP and Zend logos, and the credits. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <b>phpinfo()</b> outputs plain text instead of HTML when using the CLI mode. <br /> </p></blockquote> </div> <a name='function.phpinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpcredits.php' class='function' rel='rdfs-seeAlso'>phpcredits()</a> - Prints out the credits for PHP</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-logo-guid.php' class='function' rel='rdfs-seeAlso'>php_logo_guid()</a> - Gets the logo guid</li> <li class='member'><a href='http://www.php.net/manual/en/function.ini-get.php' class='function' rel='rdfs-seeAlso'>ini_get()</a> - Gets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.ini-set.php' class='function' rel='rdfs-seeAlso'>ini_set()</a> - Sets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-loaded-extensions.php' class='function' rel='rdfs-seeAlso'>get_loaded_extensions()</a> - Returns an array with the names of all modules compiled and loaded</li> <li class='member'><a href='http://www.php.net/manual/en/language.variables.predefined.php' class='link'>Predefined Variables</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="phpcredits" value="<div id='function.phpcredits' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.phpcredits.php'>phpcredits</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>phpcredits</span> &amp;mdash; <span class='dc-title'>Prints out the credits for PHP</span></p> </div> <a name='function.phpcredits.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>phpcredits</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flag</tt><span class='initializer'> = CREDITS_ALL</span></span> ] )</div> <p class='para rdfs-comment'> This function prints out the credits listing the PHP developers, modules, etc. It generates the appropriate HTML codes to insert the information in a page. </p> </div> <a name='function.phpcredits.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flag</tt></i> </span> </dt><dd class='listitem'> <p class='para'> To generate a custom credits page, you may want to use the <i><tt class='parameter'>flag</tt></i> parameter. <i><tt class='parameter'>flag</tt></i> is optional, and it defaults to <b><tt class='constant'>CREDITS_ALL</tt></b>. </p> <p class='para'> </p><table class='doctable table'> <caption><b>Pre-defined <b>phpcredits()</b> flags</b></caption> <thead valign='middle'> <tr valign='middle'> <th>name</th> <th>description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>CREDITS_ALL</td> <td align='left'> All the credits, equivalent to using: <b><tt class='constant'>CREDITS_DOCS</tt></b> + <b><tt class='constant'>CREDITS_GENERAL</tt></b> + <b><tt class='constant'>CREDITS_GROUP</tt></b> + <b><tt class='constant'>CREDITS_MODULES</tt></b> + <b><tt class='constant'>CREDITS_FULLPAGE</tt></b>. It generates a complete stand-alone HTML page with the appropriate tags. </td> </tr> <tr valign='middle'> <td align='left'>CREDITS_DOCS</td> <td align='left'>The credits for the documentation team</td> </tr> <tr valign='middle'> <td align='left'>CREDITS_FULLPAGE</td> <td align='left'> Usually used in combination with the other flags. Indicates that a complete stand-alone HTML page needs to be printed including the information indicated by the other flags. </td> </tr> <tr valign='middle'> <td align='left'>CREDITS_GENERAL</td> <td align='left'> General credits: Language design and concept, PHP 4.0 authors and SAPI module. </td> </tr> <tr valign='middle'> <td align='left'>CREDITS_GROUP</td> <td align='left'>A list of the core developers</td> </tr> <tr valign='middle'> <td align='left'>CREDITS_MODULES</td> <td align='left'> A list of the extension modules for PHP, and their authors </td> </tr> <tr valign='middle'> <td align='left'>CREDITS_SAPI</td> <td align='left'> A list of the server API modules for PHP, and their authors </td> </tr> </tbody> </table> <p> </p> </dd> </dl> <p> </p> </div> <a name='function.phpcredits.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.phpcredits.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Prints the general credits</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />phpcredits</span><span style='color: #007700'>(</span><span style='color: #0000BB'>CREDITS_GENERAL</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Prints the core developers and the documentation group</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />phpcredits</span><span style='color: #007700'>(</span><span style='color: #0000BB'>CREDITS_GROUP&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>CREDITS_DOCS&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>CREDITS_FULLPAGE</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Printing all the credits</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> &amp;lt;html&amp;gt;<br />&amp;nbsp;&amp;lt;head&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;My&amp;nbsp;credits&amp;nbsp;page&amp;lt;/title&amp;gt;<br />&amp;nbsp;&amp;lt;/head&amp;gt;<br />&amp;nbsp;&amp;lt;body&amp;gt;<br /><span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;some&amp;nbsp;code&amp;nbsp;of&amp;nbsp;your&amp;nbsp;own<br /></span><span style='color: #0000BB'>phpcredits</span><span style='color: #007700'>(</span><span style='color: #0000BB'>CREDITS_ALL&amp;nbsp;</span><span style='color: #007700'>-&amp;nbsp;</span><span style='color: #0000BB'>CREDITS_FULLPAGE</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;some&amp;nbsp;more&amp;nbsp;code<br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span>&amp;nbsp;&amp;lt;/body&amp;gt;<br />&amp;lt;/html&amp;gt;</span> </code></div> </div> </div><p> </p> </div> <a name='function.phpcredits.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-logo-guid.php' class='function' rel='rdfs-seeAlso'>php_logo_guid()</a> - Gets the logo guid</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pfsockopen" value="<div id='function.pfsockopen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pfsockopen.php'>pfsockopen</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pfsockopen</span> &amp;mdash; <span class='dc-title'>Open persistent Internet or Unix domain socket connection</span></p> </div> <a name='function.pfsockopen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>pfsockopen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$hostname</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$port</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$errno</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$errstr</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$timeout</tt><span class='initializer'> = ini_get(&amp;quot;default_socket_timeout&amp;quot;)</span></span> ]]]] )</div> <p class='para rdfs-comment'> This function behaves exactly as <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> with the difference that the connection is not closed after the script finishes. It is the persistent version of <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a>. </p> </div> <a name='function.pfsockopen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> For parameter information, see the <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> documentation. </p> </div> <a name='function.pfsockopen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->setFetchMode" value="<div id='pdostatement.setfetchmode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.setfetchmode.php'>PDOStatement-&amp;gt;setFetchMode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;setFetchMode</span> &amp;mdash; <span class='dc-title'> Set the default fetch mode for this statement </span></p> </div> <a name='pdostatement.setfetchmode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::setFetchMode</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::setFetchMode</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_COLUMN</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$colno</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::setFetchMode</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_CLASS</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$classname</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctorargs</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::setFetchMode</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_INTO</tt></span> , <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> </div> <a name='pdostatement.setfetchmode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The fetch mode must be one of the <i>PDO::FETCH_*</i> constants. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>colno</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Column number. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>classname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Class name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ctorargs</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Constructor arguments. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Object. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.setfetchmode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <i>1</i> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.setfetchmode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Setting the fetch mode</b></p> <div class='example-contents para'><p> The following example demonstrates how <b>PDOStatement::setFetchMode()</b> changes the default fetch mode for a PDOStatement object. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>;<br />try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFetchMode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_NUM</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br />}<br />catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple red 150 banana yellow 250 orange orange 300 kiwi brown 75 lemon yellow 25 pear green 150 watermelon pink 90 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->setAttribute" value="<div id='pdostatement.setattribute' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.setattribute.php'>PDOStatement-&amp;gt;setAttribute</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;setAttribute</span> &amp;mdash; <span class='dc-title'> Set a statement attribute </span></p> </div> <a name='pdostatement.setattribute.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::setAttribute</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Sets an attribute on the statement. Currently, no generic attributes are set but only driver specific: </p><ul class='itemizedlist'> <li class='listitem'><p class='para'><i>PDO::ATTR_CURSOR_NAME</i> (Firebird and ODBC specific): Set the name of cursor for <i>UPDATE ... WHERE CURRENT OF</i>. </p></li> </ul><p> </p> </div> <a name='pdostatement.setattribute.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.setattribute.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.getattribute.php' class='function' rel='rdfs-seeAlso'>PDO::getAttribute()</a> - Retrieve a database connection attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.setattribute.php' class='function' rel='rdfs-seeAlso'>PDO::setAttribute()</a> - Set an attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.getattribute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::getAttribute()</a> - Retrieve a statement attribute</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->rowCount" value="<div id='pdostatement.rowcount' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.rowcount.php'>PDOStatement-&amp;gt;rowCount</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;rowCount</span> &amp;mdash; <span class='dc-title'> Returns the number of rows affected by the last SQL statement </span></p> </div> <a name='pdostatement.rowcount.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>PDOStatement::rowCount</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>PDOStatement::rowCount()</b> returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding <i>PDOStatement</i> object. </p> <p class='para'> If the last SQL statement executed by the associated <i>PDOStatement</i> was a SELECT statement, some databases may return the number of rows returned by that statement. However, this behaviour is not guaranteed for all databases and should not be relied on for portable applications. </p> </div> <a name='pdostatement.rowcount.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of rows. </p> </div> <a name='pdostatement.rowcount.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Return the number of deleted rows</b></p> <div class='example-contents para'><p> <b>PDOStatement::rowCount()</b> returns the number of rows affected by a DELETE, INSERT, or UPDATE statement. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Delete&amp;nbsp;all&amp;nbsp;rows&amp;nbsp;from&amp;nbsp;the&amp;nbsp;FRUIT&amp;nbsp;table&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$del&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DELETE&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$del</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Return&amp;nbsp;number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;that&amp;nbsp;were&amp;nbsp;deleted&amp;nbsp;*/<br /></span><span style='color: #007700'>print(</span><span style='color: #DD0000'>'Return&amp;nbsp;number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;that&amp;nbsp;were&amp;nbsp;deleted:\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$count&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$del</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rowCount</span><span style='color: #007700'>();<br />print(</span><span style='color: #DD0000'>'Deleted&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #DD0000'>&amp;nbsp;rows.\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Deleted 9 rows. </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Counting rows returned by a SELECT statement</b></p> <div class='example-contents para'><p> For most databases, <b>PDOStatement::rowCount()</b> does not return the number of rows affected by a SELECT statement. Instead, use <a href='http://www.php.net/manual/en/pdo.query.php' class='function'>PDO::query()</a> to issue a SELECT COUNT(*) statement with the same predicates as your intended SELECT statement, then use <a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function'>PDOStatement::fetchColumn()</a> to retrieve the number of rows that will be returned. Your application can then perform the correct action. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;COUNT(*)&amp;nbsp;FROM&amp;nbsp;fruit&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;gt;&amp;nbsp;100'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$res&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>))&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Check&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;that&amp;nbsp;match&amp;nbsp;the&amp;nbsp;SELECT&amp;nbsp;statement&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$res</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchColumn</span><span style='color: #007700'>()&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Issue&amp;nbsp;the&amp;nbsp;real&amp;nbsp;SELECT&amp;nbsp;statement&amp;nbsp;and&amp;nbsp;work&amp;nbsp;with&amp;nbsp;the&amp;nbsp;results&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name&amp;nbsp;FROM&amp;nbsp;fruit&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;gt;&amp;nbsp;100'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'NAME'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;No&amp;nbsp;rows&amp;nbsp;matched&amp;nbsp;--&amp;nbsp;do&amp;nbsp;something&amp;nbsp;else&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'No&amp;nbsp;rows&amp;nbsp;matched&amp;nbsp;the&amp;nbsp;query.'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$res&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple banana orange pear </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.rowcount.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.columncount.php' class='function' rel='rdfs-seeAlso'>PDOStatement::columnCount()</a> - Returns the number of columns in the result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchColumn()</a> - Returns a single column from the next row of a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->nextRowset" value="<div id='pdostatement.nextrowset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.nextrowset.php'>PDOStatement-&amp;gt;nextRowset</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;nextRowset</span> &amp;mdash; <span class='dc-title'> Advances to the next rowset in a multi-rowset statement handle </span></p> </div> <a name='pdostatement.nextrowset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::nextRowset</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Some database servers support stored procedures that return more than one rowset (also known as a result set). <b>PDOStatement::nextRowset()</b> enables you to access the second and subsequent rowsets associated with a PDOStatement object. Each rowset can have a different set of columns from the preceding rowset. </p> </div> <a name='pdostatement.nextrowset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.nextrowset.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Fetching multiple rowsets returned from a stored procedure</b></p> <div class='example-contents para'><p> The following example shows how to call a stored procedure, MULTIPLE_ROWSETS, that returns three rowsets. We use a do / while loop to loop over the <b>PDOStatement::nextRowset()</b> method, which returns false and terminates the loop when no more rowsets can be returned. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'CALL&amp;nbsp;multiple_rowsets()'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$rowset&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_NUM</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$rowset</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>printResultSet</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rowset</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>++;<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>nextRowset</span><span style='color: #007700'>());<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>printResultSet</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$rowset</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'Result&amp;nbsp;set&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #DD0000'>:\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$rowset&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$col</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$col&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\t'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Result set 1: apple red banana yellow Result set 2: orange orange 150 banana yellow 175 Result set 3: lime green apple red banana yellow </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.nextrowset.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.columncount.php' class='function' rel='rdfs-seeAlso'>PDOStatement::columnCount()</a> - Returns the number of columns in the result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.getcolumnmeta.php' class='function' rel='rdfs-seeAlso'>PDOStatement::getColumnMeta()</a> - Returns metadata for a column in a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->getColumnMeta" value="<div id='pdostatement.getcolumnmeta' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.getcolumnmeta.php'>PDOStatement-&amp;gt;getColumnMeta</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;getColumnMeta</span> &amp;mdash; <span class='dc-title'> Returns metadata for a column in a result set </span></p> </div> <a name='pdostatement.getcolumnmeta.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>PDOStatement::getColumnMeta</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is <em class='emphasis'>EXPERIMENTAL</em>. The behaviour of this function, its name, and surrounding documentation may change without notice in a future release of PHP. This function should be used at your own risk. </p></div> <p class='para'> Retrieves the metadata for a 0-indexed column in a result set as an associative array. </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> Not all PDO drivers support <b>PDOStatement::getColumnMeta()</b>. </p> </div> </div> <a name='pdostatement.getcolumnmeta.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>column</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The 0-indexed column in the result set. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.getcolumnmeta.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array containing the following values representing the metadata for a single column: </p> <table class='doctable table'> <caption><b>Column metadata</b></caption> <col align='left' /> <col align='left' /> <thead valign='middle'> <tr valign='middle'> <th>Name</th> <th>Value</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>native_type</i></td> <td align='left'>The PHP native type used to represent the column value.</td> </tr> <tr valign='middle'> <td align='left'><i>driver:decl_type</i></td> <td align='left'>The SQL type used to represent the column value in the database. If the column in the result set is the result of a function, this value is not returned by <b>PDOStatement::getColumnMeta()</b>. </td> </tr> <tr valign='middle'> <td align='left'><i>flags</i></td> <td align='left'>Any flags set for this column.</td> </tr> <tr valign='middle'> <td align='left'><i>name</i></td> <td align='left'>The name of this column as returned by the database.</td> </tr> <tr valign='middle'> <td align='left'><i>table</i></td> <td align='left'>The name of this column&amp;#039;s table as returned by the database.</td> </tr> <tr valign='middle'> <td align='left'><i>len</i></td> <td align='left'>The length of this column. Normally <i>-1</i> for types other than floating point decimals.</td> </tr> <tr valign='middle'> <td align='left'><i>precision</i></td> <td align='left'>The numeric precision of this column. Normally <i>0</i> for types other than floating point decimals.</td> </tr> <tr valign='middle'> <td align='left'><i>pdo_type</i></td> <td align='left'>The type of this column as represented by the <i>PDO::PARAM_*</i> constants.</td> </tr> </tbody> </table> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> if the requested column does not exist in the result set, or if no result set exists. </p> </div> <a name='pdostatement.getcolumnmeta.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.3</td> <td align='left'><i>table</i> field</td> </tr> </tbody> </table> <p> </p> </div> <a name='pdostatement.getcolumnmeta.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Retrieving column metadata</b></p> <div class='example-contents para'><p> The following example shows the results of retrieving the metadata for a single column generated by a function (COUNT) in a PDO_SQLITE driver. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$select&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$DB</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;COUNT(*)&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$meta&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$select</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getColumnMeta</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$meta</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(6) { [&amp;quot;native_type&amp;quot;]=&amp;gt; string(7) &amp;quot;integer&amp;quot; [&amp;quot;flags&amp;quot;]=&amp;gt; array(0) { } [&amp;quot;name&amp;quot;]=&amp;gt; string(8) &amp;quot;COUNT(*)&amp;quot; [&amp;quot;len&amp;quot;]=&amp;gt; int(-1) [&amp;quot;precision&amp;quot;]=&amp;gt; int(0) [&amp;quot;pdo_type&amp;quot;]=&amp;gt; int(2) } </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.getcolumnmeta.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.columncount.php' class='function' rel='rdfs-seeAlso'>PDOStatement::columnCount()</a> - Returns the number of columns in the result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.rowcount.php' class='function' rel='rdfs-seeAlso'>PDOStatement::rowCount()</a> - Returns the number of rows affected by the last SQL statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->getAttribute" value="<div id='pdostatement.getattribute' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.getattribute.php'>PDOStatement-&amp;gt;getAttribute</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;getAttribute</span> &amp;mdash; <span class='dc-title'> Retrieve a statement attribute </span></p> </div> <a name='pdostatement.getattribute.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>PDOStatement::getAttribute</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> )</div> <p class='para rdfs-comment'> Gets an attribute of the statement. Currently, no generic attributes exist but only driver specific: </p><ul class='itemizedlist'> <li class='listitem'><p class='para'><i>PDO::ATTR_CURSOR_NAME</i> (Firebird and ODBC specific): Get the name of cursor for <i>UPDATE ... WHERE CURRENT OF</i>. </p></li> </ul><p> </p> </div> <a name='pdostatement.getattribute.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the attribute value. </p> </div> <a name='pdostatement.getattribute.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.getattribute.php' class='function' rel='rdfs-seeAlso'>PDO::getAttribute()</a> - Retrieve a database connection attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.setattribute.php' class='function' rel='rdfs-seeAlso'>PDO::setAttribute()</a> - Set an attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.setattribute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::setAttribute()</a> - Set a statement attribute</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->fetchObject" value="<div id='pdostatement.fetchobject' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.fetchobject.php'>PDOStatement-&amp;gt;fetchObject</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.4)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;fetchObject</span> &amp;mdash; <span class='dc-title'>Fetches the next row and returns it as an object.</span></p> </div> <a name='pdostatement.fetchobject.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>PDOStatement::fetchObject</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_args</tt></span> ]] )</div> <p class='para rdfs-comment'> Fetches the next row and returns it as an object. This function is an alternative to <a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function'>PDOStatement::fetch()</a> with <b><tt class='constant'>PDO::FETCH_CLASS</tt></b> or <b><tt class='constant'>PDO::FETCH_OBJ</tt></b> style. </p> </div> <a name='pdostatement.fetchobject.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the created class, defaults to <i>stdClass</i>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ctor_args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Elements of this array are passed to the constructor. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.fetchobject.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an instance of the required class with property names that correspond to the column names or <b><tt class='constant'>FALSE</tt></b> in case of an error. </p> </div> <a name='pdostatement.fetchobject.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetch()</a> - Fetches the next row from a result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->fetchColumn" value="<div id='pdostatement.fetchcolumn' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php'>PDOStatement-&amp;gt;fetchColumn</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.9.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;fetchColumn</span> &amp;mdash; <span class='dc-title'> Returns a single column from the next row of a result set </span></p> </div> <a name='pdostatement.fetchcolumn.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>PDOStatement::fetchColumn</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column_number</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Returns a single column from the next row of a result set or <b><tt class='constant'>FALSE</tt></b> if there are no more rows. </p> </div> <a name='pdostatement.fetchcolumn.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>column_number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> 0-indexed number of the column you wish to retrieve from the row. If no value is supplied, <b>PDOStatement::fetchColumn()</b> fetches the first column. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.fetchcolumn.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDOStatement::fetchColumn()</b> returns a single column in the next row of a result set. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> There is no way to return another column from the same row if you use <b>PDOStatement::fetchColumn()</b> to retrieve data. </p> </div> </div> <a name='pdostatement.fetchcolumn.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Return first column of the next row</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Fetch&amp;nbsp;the&amp;nbsp;first&amp;nbsp;column&amp;nbsp;from&amp;nbsp;the&amp;nbsp;next&amp;nbsp;row&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set&amp;nbsp;*/<br /></span><span style='color: #007700'>print(</span><span style='color: #DD0000'>'Fetch&amp;nbsp;the&amp;nbsp;first&amp;nbsp;column&amp;nbsp;from&amp;nbsp;the&amp;nbsp;next&amp;nbsp;row&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set:\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchColumn</span><span style='color: #007700'>();<br />print(</span><span style='color: #DD0000'>'name&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$result</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>);<br /><br />print(</span><span style='color: #DD0000'>'Fetch&amp;nbsp;the&amp;nbsp;second&amp;nbsp;column&amp;nbsp;from&amp;nbsp;the&amp;nbsp;next&amp;nbsp;row&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set:\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchColumn</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'colour&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$result</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Fetch the first column from the next row in the result set: name = lemon Fetch the second column from the next row in the result set: colour = red </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.fetchcolumn.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetch()</a> - Fetches the next row from a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchAll()</a> - Returns an array containing all of the result set rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::setFetchMode()</a> - Set the default fetch mode for this statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->fetchAll" value="<div id='pdostatement.fetchall' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.fetchall.php'>PDOStatement-&amp;gt;fetchAll</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;fetchAll</span> &amp;mdash; <span class='dc-title'> Returns an array containing all of the result set rows </span></p> </div> <a name='pdostatement.fetchall.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>PDOStatement::fetchAll</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$fetch_style</tt><span class='initializer'> = PDO::FETCH_BOTH</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column_index</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_args</tt><span class='initializer'> = array()</span></span> ]]] )</div> </div> <a name='pdostatement.fetchall.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>fetch_style</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Controls the contents of the returned array as documented in <a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function'>PDOStatement::fetch()</a>. Defaults to <i>PDO::FETCH_BOTH</i>. </p> <p class='para'> To return an array consisting of all values of a single column from the result set, specify <i>PDO::FETCH_COLUMN</i>. You can specify which column you want with the <i><tt class='parameter'>column-index</tt></i> parameter. </p> <p class='para'> To fetch only the unique values of a single column from the result set, bitwise-OR <i>PDO::FETCH_COLUMN</i> with <i>PDO::FETCH_UNIQUE</i>. </p> <p class='para'> To return an associative array grouped by the values of a specified column, bitwise-OR <i>PDO::FETCH_COLUMN</i> with <i>PDO::FETCH_GROUP</i>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>column_index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Returns the indicated 0-indexed column when the value of <i><tt class='parameter'>fetch_style</tt></i> is <i>PDO::FETCH_COLUMN</i>. Defaults to <i>0</i>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ctor_args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Arguments of custom class constructor. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.fetchall.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDOStatement::fetchAll()</b> returns an array containing all of the remaining rows in the result set. The array represents each row as either an array of column values or an object with properties corresponding to each column name. </p> <p class='para'> Using this method to fetch large result sets will result in a heavy demand on system and possibly network resources. Rather than retrieving all of the data and manipulating it in PHP, consider using the database server to manipulate the result sets. For example, use the WHERE and SORT BY clauses in SQL to restrict results before retrieving and processing them with PHP. </p> </div> <a name='pdostatement.fetchall.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Fetch all remaining rows in a result set</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Fetch&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;remaining&amp;nbsp;rows&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set&amp;nbsp;*/<br /></span><span style='color: #007700'>print(</span><span style='color: #DD0000'>'Fetch&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;remaining&amp;nbsp;rows&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set:\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Fetch all of the remaining rows in the result set: Array ( [0] =&amp;gt; Array ( [NAME] =&amp;gt; pear [0] =&amp;gt; pear [COLOUR] =&amp;gt; green [1] =&amp;gt; green ) [1] =&amp;gt; Array ( [NAME] =&amp;gt; watermelon [0] =&amp;gt; watermelon [COLOUR] =&amp;gt; pink [1] =&amp;gt; pink ) ) </pre></div> </div> </div><p> </p><div class='example'><p><b>Example #2 Fetching all values of a single column from a result set</b></p> <div class='example-contents para'><p> The following example demonstrates how to return all of the values of a single column from a result set, even though the SQL statement itself may return multiple columns per row. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Fetch&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;values&amp;nbsp;of&amp;nbsp;the&amp;nbsp;first&amp;nbsp;column&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_COLUMN</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array(3) ( [0] =&amp;gt; string(5) =&amp;gt; apple [1] =&amp;gt; string(4) =&amp;gt; pear [2] =&amp;gt; string(10) =&amp;gt; watermelon ) </pre></div> </div> </div><p> </p><div class='example'><p><b>Example #3 Grouping all values by a single column</b></p> <div class='example-contents para'><p> The following example demonstrates how to return an associative array grouped by the values of the specified column in the result set. The array contains three keys: values <i>apple</i> and <i>pear</i> are returned as arrays that contain two different colours, while <i>watermelon</i> is returned as an array that contains only one colour. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$insert&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;fruit(name,&amp;nbsp;colour)&amp;nbsp;VALUES&amp;nbsp;(?,&amp;nbsp;?)'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$insert</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$insert</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'pear'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Group&amp;nbsp;values&amp;nbsp;by&amp;nbsp;the&amp;nbsp;first&amp;nbsp;column&amp;nbsp;*/<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_COLUMN</span><span style='color: #007700'>|</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_GROUP</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(3) { [&amp;quot;apple&amp;quot;]=&amp;gt; array(2) { [0]=&amp;gt; string(5) &amp;quot;green&amp;quot; [1]=&amp;gt; string(3) &amp;quot;red&amp;quot; } [&amp;quot;pear&amp;quot;]=&amp;gt; array(2) { [0]=&amp;gt; string(5) &amp;quot;green&amp;quot; [1]=&amp;gt; string(6) &amp;quot;yellow&amp;quot; } [&amp;quot;watermelon&amp;quot;]=&amp;gt; array(1) { [0]=&amp;gt; string(5) &amp;quot;green&amp;quot; } } </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.fetchall.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetch()</a> - Fetches the next row from a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchColumn()</a> - Returns a single column from the next row of a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::setFetchMode()</a> - Set the default fetch mode for this statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->fetch" value="<div id='pdostatement.fetch' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.fetch.php'>PDOStatement-&amp;gt;fetch</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;fetch</span> &amp;mdash; <span class='dc-title'> Fetches the next row from a result set </span></p> </div> <a name='pdostatement.fetch.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>PDOStatement::fetch</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$fetch_style</tt><span class='initializer'> = PDO::FETCH_BOTH</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$cursor_orientation</tt><span class='initializer'> = PDO::FETCH_ORI_NEXT</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$cursor_offset</tt><span class='initializer'> = 0</span></span> ]]] )</div> <p class='para rdfs-comment'> Fetches a row from a result set associated with a PDOStatement object. The <i><tt class='parameter'>fetch_style</tt></i> parameter determines how PDO returns the row. </p> </div> <a name='pdostatement.fetch.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>fetch_style</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Controls how the next row will be returned to the caller. This value must be one of the <i>PDO::FETCH_*</i> constants, defaulting to <i>PDO::FETCH_BOTH</i>. </p><ul class='itemizedlist'> <li class='listitem'><p class='para'> <i>PDO::FETCH_ASSOC</i>: returns an array indexed by column name as returned in your result set </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_BOTH</i> (default): returns an array indexed by both column name and 0-indexed column number as returned in your result set </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_BOUND</i>: returns <b><tt class='constant'>TRUE</tt></b> and assigns the values of the columns in your result set to the PHP variables to which they were bound with the <a href='http://www.php.net/manual/en/pdostatement.bindcolumn.php' class='function'>PDOStatement::bindColumn()</a> method </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_CLASS</i>: returns a new instance of the requested class, mapping the columns of the result set to named properties in the class. If <i><tt class='parameter'>fetch_style</tt></i> includes PDO::FETCH_CLASSTYPE (e.g. <i>PDO::FETCH_CLASS | PDO::FETCH_CLASSTYPE</i>) then the name of the class is determined from a value of the first column. </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_INTO</i>: updates an existing instance of the requested class, mapping the columns of the result set to named properties in the class </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_LAZY</i>: combines <i>PDO::FETCH_BOTH</i> and <i>PDO::FETCH_OBJ</i>, creating the object variable names as they are accessed </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_NUM</i>: returns an array indexed by column number as returned in your result set, starting at column 0 </p></li> <li class='listitem'><p class='para'> <i>PDO::FETCH_OBJ</i>: returns an anonymous object with property names that correspond to the column names returned in your result set </p></li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cursor_orientation</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For a PDOStatement object representing a scrollable cursor, this value determines which row will be returned to the caller. This value must be one of the <i>PDO::FETCH_ORI_*</i> constants, defaulting to <i>PDO::FETCH_ORI_NEXT</i>. To request a scrollable cursor for your PDOStatement object, you must set the <i>PDO::ATTR_CURSOR</i> attribute to <i>PDO::CURSOR_SCROLL</i> when you prepare the SQL statement with <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For a PDOStatement object representing a scrollable cursor for which the <i>cursor_orientation</i> parameter is set to <i>PDO::FETCH_ORI_ABS</i>, this value specifies the absolute number of the row in the result set that shall be fetched. </p> <p class='para'> For a PDOStatement object representing a scrollable cursor for which the <i>cursor_orientation</i> parameter is set to <i>PDO::FETCH_ORI_REL</i>, this value specifies the row to fetch relative to the cursor position before <b>PDOStatement::fetch()</b> was called. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.fetch.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The return value of this function on success depends on the fetch type. In all cases, <b><tt class='constant'>FALSE</tt></b> is returned on failure. </p> </div> <a name='pdostatement.fetch.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Fetching rows using different fetch styles</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Exercise&amp;nbsp;PDOStatement::fetch&amp;nbsp;styles&amp;nbsp;*/<br /></span><span style='color: #007700'>print(</span><span style='color: #DD0000'>'PDO::FETCH_ASSOC:&amp;nbsp;'</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'Return&amp;nbsp;next&amp;nbsp;row&amp;nbsp;as&amp;nbsp;an&amp;nbsp;array&amp;nbsp;indexed&amp;nbsp;by&amp;nbsp;column&amp;nbsp;name\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_ASSOC</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br /><br />print(</span><span style='color: #DD0000'>'PDO::FETCH_BOTH:&amp;nbsp;'</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'Return&amp;nbsp;next&amp;nbsp;row&amp;nbsp;as&amp;nbsp;an&amp;nbsp;array&amp;nbsp;indexed&amp;nbsp;by&amp;nbsp;both&amp;nbsp;column&amp;nbsp;name&amp;nbsp;and&amp;nbsp;number\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_BOTH</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br /><br />print(</span><span style='color: #DD0000'>'PDO::FETCH_LAZY:&amp;nbsp;'</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'Return&amp;nbsp;next&amp;nbsp;row&amp;nbsp;as&amp;nbsp;an&amp;nbsp;anonymous&amp;nbsp;object&amp;nbsp;with&amp;nbsp;column&amp;nbsp;names&amp;nbsp;as&amp;nbsp;properties\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_LAZY</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br /><br />print(</span><span style='color: #DD0000'>'PDO::FETCH_OBJ:&amp;nbsp;'</span><span style='color: #007700'>);<br />print(</span><span style='color: #DD0000'>'Return&amp;nbsp;next&amp;nbsp;row&amp;nbsp;as&amp;nbsp;an&amp;nbsp;anonymous&amp;nbsp;object&amp;nbsp;with&amp;nbsp;column&amp;nbsp;names&amp;nbsp;as&amp;nbsp;properties\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_OBJ</span><span style='color: #007700'>);<br />print&amp;nbsp;</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>NAME</span><span style='color: #007700'>;<br />print(</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> PDO::FETCH_ASSOC: Return next row as an array indexed by column name Array ( [NAME] =&amp;gt; apple [COLOUR] =&amp;gt; red ) PDO::FETCH_BOTH: Return next row as an array indexed by both column name and number Array ( [NAME] =&amp;gt; banana [0] =&amp;gt; banana [COLOUR] =&amp;gt; yellow [1] =&amp;gt; yellow ) PDO::FETCH_LAZY: Return next row as an anonymous object with column names as properties PDORow Object ( [NAME] =&amp;gt; orange [COLOUR] =&amp;gt; orange ) PDO::FETCH_OBJ: Return next row as an anonymous object with column names as properties kiwi </pre></div> </div> </div><p> </p><div class='example'><p><b>Example #2 Fetching rows with a scrollable cursor</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>readDataForwards</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;hand,&amp;nbsp;won,&amp;nbsp;bet&amp;nbsp;FROM&amp;nbsp;mynumbers&amp;nbsp;ORDER&amp;nbsp;BY&amp;nbsp;BET'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ATTR_CURSOR&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>CURSOR_SCROLL</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_NUM</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_ORI_NEXT</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;}<br />}<br />function&amp;nbsp;</span><span style='color: #0000BB'>readDataBackwards</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;hand,&amp;nbsp;won,&amp;nbsp;bet&amp;nbsp;FROM&amp;nbsp;mynumbers&amp;nbsp;ORDER&amp;nbsp;BY&amp;nbsp;bet'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ATTR_CURSOR&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>CURSOR_SCROLL</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_NUM</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_ORI_LAST</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_NUM</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_ORI_PRIOR</span><span style='color: #007700'>));<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;}<br />}<br /><br />print&amp;nbsp;</span><span style='color: #DD0000'>'Reading&amp;nbsp;forwards:\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>readDataForwards</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>);<br /><br />print&amp;nbsp;</span><span style='color: #DD0000'>'Reading&amp;nbsp;backwards:\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>readDataBackwards</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Reading forwards: 21 10 5 16 0 5 19 20 10 Reading backwards: 19 20 10 16 0 5 21 10 5 </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.fetch.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchAll()</a> - Returns an array containing all of the result set rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchColumn()</a> - Returns a single column from the next row of a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchobject.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchObject()</a> - Fetches the next row and returns it as an object.</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::setFetchMode()</a> - Set the default fetch mode for this statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->execute" value="<div id='pdostatement.execute' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.execute.php'>PDOStatement-&amp;gt;execute</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;execute</span> &amp;mdash; <span class='dc-title'> Executes a prepared statement </span></p> </div> <a name='pdostatement.execute.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::execute</b></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input_parameters</tt><span class='initializer'> = array()</span></span> ] )</div> <p class='para rdfs-comment'> Execute the prepared statement. If the prepared statement included parameter markers, you must either: </p><ul class='itemizedlist'> <li class='listitem'><p class='para'>call <a href='http://www.php.net/manual/en/pdostatement.bindparam.php' class='function'>PDOStatement::bindParam()</a> to bind PHP variables to the parameter markers: bound variables pass their value as input and receive the output value, if any, of their associated parameter markers</p></li> <li class='listitem'><p class='para'>or pass an array of input-only parameter values</p></li> </ul><p> </p> </div> <a name='pdostatement.execute.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input_parameters</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array of values with as many elements as there are bound parameters in the SQL statement being executed. </p> <p class='para'> You cannot bind multiple values to a single parameter; for example, you cannot bind two values to a single named parameter in an IN() clause. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.execute.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.execute.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'><p><b>Example #1 Execute a prepared statement with bound variables</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':calories'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':colour'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #2 Execute a prepared statement with an array of insert values (named parameters)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;passing&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;insert&amp;nbsp;values&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>':calories'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>':colour'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #3 Execute a prepared statement with an array of insert values (placeholders)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;passing&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;insert&amp;nbsp;values&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #4 Execute a prepared statement with question mark placeholders</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='pdostatement.execute.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.bindparam.php' class='function' rel='rdfs-seeAlso'>PDOStatement::bindParam()</a> - Binds a parameter to the specified variable name</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetch()</a> - Fetches the next row from a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchAll()</a> - Returns an array containing all of the result set rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchColumn()</a> - Returns a single column from the next row of a result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->errorInfo" value="<div id='pdostatement.errorinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.errorinfo.php'>PDOStatement-&amp;gt;errorInfo</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;errorInfo</span> &amp;mdash; <span class='dc-title'> Fetch extended error information associated with the last operation on the statement handle </span></p> </div> <a name='pdostatement.errorinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>PDOStatement::errorInfo</b></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='pdostatement.errorinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDOStatement::errorInfo()</b> returns an array of error information about the last operation performed by this statement handle. The array consists of the following fields: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Element</th> <th>Information</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td align='left'>SQLSTATE error code (a five characters alphanumeric identifier defined in the ANSI SQL standard).</td> </tr> <tr valign='middle'> <td align='left'>1</td> <td align='left'>Driver specific error code.</td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'>Driver specific error message.</td> </tr> </tbody> </table> <p> </p> </div> <a name='pdostatement.errorinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Displaying errorInfo() fields for a PDO_ODBC connection to a DB2 database</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Provoke&amp;nbsp;an&amp;nbsp;error&amp;nbsp;--&amp;nbsp;the&amp;nbsp;BONES&amp;nbsp;table&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exist&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;skull&amp;nbsp;FROM&amp;nbsp;bones'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nPDOStatement::errorInfo():\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$arr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>errorInfo</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> PDOStatement::errorInfo(): Array ( [0] =&amp;gt; 42S02 [1] =&amp;gt; -204 [2] =&amp;gt; [IBM][CLI Driver][DB2/LINUX] SQL0204N &amp;quot;DANIELS.BONES&amp;quot; is an undefined name. SQLSTATE=42704 ) </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.errorinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorcode.php' class='function' rel='rdfs-seeAlso'>PDO::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDO::errorInfo()</a> - Fetch extended error information associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorcode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the statement handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->errorCode" value="<div id='pdostatement.errorcode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.errorcode.php'>PDOStatement-&amp;gt;errorCode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;errorCode</span> &amp;mdash; <span class='dc-title'> Fetch the SQLSTATE associated with the last operation on the statement handle </span></p> </div> <a name='pdostatement.errorcode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>PDOStatement::errorCode</b></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='pdostatement.errorcode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Identical to <a href='http://www.php.net/manual/en/pdo.errorcode.php' class='function'>PDO::errorCode()</a>, except that <b>PDOStatement::errorCode()</b> only retrieves error codes for operations performed with PDOStatement objects. </p> </div> <a name='pdostatement.errorcode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Retrieving a SQLSTATE code</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Provoke&amp;nbsp;an&amp;nbsp;error&amp;nbsp;--&amp;nbsp;the&amp;nbsp;BONES&amp;nbsp;table&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exist&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$err&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;skull&amp;nbsp;FROM&amp;nbsp;bones'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$err</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nPDOStatement::errorCode():&amp;nbsp;'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #0000BB'>$err</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>errorCode</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> PDOStatement::errorCode(): 42S02 </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.errorcode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorcode.php' class='function' rel='rdfs-seeAlso'>PDO::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDO::errorInfo()</a> - Fetch extended error information associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorInfo()</a> - Fetch extended error information associated with the last operation on the statement handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->debugDumpParams" value="<div id='pdostatement.debugdumpparams' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.debugdumpparams.php'>PDOStatement-&amp;gt;debugDumpParams</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.9.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;debugDumpParams</span> &amp;mdash; <span class='dc-title'> Dump a SQL prepared command </span></p> </div> <a name='pdostatement.debugdumpparams.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::debugDumpParams</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Dumps the informations contained by a prepared statement directly on the output. It will provide the <i>SQL</i> query in use, the number of parameters used (<i>Params</i>), the list of parameters, with their name, type (<i>paramtype</i>) as an integer, their key name or position, the value, and the position in the query (if this is supported by the PDO driver, otherwise, it will be -1). </p> <p class='para'> This is a debug function, which dump directly the data on the normal output. <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As with anything that outputs its result directly to the browser, the <a href='http://www.php.net/manual/en/ref.outcontrol.php' class='link'>output-control functions</a> can be used to capture the output of this function, and save it in a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> (for example).</p></div> </p> <p class='para'> This will only dumps the parameters in the statement at the moment of the dump. Extra parameters are not stored in the statement, and not displayed. </p> </div> <a name='pdostatement.debugdumpparams.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='pdostatement.debugdumpparams.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'> <p><b>Example #1 <b>PDOStatement::debugDumpParams()</b> example with named parameters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':calories'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':colour'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>debugDumpParams</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> SQL: [96] SELECT name, colour, calories FROM fruit WHERE calories &amp;lt; :calories AND colour = :colour Params: 2 Key: Name: [9] :calories paramno=-1 name=[9] &amp;quot;:calories&amp;quot; is_param=1 param_type=1 Key: Name: [7] :colour paramno=-1 name=[7] &amp;quot;:colour&amp;quot; is_param=1 param_type=2 </pre></div> </div> </div> <div class='example'> <p><b>Example #2 <b>PDOStatement::debugDumpParams()</b> example with unnamed parameters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>debugDumpParams</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> SQL: [82] SELECT name, colour, calories FROM fruit WHERE calories &amp;lt; ? AND colour = ? Params: 2 Key: Position #0: paramno=0 name=[0] &amp;quot;&amp;quot; is_param=1 param_type=1 Key: Position #1: paramno=1 name=[0] &amp;quot;&amp;quot; is_param=1 param_type=2 </pre></div> </div> </div> </div> <a name='pdostatement.debugdumpparams.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.bindparam.php' class='function' rel='rdfs-seeAlso'>PDOStatement::bindParam()</a> - Binds a parameter to the specified variable name</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.bindvalue.php' class='function' rel='rdfs-seeAlso'>PDOStatement::bindValue()</a> - Binds a value to a parameter</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->columnCount" value="<div id='pdostatement.columncount' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.columncount.php'>PDOStatement-&amp;gt;columnCount</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;columnCount</span> &amp;mdash; <span class='dc-title'> Returns the number of columns in the result set </span></p> </div> <a name='pdostatement.columncount.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>PDOStatement::columnCount</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Use <b>PDOStatement::columnCount()</b> to return the number of columns in the result set represented by the PDOStatement object. </p> <p class='para'> If the PDOStatement object was returned from <a href='http://www.php.net/manual/en/pdo.query.php' class='function'>PDO::query()</a>, the column count is immediately available. </p> <p class='para'> If the PDOStatement object was returned from <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a>, an accurate column count will not be available until you invoke <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>. </p> </div> <a name='pdostatement.columncount.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of columns in the result set represented by the PDOStatement object. If there is no result set, <b>PDOStatement::columnCount()</b> returns <i>0</i>. </p> </div> <a name='pdostatement.columncount.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Counting columns</b></p> <div class='example-contents para'><p> This example demonstrates how <b>PDOStatement::columnCount()</b> operates with and without a result set. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'odbc:sample'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'db2inst1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ibmdb2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Count&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;columns&amp;nbsp;in&amp;nbsp;the&amp;nbsp;(non-existent)&amp;nbsp;result&amp;nbsp;set&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$colcount&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>columnCount</span><span style='color: #007700'>();<br />print(</span><span style='color: #DD0000'>'Before&amp;nbsp;execute(),&amp;nbsp;result&amp;nbsp;set&amp;nbsp;has&amp;nbsp;</span><span style='color: #0000BB'>$colcount</span><span style='color: #DD0000'>&amp;nbsp;columns&amp;nbsp;(should&amp;nbsp;be&amp;nbsp;0)\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Count&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;columns&amp;nbsp;in&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$colcount&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>columnCount</span><span style='color: #007700'>();<br />print(</span><span style='color: #DD0000'>'After&amp;nbsp;execute(),&amp;nbsp;result&amp;nbsp;set&amp;nbsp;has&amp;nbsp;</span><span style='color: #0000BB'>$colcount</span><span style='color: #DD0000'>&amp;nbsp;columns&amp;nbsp;(should&amp;nbsp;be&amp;nbsp;2)\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Before execute(), result set has 0 columns (should be 0) After execute(), result set has 2 columns (should be 2) </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.columncount.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.rowcount.php' class='function' rel='rdfs-seeAlso'>PDOStatement::rowCount()</a> - Returns the number of rows affected by the last SQL statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->closeCursor" value="<div id='pdostatement.closecursor' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.closecursor.php'>PDOStatement-&amp;gt;closeCursor</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.9.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;closeCursor</span> &amp;mdash; <span class='dc-title'> Closes the cursor, enabling the statement to be executed again. </span></p> </div> <a name='pdostatement.closecursor.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::closeCursor</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>PDOStatement::closeCursor()</b> frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again. </p> <p class='para'> This method is useful for database drivers that do not support executing a PDOStatement object when a previously executed PDOStatement object still has unfetched rows. If your database driver suffers from this limitation, the problem may manifest itself in an out-of-sequence error. </p> <p class='para'> <b>PDOStatement::closeCursor()</b> is implemented either as an optional driver specific method (allowing for maximum efficiency), or as the generic PDO fallback if no driver specific function is installed. The PDO generic fallback is semantically the same as writing the following code in your PHP script: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>())<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>nextRowset</span><span style='color: #007700'>())<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> </p> </div> <a name='pdostatement.closecursor.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.closecursor.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>PDOStatement::closeCursor()</b> example</b></p> <div class='example-contents para'><p> In the following example, the <var class='varname'>$stmt</var> PDOStatement object returns multiple rows but the application fetches only the first row, leaving the PDOStatement object in a state of having unfetched rows. To ensure that the application will work with all database drivers, the author inserts a call to <b>PDOStatement::closeCursor()</b> on <var class='varname'>$stmt</var> before executing the <var class='varname'>$otherStmt</var> PDOStatement object. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;PDOStatement&amp;nbsp;object&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;foo&amp;nbsp;FROM&amp;nbsp;bar'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;second&amp;nbsp;PDOStatement&amp;nbsp;object&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$otherStmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;foobaz&amp;nbsp;FROM&amp;nbsp;foobar'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;the&amp;nbsp;first&amp;nbsp;statement&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Fetch&amp;nbsp;only&amp;nbsp;the&amp;nbsp;first&amp;nbsp;row&amp;nbsp;from&amp;nbsp;the&amp;nbsp;results&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;The&amp;nbsp;following&amp;nbsp;call&amp;nbsp;to&amp;nbsp;closeCursor()&amp;nbsp;may&amp;nbsp;be&amp;nbsp;required&amp;nbsp;by&amp;nbsp;some&amp;nbsp;drivers&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>closeCursor</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Now&amp;nbsp;we&amp;nbsp;can&amp;nbsp;execute&amp;nbsp;the&amp;nbsp;second&amp;nbsp;statement&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$otherStmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdostatement.closecursor.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->bindValue" value="<div id='pdostatement.bindvalue' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.bindvalue.php'>PDOStatement-&amp;gt;bindValue</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;bindValue</span> &amp;mdash; <span class='dc-title'> Binds a value to a parameter </span></p> </div> <a name='pdostatement.bindvalue.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::bindValue</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$data_type</tt></span> ] )</div> <p class='para rdfs-comment'> Binds a value to a corresponding named or question mark placeholder in the SQL statement that was use to prepare the statement. </p> </div> <a name='pdostatement.bindvalue.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Parameter identifier. For a prepared statement using named placeholders, this will be a parameter name of the form <var class='varname'>:name</var>. For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to bind to the parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Explicit data type for the parameter using the PDO::PARAM_* constants. Defaults to <b><tt class='constant'>PDO::PARAM_STR</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.bindvalue.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.bindvalue.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'><p><b>Example #1 Execute a prepared statement with named placeholders</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':calories'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':colour'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #2 Execute a prepared statement with question mark placeholders</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindValue</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='pdostatement.bindvalue.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.bindparam.php' class='function' rel='rdfs-seeAlso'>PDOStatement::bindParam()</a> - Binds a parameter to the specified variable name</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->bindParam" value="<div id='pdostatement.bindparam' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.bindparam.php'>PDOStatement-&amp;gt;bindParam</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;bindParam</span> &amp;mdash; <span class='dc-title'> Binds a parameter to the specified variable name </span></p> </div> <a name='pdostatement.bindparam.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::bindParam</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$variable</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$data_type</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$driver_options</tt></span> ]]] )</div> <p class='para rdfs-comment'> Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was use to prepare the statement. Unlike <a href='http://www.php.net/manual/en/pdostatement.bindvalue.php' class='function'>PDOStatement::bindValue()</a>, the variable is bound as a reference and will only be evaluated at the time that <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a> is called. </p> <p class='para'> Most parameters are input parameters, that is, parameters that are used in a read-only fashion to build up the query. Some drivers support the invocation of stored procedures that return data as output parameters, and some also as input/output parameters that both send in data and are updated to receive it. </p> </div> <a name='pdostatement.bindparam.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Parameter identifier. For a prepared statement using named placeholders, this will be a parameter name of the form <var class='varname'>:name</var>. For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>variable</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the PHP variable to bind to the SQL statement parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Explicit data type for the parameter using the PDO::PARAM_* constants. Defaults to <b><tt class='constant'>PDO::PARAM_STR</tt></b>. To return an INOUT parameter from a stored procedure, use the bitwise OR operator to set the PDO::PARAM_INPUT_OUTPUT bits for the <i><tt class='parameter'>data_type</tt></i> parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Length of the data type. To indicate that a parameter is an OUT parameter from a stored procedure, you must explicitly set the length. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>driver_options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.bindparam.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.bindparam.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'><p><b>Example #1 Execute a prepared statement with named placeholders</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':calories'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':colour'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #2 Execute a prepared statement with question mark placeholders</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;binding&amp;nbsp;PHP&amp;nbsp;variables&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$calories&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$calories</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'><p><b>Example #3 Call a stored procedure with an INOUT parameter</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Call&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;procedure&amp;nbsp;with&amp;nbsp;an&amp;nbsp;INOUT&amp;nbsp;parameter&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'CALL&amp;nbsp;puree_fruit(?)'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindParam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_STR</span><span style='color: #007700'>|</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>PARAM_INPUT_OUTPUT</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br />print(</span><span style='color: #DD0000'>'After&amp;nbsp;pureeing&amp;nbsp;fruit,&amp;nbsp;the&amp;nbsp;colour&amp;nbsp;is:&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #DD0000'>'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='pdostatement.bindparam.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.bindvalue.php' class='function' rel='rdfs-seeAlso'>PDOStatement::bindValue()</a> - Binds a value to a parameter</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement->bindColumn" value="<div id='pdostatement.bindcolumn' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdostatement.bindcolumn.php'>PDOStatement-&amp;gt;bindColumn</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDOStatement-&amp;gt;bindColumn</span> &amp;mdash; <span class='dc-title'> Bind a column to a PHP variable </span></p> </div> <a name='pdostatement.bindcolumn.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDOStatement::bindColumn</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$column</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$param</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$type</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$maxlen</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$driverdata</tt></span> ]]] )</div> <p class='para rdfs-comment'> <b>PDOStatement::bindColumn()</b> arranges to have a particular variable bound to a given column in the result-set from a query. Each call to <a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function'>PDOStatement::fetch()</a> or <a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function'>PDOStatement::fetchAll()</a> will update all the variables that are bound to columns. </p> <blockquote><p><b class='note'>Note</b>: Since information about the columns is not always available to PDO until the statement is executed, portable applications should call this function <em class='emphasis'>after</em> <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>. <br /> However, to be able to bind a LOB column as a stream when using the <em class='emphasis'>PgSQL driver</em>, applications should call this method <em class='emphasis'>before</em> calling <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>, otherwise the large object OID will be returned as an integer. <br /> </p></blockquote> </div> <a name='pdostatement.bindcolumn.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>column</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of the column (1-indexed) or name of the column in the result set. If using the column name, be aware that the name should match the case of the column, as returned by the driver. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>param</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the PHP variable to which the column will be bound. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Data type of the parameter, specified by the PDO::PARAM_* constants. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>maxlen</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A hint for pre-allocation. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>driverdata</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optional parameter(s) for the driver. </p> </dd> </dl> <p> </p> </div> <a name='pdostatement.bindcolumn.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdostatement.bindcolumn.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Binding result set output to PHP variables</b></p> <div class='example-contents para'><p> Binding columns in the result set to PHP variables is an effective way to make the data contained in each row immediately available to your application. The following example demonstrates how PDO allows you to bind and retrieve columns with a variety of options and with intelligent defaults. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>readData</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories&amp;nbsp;FROM&amp;nbsp;fruit'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>();<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Bind&amp;nbsp;by&amp;nbsp;column&amp;nbsp;number&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindColumn</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindColumn</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$colour</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Bind&amp;nbsp;by&amp;nbsp;column&amp;nbsp;name&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>bindColumn</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'calories'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$cals</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$row&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>FETCH_BOUND</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$colour&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\t'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$cals&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>readData</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple red 150 banana yellow 175 kiwi green 75 orange orange 150 mango red 200 strawberry red 25 </pre></div> </div> </div><p> </p> </div> <a name='pdostatement.bindcolumn.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetch()</a> - Fetches the next row from a result set</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchAll()</a> - Returns an array containing all of the result set rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function' rel='rdfs-seeAlso'>PDOStatement::fetchColumn()</a> - Returns a single column from the next row of a result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOStatement" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.pdostatement.php'>The PDOStatement class</a></h1> <div class='partintro'> <div id='pdostatement.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Represents a prepared statement and, after the statement is executed, an associated result set. </p> </div> <div id='pdostatement.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>PDOStatement</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>PDOStatement</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> {</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.bindcolumn.php' class='function'>bindColumn</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$column</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$param</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$type</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$maxlen</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$driverdata</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.bindparam.php' class='function'>bindParam</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$variable</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$data_type</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$driver_options</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.bindvalue.php' class='function'>bindValue</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$parameter</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$data_type</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.closecursor.php' class='function'>closeCursor</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.columncount.php' class='function'>columnCount</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.debugdumpparams.php' class='function'>debugDumpParams</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.errorcode.php' class='function'>errorCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function'>errorInfo</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>execute</a></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$input_parameters</tt><span class='initializer'> = array()</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.fetch.php' class='function'>fetch</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$fetch_style</tt><span class='initializer'> = PDO::FETCH_BOTH</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$cursor_orientation</tt><span class='initializer'> = PDO::FETCH_ORI_NEXT</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$cursor_offset</tt><span class='initializer'> = 0</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.fetchall.php' class='function'>fetchAll</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$fetch_style</tt><span class='initializer'> = PDO::FETCH_BOTH</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column_index</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_args</tt><span class='initializer'> = array()</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php' class='function'>fetchColumn</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column_number</tt><span class='initializer'> = 0</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.fetchobject.php' class='function'>fetchObject</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_args</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.getattribute.php' class='function'>getAttribute</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.getcolumnmeta.php' class='function'>getColumnMeta</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$column</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.nextrowset.php' class='function'>nextRowset</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.rowcount.php' class='function'>rowCount</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.setattribute.php' class='function'>setAttribute</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php' class='function'>setFetchMode</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/pdostatement.bindcolumn.php'>PDOStatement->bindColumn</a> &amp;acirc;&amp;#128;&amp;#148; Bind a column to a PHP variable</li><li><a href='http://www.php.net/manual/en/pdostatement.bindparam.php'>PDOStatement->bindParam</a> &amp;acirc;&amp;#128;&amp;#148; Binds a parameter to the specified variable name</li><li><a href='http://www.php.net/manual/en/pdostatement.bindvalue.php'>PDOStatement->bindValue</a> &amp;acirc;&amp;#128;&amp;#148; Binds a value to a parameter</li><li><a href='http://www.php.net/manual/en/pdostatement.closecursor.php'>PDOStatement->closeCursor</a> &amp;acirc;&amp;#128;&amp;#148; Closes the cursor, enabling the statement to be executed again.</li><li><a href='http://www.php.net/manual/en/pdostatement.columncount.php'>PDOStatement->columnCount</a> &amp;acirc;&amp;#128;&amp;#148; Returns the number of columns in the result set</li><li><a href='http://www.php.net/manual/en/pdostatement.debugdumpparams.php'>PDOStatement->debugDumpParams</a> &amp;acirc;&amp;#128;&amp;#148; Dump a SQL prepared command</li><li><a href='http://www.php.net/manual/en/pdostatement.errorcode.php'>PDOStatement->errorCode</a> &amp;acirc;&amp;#128;&amp;#148; Fetch the SQLSTATE associated with the last operation on the statement handle</li><li><a href='http://www.php.net/manual/en/pdostatement.errorinfo.php'>PDOStatement->errorInfo</a> &amp;acirc;&amp;#128;&amp;#148; Fetch extended error information associated with the last operation on the statement handle</li><li><a href='http://www.php.net/manual/en/pdostatement.execute.php'>PDOStatement->execute</a> &amp;acirc;&amp;#128;&amp;#148; Executes a prepared statement</li><li><a href='http://www.php.net/manual/en/pdostatement.fetch.php'>PDOStatement->fetch</a> &amp;acirc;&amp;#128;&amp;#148; Fetches the next row from a result set</li><li><a href='http://www.php.net/manual/en/pdostatement.fetchall.php'>PDOStatement->fetchAll</a> &amp;acirc;&amp;#128;&amp;#148; Returns an array containing all of the result set rows</li><li><a href='http://www.php.net/manual/en/pdostatement.fetchcolumn.php'>PDOStatement->fetchColumn</a> &amp;acirc;&amp;#128;&amp;#148; Returns a single column from the next row of a result set</li><li><a href='http://www.php.net/manual/en/pdostatement.fetchobject.php'>PDOStatement->fetchObject</a> &amp;acirc;&amp;#128;&amp;#148; Fetches the next row and returns it as an object.</li><li><a href='http://www.php.net/manual/en/pdostatement.getattribute.php'>PDOStatement->getAttribute</a> &amp;acirc;&amp;#128;&amp;#148; Retrieve a statement attribute</li><li><a href='http://www.php.net/manual/en/pdostatement.getcolumnmeta.php'>PDOStatement->getColumnMeta</a> &amp;acirc;&amp;#128;&amp;#148; Returns metadata for a column in a result set</li><li><a href='http://www.php.net/manual/en/pdostatement.nextrowset.php'>PDOStatement->nextRowset</a> &amp;acirc;&amp;#128;&amp;#148; Advances to the next rowset in a multi-rowset statement handle</li><li><a href='http://www.php.net/manual/en/pdostatement.rowcount.php'>PDOStatement->rowCount</a> &amp;acirc;&amp;#128;&amp;#148; Returns the number of rows affected by the last SQL statement</li><li><a href='http://www.php.net/manual/en/pdostatement.setattribute.php'>PDOStatement->setAttribute</a> &amp;acirc;&amp;#128;&amp;#148; Set a statement attribute</li><li><a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php'>PDOStatement->setFetchMode</a> &amp;acirc;&amp;#128;&amp;#148; Set the default fetch mode for this statement</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDOException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.pdoexception.php'>The PDOException class</a></h1> <div class='partintro'> <div id='pdoexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Represents an error raised by PDO. You should not throw a <b class='classname'>PDOException</b> from your own code. See <a href='http://www.php.net/manual/en/language.exceptions.php' class='link'>Exceptions</a> for more information about Exceptions in PHP. </p> </div> <div id='pdoexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>PDOException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>PDOException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Properties */</div> <div class='fieldsynopsis'> <span class='modifier'>public</span> <span class='type'>array</span> <var class='varname'><a href='http://www.php.net/manual/en/class.pdoexception.php#pdoexception.props.errorinfo'>$errorInfo</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>string</span> <var class='varname'><a href='http://www.php.net/manual/en/class.pdoexception.php#pdoexception.props.message'>$message</a></var> ;</div> <div class='fieldsynopsis'> <span class='modifier'>protected</span> <span class='type'>string</span> <var class='varname'><a href='http://www.php.net/manual/en/class.pdoexception.php#pdoexception.props.code'>$code</a></var> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='pdoexception.props' class='section'> <h2 class='title'>Properties</h2> <dl> <dt id='pdoexception.props.errorinfo' class='varlistentry'> <span class='term'><var class='varname'>errorInfo</var></span> </dt><dd class='listitem'> <p class='para'> Corresponds to <a href='http://www.php.net/manual/en/pdo.errorinfo.php' class='function'>PDO::errorInfo()</a> or <a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function'>PDOStatement::errorInfo()</a> </p> </dd> <dt id='pdoexception.props.message' class='varlistentry'> <span class='term'><var class='varname'>message</var></span> </dt><dd class='listitem'> <p class='para'> Textual error message. <a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage()</a> to access it. </p> </dd> <dt id='pdoexception.props.code' class='varlistentry'> <span class='term'><var class='varname'>code</var></span> </dt><dd class='listitem'> <p class='para'> <i>SQLSTATE</i> error code. Use <a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode()</a> to access it. </p> </dd> </dl> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::__construct" value="<div id='pdo.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.construct.php'>PDO::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::__construct</span> &amp;mdash; <span class='dc-title'> Creates a PDO instance representing a connection to a database </span></p> </div> <a name='pdo.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='constructorsynopsis dc-description'> <span class='methodname'><b>PDO::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dsn</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$username</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$password</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$driver_options</tt></span> ]]] )</div> <p class='para rdfs-comment'> Creates a PDO instance to represent a connection to the requested database. </p> </div> <a name='pdo.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'>dsn</span> </dt><dd class='listitem'> <p class='para'> The Data Source Name, or DSN, contains the information required to connect to the database. </p> <p class='para'> In general, a DSN consists of the PDO driver name, followed by a colon, followed by the PDO driver-specific connection syntax. Further information is available from the <a href='http://www.php.net/manual/en/pdo.drivers.php' class='link'>PDO driver-specific documentation</a>. </p> <p class='para'> The <i><tt class='parameter'>dsn</tt></i> parameter supports three different methods of specifying the arguments required to create a database connection: </p> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'>Driver invocation</span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>dsn</tt></i> contains the full DSN. </p> </dd> <dt class='varlistentry'> <span class='term'>URI invocation</span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>dsn</tt></i> consists of <strong class='userinput'><code>uri:</code></strong> followed by a URI that defines the location of a file containing the DSN string. The URI can specify a local file or a remote URL. </p> <p class='para'><strong class='userinput'><code>uri:file:///path/to/dsnfile</code></strong> </p> </dd> <dt class='varlistentry'> <span class='term'>Aliasing</span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>dsn</tt></i> consists of a name <i><tt class='parameter'>name</tt></i> that maps to <code class='code'>pdo.dsn.<i><tt class='parameter'>name</tt></i> </code> in <var class='filename'>php.ini</var> defining the DSN string. </p> <blockquote><p><b class='note'>Note</b>: The alias must be defined in <var class='filename'>php.ini</var>, and not <var class='filename'>.htaccess</var> or <var class='filename'>httpd.conf</var> <br /> </p></blockquote> </dd> </dl> <p> </p> </dd> <dt class='varlistentry'> <span class='term'>username</span> </dt><dd class='listitem'> <p class='para'> The user name for the DSN string. This parameter is optional for some PDO drivers. </p> </dd> <dt class='varlistentry'> <span class='term'>password</span> </dt><dd class='listitem'> <p class='para'> The password for the DSN string. This parameter is optional for some PDO drivers. </p> </dd> <dt class='varlistentry'> <span class='term'>driver_options</span> </dt><dd class='listitem'> <p class='para'> A key=&amp;gt;value array of driver-specific connection options. </p> </dd> </dl> <p> </p> </div> <a name='pdo.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a PDO object on success. </p> </div> <a name='pdo.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> <b>PDO::__construct()</b> throws a PDOException if the attempt to connect to the requested database fails. </p> </div> <a name='pdo.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Create a PDO instance via driver invocation</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Connect&amp;nbsp;to&amp;nbsp;an&amp;nbsp;ODBC&amp;nbsp;database&amp;nbsp;using&amp;nbsp;driver&amp;nbsp;invocation&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dsn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'mysql:dbname=testdb;host=127.0.0.1'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'dbuser'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$password&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'dbpass'</span><span style='color: #007700'>;<br /><br />try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$dbh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dsn</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>);<br />}&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Connection&amp;nbsp;failed:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'><p><b>Example #2 Create a PDO instance via URI invocation</b></p> <div class='example-contents para'><p> The following example assumes that the file <var class='filename'>/usr/local/dbconnect</var> exists with file permissions that enable PHP to read the file. The file contains the PDO DSN to connect to a DB2 database through the PDO_ODBC driver: </p></div> <div class='example-contents screen'> <div class='cdata'><pre> odbc:DSN=SAMPLE;UID=john;PWD=mypass </pre></div> </div> <div class='example-contents para'><p> The PHP script can then create a database connection by simply passing the <i>uri:</i> parameter and pointing to the file URI: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Connect&amp;nbsp;to&amp;nbsp;an&amp;nbsp;ODBC&amp;nbsp;database&amp;nbsp;using&amp;nbsp;driver&amp;nbsp;invocation&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dsn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'uri:file:///usr/local/dbconnect'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$password&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /><br />try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$dbh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dsn</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>);<br />}&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Connection&amp;nbsp;failed:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'><p><b>Example #3 Create a PDO instance using an alias</b></p> <div class='example-contents para'><p> The following example assumes that <var class='filename'>php.ini</var> contains the following entry to enable a connection to a MySQL database using only the alias <i>mydb</i>: </p></div> <div class='example-contents programlisting'><br /> [PDO]<br /> pdo.dsn.mydb=&amp;quot;mysql:dbname=testdb;host=localhost&amp;quot;<br /> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Connect&amp;nbsp;to&amp;nbsp;an&amp;nbsp;ODBC&amp;nbsp;database&amp;nbsp;using&amp;nbsp;an&amp;nbsp;alias&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dsn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'mydb'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$password&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /><br />try&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$dbh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dsn</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$password</span><span style='color: #007700'>);<br />}&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>PDOException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Connection&amp;nbsp;failed:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::setAttribute" value="<div id='pdo.setattribute' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.setattribute.php'>PDO::setAttribute</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::setAttribute</span> &amp;mdash; <span class='dc-title'> Set an attribute </span></p> </div> <a name='pdo.setattribute.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDO::setAttribute</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Sets an attribute on the database handle. Some of the available generic attributes are listed below; some drivers may make use of additional driver specific attributes. </p><ul class='itemizedlist'> <li class='listitem'><p class='para'> <i>PDO::ATTR_CASE</i>: Force column names to a specific case. </p><ul class='itemizedlist'> <li class='listitem'><p class='para'> <i>PDO::CASE_LOWER</i>: Force column names to lower case. </p></li> <li class='listitem'><p class='para'> <i>PDO::CASE_NATURAL</i>: Leave column names as returned by the database driver. </p></li> <li class='listitem'><p class='para'> <i>PDO::CASE_UPPER</i>: Force column names to upper case. </p></li> </ul><p> </p></li> <li class='listitem'><p class='para'><i>PDO::ATTR_ERRMODE</i>: Error reporting. </p><ul class='itemizedlist'> <li class='listitem'><p class='para'><i>PDO::ERRMODE_SILENT</i>: Just set error codes.</p></li> <li class='listitem'><p class='para'><i>PDO::ERRMODE_WARNING</i>: Raise <a href='http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-warning' class='link'>E_WARNING</a>.</p></li> <li class='listitem'><p class='para'><i>PDO::ERRMODE_EXCEPTION</i>: Throw <a href='http://www.php.net/manual/en/language.exceptions.php' class='link'>exceptions</a>.</p></li> </ul><p> </p></li> <li class='listitem'><p class='para'><i>PDO::ATTR_ORACLE_NULLS</i> (available with all drivers, not just Oracle): Conversion of NULL and empty strings. </p><ul class='itemizedlist'> <li class='listitem'><p class='para'><i>PDO::NULL_NATURAL</i>: No conversion.</p></li> <li class='listitem'><p class='para'><i>PDO::NULL_EMPTY_STRING</i>: Empty string is converted to <b><tt class='constant'>NULL</tt></b>.</p></li> <li class='listitem'><p class='para'><i>PDO::NULL_TO_STRING</i>: NULL is converted to an empty string.</p></li> </ul><p> </p></li> <li class='listitem'><p class='para'><i>PDO::ATTR_STRINGIFY_FETCHES</i>: Convert numeric values to strings when fetching. Requires <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type bool'>bool</a>. </p></li> <li class='listitem'><p class='para'><i>PDO::ATTR_STATEMENT_CLASS</i>: Set user-supplied statement class derived from PDOStatement. Cannot be used with persistent PDO instances. Requires <i>array(string classname, array(mixed constructor_args))</i>. </p></li> <li class='listitem'><p class='para'><i>PDO::ATTR_AUTOCOMMIT</i> (available in OCI, Firebird and MySQL): Whether to autocommit every single statement. </p></li> <li class='listitem'><p class='para'><i>PDO::MYSQL_ATTR_USE_BUFFERED_QUERY</i> (available in MySQL): Use buffered queries. </p></li> </ul><p> </p> </div> <a name='pdo.setattribute.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::rollBack" value="<div id='pdo.rollback' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.rollback.php'>PDO::rollBack</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::rollBack</span> &amp;mdash; <span class='dc-title'> Rolls back a transaction </span></p> </div> <a name='pdo.rollback.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDO::rollBack</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Rolls back the current transaction, as initiated by <a href='http://www.php.net/manual/en/pdo.begintransaction.php' class='function'>PDO::beginTransaction()</a>. It is an error to call this method if no transaction is active. </p> <p class='para'> If the database was set to autocommit mode, this function will restore autocommit mode after it has rolled back the transaction. </p> <p class='para'> Some databases, including MySQL, automatically issue an implicit COMMIT when a database definition language (DDL) statement such as DROP TABLE or CREATE TABLE is issued within a transaction. The implicit COMMIT will prevent you from rolling back any other changes within the transaction boundary. </p> </div> <a name='pdo.rollback.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdo.rollback.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Roll back a transaction</b></p> <div class='example-contents para'><p> The following example begins a transaction and issues two statements that modify the database before rolling back the changes. On MySQL, however, the DROP TABLE statement automatically commits the transaction so that none of the changes in the transaction are rolled back. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Begin&amp;nbsp;a&amp;nbsp;transaction,&amp;nbsp;turning&amp;nbsp;off&amp;nbsp;autocommit&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>beginTransaction</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Change&amp;nbsp;the&amp;nbsp;database&amp;nbsp;schema&amp;nbsp;and&amp;nbsp;data&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DROP&amp;nbsp;TABLE&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;dessert<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SET&amp;nbsp;name&amp;nbsp;=&amp;nbsp;'hamburger''</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Recognize&amp;nbsp;mistake&amp;nbsp;and&amp;nbsp;roll&amp;nbsp;back&amp;nbsp;changes&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rollBack</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Database&amp;nbsp;connection&amp;nbsp;is&amp;nbsp;now&amp;nbsp;back&amp;nbsp;in&amp;nbsp;autocommit&amp;nbsp;mode&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdo.rollback.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.begintransaction.php' class='function' rel='rdfs-seeAlso'>PDO::beginTransaction()</a> - Initiates a transaction</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.commit.php' class='function' rel='rdfs-seeAlso'>PDO::commit()</a> - Commits a transaction</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::quote" value="<div id='pdo.quote' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.quote.php'>PDO::quote</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.1)</p><p class='refpurpose'><span class='refname'>PDO::quote</span> &amp;mdash; <span class='dc-title'> Quotes a string for use in a query. </span></p> </div> <a name='pdo.quote.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>PDO::quote</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$parameter_type</tt><span class='initializer'> = PDO::PARAM_STR</span></span> ] )</div> <p class='para rdfs-comment'> <b>PDO::quote()</b> places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver. </p> <p class='para'> If you are using this function to build SQL statements, you are <em class='emphasis'>strongly</em> recommended to use <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a> to prepare SQL statements with bound parameters instead of using <b>PDO::quote()</b> to interpolate user input into a SQL statement. Prepared statements with bound parameters are not only more portable, more convenient, immune to SQL injection, but are often much faster to execute than interpolated queries, as both the server and client side can cache a compiled form of the query. </p> <p class='para'> Not all PDO drivers implement this method (notably PDO_ODBC). Consider using prepared statements instead. </p> </div> <a name='pdo.quote.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be quoted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>parameter_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Provides a data type hint for drivers that have alternate quoting styles. The default value is <b><tt class='constant'>PDO::PARAM_STR</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='pdo.quote.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a quoted string that is theoretically safe to pass into an SQL statement. Returns <b><tt class='constant'>FALSE</tt></b> if the driver does not support quoting in this way. </p> </div> <a name='pdo.quote.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Quoting a normal string</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite:/home/lynn/music.sql3'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Simple&amp;nbsp;string&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Nice'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Unquoted&amp;nbsp;string:&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Quoted&amp;nbsp;string:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>quote</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Unquoted string: Nice Quoted string: &amp;#039;Nice&amp;#039; </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Quoting a dangerous string</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite:/home/lynn/music.sql3'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Dangerous&amp;nbsp;string&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Naughty&amp;nbsp;\'&amp;nbsp;string'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Unquoted&amp;nbsp;string:&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Quoted&amp;nbsp;string:'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>quote</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Unquoted string: Naughty &amp;#039; string Quoted string: &amp;#039;Naughty &amp;#039;&amp;#039; string&amp;#039; </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 Quoting a complex string</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlite:/home/lynn/music.sql3'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Complex&amp;nbsp;string&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Co'mpl''ex&amp;nbsp;\'st'\'ring'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Unquoted&amp;nbsp;string:&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #DD0000'>'Quoted&amp;nbsp;string:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>quote</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Unquoted string: Co&amp;#039;mpl&amp;#039;&amp;#039;ex &amp;quot;st&amp;#039;&amp;quot;ring Quoted string: &amp;#039;Co&amp;#039;&amp;#039;mpl&amp;#039;&amp;#039;&amp;#039;&amp;#039;ex &amp;quot;st&amp;#039;&amp;#039;&amp;quot;ring&amp;#039; </pre></div> </div> </div><p> </p> </div> <a name='pdo.quote.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::query" value="<div id='pdo.query' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.query.php'>PDO::query</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDO::query</span> &amp;mdash; <span class='dc-title'> Executes an SQL statement, returning a result set as a PDOStatement object </span></p> </div> <a name='pdo.query.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.pdostatement.php' class='type PDOStatement'>PDOStatement</a></span> <span class='methodname'><b>PDO::query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.pdostatement.php' class='type PDOStatement'>PDOStatement</a></span> <span class='methodname'><b>PDO::query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_COLUMN</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$colno</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.pdostatement.php' class='type PDOStatement'>PDOStatement</a></span> <span class='methodname'><b>PDO::query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_CLASS</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$classname</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctorargs</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.pdostatement.php' class='type PDOStatement'>PDOStatement</a></span> <span class='methodname'><b>PDO::query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$PDO::FETCH_INTO</tt></span> , <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <p class='para rdfs-comment'> <b>PDO::query()</b> executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object. </p> <p class='para'> For a query that you need to issue multiple times, you will realize better performance if you prepare a PDOStatement object using <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a> and issue the statement with multiple calls to <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>. </p> <p class='para'> If you do not fetch all of the data in a result set before issuing your next call to <b>PDO::query()</b>, your call may fail. Call <a href='http://www.php.net/manual/en/pdostatement.closecursor.php' class='function'>PDOStatement::closeCursor()</a> to release the database resources associated with the PDOStatement object before issuing your next call to <b>PDO::query()</b>. </p> <blockquote><p><b class='note'>Note</b>: Although this function is only documented as having a single parameter, you may pass additional arguments to this function. They will be treated as though you called <a href='http://www.php.net/manual/en/pdostatement.setfetchmode.php' class='function'>PDOStatement::setFetchMode()</a> on the resultant statement object. <br /> </p></blockquote> </div> <a name='pdo.query.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>statement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQL statement to prepare and execute. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/pdo.quote.php' class='link'>properly escaped</a>. </p> </dd> </dl> <p> </p> </div> <a name='pdo.query.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDO::query()</b> returns a PDOStatement object. </p> </div> <a name='pdo.query.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Demonstrate PDO::query</b></p> <div class='example-contents para'><p> A nice feature of <b>PDO::query()</b> is that it enables you to iterate over the rowset returned by a successfully executed SELECT statement. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>getFruit</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories&amp;nbsp;FROM&amp;nbsp;fruit&amp;nbsp;ORDER&amp;nbsp;BY&amp;nbsp;name'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'NAME'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'COLOUR'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\t'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'CALORIES'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple red 150 banana yellow 250 kiwi brown 75 lemon yellow 25 orange orange 300 pear green 150 watermelon pink 90 </pre></div> </div> </div><p> </p> </div> <a name='pdo.query.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.exec.php' class='function' rel='rdfs-seeAlso'>PDO::exec()</a> - Execute an SQL statement and return the number of affected rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::prepare" value="<div id='pdo.prepare' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.prepare.php'>PDO::prepare</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::prepare</span> &amp;mdash; <span class='dc-title'> Prepares a statement for execution and returns a statement object </span></p> </div> <a name='pdo.prepare.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.pdostatement.php' class='type PDOStatement'>PDOStatement</a></span> <span class='methodname'><b>PDO::prepare</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$driver_options</tt><span class='initializer'> = array()</span></span> ] )</div> <p class='para rdfs-comment'> Prepares an SQL statement to be executed by the <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a> method. The SQL statement can contain zero or more named (:name) or question mark (?) parameter markers for which real values will be substituted when the statement is executed. You cannot use both named and question mark parameter markers within the same SQL statement; pick one or the other parameter style. </p> <p class='para'> You must include a unique parameter marker for each value you wish to pass in to the statement when you call <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>. You cannot use a named parameter marker of the same name twice in a prepared statement. You cannot bind multiple values to a single named parameter in, for example, the IN() clause of an SQL statement. </p> <p class='para'> Calling <b>PDO::prepare()</b> and <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a> for statements that will be issued multiple times with different parameter values optimizes the performance of your application by allowing the driver to negotiate client and/or server side caching of the query plan and meta information, and helps to prevent SQL injection attacks by eliminating the need to manually quote the parameters. </p> <p class='para'> PDO will emulate prepared statements/bound parameters for drivers that do not natively support them, and can also rewrite named or question mark style parameter markers to something more appropriate, if the driver supports one style but not the other. </p> </div> <a name='pdo.prepare.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>statement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This must be a valid SQL statement for the target database server. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>driver_options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This array holds one or more key=&amp;gt;value pairs to set attribute values for the PDOStatement object that this method returns. You would most commonly use this to set the <i>PDO::ATTR_CURSOR</i> value to <i>PDO::CURSOR_SCROLL</i> to request a scrollable cursor. Some drivers have driver specific options that may be set at prepare-time. </p> </dd> </dl> <p> </p> </div> <a name='pdo.prepare.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the database server successfully prepares the statement, <b>PDO::prepare()</b> returns a <a href='http://www.php.net/manual/en/class.pdostatement.php' class='classname'>PDOStatement</a> object. If the database server cannot successfully prepare the statement, <b>PDO::prepare()</b> emits <a href='http://www.php.net/manual/en/class.pdoexception.php' class='classname'>PDOException</a>. </p> <blockquote><p><b class='note'>Note</b>: Emulated prepared statements does not communicate with the database server so <b>PDO::prepare()</b> does not check the statement. <br /> </p></blockquote> </div> <a name='pdo.prepare.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Prepare an SQL statement with named parameters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;passing&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;values&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;:calories&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;:colour'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>ATTR_CURSOR&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>CURSOR_FWDONLY</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>':calories'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>150</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>':colour'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$red&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'calories'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>175</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'colour'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$yellow&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Prepare an SQL statement with question mark parameters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Execute&amp;nbsp;a&amp;nbsp;prepared&amp;nbsp;statement&amp;nbsp;by&amp;nbsp;passing&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;values&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;colour,&amp;nbsp;calories<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;fruit<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE&amp;nbsp;calories&amp;nbsp;&amp;lt;&amp;nbsp;?&amp;nbsp;AND&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>150</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'red'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$red&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>execute</span><span style='color: #007700'>(array(</span><span style='color: #0000BB'>175</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'yellow'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$yellow&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$sth</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdo.prepare.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.exec.php' class='function' rel='rdfs-seeAlso'>PDO::exec()</a> - Execute an SQL statement and return the number of affected rows</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::lastInsertId" value="<div id='pdo.lastinsertid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.lastinsertid.php'>PDO::lastInsertId</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::lastInsertId</span> &amp;mdash; <span class='dc-title'> Returns the ID of the last inserted row or sequence value </span></p> </div> <a name='pdo.lastinsertid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>PDO::lastInsertId</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt><span class='initializer'> = NULL</span></span> ] )</div> <p class='para rdfs-comment'> Returns the ID of the last inserted row, or the last value from a sequence object, depending on the underlying driver. For example, <b>PDO_PGSQL()</b> requires you to specify the name of a sequence object for the <i><tt class='parameter'>name</tt></i> parameter. </p> <blockquote><p><b class='note'>Note</b>: This method may not return a meaningful or consistent result across different PDO drivers, because the underlying database may not even support the notion of auto-increment fields or sequences. <br /> </p></blockquote> </div> <a name='pdo.lastinsertid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the sequence object from which the ID should be returned. </p> </dd> </dl> <p> </p> </div> <a name='pdo.lastinsertid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If a sequence name was not specified for the <i><tt class='parameter'>name</tt></i> parameter, <b>PDO::lastInsertId()</b> returns a string representing the row ID of the last row that was inserted into the database. </p> <p class='para'> If a sequence name was specified for the <i><tt class='parameter'>name</tt></i> parameter, <b>PDO::lastInsertId()</b> returns a string representing the last value retrieved from the specified sequence object. </p> <p class='para'> If the PDO driver does not support this capability, <b>PDO::lastInsertId()</b> triggers an <i>IM001</i> SQLSTATE. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::getAvailableDrivers" value="<div id='pdo.getavailabledrivers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.getavailabledrivers.php'>PDO::getAvailableDrivers</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.3, PECL pdo &amp;gt;= 1.0.3)</p><p class='refpurpose'><span class='refname'>PDO::getAvailableDrivers</span> &amp;mdash; <span class='dc-title'> Return an array of available PDO drivers </span></p> </div> <a name='pdo.getavailabledrivers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>PDO::getAvailableDrivers</b></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>pdo_drivers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns all currently available PDO drivers which can be used in <i><tt class='parameter'>DSN</tt></i> parameter of <a href='http://www.php.net/manual/en/pdo.construct.php' class='function'>PDO::__construct()</a>. This is a static method. </p> </div> <a name='pdo.getavailabledrivers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDO::getAvailableDrivers()</b> returns an array of PDO driver names. If no drivers are available, it returns an empty array. </p> </div> <a name='pdo.getavailabledrivers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>PDO::getAvailableDrivers()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>::</span><span style='color: #0000BB'>getAvailableDrivers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; mysql [1] =&amp;gt; sqlite ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::getAttribute" value="<div id='pdo.getattribute' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.getattribute.php'>PDO::getAttribute</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.2.0)</p><p class='refpurpose'><span class='refname'>PDO::getAttribute</span> &amp;mdash; <span class='dc-title'> Retrieve a database connection attribute </span></p> </div> <a name='pdo.getattribute.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>PDO::getAttribute</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> )</div> <p class='para rdfs-comment'> This function returns the value of a database connection attribute. To retrieve PDOStatement attributes, refer to <a href='http://www.php.net/manual/en/pdostatement.getattribute.php' class='function'>PDOStatement::getAttribute()</a>. </p> <p class='para'> Note that some database/driver combinations may not support all of the database connection attributes. </p> </div> <a name='pdo.getattribute.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>attribute</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of the <i>PDO::ATTR_*</i> constants. The constants that apply to database connections are as follows: </p><ul class='simplelist'> <li class='member'><i>PDO::ATTR_AUTOCOMMIT</i></li> <li class='member'><i>PDO::ATTR_CASE</i></li> <li class='member'><i>PDO::ATTR_CLIENT_VERSION</i></li> <li class='member'><i>PDO::ATTR_CONNECTION_STATUS</i></li> <li class='member'><i>PDO::ATTR_DRIVER_NAME</i></li> <li class='member'><i>PDO::ATTR_ERRMODE</i></li> <li class='member'><i>PDO::ATTR_ORACLE_NULLS</i></li> <li class='member'><i>PDO::ATTR_PERSISTENT</i></li> <li class='member'><i>PDO::ATTR_PREFETCH</i></li> <li class='member'><i>PDO::ATTR_SERVER_INFO</i></li> <li class='member'><i>PDO::ATTR_SERVER_VERSION</i></li> <li class='member'><i>PDO::ATTR_TIMEOUT</i></li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='pdo.getattribute.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A successful call returns the value of the requested PDO attribute. An unsuccessful call returns <i>null</i>. </p> </div> <a name='pdo.getattribute.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Retrieving database connection attributes</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'odbc:sample'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'db2inst1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ibmdb2'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$attributes&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'AUTOCOMMIT'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ERRMODE'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CASE'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CLIENT_VERSION'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CONNECTION_STATUS'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'ORACLE_NULLS'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PERSISTENT'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PREFETCH'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SERVER_INFO'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SERVER_VERSION'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'TIMEOUT'<br /></span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$attributes&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'PDO::ATTR_</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>:&amp;nbsp;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getAttribute</span><span style='color: #007700'>(</span><span style='color: #0000BB'>constant</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PDO::ATTR_</span><span style='color: #0000BB'>$val</span><span style='color: #DD0000'>'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdo.getattribute.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.setattribute.php' class='function' rel='rdfs-seeAlso'>PDO::setAttribute()</a> - Set an attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.getattribute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::getAttribute()</a> - Retrieve a statement attribute</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.setattribute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::setAttribute()</a> - Set a statement attribute</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::exec" value="<div id='pdo.exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.exec.php'>PDO::exec</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::exec</span> &amp;mdash; <span class='dc-title'> Execute an SQL statement and return the number of affected rows </span></p> </div> <a name='pdo.exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>PDO::exec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> )</div> <p class='para rdfs-comment'> <b>PDO::exec()</b> executes an SQL statement in a single function call, returning the number of rows affected by the statement. </p> <p class='para'> <b>PDO::exec()</b> does not return results from a SELECT statement. For a SELECT statement that you only need to issue once during your program, consider issuing <a href='http://www.php.net/manual/en/pdo.query.php' class='function'>PDO::query()</a>. For a statement that you need to issue multiple times, prepare a PDOStatement object with <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a> and issue the statement with <a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function'>PDOStatement::execute()</a>. </p> </div> <a name='pdo.exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>statement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQL statement to prepare and execute. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/pdo.quote.php' class='link'>properly escaped</a>. </p> </dd> </dl> <p> </p> </div> <a name='pdo.exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDO::exec()</b> returns the number of rows that were modified or deleted by the SQL statement you issued. If no rows were affected, <b>PDO::exec()</b> returns <i>0</i>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> <p class='para'> The following example incorrectly relies on the return value of <b>PDO::exec()</b>, wherein a statement that affected 0 rows results in a call to <a href='http://www.php.net/manual/en/function.die.php' class='function'>die()</a>: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>()&amp;nbsp;or&amp;nbsp;die(</span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>errorInfo</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> </p> </div> <a name='pdo.exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Issuing a DELETE statement</b></p> <div class='example-contents para'><p> Count the number of rows deleted by a DELETE statement with no WHERE clause. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>PDO</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'odbc:sample'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'db2inst1'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ibmdb2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Delete&amp;nbsp;all&amp;nbsp;rows&amp;nbsp;from&amp;nbsp;the&amp;nbsp;FRUIT&amp;nbsp;table&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$count&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DELETE&amp;nbsp;FROM&amp;nbsp;fruit&amp;nbsp;WHERE&amp;nbsp;colour&amp;nbsp;=&amp;nbsp;'red''</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Return&amp;nbsp;number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;that&amp;nbsp;were&amp;nbsp;deleted&amp;nbsp;*/<br /></span><span style='color: #007700'>print(</span><span style='color: #DD0000'>'Deleted&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #DD0000'>&amp;nbsp;rows.\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Deleted 1 rows. </pre></div> </div> </div><p> </p> </div> <a name='pdo.exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function' rel='rdfs-seeAlso'>PDO::prepare()</a> - Prepares a statement for execution and returns a statement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.query.php' class='function' rel='rdfs-seeAlso'>PDO::query()</a> - Executes an SQL statement, returning a result set as a PDOStatement object</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.execute.php' class='function' rel='rdfs-seeAlso'>PDOStatement::execute()</a> - Executes a prepared statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::errorInfo" value="<div id='pdo.errorinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.errorinfo.php'>PDO::errorInfo</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::errorInfo</span> &amp;mdash; <span class='dc-title'> Fetch extended error information associated with the last operation on the database handle </span></p> </div> <a name='pdo.errorinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>PDO::errorInfo</b></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='pdo.errorinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>PDO::errorInfo()</b> returns an array of error information about the last operation performed by this database handle. The array consists of the following fields: </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Element</th> <th>Information</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td align='left'>SQLSTATE error code (a five characters alphanumeric identifier defined in the ANSI SQL standard).</td> </tr> <tr valign='middle'> <td align='left'>1</td> <td align='left'>Driver-specific error code.</td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'>Driver-specific error message.</td> </tr> </tbody> </table> <p> </p> <blockquote><p><b class='note'>Note</b>: If the SQLSTATE error code is not set or there is no driver-specific error, the elements following element 0 will be set to <b><tt class='constant'>NULL</tt></b>. <br /> </p></blockquote> <p class='para'> <b>PDO::errorInfo()</b> only retrieves error information for operations performed directly on the database handle. If you create a PDOStatement object through <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a> or <a href='http://www.php.net/manual/en/pdo.query.php' class='function'>PDO::query()</a> and invoke an error on the statement handle, <b>PDO::errorInfo()</b> will not reflect the error from the statement handle. You must call <a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function'>PDOStatement::errorInfo()</a> to return the error information for an operation performed on a particular statement handle. </p> </div> <a name='pdo.errorinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Displaying errorInfo() fields for a PDO_ODBC connection to a DB2 database</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Provoke&amp;nbsp;an&amp;nbsp;error&amp;nbsp;--&amp;nbsp;bogus&amp;nbsp;SQL&amp;nbsp;syntax&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>prepare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'bogus&amp;nbsp;sql'</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\nPDO::errorInfo():\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>errorInfo</span><span style='color: #007700'>());<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> PDO::errorInfo(): Array ( [0] =&amp;gt; HY000 [1] =&amp;gt; 1 [2] =&amp;gt; near &amp;quot;bogus&amp;quot;: syntax error ) </pre></div> </div> </div><p> </p> </div> <a name='pdo.errorinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorcode.php' class='function' rel='rdfs-seeAlso'>PDO::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorcode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the statement handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorInfo()</a> - Fetch extended error information associated with the last operation on the statement handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::errorCode" value="<div id='pdo.errorcode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.errorcode.php'>PDO::errorCode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::errorCode</span> &amp;mdash; <span class='dc-title'> Fetch the SQLSTATE associated with the last operation on the database handle </span></p> </div> <a name='pdo.errorcode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>PDO::errorCode</b></span> ( <span class='methodparam'>void</span> )</div> </div> <a name='pdo.errorcode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a SQLSTATE, a five characters alphanumeric identifier defined in the ANSI SQL-92 standard. Briefly, an SQLSTATE consists of a two characters class value followed by a three characters subclass value. A class value of 01 indicates a warning and is accompanied by a return code of SQL_SUCCESS_WITH_INFO. Class values other than &amp;#039;01&amp;#039;, except for the class &amp;#039;IM&amp;#039;, indicate an error. The class &amp;#039;IM&amp;#039; is specific to warnings and errors that derive from the implementation of PDO (or perhaps ODBC, if you&amp;#039;re using the ODBC driver) itself. The subclass value &amp;#039;000&amp;#039; in any class indicates that there is no subclass for that SQLSTATE. </p> <p class='para'> <b>PDO::errorCode()</b> only retrieves error codes for operations performed directly on the database handle. If you create a PDOStatement object through <a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>PDO::prepare()</a> or <a href='http://www.php.net/manual/en/pdo.query.php' class='function'>PDO::query()</a> and invoke an error on the statement handle, <b>PDO::errorCode()</b> will not reflect that error. You must call <a href='http://www.php.net/manual/en/pdostatement.errorcode.php' class='function'>PDOStatement::errorCode()</a> to return the error code for an operation performed on a particular statement handle. </p> <p class='para'> Returns <b><tt class='constant'>NULL</tt></b> if no operation has been run on the database handle. </p> </div> <a name='pdo.errorcode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Retrieving a SQLSTATE code</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Provoke&amp;nbsp;an&amp;nbsp;error&amp;nbsp;--&amp;nbsp;the&amp;nbsp;BONES&amp;nbsp;table&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exist&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;bones(skull)&amp;nbsp;VALUES&amp;nbsp;('lucy')'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nPDO::errorCode():&amp;nbsp;'</span><span style='color: #007700'>;<br />print&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>errorCode</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> PDO::errorCode(): 42S02 </pre></div> </div> </div><p> </p> </div> <a name='pdo.errorcode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDO::errorInfo()</a> - Fetch extended error information associated with the last operation on the database handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorcode.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorCode()</a> - Fetch the SQLSTATE associated with the last operation on the statement handle</li> <li class='member'><a href='http://www.php.net/manual/en/pdostatement.errorinfo.php' class='function' rel='rdfs-seeAlso'>PDOStatement::errorInfo()</a> - Fetch extended error information associated with the last operation on the statement handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::commit" value="<div id='pdo.commit' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.commit.php'>PDO::commit</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::commit</span> &amp;mdash; <span class='dc-title'> Commits a transaction </span></p> </div> <a name='pdo.commit.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDO::commit</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Commits a transaction, returning the database connection to autocommit mode until the next call to <a href='http://www.php.net/manual/en/pdo.begintransaction.php' class='function'>PDO::beginTransaction()</a> starts a new transaction. </p> </div> <a name='pdo.commit.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdo.commit.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Commit a transaction</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Begin&amp;nbsp;a&amp;nbsp;transaction,&amp;nbsp;turning&amp;nbsp;off&amp;nbsp;autocommit&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>beginTransaction</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Change&amp;nbsp;the&amp;nbsp;database&amp;nbsp;schema&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DROP&amp;nbsp;TABLE&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Commit&amp;nbsp;the&amp;nbsp;changes&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>commit</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Database&amp;nbsp;connection&amp;nbsp;is&amp;nbsp;now&amp;nbsp;back&amp;nbsp;in&amp;nbsp;autocommit&amp;nbsp;mode&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdo.commit.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.begintransaction.php' class='function' rel='rdfs-seeAlso'>PDO::beginTransaction()</a> - Initiates a transaction</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.rollback.php' class='function' rel='rdfs-seeAlso'>PDO::rollBack()</a> - Rolls back a transaction</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO::beginTransaction" value="<div id='pdo.begintransaction' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/pdo.begintransaction.php'>PDO::beginTransaction</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0, PECL pdo &amp;gt;= 0.1.0)</p><p class='refpurpose'><span class='refname'>PDO::beginTransaction</span> &amp;mdash; <span class='dc-title'> Initiates a transaction </span></p> </div> <a name='pdo.begintransaction.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>PDO::beginTransaction</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Turns off autocommit mode. While autocommit mode is turned off, changes made to the database via the PDO object instance are not committed until you end the transaction by calling <a href='http://www.php.net/manual/en/pdo.commit.php' class='function'>PDO::commit()</a>. Calling <a href='http://www.php.net/manual/en/pdo.rollback.php' class='function'>PDO::rollBack()</a> will roll back all changes to the database and return the connection to autocommit mode. </p> <p class='para'> Some databases, including MySQL, automatically issue an implicit COMMIT when a database definition language (DDL) statement such as DROP TABLE or CREATE TABLE is issued within a transaction. The implicit COMMIT will prevent you from rolling back any other changes within the transaction boundary. </p> </div> <a name='pdo.begintransaction.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='pdo.begintransaction.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'><p><b>Example #1 Roll back a transaction</b></p> <div class='example-contents para'><p> The following example begins a transaction and issues two statements that modify the database before rolling back the changes. On MySQL, however, the DROP TABLE statement automatically commits the transaction so that none of the changes in the transaction are rolled back. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Begin&amp;nbsp;a&amp;nbsp;transaction,&amp;nbsp;turning&amp;nbsp;off&amp;nbsp;autocommit&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>beginTransaction</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Change&amp;nbsp;the&amp;nbsp;database&amp;nbsp;schema&amp;nbsp;and&amp;nbsp;data&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'DROP&amp;nbsp;TABLE&amp;nbsp;fruit'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;dessert<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SET&amp;nbsp;name&amp;nbsp;=&amp;nbsp;'hamburger''</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Recognize&amp;nbsp;mistake&amp;nbsp;and&amp;nbsp;roll&amp;nbsp;back&amp;nbsp;changes&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$dbh</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rollBack</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Database&amp;nbsp;connection&amp;nbsp;is&amp;nbsp;now&amp;nbsp;back&amp;nbsp;in&amp;nbsp;autocommit&amp;nbsp;mode&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='pdo.begintransaction.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/pdo.commit.php' class='function' rel='rdfs-seeAlso'>PDO::commit()</a> - Commits a transaction</li> <li class='member'><a href='http://www.php.net/manual/en/pdo.rollback.php' class='function' rel='rdfs-seeAlso'>PDO::rollBack()</a> - Rolls back a transaction</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="PDO" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.pdo.php'>The PDO class</a></h1> <div class='partintro'> <div id='pdo.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Represents a connection between PHP and a database server. </p> </div> <div id='pdo.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>PDO</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>PDO</b> </span> {</div> <div class='constructorsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dsn</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$username</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$password</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$driver_options</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.begintransaction.php' class='function'>beginTransaction</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.commit.php' class='function'>commit</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.errorcode.php' class='function'>errorCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.errorinfo.php' class='function'>errorInfo</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.exec.php' class='function'>exec</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.getattribute.php' class='function'>getAttribute</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.getavailabledrivers.php' class='function'>getAvailableDrivers</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.lastinsertid.php' class='function'>lastInsertId</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt><span class='initializer'> = NULL</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>PDOStatement</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.prepare.php' class='function'>prepare</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$driver_options</tt><span class='initializer'> = array()</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>PDOStatement</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.query.php' class='function'>query</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$statement</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.quote.php' class='function'>quote</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$parameter_type</tt><span class='initializer'> = PDO::PARAM_STR</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.rollback.php' class='function'>rollBack</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/pdo.setattribute.php' class='function'>setAttribute</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$attribute</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/pdo.begintransaction.php'>PDO::beginTransaction</a> &amp;acirc;&amp;#128;&amp;#148; Initiates a transaction</li><li><a href='http://www.php.net/manual/en/pdo.commit.php'>PDO::commit</a> &amp;acirc;&amp;#128;&amp;#148; Commits a transaction</li><li><a href='http://www.php.net/manual/en/pdo.construct.php'>PDO::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Creates a PDO instance representing a connection to a database</li><li><a href='http://www.php.net/manual/en/pdo.errorcode.php'>PDO::errorCode</a> &amp;acirc;&amp;#128;&amp;#148; Fetch the SQLSTATE associated with the last operation on the database handle</li><li><a href='http://www.php.net/manual/en/pdo.errorinfo.php'>PDO::errorInfo</a> &amp;acirc;&amp;#128;&amp;#148; Fetch extended error information associated with the last operation on the database handle</li><li><a href='http://www.php.net/manual/en/pdo.exec.php'>PDO::exec</a> &amp;acirc;&amp;#128;&amp;#148; Execute an SQL statement and return the number of affected rows</li><li><a href='http://www.php.net/manual/en/pdo.getattribute.php'>PDO::getAttribute</a> &amp;acirc;&amp;#128;&amp;#148; Retrieve a database connection attribute</li><li><a href='http://www.php.net/manual/en/pdo.getavailabledrivers.php'>PDO::getAvailableDrivers</a> &amp;acirc;&amp;#128;&amp;#148; Return an array of available PDO drivers</li><li><a href='http://www.php.net/manual/en/pdo.lastinsertid.php'>PDO::lastInsertId</a> &amp;acirc;&amp;#128;&amp;#148; Returns the ID of the last inserted row or sequence value</li><li><a href='http://www.php.net/manual/en/pdo.prepare.php'>PDO::prepare</a> &amp;acirc;&amp;#128;&amp;#148; Prepares a statement for execution and returns a statement object</li><li><a href='http://www.php.net/manual/en/pdo.query.php'>PDO::query</a> &amp;acirc;&amp;#128;&amp;#148; Executes an SQL statement, returning a result set as a PDOStatement object</li><li><a href='http://www.php.net/manual/en/pdo.quote.php'>PDO::quote</a> &amp;acirc;&amp;#128;&amp;#148; Quotes a string for use in a query.</li><li><a href='http://www.php.net/manual/en/pdo.rollback.php'>PDO::rollBack</a> &amp;acirc;&amp;#128;&amp;#148; Rolls back a transaction</li><li><a href='http://www.php.net/manual/en/pdo.setattribute.php'>PDO::setAttribute</a> &amp;acirc;&amp;#128;&amp;#148; Set an attribute</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pclose" value="<div id='function.pclose' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pclose.php'>pclose</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pclose</span> &amp;mdash; <span class='dc-title'>Closes process file pointer</span></p> </div> <a name='function.pclose.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>pclose</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> )</div> <p class='para rdfs-comment'> Closes a file pointer to a pipe opened by <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a>. </p> </div> <a name='function.pclose.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer must be valid, and must have been returned by a successful call to <a href='http://www.php.net/manual/en/function.popen.php' class='function'>popen()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.pclose.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the termination status of the process that was run. </p> </div> <a name='function.pclose.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>pclose()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>popen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/bin/ls'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>pclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.pclose.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pathinfo" value="<div id='function.pathinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pathinfo.php'>pathinfo</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>pathinfo</span> &amp;mdash; <span class='dc-title'>Returns information about a file path</span></p> </div> <a name='function.pathinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>pathinfo</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$options</tt><span class='initializer'> = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME</span></span> ] )</div> <p class='para rdfs-comment'> <b>pathinfo()</b> returns an associative array containing information about <i><tt class='parameter'>path</tt></i> . </p> </div> <a name='function.pathinfo.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The path being checked. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can specify which elements are returned with optional parameter <i><tt class='parameter'>options</tt></i> . It composes from <b><tt class='constant'>PATHINFO_DIRNAME</tt></b>, <b><tt class='constant'>PATHINFO_BASENAME</tt></b>, <b><tt class='constant'>PATHINFO_EXTENSION</tt></b> and <b><tt class='constant'>PATHINFO_FILENAME</tt></b>. It defaults to return all elements. </p> </dd> </dl> <p> </p> </div> <a name='function.pathinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The following associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> elements are returned: <i>dirname</i>, <i>basename</i>, <i>extension</i> (if any), and <i>filename</i>. </p> <p class='para'> If <i><tt class='parameter'>options</tt></i> is used, this function will return a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> if not all elements are requested. </p> </div> <a name='function.pathinfo.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The <b><tt class='constant'>PATHINFO_FILENAME</tt></b> constant was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.pathinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>pathinfo()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$path_parts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>pathinfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/www/htdocs/index.html'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$path_parts</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'dirname'</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$path_parts</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'basename'</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$path_parts</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'extension'</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$path_parts</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'filename'</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;since&amp;nbsp;PHP&amp;nbsp;5.2.0<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> /www/htdocs index.html html index </pre></div> </div> </div><p> </p> </div> <a name='function.pathinfo.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: For information on retrieving the current path info, read the section on <a href='http://www.php.net/manual/en/language.variables.predefined.php' class='link'> predefined reserved variables</a>. <br /> </p></blockquote> </div> <a name='function.pathinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.dirname.php' class='function' rel='rdfs-seeAlso'>dirname()</a> - Returns directory name component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.basename.php' class='function' rel='rdfs-seeAlso'>basename()</a> - Returns filename component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.parse-url.php' class='function' rel='rdfs-seeAlso'>parse_url()</a> - Parse a URL and return its components</li> <li class='member'><a href='http://www.php.net/manual/en/function.realpath.php' class='function' rel='rdfs-seeAlso'>realpath()</a> - Returns canonicalized absolute pathname</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="passthru" value="<div id='function.passthru' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.passthru.php'>passthru</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>passthru</span> &amp;mdash; <span class='dc-title'>Execute an external program and display raw output</span></p> </div> <a name='function.passthru.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>passthru</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$command</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$return_var</tt></span> ] )</div> <p class='para rdfs-comment'> The <b>passthru()</b> function is similar to the <a href='http://www.php.net/manual/en/function.exec.php' class='function'>exec()</a> function in that it executes a <i><tt class='parameter'>command</tt></i> . This function should be used in place of <a href='http://www.php.net/manual/en/function.exec.php' class='function'>exec()</a> or <a href='http://www.php.net/manual/en/function.system.php' class='function'>system()</a> when the output from the Unix command is binary data which needs to be passed directly back to the browser. A common use for this is to execute something like the pbmplus utilities that can output an image stream directly. By setting the Content-type to <i>image/gif</i> and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly. </p> </div> <a name='function.passthru.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>command</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command that will be executed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return_var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>return_var</tt></i> argument is present, the return status of the Unix command will be placed here. </p> </dd> </dl> <p> </p> </div> <a name='function.passthru.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.passthru.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='para'>When allowing user-supplied data to be passed to this function, use <a href='http://www.php.net/manual/en/function.escapeshellarg.php' class='function'>escapeshellarg()</a> or <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a> to ensure that users cannot trick the system into executing arbitrary commands.</p></div> <blockquote><p><b class='note'>Note</b>: If a program is started with this function, in order for it to continue running in the background, the output of the program must be redirected to a file or another output stream. Failing to do so will cause PHP to hang until the execution of the program ends.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, you can only execute files within the <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir' class='link'>safe_mode_exec_dir</a>. For practical reasons, it is currently not allowed to have <i>..</i> components in the path to the executable.</span></p></blockquote> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>With <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> enabled, the command string is escaped with <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a>. Thus, <i>echo y | echo x</i> becomes <i>echo y \| echo x</i>.</p></div> </div> <a name='function.passthru.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.system.php' class='function' rel='rdfs-seeAlso'>system()</a> - Execute an external program and display the output</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function' rel='rdfs-seeAlso'>escapeshellcmd()</a> - Escape shell metacharacters</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="parse_url" value="<div id='function.parse-url' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.parse-url.php'>parse_url</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>parse_url</span> &amp;mdash; <span class='dc-title'>Parse a URL and return its components</span></p> </div> <a name='function.parse-url.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>parse_url</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$url</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$component</tt><span class='initializer'> = -1</span></span> ] )</div> <p class='para rdfs-comment'> This function parses a URL and returns an associative array containing any of the various components of the URL that are present. </p> <p class='para'> This function is <em class='emphasis'>not</em> meant to validate the given URL, it only breaks it up into the above listed parts. Partial URLs are also accepted, <b>parse_url()</b> tries its best to parse them correctly. </p> </div> <a name='function.parse-url.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>url</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The URL to parse. Invalid characters are replaced by <i>_</i>. </p> </dd> </dl> <p> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>component</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specify one of <b><tt class='constant'>PHP_URL_SCHEME</tt></b>, <b><tt class='constant'>PHP_URL_HOST</tt></b>, <b><tt class='constant'>PHP_URL_PORT</tt></b>, <b><tt class='constant'>PHP_URL_USER</tt></b>, <b><tt class='constant'>PHP_URL_PASS</tt></b>, <b><tt class='constant'>PHP_URL_PATH</tt></b>, <b><tt class='constant'>PHP_URL_QUERY</tt></b> or <b><tt class='constant'>PHP_URL_FRAGMENT</tt></b> to retrieve just a specific URL component as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.parse-url.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On seriously malformed URLs, <b>parse_url()</b> may return <b><tt class='constant'>FALSE</tt></b> and emit a <b><tt class='constant'>E_WARNING</tt></b>. Otherwise an associative array is returned, whose components may be (at least one): </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <var class='varname'>scheme</var> - e.g. http </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>host</var> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>port</var> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>user</var> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>pass</var> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>path</var> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>query</var> - after the question mark <i>?</i> </span> </li> <li class='listitem'> <span class='simpara'> <var class='varname'>fragment</var> - after the hashmark <i>#</i> </span> </li> </ul><p> </p> <p class='para'> If the <i><tt class='parameter'>component</tt></i> parameter is specified a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> is returned instead of an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. </p> </div> <a name='function.parse-url.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.2</td> <td align='left'>Added the <i><tt class='parameter'>component</tt></i> parameter</td> </tr> </tbody> </table> <p> </p> </div> <a name='function.parse-url.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>parse_url()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$url&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'http://username:password@hostname/path?arg=value#anchor'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>parse_url</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$url</span><span style='color: #007700'>));<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>parse_url</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$url</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PHP_URL_PATH</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [scheme] =&amp;gt; http [host] =&amp;gt; hostname [user] =&amp;gt; username [pass] =&amp;gt; password [path] =&amp;gt; /path [query] =&amp;gt; arg=value [fragment] =&amp;gt; anchor ) /path </pre></div> </div> </div><p> </p> </div> <a name='function.parse-url.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function doesn&amp;#039;t work with relative URLs. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: This function is intended specifically for the purpose of parsing URLs and not URIs. However, to comply with PHP&amp;#039;s backwards compatibility requirements it makes an exception for the file:// scheme where triple slashes (file:///...) are allowed. For any other scheme this is invalid. <br /> </p></blockquote> </div> <a name='function.parse-url.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> <li class='member'><a href='http://www.php.net/manual/en/function.parse-str.php' class='function' rel='rdfs-seeAlso'>parse_str()</a> - Parses the string into variables</li> <li class='member'><a href='http://www.php.net/manual/en/function.http-build-query.php' class='function' rel='rdfs-seeAlso'>http_build_query()</a> - Generate URL-encoded query string</li> <li class='member'><a href='http://www.php.net/manual/en/function.dirname.php' class='function' rel='rdfs-seeAlso'>dirname()</a> - Returns directory name component of path</li> <li class='member'><a href='http://www.php.net/manual/en/function.basename.php' class='function' rel='rdfs-seeAlso'>basename()</a> - Returns filename component of path</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="parse_str" value="<div id='function.parse-str' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.parse-str.php'>parse_str</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>parse_str</span> &amp;mdash; <span class='dc-title'>Parses the string into variables</span></p> </div> <a name='function.parse-str.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>parse_str</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$arr</tt></span> ] )</div> <p class='para rdfs-comment'> Parses <i><tt class='parameter'>str</tt></i> as if it were the query string passed via a URL and sets variables in the current scope. </p> <blockquote><p><b class='note'>Note</b>: To get the current <i>QUERY_STRING</i>, you may use the variable <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.server.php' class='classname'>$_SERVER['QUERY_STRING']</a></var>. Also, you may want to read the section on <a href='http://www.php.net/manual/en/language.variables.external.php' class='link'>variables from external sources</a>. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: The <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'>magic_quotes_gpc</a> setting affects the output of this function, as <b>parse_str()</b> uses the same mechanism that PHP uses to populate the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.get.php' class='classname'>$_GET</a></var>, <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.post.php' class='classname'>$_POST</a></var>, etc. variables. <br /> </p></blockquote> </div> <a name='function.parse-str.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the second parameter <i><tt class='parameter'>arr</tt></i> is present, variables are stored in this variable as array elements instead. </p> </dd> </dl> <p> </p> </div> <a name='function.parse-str.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.parse-str.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.3</td> <td align='left'> The <i><tt class='parameter'>arr</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.parse-str.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>parse_str()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'first=value&amp;amp;arr[]=foo+bar&amp;amp;arr[]=baz'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>parse_str</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$first</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;value<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;foo&amp;nbsp;bar<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$arr</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;baz<br /><br /></span><span style='color: #0000BB'>parse_str</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'first'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;value<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'arr'</span><span style='color: #007700'>][</span><span style='color: #0000BB'>0</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;foo&amp;nbsp;bar<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'arr'</span><span style='color: #007700'>][</span><span style='color: #0000BB'>1</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;baz<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.parse-str.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.parse-url.php' class='function' rel='rdfs-seeAlso'>parse_url()</a> - Parse a URL and return its components</li> <li class='member'><a href='http://www.php.net/manual/en/function.pathinfo.php' class='function' rel='rdfs-seeAlso'>pathinfo()</a> - Returns information about a file path</li> <li class='member'><a href='http://www.php.net/manual/en/function.http-build-query.php' class='function' rel='rdfs-seeAlso'>http_build_query()</a> - Generate URL-encoded query string</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_gpc()</a> - Gets the current configuration setting of magic quotes gpc</li> <li class='member'><a href='http://www.php.net/manual/en/function.urldecode.php' class='function' rel='rdfs-seeAlso'>urldecode()</a> - Decodes URL-encoded string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="parse_ini_file" value="<div id='function.parse-ini-file' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.parse-ini-file.php'>parse_ini_file</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>parse_ini_file</span> &amp;mdash; <span class='dc-title'>Parse a configuration file</span></p> </div> <a name='function.parse-ini-file.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>parse_ini_file</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$process_sections</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$scanner_mode</tt><span class='initializer'> = INI_SCANNER_NORMAL</span></span> ]] )</div> <p class='para rdfs-comment'> <b>parse_ini_file()</b> loads in the ini file specified in <i><tt class='parameter'>filename</tt></i> , and returns the settings in it in an associative array. </p> <p class='para'> The structure of the ini file is the same as the <var class='filename'>php.ini</var>&amp;#039;s. </p> </div> <a name='function.parse-ini-file.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename of the ini file being parsed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>process_sections</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By setting the <i><tt class='parameter'>process_sections</tt></i> parameter to <b><tt class='constant'>TRUE</tt></b>, you get a multidimensional array, with the section names and settings included. The default for <i><tt class='parameter'>process_sections</tt></i> is <b><tt class='constant'>FALSE</tt></b> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>scanner_mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Can either be <b><tt class='constant'>INI_SCANNER_NORMAL</tt></b> (default) or <b><tt class='constant'>INI_SCANNER_RAW</tt></b>. If <b><tt class='constant'>INI_SCANNER_RAW</tt></b> is supplied, then option values will not be parsed. </p> </dd> </dl> <p> </p> </div> <a name='function.parse-ini-file.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The settings are returned as an associative <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> on success, and <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.parse-ini-file.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added optional <i><tt class='parameter'>scanner_mode</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>5.2.7</td> <td align='left'> On syntax error this function will return <b><tt class='constant'>FALSE</tt></b> rather then an empty array. </td> </tr> <tr valign='middle'> <td align='left'>5.2.4</td> <td align='left'> Keys and section names consisting of numbers are now evaluated as PHP <a href='http://www.php.net/manual/en/language.types.integer.php' class='link'>integers</a> thus numbers starting by 0 are evaluated as octals and numbers starting by 0x are evaluated as hexadecimals. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Values enclosed in double quotes can contain new lines. </td> </tr> <tr valign='middle'> <td align='left'>4.2.1</td> <td align='left'> This function is now affected by <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a> and <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.open-basedir' class='link'>open_basedir</a>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.parse-ini-file.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Contents of <var class='filename'>sample.ini</var></b></p> <div class='example-contents programlisting'> <div class='cdata'><pre> ; This is a sample configuration file ; Comments start with &amp;#039;;&amp;#039;, as in php.ini [first_section] one = 1 five = 5 animal = BIRD [second_section] path = &amp;quot;/usr/local/bin&amp;quot; URL = &amp;quot;http://www.example.com/~username&amp;quot; [third_section] phpversion[] = &amp;quot;5.0&amp;quot; phpversion[] = &amp;quot;5.1&amp;quot; phpversion[] = &amp;quot;5.2&amp;quot; phpversion[] = &amp;quot;5.3&amp;quot; </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>parse_ini_file()</b> example</b></p> <div class='example-contents para'><p> <a href='http://www.php.net/manual/en/language.constants.php' class='link'>Constants</a> may also be parsed in the ini file so if you define a constant as an ini value before running <b>parse_ini_file()</b>, it will be integrated into the results. Only ini values are evaluated. For example: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />define</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'BIRD'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Dodo&amp;nbsp;bird'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Parse&amp;nbsp;without&amp;nbsp;sections<br /></span><span style='color: #0000BB'>$ini_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>parse_ini_file</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.ini'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ini_array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Parse&amp;nbsp;with&amp;nbsp;sections<br /></span><span style='color: #0000BB'>$ini_array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>parse_ini_file</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.ini'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ini_array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [one] =&amp;gt; 1 [five] =&amp;gt; 5 [animal] =&amp;gt; Dodo bird [path] =&amp;gt; /usr/local/bin [URL] =&amp;gt; http://www.example.com/~username [phpversion] =&amp;gt; Array ( [0] =&amp;gt; 5.0 [1] =&amp;gt; 5.1 [2] =&amp;gt; 5.2 [3] =&amp;gt; 5.3 ) ) Array ( [first_section] =&amp;gt; Array ( [one] =&amp;gt; 1 [five] =&amp;gt; 5 [animal] =&amp;gt; Dodo bird ) [second_section] =&amp;gt; Array ( [path] =&amp;gt; /usr/local/bin [URL] =&amp;gt; http://www.example.com/~username ) [third_section] =&amp;gt; Array ( [phpversion] =&amp;gt; Array ( [0] =&amp;gt; 5.0 [1] =&amp;gt; 5.1 [2] =&amp;gt; 5.2 [3] =&amp;gt; 5.3 ) ) ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 <b>parse_ini_file()</b> parsing a php.ini file</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;A&amp;nbsp;simple&amp;nbsp;function&amp;nbsp;used&amp;nbsp;for&amp;nbsp;comparing&amp;nbsp;the&amp;nbsp;results&amp;nbsp;below<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>yesno</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$expression</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>$expression&amp;nbsp;</span><span style='color: #007700'>?&amp;nbsp;</span><span style='color: #DD0000'>'Yes'&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #DD0000'>'No'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;path&amp;nbsp;to&amp;nbsp;php.ini&amp;nbsp;using&amp;nbsp;the&amp;nbsp;php_ini_loaded_file()&amp;nbsp;<br />//&amp;nbsp;function&amp;nbsp;available&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.2.4<br /></span><span style='color: #0000BB'>$ini_path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>php_ini_loaded_file</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Parse&amp;nbsp;php.ini<br /></span><span style='color: #0000BB'>$ini&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>parse_ini_file</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ini_path</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;and&amp;nbsp;compare&amp;nbsp;the&amp;nbsp;values,&amp;nbsp;note&amp;nbsp;that&amp;nbsp;using&amp;nbsp;get_cfg_var()<br />//&amp;nbsp;will&amp;nbsp;give&amp;nbsp;the&amp;nbsp;same&amp;nbsp;results&amp;nbsp;for&amp;nbsp;parsed&amp;nbsp;and&amp;nbsp;loaded&amp;nbsp;here<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'(parsed)&amp;nbsp;magic_quotes_gpc&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>yesno</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ini</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'magic_quotes_gpc'</span><span style='color: #007700'>])&amp;nbsp;.&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'(loaded)&amp;nbsp;magic_quotes_gpc&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>yesno</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_cfg_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'magic_quotes_gpc'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> (parsed) magic_quotes_gpc = Yes (loaded) magic_quotes_gpc = Yes </pre></div> </div> </div><p> </p> </div> <a name='function.parse-ini-file.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function has nothing to do with the <var class='filename'>php.ini</var> file. It is already processed by the time you run your script. This function can be used to read in your own application&amp;#039;s configuration files. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If a value in the ini file contains any non-alphanumeric characters it needs to be enclosed in double-quotes (&amp;quot;). <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> There are reserved words which must not be used as keys for ini files. These include: null, yes, no, true, false, on, off, none. Values null, no and false results in &amp;quot;&amp;quot;, yes and true results in &amp;quot;1&amp;quot;. Characters <i>{}|&amp;amp;~![()^&amp;quot;</i> must not be used anywhere in the key and have a special meaning in the value. </span> </p></blockquote> </div> <a name='function.parse-ini-file.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.parse-ini-string.php' class='function' rel='rdfs-seeAlso'>parse_ini_string()</a> - Parse a configuration string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ParentIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.parentiterator.php'>The ParentIterator class</a></h1> <div class='partintro'> <div id='parentiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> ... </p> </div> <div id='parentiterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>ParentIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>ParentIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.recursivefilteriterator.php' class='classname'>RecursiveFilterIterator</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.outeriterator.php' class='interfacename'>OuterIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>ParentIterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/parentiterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/parentiterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/parentiterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/parentiterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/parentiterator.getchildren.php'>ParentIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Return the inner iterator's children contained in a ParentIterator</li><li><a href='http://www.php.net/manual/en/parentiterator.haschildren.php'>ParentIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the inner iterator's current element has children</li><li><a href='http://www.php.net/manual/en/parentiterator.next.php'>ParentIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move the iterator forward</li><li><a href='http://www.php.net/manual/en/parentiterator.rewind.php'>ParentIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the iterator</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="pack" value="<div id='function.pack' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.pack.php'>pack</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>pack</span> &amp;mdash; <span class='dc-title'>Pack data into binary string</span></p> </div> <a name='function.pack.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>pack</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Pack given arguments into binary string according to <i><tt class='parameter'>format</tt></i> . </p> <p class='para'> The idea for this function was taken from Perl and all formatting codes work the same as in Perl. However, there are some formatting codes that are missing such as Perl&amp;#039;s &amp;quot;u&amp;quot; format code. </p> <p class='para'> Note that the distinction between signed and unsigned values only affects the function <a href='http://www.php.net/manual/en/function.unpack.php' class='function'>unpack()</a>, where as function <b>pack()</b> gives the same result for signed and unsigned format codes. </p> <p class='para'> Also note that PHP internally stores <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> values as signed values of a machine-dependent size. If you give it an unsigned integer value too large to be stored that way it is converted to a <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> which often yields an undesired result. </p> </div> <a name='function.pack.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>format</tt></i> string consists of format codes followed by an optional repeater argument. The repeater argument can be either an integer value or <i>*</i> for repeating to the end of the input data. For a, A, h, H the repeat count specifies how many characters of one data argument are taken, for @ it is the absolute position where to put the next data, for everything else the repeat count specifies how many data arguments are consumed and packed into the resulting binary string. </p> <p class='para'> Currently implemented formats are: </p><table class='doctable table'> <caption><b><b>pack()</b> format characters</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Code</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>a</td> <td align='left'>NUL-padded string</td> </tr> <tr valign='middle'> <td align='left'>A</td> <td align='left'>SPACE-padded string</td></tr> <tr valign='middle'> <td align='left'>h</td> <td align='left'>Hex string, low nibble first</td></tr> <tr valign='middle'> <td align='left'>H</td> <td align='left'>Hex string, high nibble first</td></tr> <tr valign='middle'><td align='left'>c</td><td align='left'>signed char</td></tr> <tr valign='middle'> <td align='left'>C</td> <td align='left'>unsigned char</td></tr> <tr valign='middle'> <td align='left'>s</td> <td align='left'>signed short (always 16 bit, machine byte order)</td> </tr> <tr valign='middle'> <td align='left'>S</td> <td align='left'>unsigned short (always 16 bit, machine byte order)</td> </tr> <tr valign='middle'> <td align='left'>n</td> <td align='left'>unsigned short (always 16 bit, big endian byte order)</td> </tr> <tr valign='middle'> <td align='left'>v</td> <td align='left'>unsigned short (always 16 bit, little endian byte order)</td> </tr> <tr valign='middle'> <td align='left'>i</td> <td align='left'>signed integer (machine dependent size and byte order)</td> </tr> <tr valign='middle'> <td align='left'>I</td> <td align='left'>unsigned integer (machine dependent size and byte order)</td> </tr> <tr valign='middle'> <td align='left'>l</td> <td align='left'>signed long (always 32 bit, machine byte order)</td> </tr> <tr valign='middle'> <td align='left'>L</td> <td align='left'>unsigned long (always 32 bit, machine byte order)</td> </tr> <tr valign='middle'> <td align='left'>N</td> <td align='left'>unsigned long (always 32 bit, big endian byte order)</td> </tr> <tr valign='middle'> <td align='left'>V</td> <td align='left'>unsigned long (always 32 bit, little endian byte order)</td> </tr> <tr valign='middle'> <td align='left'>f</td> <td align='left'>float (machine dependent size and representation)</td> </tr> <tr valign='middle'> <td align='left'>d</td> <td align='left'>double (machine dependent size and representation)</td> </tr> <tr valign='middle'> <td align='left'>x</td> <td align='left'>NUL byte</td> </tr> <tr valign='middle'> <td align='left'>X</td> <td align='left'>Back up one byte</td> </tr> <tr valign='middle'> <td align='left'>@</td> <td align='left'>NUL-fill to absolute position</td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.pack.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a binary string containing data. </p> </div> <a name='function.pack.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>pack()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$binarydata&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>pack</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'nvc*'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0x1234</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0x5678</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>65</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>66</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> The resulting binary string will be 6 bytes long and contain the byte sequence 0x12, 0x34, 0x78, 0x56, 0x41, 0x42. </p></div> </div><p> </p> </div> <a name='function.pack.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.unpack.php' class='function' rel='rdfs-seeAlso'>unpack()</a> - Unpack data from binary string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="OverflowException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.overflowexception.php'>The OverflowException class</a></h1> <div class='partintro'> <div id='overflowexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown when you add an element into a full container </p> </div> <div id='overflowexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>OverflowException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>OverflowException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="output_reset_rewrite_vars" value="<div id='function.output-reset-rewrite-vars' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.output-reset-rewrite-vars.php'>output_reset_rewrite_vars</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>output_reset_rewrite_vars</span> &amp;mdash; <span class='dc-title'>Reset URL rewriter values</span></p> </div> <a name='function.output-reset-rewrite-vars.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>output_reset_rewrite_vars</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function resets the URL rewriter and removes all rewrite variables previously set by the <a href='http://www.php.net/manual/en/function.output-add-rewrite-var.php' class='function'>output_add_rewrite_var()</a> function or the session mechanism (if <i>session.use_trans_sid</i> was set on <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a>). </p> </div> <a name='function.output-reset-rewrite-vars.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.output-reset-rewrite-vars.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>output_reset_rewrite_vars()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />session_start</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>output_add_rewrite_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'value'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/file.php'&amp;gt;link&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>ob_flush</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>output_reset_rewrite_vars</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/file.php'&amp;gt;link&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;a href=&amp;quot;file.php?PHPSESSID=xxx&amp;amp;var=value&amp;quot;&amp;gt;link&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;file.php&amp;quot;&amp;gt;link&amp;lt;/a&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.output-reset-rewrite-vars.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.output-add-rewrite-var.php' class='function' rel='rdfs-seeAlso'>output_add_rewrite_var()</a> - Add URL rewriter values</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-flush.php' class='function' rel='rdfs-seeAlso'>ob_flush()</a> - Flush (send) the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-list-handlers.php' class='function' rel='rdfs-seeAlso'>ob_list_handlers()</a> - List all output handlers in use</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-start.php' class='function' rel='rdfs-seeAlso'>session_start()</a> - Initialize session data</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="output_add_rewrite_var" value="<div id='function.output-add-rewrite-var' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.output-add-rewrite-var.php'>output_add_rewrite_var</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>output_add_rewrite_var</span> &amp;mdash; <span class='dc-title'>Add URL rewriter values</span></p> </div> <a name='function.output-add-rewrite-var.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>output_add_rewrite_var</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> This function adds another name/value pair to the URL rewrite mechanism. The name and value will be added to URLs (as GET parameter) and forms (as hidden input fields) the same way as the session ID when transparent URL rewriting is enabled with <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid' class='link'>session.use_trans_sid</a>. Please note that absolute URLs (http://example.com/..) aren&amp;#039;t rewritten. </p> <p class='para'> This function&amp;#039;s behavior is controlled by the <a href='http://www.php.net/manual/en/session.configuration.php#ini.url-rewriter.tags' class='link'>url_rewriter.tags</a> <var class='filename'>php.ini</var> parameter. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Calling this function will implicitly start output buffering if it is not active already. </span> </p></blockquote> </div> <a name='function.output-add-rewrite-var.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable value. </p> </dd> </dl> <p> </p> </div> <a name='function.output-add-rewrite-var.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.output-add-rewrite-var.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>output_add_rewrite_var()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />output_add_rewrite_var</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'value'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;some&amp;nbsp;links<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/file.php'&amp;gt;link&amp;lt;/a&amp;gt;<br />&amp;lt;a&amp;nbsp;href='http://example.com'&amp;gt;link2&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;a&amp;nbsp;form<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;form&amp;nbsp;action='script.php'&amp;nbsp;method='post'&amp;gt;<br />&amp;lt;input&amp;nbsp;type='text'&amp;nbsp;name='var2'&amp;nbsp;/&amp;gt;<br />&amp;lt;/form&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;a href=&amp;quot;file.php?var=value&amp;quot;&amp;gt;link&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://example.com&amp;quot;&amp;gt;link2&amp;lt;/a&amp;gt; &amp;lt;form action=&amp;quot;script.php&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;var&amp;quot; value=&amp;quot;value&amp;quot; /&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;var2&amp;quot; /&amp;gt; &amp;lt;/form&amp;gt; Array ( [0] =&amp;gt; URL-Rewriter ) </pre></div> </div> </div><p> </p> </div> <a name='function.output-add-rewrite-var.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.output-reset-rewrite-vars.php' class='function' rel='rdfs-seeAlso'>output_reset_rewrite_vars()</a> - Reset URL rewriter values</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-flush.php' class='function' rel='rdfs-seeAlso'>ob_flush()</a> - Flush (send) the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-list-handlers.php' class='function' rel='rdfs-seeAlso'>ob_list_handlers()</a> - List all output handlers in use</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="OutOfRangeException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.outofrangeexception.php'>The OutOfRangeException class</a></h1> <div class='partintro'> <div id='outofrangeexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown when a value does not match with a range </p> </div> <div id='outofrangeexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>OutOfRangeException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>OutOfRangeException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.logicexception.php' class='classname'>LogicException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="OutOfBoundsException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.outofboundsexception.php'>The OutOfBoundsException class</a></h1> <div class='partintro'> <div id='outofboundsexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown if a value is not a valid key </p> </div> <div id='outofboundsexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>OutOfBoundsException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>OutOfBoundsException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="OuterIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.outeriterator.php'>The OuterIterator interface</a></h1> <div class='partintro'> <div id='outeriterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Classes implementing <b class='classname'>OuterIterator</b> can be used to iterate over iterators. </p> </div> <div id='outeriterator.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>OuterIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>OuterIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iterator.php' class='classname'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>Iterator</span> <span class='methodname'><a href='http://www.php.net/manual/en/outeriterator.getchildren.php' class='function'>getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.current.php' class='function'>Iterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>scalar</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.key.php' class='function'>Iterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.next.php' class='function'>Iterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.rewind.php' class='function'>Iterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.valid.php' class='function'>Iterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/outeriterator.getchildren.php'>OuterIterator::getInnerIterator</a> &amp;acirc;&amp;#128;&amp;#148; Returns the inner iterator for the current entry.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ord" value="<div id='function.ord' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ord.php'>ord</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ord</span> &amp;mdash; <span class='dc-title'>Return ASCII value of character</span></p> </div> <a name='function.ord.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ord</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> Returns the ASCII value of the first character of <i><tt class='parameter'>string</tt></i> . </p> <p class='para'> This function complements <a href='http://www.php.net/manual/en/function.chr.php' class='function'>chr()</a>. </p> </div> <a name='function.ord.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A character. </p> </dd> </dl> <p> </p> </div> <a name='function.ord.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the ASCII value as an integer. </p> </div> <a name='function.ord.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ord()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>ord</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;first&amp;nbsp;character&amp;nbsp;of&amp;nbsp;\$str&amp;nbsp;is&amp;nbsp;a&amp;nbsp;line&amp;nbsp;feed.\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ord.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chr.php' class='function' rel='rdfs-seeAlso'>chr()</a> - Return a specific character</li> <li class='member'>An <a href='http://www.asciitable.com' class='link external'>&amp;raquo; ASCII-table</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="openlog" value="<div id='function.openlog' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.openlog.php'>openlog</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>openlog</span> &amp;mdash; <span class='dc-title'>Open connection to system logger</span></p> </div> <a name='function.openlog.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>openlog</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$ident</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$option</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$facility</tt></span> )</div> <p class='para rdfs-comment'> <b>openlog()</b> opens a connection to the system logger for a program. </p> <p class='para'> The use of <b>openlog()</b> is optional. It will automatically be called by <a href='http://www.php.net/manual/en/function.syslog.php' class='function'>syslog()</a> if necessary, in which case <i><tt class='parameter'>ident</tt></i> will default to <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.openlog.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ident</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string <i><tt class='parameter'>ident</tt></i> is added to each message. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>option</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>option</tt></i> argument is used to indicate what logging options will be used when generating a log message. </p><table class='doctable table'> <caption><b><b>openlog()</b> Options</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Constant</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_CONS</tt></b></td> <td align='left'> if there is an error while sending data to the system logger, write directly to the system console </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_NDELAY</tt></b></td> <td align='left'> open the connection to the logger immediately </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_ODELAY</tt></b></td> <td align='left'> (default) delay opening the connection until the first message is logged </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_PERROR</tt></b></td> <td align='left'>print log message also to standard error</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_PID</tt></b></td> <td align='left'>include PID with each message</td> </tr> </tbody> </table> <p> You can use one or more of this options. When using multiple options you need to <i>OR</i> them, i.e. to open the connection immediately, write to the console and include the PID in each message, you will use: <i>LOG_CONS | LOG_NDELAY | LOG_PID</i> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>facility</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>facility</tt></i> argument is used to specify what type of program is logging the message. This allows you to specify (in your machine&amp;#039;s syslog configuration) how messages coming from different facilities will be handled. </p><table class='doctable table'> <caption><b><b>openlog()</b> Facilities</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Constant</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_AUTH</tt></b></td> <td align='left'> security/authorization messages (use <b><tt class='constant'>LOG_AUTHPRIV</tt></b> instead in systems where that constant is defined) </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_AUTHPRIV</tt></b></td> <td align='left'>security/authorization messages (private)</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_CRON</tt></b></td> <td align='left'>clock daemon (cron and at)</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_DAEMON</tt></b></td> <td align='left'>other system daemons</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_KERN</tt></b></td> <td align='left'>kernel messages</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_LOCAL0</tt></b> ... <b><tt class='constant'>LOG_LOCAL7</tt></b></td> <td align='left'>reserved for local use, these are not available in Windows</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_LPR</tt></b></td> <td align='left'>line printer subsystem</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_MAIL</tt></b></td> <td align='left'>mail subsystem</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_NEWS</tt></b></td> <td align='left'>USENET news subsystem</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_SYSLOG</tt></b></td> <td align='left'>messages generated internally by syslogd</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_USER</tt></b></td> <td align='left'>generic user-level messages</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_UUCP</tt></b></td> <td align='left'>UUCP subsystem</td> </tr> </tbody> </table> <p> </p> <blockquote><p><b class='note'>Note</b>: <b><tt class='constant'>LOG_USER</tt></b> is the only valid log type under Windows operating systems <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.openlog.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.openlog.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.syslog.php' class='function' rel='rdfs-seeAlso'>syslog()</a> - Generate a system log message</li> <li class='member'><a href='http://www.php.net/manual/en/function.closelog.php' class='function' rel='rdfs-seeAlso'>closelog()</a> - Close connection to system logger</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="opendir" value="<div id='function.opendir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.opendir.php'>opendir</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>opendir</span> &amp;mdash; <span class='dc-title'>Open directory handle</span></p> </div> <a name='function.opendir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>opendir</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ] )</div> <p class='para rdfs-comment'> Opens up a directory handle to be used in subsequent <a href='http://www.php.net/manual/en/function.closedir.php' class='function'>closedir()</a>, <a href='http://www.php.net/manual/en/function.readdir.php' class='function'>readdir()</a>, and <a href='http://www.php.net/manual/en/function.rewinddir.php' class='function'>rewinddir()</a> calls. </p> </div> <a name='function.opendir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory path that is to be opened </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For a description of the <i><tt class='parameter'>context</tt></i> parameter, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='link'>the streams section</a> of the manual. </p> </dd> </dl> <p> </p> </div> <a name='function.opendir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a directory handle <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> on success, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <p class='para'> If <i><tt class='parameter'>path</tt></i> is not a valid directory or the directory can not be opened due to permission restrictions or filesystem errors, <b>opendir()</b> returns <b><tt class='constant'>FALSE</tt></b> and generates a PHP error of level <a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'> E_WARNING</a>. You can suppress the error output of <b>opendir()</b> by prepending &amp;#039;<a href='http://www.php.net/manual/en/language.operators.errorcontrol.php' class='link'>@</a>&amp;#039; to the front of the function name. </p> </div> <a name='function.opendir.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> <i><tt class='parameter'>path</tt></i> supports the <i>ftp://</i> URL wrapper. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <i><tt class='parameter'>path</tt></i> can also be any URL which supports directory listing, however only the <i>file://</i> URL wrapper supports this in PHP 4 </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.opendir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>opendir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/etc/php5/'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;known&amp;nbsp;directory,&amp;nbsp;and&amp;nbsp;proceed&amp;nbsp;to&amp;nbsp;read&amp;nbsp;its&amp;nbsp;contents<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>is_dir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$dh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>opendir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;((</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dh</span><span style='color: #007700'>))&amp;nbsp;!==&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'filename:&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #DD0000'>&amp;nbsp;:&amp;nbsp;filetype:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>filetype</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>closedir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dh</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> filename: . : filetype: dir filename: .. : filetype: dir filename: apache : filetype: dir filename: cgi : filetype: dir filename: cli : filetype: dir </pre></div> </div> </div><p> </p> </div> <a name='function.opendir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.is-dir.php' class='function' rel='rdfs-seeAlso'>is_dir()</a> - Tells whether the filename is a directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.readdir.php' class='function' rel='rdfs-seeAlso'>readdir()</a> - Read entry from directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/class.dir.php' class='link'>Dir</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="octdec" value="<div id='function.octdec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.octdec.php'>octdec</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>octdec</span> &amp;mdash; <span class='dc-title'>Octal to decimal</span></p> </div> <a name='function.octdec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.number' class='type number'>number</a></span> <span class='methodname'><b>octdec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$octal_string</tt></span> )</div> <p class='para rdfs-comment'> Returns the decimal equivalent of the octal number represented by the <i><tt class='parameter'>octal_string</tt></i> argument. </p> </div> <a name='function.octdec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>octal_string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The octal string to convert </p> </dd> </dl> <p> </p> </div> <a name='function.octdec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The decimal representation of <i><tt class='parameter'>octal_string</tt></i> </p> </div> <a name='function.octdec.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Since 4.1.0</td> <td align='left'> The function can now convert numbers that are too large to fit into the platforms <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> type, larger values are returned as <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a> in that case. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.octdec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>octdec()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>octdec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'77'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>octdec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>decoct</span><span style='color: #007700'>(</span><span style='color: #0000BB'>45</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 63 45 </pre></div> </div> </div><p> </p> </div> <a name='function.octdec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.decoct.php' class='function' rel='rdfs-seeAlso'>decoct()</a> - Decimal to octal</li> <li class='member'><a href='http://www.php.net/manual/en/function.bindec.php' class='function' rel='rdfs-seeAlso'>bindec()</a> - Binary to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.hexdec.php' class='function' rel='rdfs-seeAlso'>hexdec()</a> - Hexadecimal to decimal</li> <li class='member'><a href='http://www.php.net/manual/en/function.base-convert.php' class='function' rel='rdfs-seeAlso'>base_convert()</a> - Convert a number between arbitrary bases</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_start" value="<div id='function.ob-start' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-start.php'>ob_start</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_start</span> &amp;mdash; <span class='dc-title'>Turn on output buffering</span></p> </div> <a name='function.ob-start.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ob_start</b></span> ([ <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$output_callback</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$chunk_size</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$erase</tt></span> ]]] )</div> <p class='para rdfs-comment'> This function will turn output buffering on. While output buffering is active no output is sent from the script (other than headers), instead the output is stored in an internal buffer. </p> <p class='para'> The contents of this internal buffer may be copied into a string variable using <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a>. To output what is stored in the internal buffer, use <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a>. Alternatively, <a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function'>ob_end_clean()</a> will silently discard the buffer contents. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Some web servers (e.g. Apache) change the working directory of a script when calling the callback function. You can change it back by e.g. <i>chdir(dirname($_SERVER[&amp;#039;SCRIPT_FILENAME&amp;#039;]))</i> in the callback function. </p> </div> <p class='para'> Output buffers are stackable, that is, you may call <b>ob_start()</b> while another <b>ob_start()</b> is active. Just make sure that you call <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a> the appropriate number of times. If multiple output callback functions are active, output is being filtered sequentially through each of them in nesting order. </p> </div> <a name='function.ob-start.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>output_callback</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An optional <i><tt class='parameter'>output_callback</tt></i> function may be specified. This function takes a string as a parameter and should return a string. The function will be called when the output buffer is flushed (sent) or cleaned (with <a href='http://www.php.net/manual/en/function.ob-flush.php' class='function'>ob_flush()</a>, <a href='http://www.php.net/manual/en/function.ob-clean.php' class='function'>ob_clean()</a> or similar function) or when the output buffer is flushed to the browser at the end of the request. When <i><tt class='parameter'>output_callback</tt></i> is called, it will receive the contents of the output buffer as its parameter and is expected to return a new output buffer as a result, which will be sent to the browser. If the <i><tt class='parameter'>output_callback</tt></i> is not a callable function, this function will return <b><tt class='constant'>FALSE</tt></b>. </p> <p class='para'> If the callback function has two parameters, the second parameter is filled with a bit-field consisting of <b><tt class='constant'>PHP_OUTPUT_HANDLER_START</tt></b>, <b><tt class='constant'>PHP_OUTPUT_HANDLER_CONT</tt></b> and <b><tt class='constant'>PHP_OUTPUT_HANDLER_END</tt></b>. </p> <p class='para'> If <i><tt class='parameter'>output_callback</tt></i> returns <b><tt class='constant'>FALSE</tt></b> original input is sent to the browser. </p> <p class='para'> The <i><tt class='parameter'>output_callback</tt></i> parameter may be bypassed by passing a <b><tt class='constant'>NULL</tt></b> value. </p> <p class='para'> <a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function'>ob_end_clean()</a>, <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a>, <a href='http://www.php.net/manual/en/function.ob-clean.php' class='function'>ob_clean()</a>, <a href='http://www.php.net/manual/en/function.ob-flush.php' class='function'>ob_flush()</a> and <b>ob_start()</b> may not be called from a callback function. If you call them from callback function, the behavior is undefined. If you would like to delete the contents of a buffer, return &amp;quot;&amp;quot; (a null string) from callback function. You can&amp;#039;t even call functions using the output buffering functions like <i>print_r($expression, true)</i> or <i>highlight_file($filename, true)</i> from a callback function. </p> <blockquote><p><b class='note'>Note</b>: In PHP 4.0.4, <a href='http://www.php.net/manual/en/function.ob-gzhandler.php' class='function'>ob_gzhandler()</a> was introduced to facilitate sending gz-encoded data to web browsers that support compressed web pages. <a href='http://www.php.net/manual/en/function.ob-gzhandler.php' class='function'>ob_gzhandler()</a> determines what type of content encoding the browser will accept and will return its output accordingly. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>chunk_size</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional parameter <i><tt class='parameter'>chunk_size</tt></i> is passed, the buffer will be flushed after any output call which causes the buffer&amp;#039;s length to equal or exceed <i><tt class='parameter'>chunk_size</tt></i> . Default value 0 means that the function is called only in the end, other special value 1 sets <i><tt class='parameter'>chunk_size</tt></i> to 4096. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>erase</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional parameter <i><tt class='parameter'>erase</tt></i> is set to <b><tt class='constant'>FALSE</tt></b>, the buffer will not be deleted until the script finishes. </p> </dd> </dl> <p> </p> </div> <a name='function.ob-start.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.ob-start.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.2</td> <td align='left'> This function was changed to return <b><tt class='constant'>FALSE</tt></b> in case the passed <i><tt class='parameter'>output_callback</tt></i> can not be executed. </td> </tr> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> Added the <i><tt class='parameter'>erase</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ob-start.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 User defined callback function example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>callback</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$buffer</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;replace&amp;nbsp;all&amp;nbsp;the&amp;nbsp;apples&amp;nbsp;with&amp;nbsp;oranges<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;(</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'apples'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'oranges'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$buffer</span><span style='color: #007700'>));<br />}<br /><br /></span><span style='color: #0000BB'>ob_start</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'callback'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;<br /></span>&amp;lt;html&amp;gt;<br />&amp;lt;body&amp;gt;<br />&amp;lt;p&amp;gt;It's&amp;nbsp;like&amp;nbsp;comparing&amp;nbsp;apples&amp;nbsp;to&amp;nbsp;oranges.&amp;lt;/p&amp;gt;<br />&amp;lt;/body&amp;gt;<br />&amp;lt;/html&amp;gt;<br /><span style='color: #0000BB'>&amp;lt;?php<br /><br />ob_end_flush</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;It&amp;#039;s like comparing oranges to oranges.&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.ob-start.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-implicit-flush.php' class='function' rel='rdfs-seeAlso'>ob_implicit_flush()</a> - Turn implicit flush on/off</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-gzhandler.php' class='function' rel='rdfs-seeAlso'>ob_gzhandler()</a> - ob_start callback function to gzip output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-iconv-handler.php' class='function' rel='rdfs-seeAlso'>ob_iconv_handler()</a> - Convert character encoding as output buffer handler</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-output-handler.php' class='function' rel='rdfs-seeAlso'>mb_output_handler()</a> - Callback function converts character encoding in output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-tidyhandler.php' class='function' rel='rdfs-seeAlso'>ob_tidyhandler()</a> - ob_start callback function to repair the buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_list_handlers" value="<div id='function.ob-list-handlers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-list-handlers.php'>ob_list_handlers</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_list_handlers</span> &amp;mdash; <span class='dc-title'>List all output handlers in use</span></p> </div> <a name='function.ob-list-handlers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>ob_list_handlers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Lists all output handlers in use. </p> </div> <a name='function.ob-list-handlers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This will return an array with the output handlers in use (if any). If <a href='http://www.php.net/manual/en/outcontrol.configuration.php#ini.output-buffering' class='link'>output_buffering</a> is enabled or an anonymous function was used with <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a>, <b>ob_list_handlers()</b> will return &amp;quot;default output handler&amp;quot;. </p> </div> <a name='function.ob-list-handlers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ob_list_handlers()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//using&amp;nbsp;output_buffering=On<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>ob_end_flush</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>ob_start</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ob_gzhandler'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>ob_end_flush</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;anonymous&amp;nbsp;functions<br /></span><span style='color: #0000BB'>ob_start</span><span style='color: #007700'>(</span><span style='color: #0000BB'>create_function</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'$string'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'return&amp;nbsp;$string;'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>ob_end_flush</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; default output handler ) Array ( [0] =&amp;gt; ob_gzhandler ) Array ( [0] =&amp;gt; default output handler ) </pre></div> </div> </div><p> </p> </div> <a name='function.ob-list-handlers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-flush.php' class='function' rel='rdfs-seeAlso'>ob_get_flush()</a> - Flush the output buffer, return it as a string and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_implicit_flush" value="<div id='function.ob-implicit-flush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-implicit-flush.php'>ob_implicit_flush</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_implicit_flush</span> &amp;mdash; <span class='dc-title'>Turn implicit flush on/off</span></p> </div> <a name='function.ob-implicit-flush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ob_implicit_flush</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flag</tt></span> ] )</div> <p class='para rdfs-comment'> <b>ob_implicit_flush()</b> will turn implicit flushing on or off. Implicit flushing will result in a flush operation after every output call, so that explicit calls to <a href='http://www.php.net/manual/en/function.flush.php' class='function'>flush()</a> will no longer be needed. </p> </div> <a name='function.ob-implicit-flush.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flag</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <b><tt class='constant'>TRUE</tt></b> to turn implicit flushing on, <b><tt class='constant'>FALSE</tt></b> otherwise. Defaults to <b><tt class='constant'>TRUE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.ob-implicit-flush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.ob-implicit-flush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.flush.php' class='function' rel='rdfs-seeAlso'>flush()</a> - Flush the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_status" value="<div id='function.ob-get-status' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-status.php'>ob_get_status</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_status</span> &amp;mdash; <span class='dc-title'>Get status of output buffers</span></p> </div> <a name='function.ob-get-status.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>ob_get_status</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$full_status</tt> <span class='initializer'> = FALSE</span></span> ] )</div> <p class='para rdfs-comment'> <b>ob_get_status()</b> returns status information on either the top level output buffer or all active output buffer levels if <i><tt class='parameter'>full_status</tt></i> is set to <b><tt class='constant'>TRUE</tt></b>. </p> </div> <a name='function.ob-get-status.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>full_status</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <b><tt class='constant'>TRUE</tt></b> to return all active output buffer levels. If <b><tt class='constant'>FALSE</tt></b> or not set, only the top level output buffer is returned. </p> </dd> </dl> <p> </p> </div> <a name='function.ob-get-status.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If called without the <i><tt class='parameter'>full_status</tt></i> parameter or with <i><tt class='parameter'>full_status</tt></i> = <b><tt class='constant'>FALSE</tt></b> a simple array with the following elements is returned: </p><div class='informalexample'> <div class='example-contents screen'> <div class='returnvaluescode'><pre class='returnvaluescode'>Array ( [level] =&amp;gt; 2 [type] =&amp;gt; 0 [status] =&amp;gt; 0 [name] =&amp;gt; URL-Rewriter [del] =&amp;gt; 1 )</pre> </div> </div> </div><p> <div class='segmentedlist'> <strong class='title'>Simple <b>ob_get_status()</b> results</strong> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>level</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>Output nesting level</div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>type</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong><i>PHP_OUTPUT_HANDLER_INTERNAL (0)</i> or <i>PHP_OUTPUT_HANDLER_USER (1)</i></div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>status</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>One of <i>PHP_OUTPUT_HANDLER_START</i> (0), <i>PHP_OUTPUT_HANDLER_CONT</i> (1) or <i>PHP_OUTPUT_HANDLER_END</i> (2)</div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>name</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>Name of active output handler or &amp;#039; default output handler&amp;#039; if none is set</div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>del</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>Erase-flag as set by <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a></div></div> </div> </p> <p class='para'> If called with <i><tt class='parameter'>full_status</tt></i> = <b><tt class='constant'>TRUE</tt></b> an array with one element for each active output buffer level is returned. The output level is used as key of the top level array and each array element itself is another array holding status information on one active output level. </p><div class='informalexample'> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Array ( [chunk_size] =&amp;gt; 0 [size] =&amp;gt; 40960 [block_size] =&amp;gt; 10240 [type] =&amp;gt; 1 [status] =&amp;gt; 0 [name] =&amp;gt; default output handler [del] =&amp;gt; 1 ) [1] =&amp;gt; Array ( [chunk_size] =&amp;gt; 0 [size] =&amp;gt; 40960 [block_size] =&amp;gt; 10240 [type] =&amp;gt; 0 [buffer_size] =&amp;gt; 0 [status] =&amp;gt; 0 [name] =&amp;gt; URL-Rewriter [del] =&amp;gt; 1 ) ) </pre></div> </div> </div><p> </p> <p class='para'> The full output contains these additional elements: <div class='segmentedlist'> <strong class='title'>Full <b>ob_get_status()</b> results</strong> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>chunk_size</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>Chunk size as set by <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a></div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>size</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>...</div></div> <div class='seglistitem'><div class='seg'><strong><span class='segtitle'>Key:</span></strong>blocksize</div><div class='seg'><strong><span class='segtitle'>Value:</span></strong>...</div></div> </div> </p> </div> <a name='function.ob-get-status.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-level.php' class='function' rel='rdfs-seeAlso'>ob_get_level()</a> - Return the nesting level of the output buffering mechanism</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-list-handlers.php' class='function' rel='rdfs-seeAlso'>ob_list_handlers()</a> - List all output handlers in use</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_level" value="<div id='function.ob-get-level' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-level.php'>ob_get_level</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_level</span> &amp;mdash; <span class='dc-title'>Return the nesting level of the output buffering mechanism</span></p> </div> <a name='function.ob-get-level.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ob_get_level</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the nesting level of the output buffering mechanism. </p> </div> <a name='function.ob-get-level.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the level of nested output buffering handlers or zero if output buffering is not active. </p> </div> <a name='function.ob-get-level.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_length" value="<div id='function.ob-get-length' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-length.php'>ob_get_length</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_length</span> &amp;mdash; <span class='dc-title'>Return the length of the output buffer</span></p> </div> <a name='function.ob-get-length.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>ob_get_length</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This will return the length of the contents in the output buffer. </p> </div> <a name='function.ob-get-length.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the output buffer contents or <b><tt class='constant'>FALSE</tt></b> if no buffering is active. </p> </div> <a name='function.ob-get-length.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>ob_get_length()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />ob_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$len1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_length</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'World'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$len2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_length</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>ob_end_clean</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$len1&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;.'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$len2</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 6, 11 </pre></div> </div> </div><p> </p> </div> <a name='function.ob-get-length.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_flush" value="<div id='function.ob-get-flush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-flush.php'>ob_get_flush</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_flush</span> &amp;mdash; <span class='dc-title'>Flush the output buffer, return it as a string and turn off output buffering</span></p> </div> <a name='function.ob-get-flush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ob_get_flush</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>ob_get_flush()</b> flushes the output buffer, return it as a string and turns off output buffering. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function is similar to <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a>, except that this function returns the buffer as a string. </span> </p></blockquote> </div> <a name='function.ob-get-flush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the output buffer or <b><tt class='constant'>FALSE</tt></b> if no buffering is active. </p> </div> <a name='function.ob-get-flush.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ob_get_flush()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//using&amp;nbsp;output_buffering=On<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /><br /></span><span style='color: #FF8000'>//save&amp;nbsp;buffer&amp;nbsp;in&amp;nbsp;a&amp;nbsp;file<br /></span><span style='color: #0000BB'>$buffer&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_flush</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>file_put_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'buffer.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$buffer</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>ob_list_handlers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; default output handler ) Array ( ) </pre></div> </div> </div><p> </p> </div> <a name='function.ob-get-flush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-list-handlers.php' class='function' rel='rdfs-seeAlso'>ob_list_handlers()</a> - List all output handlers in use</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_contents" value="<div id='function.ob-get-contents' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-contents.php'>ob_get_contents</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_contents</span> &amp;mdash; <span class='dc-title'>Return the contents of the output buffer</span></p> </div> <a name='function.ob-get-contents.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ob_get_contents</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the contents of the output buffer without clearing it. </p> </div> <a name='function.ob-get-contents.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This will return the contents of the output buffer or <b><tt class='constant'>FALSE</tt></b>, if output buffering isn&amp;#039;t active. </p> </div> <a name='function.ob-get-contents.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>ob_get_contents()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />ob_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$out1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_contents</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'World'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$out2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_contents</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>ob_end_clean</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$out1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$out2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(6) &amp;quot;Hello &amp;quot; string(11) &amp;quot;Hello World&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='function.ob-get-contents.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-length.php' class='function' rel='rdfs-seeAlso'>ob_get_length()</a> - Return the length of the output buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_get_clean" value="<div id='function.ob-get-clean' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-get-clean.php'>ob_get_clean</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_get_clean</span> &amp;mdash; <span class='dc-title'>Get current buffer contents and delete current output buffer</span></p> </div> <a name='function.ob-get-clean.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ob_get_clean</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the current buffer contents and delete current output buffer. </p> <p class='para'> <b>ob_get_clean()</b> essentially executes both <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a> and <a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function'>ob_end_clean()</a>. </p> </div> <a name='function.ob-get-clean.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the contents of the output buffer and end output buffering. If output buffering isn&amp;#039;t active then <b><tt class='constant'>FALSE</tt></b> is returned. </p> </div> <a name='function.ob-get-clean.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>ob_get_clean()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />ob_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$out&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ob_get_clean</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$out&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(11) &amp;quot;hello world&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='function.ob-get-clean.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_flush" value="<div id='function.ob-flush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-flush.php'>ob_flush</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_flush</span> &amp;mdash; <span class='dc-title'>Flush (send) the output buffer</span></p> </div> <a name='function.ob-flush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ob_flush</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function will send the contents of the output buffer (if any). If you want to further process the buffer&amp;#039;s contents you have to call <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a> before <b>ob_flush()</b> as the buffer contents are discarded after <b>ob_flush()</b> is called. </p> <p class='para'> This function does not destroy the output buffer like <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a> does. </p> </div> <a name='function.ob-flush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.ob-flush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-clean.php' class='function' rel='rdfs-seeAlso'>ob_clean()</a> - Clean (erase) the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_end_flush" value="<div id='function.ob-end-flush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-end-flush.php'>ob_end_flush</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_end_flush</span> &amp;mdash; <span class='dc-title'>Flush (send) the output buffer and turn off output buffering</span></p> </div> <a name='function.ob-end-flush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ob_end_flush</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function will send the contents of the topmost output buffer (if any) and turn this output buffer off. If you want to further process the buffer&amp;#039;s contents you have to call <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a> before <b>ob_end_flush()</b> as the buffer contents are discarded after <b>ob_end_flush()</b> is called. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> This function is similar to <a href='http://www.php.net/manual/en/function.ob-get-flush.php' class='function'>ob_get_flush()</a>, except that <a href='http://www.php.net/manual/en/function.ob-get-flush.php' class='function'>ob_get_flush()</a> returns the buffer as a string. </span> </p></blockquote> </div> <a name='function.ob-end-flush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. Reasons for failure are first that you called the function without an active buffer or that for some reason a buffer could not be deleted (possible for special buffer). </p> </div> <a name='function.ob-end-flush.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If the function fails it generates an <b><tt class='constant'>E_NOTICE</tt></b>. </p> </div> <a name='function.ob-end-flush.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The boolean return value was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ob-end-flush.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ob_end_flush()</b> example</b></p> <div class='example-contents para'><p> The following example shows an easy way to flush and end all output buffers: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>while&amp;nbsp;(@</span><span style='color: #0000BB'>ob_end_flush</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ob-end-flush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-flush.php' class='function' rel='rdfs-seeAlso'>ob_get_flush()</a> - Flush the output buffer, return it as a string and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-flush.php' class='function' rel='rdfs-seeAlso'>ob_flush()</a> - Flush (send) the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_end_clean" value="<div id='function.ob-end-clean' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-end-clean.php'>ob_end_clean</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_end_clean</span> &amp;mdash; <span class='dc-title'>Clean (erase) the output buffer and turn off output buffering</span></p> </div> <a name='function.ob-end-clean.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>ob_end_clean</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function discards the contents of the topmost output buffer and turns off this output buffering. If you want to further process the buffer&amp;#039;s contents you have to call <a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function'>ob_get_contents()</a> before <b>ob_end_clean()</b> as the buffer contents are discarded when <b>ob_end_clean()</b> is called. </p> </div> <a name='function.ob-end-clean.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. Reasons for failure are first that you called the function without an active buffer or that for some reason a buffer could not be deleted (possible for special buffer). </p> </div> <a name='function.ob-end-clean.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If the function fails it generates an <b><tt class='constant'>E_NOTICE</tt></b>. </p> </div> <a name='function.ob-end-clean.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The boolean return value was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.ob-end-clean.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> The following example shows an easy way to get rid of all output buffers: </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ob_end_clean()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />ob_start</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Text&amp;nbsp;that&amp;nbsp;won\'t&amp;nbsp;get&amp;nbsp;displayed.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>ob_end_clean</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ob-end-clean.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-start.php' class='function' rel='rdfs-seeAlso'>ob_start()</a> - Turn on output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-get-contents.php' class='function' rel='rdfs-seeAlso'>ob_get_contents()</a> - Return the contents of the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-flush.php' class='function' rel='rdfs-seeAlso'>ob_flush()</a> - Flush (send) the output buffer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ob_clean" value="<div id='function.ob-clean' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ob-clean.php'>ob_clean</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>ob_clean</span> &amp;mdash; <span class='dc-title'>Clean (erase) the output buffer</span></p> </div> <a name='function.ob-clean.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>ob_clean</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function discards the contents of the output buffer. </p> <p class='para'> This function does not destroy the output buffer like <a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function'>ob_end_clean()</a> does. </p> </div> <a name='function.ob-clean.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.ob-clean.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ob-flush.php' class='function' rel='rdfs-seeAlso'>ob_flush()</a> - Flush (send) the output buffer</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function' rel='rdfs-seeAlso'>ob_end_flush()</a> - Flush (send) the output buffer and turn off output buffering</li> <li class='member'><a href='http://www.php.net/manual/en/function.ob-end-clean.php' class='function' rel='rdfs-seeAlso'>ob_end_clean()</a> - Clean (erase) the output buffer and turn off output buffering</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="number_format" value="<div id='function.number-format' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.number-format.php'>number_format</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>number_format</span> &amp;mdash; <span class='dc-title'>Format a number with grouped thousands</span></p> </div> <a name='function.number-format.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>number_format</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$number</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$decimals</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>number_format</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$number</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$decimals</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dec_point</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$thousands_sep</tt></span> )</div> <p class='para rdfs-comment'> This function accepts either one, two, or four parameters (not three): </p> <p class='para'> If only one parameter is given, <i><tt class='parameter'>number</tt></i> will be formatted without decimals, but with a comma (&amp;quot;,&amp;quot;) between every group of thousands. </p> <p class='para'> If two parameters are given, <i><tt class='parameter'>number</tt></i> will be formatted with <i><tt class='parameter'>decimals</tt></i> decimals with a dot (&amp;quot;.&amp;quot;) in front, and a comma (&amp;quot;,&amp;quot;) between every group of thousands. </p> <p class='para'> If all four parameters are given, <i><tt class='parameter'>number</tt></i> will be formatted with <i><tt class='parameter'>decimals</tt></i> decimals, <i><tt class='parameter'>dec_point</tt></i> instead of a dot (&amp;quot;.&amp;quot;) before the decimals and <i><tt class='parameter'>thousands_sep</tt></i> instead of a comma (&amp;quot;,&amp;quot;) between every group of thousands. </p> </div> <a name='function.number-format.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A formatted version of <i><tt class='parameter'>number</tt></i> . </p> </div> <a name='function.number-format.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>number</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number being formatted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decimals</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Sets the number of decimal points. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dec_point</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Sets the separator for the decimal point. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>thousands_sep</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Sets the thousands separator. </p> <p class='para'> Only the first character of <i><tt class='parameter'>thousands_sep</tt></i> is used. For example, if you use <i>bar</i> as <i><tt class='parameter'>thousands_sep</tt></i> on the number <i>1000</i>, <b>number_format()</b> will return <i>1b000</i>. </p> </dd> </dl> <p> </p> </div> <a name='function.number-format.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>number_format()</b> Example</b></p> <div class='example-contents para'><p> For instance, French notation usually use two decimals, comma (&amp;#039;,&amp;#039;) as decimal separator, and space (&amp;#039; &amp;#039;) as thousand separator. This is achieved with this line : </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$number&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1234.56</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;english&amp;nbsp;notation&amp;nbsp;(default)<br /></span><span style='color: #0000BB'>$english_format_number&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>number_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;1,235<br /><br />//&amp;nbsp;French&amp;nbsp;notation<br /></span><span style='color: #0000BB'>$nombre_format_francais&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>number_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>','</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;1&amp;nbsp;234,56<br /><br /></span><span style='color: #0000BB'>$number&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1234.5678</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;english&amp;nbsp;notation&amp;nbsp;without&amp;nbsp;thousands&amp;nbsp;seperator<br /></span><span style='color: #0000BB'>$english_format_number&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>number_format</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;1234.57<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.number-format.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.money-format.php' class='function' rel='rdfs-seeAlso'>money_format()</a> - Formats a number as a currency string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="NoRewindIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.norewinditerator.php'>The NoRewindIterator class</a></h1> <div class='partintro'> <div id='norewinditerator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> This iterator cannot be rewinded. </p> </div> <div id='norewinditerator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>NoRewindIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>NoRewindIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iteratoriterator.php' class='classname'>IteratorIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/norewinditerator.haschildren.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.construct.php' class='function'>IteratorIterator::__construct</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.traversable.php' class='type Traversable'>Traversable</a></span> <tt class='parameter'>$iterator</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.current.php' class='function'>IteratorIterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.getinneriterator.php' class='function'>IteratorIterator::getInnerIterator</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.key.php' class='function'>IteratorIterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.next.php' class='function'>IteratorIterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.rewind.php' class='function'>IteratorIterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/iteratoriterator.valid.php' class='function'>IteratorIterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/norewinditerator.haschildren.php'>NoRewindIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Prevents the rewind operation on the inner iterator.</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="nl2br" value="<div id='function.nl2br' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.nl2br.php'>nl2br</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>nl2br</span> &amp;mdash; <span class='dc-title'>Inserts HTML line breaks before all newlines in a string</span></p> </div> <a name='function.nl2br.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>nl2br</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$is_xhtml</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>string</tt></i> with &amp;#039;&amp;lt;br /&amp;gt;&amp;#039; or &amp;#039;&amp;lt;br&amp;gt;&amp;#039; inserted before all newlines. </p> </div> <a name='function.nl2br.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>is_xhtml</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whenever to use XHTML compatible line breaks or not (defaults to <b><tt class='constant'>TRUE</tt></b>). </p> </dd> </dl> <p> </p> </div> <a name='function.nl2br.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the altered string. </p> </div> <a name='function.nl2br.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 using <b>nl2br()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>nl2br</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo&amp;nbsp;isn't\n&amp;nbsp;bar'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> foo isn&amp;#039;t&amp;lt;br /&amp;gt; bar </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Generating valid HTML markup using the <i><tt class='parameter'>is_xhtml</tt></i> parameter</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>nl2br</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Welcome\r\nThis&amp;nbsp;is&amp;nbsp;my&amp;nbsp;HTML&amp;nbsp;document'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Welcome&amp;lt;br&amp;gt; This is my HTML document </pre></div> </div> </div><p> </p> </div> <a name='function.nl2br.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added the optional <i><tt class='parameter'>is_xhtml</tt></i> parameter. </td> </tr> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> <b>nl2br()</b> is now XHTML compliant. All older versions will return <i><tt class='parameter'>string</tt></i> with &amp;#039;&amp;lt;br&amp;gt;&amp;#039; inserted before newlines instead of &amp;#039;&amp;lt;br /&amp;gt;&amp;#039;. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.nl2br.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlentities.php' class='function' rel='rdfs-seeAlso'>htmlentities()</a> - Convert all applicable characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.wordwrap.php' class='function' rel='rdfs-seeAlso'>wordwrap()</a> - Wraps a string to a given number of characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-replace.php' class='function' rel='rdfs-seeAlso'>str_replace()</a> - Replace all occurrences of the search string with the replacement string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="next" value="<div id='function.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.next.php'>next</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>next</span> &amp;mdash; <span class='dc-title'>Advance the internal array pointer of an array</span></p> </div> <a name='function.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>next</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>next()</b> behaves like <a href='http://www.php.net/manual/en/function.current.php' class='function'>current()</a>, with one difference. It advances the internal array pointer one place forward before returning the element value. That means it returns the next array value and advances the internal array pointer by one. </p> </div> <a name='function.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> being affected. </p> </dd> </dl> <p> </p> </div> <a name='function.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the array value in the next place that&amp;#039;s pointed to by the internal array pointer, or <b><tt class='constant'>FALSE</tt></b> if there are no more elements. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Example use of <b>next()</b> and friends</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$transport&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'foot'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bike'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'car'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'plane'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'foot';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'car';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>prev</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'bike';<br /></span><span style='color: #0000BB'>$mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>end</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$transport</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$mode&amp;nbsp;=&amp;nbsp;'plane';<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.next.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> You won&amp;#039;t be able to distinguish the end of an array from a <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>FALSE</tt></b> element. To properly traverse an array which may contain <b><tt class='constant'>FALSE</tt></b> elements, see the <a href='http://www.php.net/manual/en/function.each.php' class='function'>each()</a> function. </span> </p></blockquote> </div> <a name='function.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.current.php' class='function' rel='rdfs-seeAlso'>current()</a> - Return the current element in an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.end.php' class='function' rel='rdfs-seeAlso'>end()</a> - Set the internal pointer of an array to its last element</li> <li class='member'><a href='http://www.php.net/manual/en/function.prev.php' class='function' rel='rdfs-seeAlso'>prev()</a> - Rewind the internal array pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.reset.php' class='function' rel='rdfs-seeAlso'>reset()</a> - Set the internal pointer of an array to its first element</li> <li class='member'><a href='http://www.php.net/manual/en/function.each.php' class='function' rel='rdfs-seeAlso'>each()</a> - Return the current key and value pair from an array and advance the array cursor</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="natsort" value="<div id='function.natsort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.natsort.php'>natsort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>natsort</span> &amp;mdash; <span class='dc-title'>Sort an array using a &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='function.natsort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>natsort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a &amp;quot;natural ordering&amp;quot;. An example of the difference between this algorithm and the regular computer string sorting algorithms (used in <a href='http://www.php.net/manual/en/function.sort.php' class='function'>sort()</a>) can be seen in the example below. </p> </div> <a name='function.natsort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.natsort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.natsort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>natsort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'img12.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img10.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img2.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img1.png'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>sort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>natsort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nNatural&amp;nbsp;order&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Standard sorting Array ( [0] =&amp;gt; img1.png [1] =&amp;gt; img10.png [2] =&amp;gt; img12.png [3] =&amp;gt; img2.png ) Natural order sorting Array ( [3] =&amp;gt; img1.png [2] =&amp;gt; img2.png [1] =&amp;gt; img10.png [0] =&amp;gt; img12.png ) </pre></div> </div> <div class='example-contents para'><p> For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p></div> </div><p> </p> </div> <a name='function.natsort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.natcasesort.php' class='function' rel='rdfs-seeAlso'>natcasesort()</a> - Sort an array using a case insensitive 'natural order' algorithm</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.strnatcmp.php' class='function' rel='rdfs-seeAlso'>strnatcmp()</a> - String comparisons using a 'natural order' algorithm</li> <li class='member'><a href='http://www.php.net/manual/en/function.strnatcasecmp.php' class='function' rel='rdfs-seeAlso'>strnatcasecmp()</a> - Case insensitive string comparisons using a 'natural order' algorithm</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="natcasesort" value="<div id='function.natcasesort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.natcasesort.php'>natcasesort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>natcasesort</span> &amp;mdash; <span class='dc-title'>Sort an array using a case insensitive &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='function.natcasesort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>natcasesort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> <b>natcasesort()</b> is a case insensitive version of <a href='http://www.php.net/manual/en/function.natsort.php' class='function'>natsort()</a>. </p> <p class='para'> This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a &amp;quot;natural ordering&amp;quot;. </p> </div> <a name='function.natcasesort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> </dl> <p> </p> </div> <a name='function.natcasesort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.natcasesort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>natcasesort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$array2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'IMG0.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img12.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img10.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img2.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img1.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'IMG3.png'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>sort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;sorting\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>natcasesort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nNatural&amp;nbsp;order&amp;nbsp;sorting&amp;nbsp;(case-insensitive)\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Standard sorting Array ( [0] =&amp;gt; IMG0.png [1] =&amp;gt; IMG3.png [2] =&amp;gt; img1.png [3] =&amp;gt; img10.png [4] =&amp;gt; img12.png [5] =&amp;gt; img2.png ) Natural order sorting (case-insensitive) Array ( [0] =&amp;gt; IMG0.png [4] =&amp;gt; img1.png [3] =&amp;gt; img2.png [5] =&amp;gt; IMG3.png [2] =&amp;gt; img10.png [1] =&amp;gt; img12.png ) </pre></div> </div> <div class='example-contents para'><p> For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p></div> </div><p> </p> </div> <a name='function.natcasesort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.natsort.php' class='function' rel='rdfs-seeAlso'>natsort()</a> - Sort an array using a 'natural order' algorithm</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.strnatcmp.php' class='function' rel='rdfs-seeAlso'>strnatcmp()</a> - String comparisons using a 'natural order' algorithm</li> <li class='member'><a href='http://www.php.net/manual/en/function.strnatcasecmp.php' class='function' rel='rdfs-seeAlso'>strnatcasecmp()</a> - Case insensitive string comparisons using a 'natural order' algorithm</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
</strings>

<strings>
<string id="zend_version" value="<div id='function.zend-version' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.zend-version.php'>zend_version</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>zend_version</span> &amp;mdash; <span class='dc-title'>Gets the version of the current Zend engine</span></p> </div> <a name='function.zend-version.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>zend_version</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns a string containing the version of the currently running Zend Engine. </p> </div> <a name='function.zend-version.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the Zend Engine version number, as a string. </p> </div> <a name='function.zend-version.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>zend_version()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Zend&amp;nbsp;engine&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>zend_version</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Zend engine version: 2.2.0 </pre></div> </div> </div><p> </p> </div> <a name='function.zend-version.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpinfo.php' class='function' rel='rdfs-seeAlso'>phpinfo()</a> - Outputs lots of PHP information</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpcredits.php' class='function' rel='rdfs-seeAlso'>phpcredits()</a> - Prints out the credits for PHP</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-logo-guid.php' class='function' rel='rdfs-seeAlso'>php_logo_guid()</a> - Gets the logo guid</li> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="zend_logo_guid" value="<div id='function.zend-logo-guid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.zend-logo-guid.php'>zend_logo_guid</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>zend_logo_guid</span> &amp;mdash; <span class='dc-title'>Gets the Zend guid</span></p> </div> <a name='function.zend-logo-guid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>zend_logo_guid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns the ID which can be used to display the Zend logo using the built-in image. </p> </div> <a name='function.zend-logo-guid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <i>PHPE9568F35-D428-11d2-A769-00AA001ACF42</i>. </p> </div> <a name='function.zend-logo-guid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>zend_logo_guid()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;img&amp;nbsp;src=''&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'PHP_SELF'</span><span style='color: #007700'>]&amp;nbsp;.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'?='&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>zend_logo_guid</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''&amp;nbsp;alt='Zend&amp;nbsp;Logo&amp;nbsp;!'&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.zend-logo-guid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.php-logo-guid.php' class='function' rel='rdfs-seeAlso'>php_logo_guid()</a> - Gets the logo guid</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="wordwrap" value="<div id='function.wordwrap' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.wordwrap.php'>wordwrap</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>wordwrap</span> &amp;mdash; <span class='dc-title'>Wraps a string to a given number of characters</span></p> </div> <a name='function.wordwrap.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>wordwrap</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$width</tt><span class='initializer'> = 75</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$break</tt><span class='initializer'> = &amp;quot;\n&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$cut</tt><span class='initializer'> = false</span></span> ]]] )</div> <p class='para rdfs-comment'> Wraps a string to a given number of characters using a string break character. </p> </div> <a name='function.wordwrap.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>width</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The column width. Defaults to 75. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>break</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The line is broken using the optional <i><tt class='parameter'>break</tt></i> parameter. Defaults to &amp;#039;<i>\n</i>&amp;#039;. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cut</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>cut</tt></i> is set to <b><tt class='constant'>TRUE</tt></b>, the string is always wrapped at or before the specified width. So if you have a word that is larger than the given width, it is broken apart. (See second example). </p> </dd> </dl> <p> </p> </div> <a name='function.wordwrap.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the given string wrapped at the specified column. </p> </div> <a name='function.wordwrap.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.3</td> <td align='left'> The optional <i><tt class='parameter'>cut</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.wordwrap.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>wordwrap()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;quick&amp;nbsp;brown&amp;nbsp;fox&amp;nbsp;jumped&amp;nbsp;over&amp;nbsp;the&amp;nbsp;lazy&amp;nbsp;dog.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$newtext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>wordwrap</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>20</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$newtext</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The quick brown fox&amp;lt;br /&amp;gt; jumped over the lazy&amp;lt;br /&amp;gt; dog. </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b>wordwrap()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;very&amp;nbsp;long&amp;nbsp;woooooooooooord.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$newtext&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>wordwrap</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$newtext</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> A very long wooooooo ooooord. </pre></div> </div> </div><p> </p> </div> <a name='function.wordwrap.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.nl2br.php' class='function' rel='rdfs-seeAlso'>nl2br()</a> - Inserts HTML line breaks before all newlines in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.chunk-split.php' class='function' rel='rdfs-seeAlso'>chunk_split()</a> - Split a string into smaller chunks</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="vsprintf" value="<div id='function.vsprintf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.vsprintf.php'>vsprintf</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>vsprintf</span> &amp;mdash; <span class='dc-title'>Return a formatted string</span></p> </div> <a name='function.vsprintf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>vsprintf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Operates as <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> but accepts an array of arguments, rather than a variable number of arguments. </p> </div> <a name='function.vsprintf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> for a description of <i><tt class='parameter'>format</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.vsprintf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Return array values as a formatted string according to <i><tt class='parameter'>format</tt></i> (which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>). </p> </div> <a name='function.vsprintf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>vsprintf()</b>: zero-padded integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>print&amp;nbsp;</span><span style='color: #0000BB'>vsprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%04d-%02d-%02d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'1988-8-1'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1988-08-01<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.vsprintf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.vprintf.php' class='function' rel='rdfs-seeAlso'>vprintf()</a> - Output a formatted string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="vprintf" value="<div id='function.vprintf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.vprintf.php'>vprintf</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>vprintf</span> &amp;mdash; <span class='dc-title'>Output a formatted string</span></p> </div> <a name='function.vprintf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>vprintf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Display array values as a formatted string according to <i><tt class='parameter'>format</tt></i> (which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>). </p> <p class='para'> Operates as <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a> but accepts an array of arguments, rather than a variable number of arguments. </p> </div> <a name='function.vprintf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> for a description of <i><tt class='parameter'>format</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.vprintf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the outputted string. </p> </div> <a name='function.vprintf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>vprintf()</b>: zero-padded integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />vprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%04d-%02d-%02d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'-'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'1988-8-1'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1988-08-01<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.vprintf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.vsprintf.php' class='function' rel='rdfs-seeAlso'>vsprintf()</a> - Return a formatted string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="vfprintf" value="<div id='function.vfprintf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.vfprintf.php'>vfprintf</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>vfprintf</span> &amp;mdash; <span class='dc-title'>Write a formatted string to a stream</span></p> </div> <a name='function.vfprintf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>vfprintf</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$args</tt></span> )</div> <p class='para rdfs-comment'> Write a string produced according to <i><tt class='parameter'>format</tt></i> to the stream resource specified by <i><tt class='parameter'>handle</tt></i> . </p> <p class='para'> Operates as <a href='http://www.php.net/manual/en/function.fprintf.php' class='function'>fprintf()</a> but accepts an array of arguments, rather than a variable number of arguments. </p> </div> <a name='function.vfprintf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> for a description of <i><tt class='parameter'>format</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.vfprintf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the outputted string. </p> </div> <a name='function.vfprintf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>vfprintf()</b>: zero-padded integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(!(</span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'date.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>)))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;<br /><br /></span><span style='color: #0000BB'>vfprintf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%04d-%02d-%02d'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #0000BB'>$year</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #007700'>));<br /></span><span style='color: #FF8000'>//&amp;nbsp;will&amp;nbsp;write&amp;nbsp;the&amp;nbsp;formatted&amp;nbsp;ISO&amp;nbsp;date&amp;nbsp;to&amp;nbsp;date.txt<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.vfprintf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.vsprintf.php' class='function' rel='rdfs-seeAlso'>vsprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.number-format.php' class='function' rel='rdfs-seeAlso'>number_format()</a> - Format a number with grouped thousands</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="version_compare" value="<div id='function.version-compare' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.version-compare.php'>version_compare</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>version_compare</span> &amp;mdash; <span class='dc-title'>Compares two &amp;quot;PHP-standardized&amp;quot; version number strings</span></p> </div> <a name='function.version-compare.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>version_compare</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$version1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$version2</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$operator</tt></span> ] )</div> <p class='para rdfs-comment'> <b>version_compare()</b> compares two &amp;quot;PHP-standardized&amp;quot; version number strings. This is useful if you would like to write programs working only on some versions of PHP. </p> <p class='para'> The function first replaces <i>_</i>, <i>-</i> and <i>+</i> with a dot <i>.</i> in the version strings and also inserts dots <i>.</i> before and after any non number so that for example &amp;#039;4.3.2RC1&amp;#039; becomes &amp;#039;4.3.2.RC.1&amp;#039;. Then it splits the results like if you were using explode(&amp;#039;.&amp;#039;, $ver). Then it compares the parts starting from left to right. If a part contains special version strings these are handled in the following order: <i>any string not found in this list</i> &amp;lt; <i>dev</i> &amp;lt; <i>alpha</i> = <i>a</i> &amp;lt; <i>beta</i> = <i>b</i> &amp;lt; <i>RC</i> = <i>rc</i> &amp;lt; <i>#</i> &amp;lt; <i>pl</i> = <i>p</i>. This way not only versions with different levels like &amp;#039;4.1&amp;#039; and &amp;#039;4.1.2&amp;#039; can be compared but also any PHP specific version containing development state. </p> </div> <a name='function.version-compare.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>version1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> First version number. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>version2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Second version number. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>operator</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If you specify the third optional <i><tt class='parameter'>operator</tt></i> argument, you can test for a particular relationship. The possible operators are: <i>&amp;lt;</i>, <i>lt</i>, <i>&amp;lt;=</i>, <i>le</i>, <i>&amp;gt;</i>, <i>gt</i>, <i>&amp;gt;=</i>, <i>ge</i>, <i>==</i>, <i>=</i>, <i>eq</i>, <i>!=</i>, <i>&amp;lt;&amp;gt;</i>, <i>ne</i> respectively. </p> <p class='para'> This parameter is case-sensitive, so values should be lowercase. </p> </dd> </dl> <p> </p> </div> <a name='function.version-compare.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> By default, <b>version_compare()</b> returns <i>-1</i> if the first version is lower than the second, <i>0</i> if they are equal, and <i>1</i> if the second is lower. </p> <p class='para'> When using the optional <i><tt class='parameter'>operator</tt></i> argument, the function will return <b><tt class='constant'>TRUE</tt></b> if the relationship is the one specified by the operator, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.version-compare.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> The examples below use the <b><tt class='constant'>PHP_VERSION</tt></b> constant, because it contains the value of the PHP version that is executing the code. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>version_compare()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>version_compare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_VERSION</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'6.0.0'</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I&amp;nbsp;am&amp;nbsp;at&amp;nbsp;least&amp;nbsp;PHP&amp;nbsp;version&amp;nbsp;6.0.0,&amp;nbsp;my&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>version_compare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_VERSION</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'5.3.0'</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I&amp;nbsp;am&amp;nbsp;at&amp;nbsp;least&amp;nbsp;PHP&amp;nbsp;version&amp;nbsp;5.3.0,&amp;nbsp;my&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>version_compare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_VERSION</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'5.0.0'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;gt;'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I&amp;nbsp;am&amp;nbsp;using&amp;nbsp;PHP&amp;nbsp;5,&amp;nbsp;my&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>version_compare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>PHP_VERSION</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'5.0.0'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'I&amp;nbsp;am&amp;nbsp;using&amp;nbsp;PHP&amp;nbsp;4,&amp;nbsp;my&amp;nbsp;version:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.version-compare.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: The <b><tt class='constant'>PHP_VERSION</tt></b> constant holds current PHP version. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Note that pre-release versions, such as 5.3.0-dev, are considered lower than their final release counterparts (like 5.3.0). <br /> </p></blockquote> </div> <a name='function.version-compare.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.phpversion.php' class='function' rel='rdfs-seeAlso'>phpversion()</a> - Gets the current PHP version</li> <li class='member'><a href='http://www.php.net/manual/en/function.php-uname.php' class='function' rel='rdfs-seeAlso'>php_uname()</a> - Returns information about the operating system PHP is running on</li> <li class='member'><a href='http://www.php.net/manual/en/function.function-exists.php' class='function' rel='rdfs-seeAlso'>function_exists()</a> - Return TRUE if the given function has been defined</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="var_export" value="<div id='function.var-export' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.var-export.php'>var_export</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>var_export</span> &amp;mdash; <span class='dc-title'>Outputs or returns a parsable string representation of a variable</span></p> </div> <a name='function.var-export.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>var_export</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$expression</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$return</tt><span class='initializer'> = false</span></span> ] )</div> <p class='simpara'> <b>var_export()</b> gets structured information about the given variable. It is similar to <a href='http://www.php.net/manual/en/function.var-dump.php' class='function'>var_dump()</a> with one exception: the returned representation is valid PHP code. </p> </div> <a name='function.var-export.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>expression</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable you want to export. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If used and set to <b><tt class='constant'>TRUE</tt></b>, <b>var_export()</b> will return the variable representation instead of outputing it. </p> <blockquote><p><b class='note'>Note</b>: This function uses internal output buffering with this parameter so it can not be used inside an <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a> callback function.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.var-export.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the variable representation when the <i><tt class='parameter'>return</tt></i> parameter is used and evaluates to <b><tt class='constant'>TRUE</tt></b>. Otherwise, this function will return <b><tt class='constant'>NULL</tt></b>. </p> </div> <a name='function.var-export.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Possibility to export classes and arrays containing classes using the <a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.set-state' class='link'>__set_state</a> magic method. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.var-export.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>var_export()</b> Examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;array&amp;nbsp;(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array ( 0 =&amp;gt; 1, 1 =&amp;gt; 2, 2 =&amp;gt; array ( 0 =&amp;gt; &amp;#039;a&amp;#039;, 1 =&amp;gt; &amp;#039;b&amp;#039;, 2 =&amp;gt; &amp;#039;c&amp;#039;, ), ) </pre></div> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>3.1</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$v&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$v</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 3.1 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Exporting classes since PHP 5.1.0</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>A&amp;nbsp;</span><span style='color: #007700'>{&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>;&amp;nbsp;}<br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>A</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> A::__set_state(array( &amp;#039;var&amp;#039; =&amp;gt; 5, )) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Using <a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.set-state' class='link'>__set_state</a> (since PHP 5.1.0)</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>A<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;</span><span style='color: #0000BB'>$var2</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__set_state</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$an_array</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>A</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$an_array</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'var1'</span><span style='color: #007700'>];<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$an_array</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'var2'</span><span style='color: #007700'>];<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>A</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>;<br /><br />eval(</span><span style='color: #DD0000'>'$b&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>var_export</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>';'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$b&amp;nbsp;=&amp;nbsp;A::__set_state(array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'var1'&amp;nbsp;=&amp;gt;&amp;nbsp;5,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'var2'&amp;nbsp;=&amp;gt;&amp;nbsp;'foo',<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(A)#2 (2) { [&amp;quot;var1&amp;quot;]=&amp;gt; int(5) [&amp;quot;var2&amp;quot;]=&amp;gt; string(3) &amp;quot;foo&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='function.var-export.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Variables of type <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> couldn&amp;#039;t be exported by this function. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <b>var_export()</b> does not handle circular references as it would be close to impossible to generate parsable PHP code for that. If you want to do something with the full representation of an array or object, use <a href='http://www.php.net/manual/en/function.serialize.php' class='function'>serialize()</a>. <br /> </p></blockquote> </div> <a name='function.var-export.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.print-r.php' class='function' rel='rdfs-seeAlso'>print_r()</a> - Prints human-readable information about a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.serialize.php' class='function' rel='rdfs-seeAlso'>serialize()</a> - Generates a storable representation of a value</li> <li class='member'><a href='http://www.php.net/manual/en/function.var-dump.php' class='function' rel='rdfs-seeAlso'>var_dump()</a> - Dumps information about a variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="var_dump" value="<div id='function.var-dump' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.var-dump.php'>var_dump</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>var_dump</span> &amp;mdash; <span class='dc-title'>Dumps information about a variable</span></p> </div> <a name='function.var-dump.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>var_dump</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$expression</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$expression</tt></span> [, <span class='methodparam'> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='simpara'> This function displays structured information about one or more expressions that includes its type and value. Arrays and objects are explored recursively with values indented to show structure. </p> <p class='simpara'> In PHP 5 all public, private and protected properties of objects will be returned in the output. </p> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As with anything that outputs its result directly to the browser, the <a href='http://www.php.net/manual/en/ref.outcontrol.php' class='link'>output-control functions</a> can be used to capture the output of this function, and save it in a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> (for example).</p></div> </div> <a name='function.var-dump.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>expression</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable you want to export. </p> </dd> </dl> <p> </p> </div> <a name='function.var-dump.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.var-dump.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>var_dump()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(3) { [0]=&amp;gt; int(1) [1]=&amp;gt; int(2) [2]=&amp;gt; array(3) { [0]=&amp;gt; string(1) &amp;quot;a&amp;quot; [1]=&amp;gt; string(1) &amp;quot;b&amp;quot; [2]=&amp;gt; string(1) &amp;quot;c&amp;quot; } } </pre></div> </div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>3.1</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> float(3.1) bool(true) </pre></div> </div> </div><p> </p> </div> <a name='function.var-dump.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.var-export.php' class='function' rel='rdfs-seeAlso'>var_export()</a> - Outputs or returns a parsable string representation of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.print-r.php' class='function' rel='rdfs-seeAlso'>print_r()</a> - Prints human-readable information about a variable</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="usort" value="<div id='function.usort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.usort.php'>usort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>usort</span> &amp;mdash; <span class='dc-title'>Sort an array by values using a user-defined comparison function</span></p> </div> <a name='function.usort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>usort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <p class='para rdfs-comment'> This function will sort an array by its values using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function. </p> <blockquote><p><b class='note'>Note</b>: If two members compare as equal, their order in the sorted array is undefined. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function assigns new keys to the elements in <i><tt class='parameter'>array</tt></i> . It will remove any existing keys that may have been assigned, rather than just reordering the keys.</span></p></blockquote> </div> <a name='function.usort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmp_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.usort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.usort.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> A new sort algorithm was introduced. The <i><tt class='parameter'>cmp_function</tt></i> doesn&amp;#039;t keep the original order for elements comparing as equal. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.usort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>usort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;-</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>:&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0: 1 1: 2 2: 3 3: 5 4: 6 </pre></div> </div> </div><p> </p> <blockquote><p><b class='note'>Note</b>: Obviously in this trivial case the <a href='http://www.php.net/manual/en/function.sort.php' class='function'>sort()</a> function would be more appropriate. <br /> </p></blockquote> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>usort()</b> example using multi-dimensional array </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>strcmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>],&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>]);<br />}<br /><br /></span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>][</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'lemons'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>][</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'apples'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>[</span><span style='color: #0000BB'>2</span><span style='color: #007700'>][</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'grapes'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(list(</span><span style='color: #0000BB'>$key</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>each</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'\$fruits[</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>]:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'fruit'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> When sorting a multi-dimensional array, <var class='varname'>$a</var> and <var class='varname'>$b</var> contain references to the first index of the array. </p></div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> $fruits[0]: apples $fruits[1]: grapes $fruits[2]: lemons </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 <b>usort()</b> example using a member function of an object </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>TestObj&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>TestObj</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>name&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;static&amp;nbsp;comparing&amp;nbsp;function:&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>static&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>cmp_obj</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$al&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>name</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bl&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>name</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$al&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$bl</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$al&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$bl</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;+</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>TestObj</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>TestObj</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>TestObj</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'d'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'TestObj'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cmp_obj'</span><span style='color: #007700'>));<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$item</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$item</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>name&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> b c d </pre></div> </div> </div><p> </p> </div> <a name='function.usort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.uasort.php' class='function' rel='rdfs-seeAlso'>uasort()</a> - Sort an array with a user-defined comparison function and maintain index association</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="usleep" value="<div id='function.usleep' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.usleep.php'>usleep</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>usleep</span> &amp;mdash; <span class='dc-title'>Delay execution in microseconds</span></p> </div> <a name='function.usleep.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>usleep</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$micro_seconds</tt></span> )</div> <p class='para rdfs-comment'> Delays program execution for the given number of micro seconds. </p> </div> <a name='function.usleep.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>micro_seconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Halt time in micro seconds. A micro second is one millionth of a second. </p> </dd> </dl> <p> </p> </div> <a name='function.usleep.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.usleep.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> This function now works on Windows systems. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.usleep.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>usleep()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Current&amp;nbsp;time<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'h:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;wait&amp;nbsp;for&amp;nbsp;2&amp;nbsp;seconds<br /></span><span style='color: #0000BB'>usleep</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2000000</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;back!<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'h:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 11:13:28 11:13:30 </pre></div> </div> </div><p> </p> </div> <a name='function.usleep.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sleep.php' class='function' rel='rdfs-seeAlso'>sleep()</a> - Delay execution</li> <li class='member'><a href='http://www.php.net/manual/en/function.time-nanosleep.php' class='function' rel='rdfs-seeAlso'>time_nanosleep()</a> - Delay for a number of seconds and nanoseconds</li> <li class='member'><a href='http://www.php.net/manual/en/function.time-sleep-until.php' class='function' rel='rdfs-seeAlso'>time_sleep_until()</a> - Make the script sleep until the specified time</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-time-limit.php' class='function' rel='rdfs-seeAlso'>set_time_limit()</a> - Limits the maximum execution time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="user_error" value="<div id='function.user-error' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.user-error.php'>user_error</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>user_error</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.trigger-error.php' class='function'>trigger_error()</a></span></p> </div> <a name='function.user-error.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <a href='http://www.php.net/manual/en/function.trigger-error.php' class='function'>trigger_error()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="urlencode" value="<div id='function.urlencode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.urlencode.php'>urlencode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>urlencode</span> &amp;mdash; <span class='dc-title'>URL-encodes string</span></p> </div> <a name='function.urlencode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>urlencode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> This function is convenient when encoding a string to be used in a query part of a URL, as a convenient way to pass variables to the next page. </p> </div> <a name='function.urlencode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be encoded. </p> </dd> </dl> <p> </p> </div> <a name='function.urlencode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string in which all non-alphanumeric characters except <i>-_.</i> have been replaced with a percent (<i>%</i>) sign followed by two hex digits and spaces encoded as plus (<i>+</i>) signs. It is encoded the same way that the posted data from a WWW form is encoded, that is the same way as in <i>application/x-www-form-urlencoded</i> media type. This differs from the <a href='http://www.faqs.org/rfcs/rfc1738' class='link external'>&amp;raquo; RFC 1738</a> encoding (see <a href='http://www.php.net/manual/en/function.rawurlencode.php' class='function'>rawurlencode()</a>) in that for historical reasons, spaces are encoded as plus (+) signs. </p> </div> <a name='function.urlencode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>urlencode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/mycgi?foo='</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>urlencode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$userinput</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>''&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>urlencode()</b> and <a href='http://www.php.net/manual/en/function.htmlentities.php' class='function'>htmlentities()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$query_string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'foo='&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>urlencode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;amp;bar='&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>urlencode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/mycgi?'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>htmlentities</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$query_string</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.urlencode.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Be careful about variables that may match HTML entities. Things like &amp;amp;amp, &amp;amp;copy and &amp;amp;pound are parsed by the browser and the actual entity is used instead of the desired variable name. This is an obvious hassle that the W3C has been telling people about for years. The reference is here: <a href='http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2' class='link external'>&amp;raquo; http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2</a>. <br /> PHP supports changing the argument separator to the W3C-suggested semi-colon through the arg_separator .ini directive. Unfortunately most user agents do not send form data in this semi-colon separated format. A more portable way around this is to use &amp;amp;amp; instead of &amp;amp; as the separator. You don&amp;#039;t need to change PHP&amp;#039;s arg_separator for this. Leave it as &amp;amp;, but simply encode your URLs using <a href='http://www.php.net/manual/en/function.htmlentities.php' class='function'>htmlentities()</a> or <a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function'>htmlspecialchars()</a>. <br /> </p></blockquote> </div> <a name='function.urlencode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.urldecode.php' class='function' rel='rdfs-seeAlso'>urldecode()</a> - Decodes URL-encoded string</li> <li class='member'><a href='http://www.php.net/manual/en/function.htmlentities.php' class='function' rel='rdfs-seeAlso'>htmlentities()</a> - Convert all applicable characters to HTML entities</li> <li class='member'><a href='http://www.php.net/manual/en/function.rawurlencode.php' class='function' rel='rdfs-seeAlso'>rawurlencode()</a> - URL-encode according to RFC 1738</li> <li class='member'><a href='http://www.php.net/manual/en/function.rawurldecode.php' class='function' rel='rdfs-seeAlso'>rawurldecode()</a> - Decode URL-encoded strings</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="urldecode" value="<div id='function.urldecode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.urldecode.php'>urldecode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>urldecode</span> &amp;mdash; <span class='dc-title'>Decodes URL-encoded string</span></p> </div> <a name='function.urldecode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>urldecode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Decodes any <i>%<span class='replaceable'>##</span></i> encoding in the given string. </p> </div> <a name='function.urldecode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be decoded. </p> </dd> </dl> <p> </p> </div> <a name='function.urldecode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the decoded string. </p> </div> <a name='function.urldecode.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>urldecode()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;amp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$QUERY_STRING</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />while&amp;nbsp;(</span><span style='color: #0000BB'>$i&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'='</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Value&amp;nbsp;for&amp;nbsp;parameter&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>htmlspecialchars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>urldecode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>])),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;is&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>htmlspecialchars</span><span style='color: #007700'>(</span><span style='color: #0000BB'>urldecode</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>[</span><span style='color: #0000BB'>1</span><span style='color: #007700'>])),&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$i</span><span style='color: #007700'>++;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.urldecode.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The superglobals <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.get.php' class='classname'>$_GET</a></var> and <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.request.php' class='classname'>$_REQUEST</a></var> are already decoded. Using <b>urldecode()</b> on an element in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.get.php' class='classname'>$_GET</a></var> or <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.request.php' class='classname'>$_REQUEST</a></var> could have unexpected and dangerous results. </p> </div> </div> <a name='function.urldecode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.urlencode.php' class='function' rel='rdfs-seeAlso'>urlencode()</a> - URL-encodes string</li> <li class='member'><a href='http://www.php.net/manual/en/function.rawurlencode.php' class='function' rel='rdfs-seeAlso'>rawurlencode()</a> - URL-encode according to RFC 1738</li> <li class='member'><a href='http://www.php.net/manual/en/function.rawurldecode.php' class='function' rel='rdfs-seeAlso'>rawurldecode()</a> - Decode URL-encoded strings</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="unserialize" value="<div id='function.unserialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.unserialize.php'>unserialize</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>unserialize</span> &amp;mdash; <span class='dc-title'> Creates a PHP value from a stored representation </span></p> </div> <a name='function.unserialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>unserialize</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='simpara'> <b>unserialize()</b> takes a single serialized variable and converts it back into a PHP value. </p> </div> <a name='function.unserialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The serialized string. </p> <p class='para'> If the variable being unserialized is an object, after successfully reconstructing the object PHP will automatically attempt to call the <b>__wakeup()</b> member function (if it exists). </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: <b>unserialize_callback_func directive</b><br /> It&amp;#039;s possible to set a callback-function which will be called, if an undefined class should be instantiated during unserializing. (to prevent getting an incomplete <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> &amp;quot;__PHP_Incomplete_Class&amp;quot;.) Use your <var class='filename'>php.ini</var>, <a href='http://www.php.net/manual/en/function.ini-set.php' class='function'>ini_set()</a> or <var class='filename'>.htaccess</var> to define &amp;#039;<i>unserialize_callback_func</i>&amp;#039;. Everytime an undefined class should be instantiated, it&amp;#039;ll be called. To disable this feature just empty this setting. <br /> </p></blockquote><p> </p> </dd> </dl> <p> </p> </div> <a name='function.unserialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The converted value is returned, and can be a <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a>, <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>, <a href='http://www.php.net/manual/en/language.types.float.php' class='type float'>float</a>, <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>, <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> or <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> <p class='para'> In case the passed string is not unserializeable, <b><tt class='constant'>FALSE</tt></b> is returned and <b><tt class='constant'>E_NOTICE</tt></b> is issued. </p> </div> <a name='function.unserialize.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The directive unserialize_callback_func became available. </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> When serializing an object, methods are not lost anymore. Please see the <a href='http://www.php.net/manual/en/language.oop.serialization.php' class='link'>Serializing Objects</a> for more information. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.unserialize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>unserialize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Here,&amp;nbsp;we&amp;nbsp;use&amp;nbsp;unserialize()&amp;nbsp;to&amp;nbsp;load&amp;nbsp;session&amp;nbsp;data&amp;nbsp;to&amp;nbsp;the<br />//&amp;nbsp;$session_data&amp;nbsp;array&amp;nbsp;from&amp;nbsp;the&amp;nbsp;string&amp;nbsp;selected&amp;nbsp;from&amp;nbsp;a&amp;nbsp;database.<br />//&amp;nbsp;This&amp;nbsp;example&amp;nbsp;complements&amp;nbsp;the&amp;nbsp;one&amp;nbsp;described&amp;nbsp;with&amp;nbsp;serialize().<br /><br /></span><span style='color: #0000BB'>$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>odbc_connect</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'webdb'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'chicken'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>odbc_prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;data&amp;nbsp;FROM&amp;nbsp;sessions&amp;nbsp;WHERE&amp;nbsp;id&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sqldata&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'PHP_AUTH_USER'</span><span style='color: #007700'>]);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>odbc_execute</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqldata</span><span style='color: #007700'>)&amp;nbsp;||&amp;nbsp;!</span><span style='color: #0000BB'>odbc_fetch_into</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$tmp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;if&amp;nbsp;the&amp;nbsp;execute&amp;nbsp;or&amp;nbsp;fetch&amp;nbsp;fails,&amp;nbsp;initialize&amp;nbsp;to&amp;nbsp;empty&amp;nbsp;array<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$session_data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;we&amp;nbsp;should&amp;nbsp;now&amp;nbsp;have&amp;nbsp;the&amp;nbsp;serialized&amp;nbsp;data&amp;nbsp;in&amp;nbsp;$tmp[0].<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$session_data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$tmp</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>is_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$session_data</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;something&amp;nbsp;went&amp;nbsp;wrong,&amp;nbsp;initialize&amp;nbsp;to&amp;nbsp;empty&amp;nbsp;array<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$session_data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 unserialize_callback_func example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$serialized_object</span><span style='color: #007700'>=</span><span style='color: #DD0000'>'O:1:'a':1:{s:5:'value';s:3:'100';}'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;unserialize_callback_func&amp;nbsp;directive&amp;nbsp;available&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.2.0<br /></span><span style='color: #0000BB'>ini_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'unserialize_callback_func'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'mycallback'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;your&amp;nbsp;callback_function<br /><br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>mycallback</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$classname</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;just&amp;nbsp;include&amp;nbsp;a&amp;nbsp;file&amp;nbsp;containing&amp;nbsp;your&amp;nbsp;classdefinition<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;you&amp;nbsp;get&amp;nbsp;$classname&amp;nbsp;to&amp;nbsp;figure&amp;nbsp;out&amp;nbsp;which&amp;nbsp;classdefinition&amp;nbsp;is&amp;nbsp;required<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.unserialize.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> <b><tt class='constant'>FALSE</tt></b> is returned both in the case of an error and if unserializing the serialized <b><tt class='constant'>FALSE</tt></b> value. It is possible to catch this special case by comparing <i><tt class='parameter'>str</tt></i> with <i>serialize(false)</i> or by catching the issued <b><tt class='constant'>E_NOTICE</tt></b>. </p> </div> </div> <a name='function.unserialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.serialize.php' class='function' rel='rdfs-seeAlso'>serialize()</a> - Generates a storable representation of a value</li> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.autoload.php' class='link'>Autoloading Objects</a></li> <li class='member'><a href='http://www.php.net/manual/en/var.configuration.php#unserialize-callback-func' class='link'>unserialize_callback_func</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="unregister_tick_function" value="<div id='function.unregister-tick-function' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.unregister-tick-function.php'>unregister_tick_function</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>unregister_tick_function</span> &amp;mdash; <span class='dc-title'>De-register a function for execution on each tick</span></p> </div> <a name='function.unregister-tick-function.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>unregister_tick_function</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> )</div> <p class='simpara'> De-registers the function named by <i><tt class='parameter'>function_name</tt></i> so it is no longer executed when a <a href='http://www.php.net/manual/en/control-structures.declare.php' class='link'>tick</a> is called. </p> </div> <a name='function.unregister-tick-function.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The function name, as a string. </p> </dd> </dl> <p> </p> </div> <a name='function.unregister-tick-function.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.unregister-tick-function.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.register-tick-function.php' class='function' rel='rdfs-seeAlso'>register_tick_function()</a> - Register a function for execution on each tick</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="unpack" value="<div id='function.unpack' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.unpack.php'>unpack</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>unpack</span> &amp;mdash; <span class='dc-title'>Unpack data from binary string</span></p> </div> <a name='function.unpack.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>unpack</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> Unpacks from a binary string into an array according to the given <i><tt class='parameter'>format</tt></i> . </p> <p class='para'> <b>unpack()</b> works slightly different from Perl as the unpacked data is stored in an associative array. To accomplish this you have to name the different format codes and separate them by a slash /. </p> </div> <a name='function.unpack.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.pack.php' class='function'>pack()</a> for an explanation of the format codes. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The packed data. </p> </dd> </dl> <p> </p> </div> <a name='function.unpack.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array containing unpacked elements of binary string. </p> </div> <a name='function.unpack.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>unpack()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>unpack</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'c2chars/nint'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$binarydata</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> The resulting array will contain the entries &amp;quot;chars1&amp;quot;, &amp;quot;chars2&amp;quot; and &amp;quot;int&amp;quot;. </p></div> </div><p> </p> </div> <a name='function.unpack.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='caution'><b class='caution'>Caution</b> <p class='para'> Note that PHP internally stores integral values as signed. If you unpack a large unsigned long and it is of the same size as PHP internally stored values the result will be a negative number even though unsigned unpacking was specified. </p> </div> </div> <a name='function.unpack.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pack.php' class='function' rel='rdfs-seeAlso'>pack()</a> - Pack data into binary string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="unlink" value="<div id='function.unlink' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.unlink.php'>unlink</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>unlink</span> &amp;mdash; <span class='dc-title'>Deletes a file</span></p> </div> <a name='function.unlink.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>unlink</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ] )</div> <p class='para rdfs-comment'> Deletes <i><tt class='parameter'>filename</tt></i> . Similar to the Unix C unlink() function. </p> </div> <a name='function.unlink.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Context support was added with PHP 5.0.0. For a description of <i>contexts</i>, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='xref'>Stream Functions</a>.</span></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.unlink.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.unlink.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> As of PHP 5.0.0 <b>unlink()</b> can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <b>unlink()</b>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.unlink.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Basic <b>unlink()</b> usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fh&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'test.html'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fh</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;h1&amp;gt;Hello&amp;nbsp;world!&amp;lt;/h1&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fh</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>mkdir</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'testdir'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0777</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>unlink</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'test.html'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>unlink</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'testdir'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.unlink.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rmdir.php' class='function' rel='rdfs-seeAlso'>rmdir()</a> - Removes directory</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="uniqid" value="<div id='function.uniqid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.uniqid.php'>uniqid</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>uniqid</span> &amp;mdash; <span class='dc-title'>Generate a unique ID</span></p> </div> <a name='function.uniqid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>uniqid</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$prefix</tt><span class='initializer'> = &amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$more_entropy</tt><span class='initializer'> = false</span></span> ]] )</div> <p class='para rdfs-comment'> Gets a prefixed unique identifier based on the current time in microseconds. </p> </div> <a name='function.uniqid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>prefix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Can be useful, for instance, if you generate identifiers simultaneously on several hosts that might happen to generate the identifier at the same microsecond. </p> <p class='para'> With an empty <i><tt class='parameter'>prefix</tt></i> , the returned string will be 13 characters long. If <i><tt class='parameter'>more_entropy</tt></i> is <b><tt class='constant'>TRUE</tt></b>, it will be 23 characters. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>more_entropy</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b>, <b>uniqid()</b> will add additional entropy (using the combined linear congruential generator) at the end of the return value, which should make the results more unique. </p> </dd> </dl> <p> </p> </div> <a name='function.uniqid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the unique identifier, as a string. </p> </div> <a name='function.uniqid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> If you need a unique identifier or token and you intend to give out that token to the user via the network (i.e. session cookies), it is recommended that you use something along these lines: </p> <p class='para'> This will create a 32 character identifier (a 128 bit hex number) that is extremely difficult to predict. </p><div class='example'> <p><b>Example #1 <b>uniqid()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;no&amp;nbsp;prefix<br />//&amp;nbsp;works&amp;nbsp;only&amp;nbsp;in&amp;nbsp;PHP&amp;nbsp;5&amp;nbsp;and&amp;nbsp;later&amp;nbsp;versions<br /></span><span style='color: #0000BB'>$token&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>md5</span><span style='color: #007700'>(</span><span style='color: #0000BB'>uniqid</span><span style='color: #007700'>());<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;better,&amp;nbsp;difficult&amp;nbsp;to&amp;nbsp;guess<br /></span><span style='color: #0000BB'>$better_token&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>md5</span><span style='color: #007700'>(</span><span style='color: #0000BB'>uniqid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>mt_rand</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.uniqid.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>prefix</tt></i> parameter was made optional. </td> </tr> <tr valign='middle'> <td align='left'>4.3.1</td> <td align='left'> The limit of 114 characters long for <i><tt class='parameter'>prefix</tt></i> was raised. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.uniqid.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Under Cygwin, the <i><tt class='parameter'>more_entropy</tt></i> must be set to <b><tt class='constant'>TRUE</tt></b> for this function to work. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="UnexpectedValueException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.unexpectedvalueexception.php'>The UnexpectedValueException class</a></h1> <div class='partintro'> <div id='unexpectedvalueexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown if a value does not match with a set of values </p> </div> <div id='unexpectedvalueexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>UnexpectedValueException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>UnexpectedValueException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="UnderflowException" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.underflowexception.php'>The UnderflowException class</a></h1> <div class='partintro'> <div id='underflowexception.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Exception thrown when you try to remove an element of an empty container </p> </div> <div id='underflowexception.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>UnderflowException</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>UnderflowException</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getmessage.php' class='function'>Exception::getMessage</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>Exception</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getprevious.php' class='function'>Exception::getPrevious</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getcode.php' class='function'>Exception::getCode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getfile.php' class='function'>Exception::getFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.getline.php' class='function'>Exception::getLine</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettrace.php' class='function'>Exception::getTrace</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.gettraceasstring.php' class='function'>Exception::getTraceAsString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.tostring.php' class='function'>Exception::__toString</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>final</span> <span class='modifier'>private</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/exception.clone.php' class='function'>Exception::__clone</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="umask" value="<div id='function.umask' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.umask.php'>umask</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>umask</span> &amp;mdash; <span class='dc-title'>Changes the current umask</span></p> </div> <a name='function.umask.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>umask</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mask</tt></span> ] )</div> <p class='para rdfs-comment'> <b>umask()</b> sets PHP&amp;#039;s umask to <i><tt class='parameter'>mask</tt></i> &amp;amp; 0777 and returns the old umask. When PHP is being used as a server module, the umask is restored when each request is finished. </p> </div> <a name='function.umask.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mask</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new umask. </p> </dd> </dl> <p> </p> </div> <a name='function.umask.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>umask()</b> without arguments simply returns the current umask otherwise the old umask is returned. </p> </div> <a name='function.umask.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>umask()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$old&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>umask</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>chmod</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/some_dir/some_file.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0755</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>umask</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$old</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Checking<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$old&amp;nbsp;</span><span style='color: #007700'>!=&amp;nbsp;</span><span style='color: #0000BB'>umask</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;die(</span><span style='color: #DD0000'>'An&amp;nbsp;error&amp;nbsp;occured&amp;nbsp;while&amp;nbsp;changing&amp;nbsp;back&amp;nbsp;the&amp;nbsp;umask'</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.umask.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Avoid using this function in multithreaded webservers. It is better to change the file permissions with <a href='http://www.php.net/manual/en/function.chmod.php' class='function'>chmod()</a> after creating the file. Using <b>umask()</b> can lead to unexpected behavior of concurrently running scripts and the webserver itself because they all use the same umask. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="uksort" value="<div id='function.uksort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.uksort.php'>uksort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>uksort</span> &amp;mdash; <span class='dc-title'>Sort an array by keys using a user-defined comparison function</span></p> </div> <a name='function.uksort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>uksort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <p class='para rdfs-comment'> <b>uksort()</b> will sort the keys of an array using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function. </p> </div> <a name='function.uksort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmp_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The callback comparison function. </p> <p class='para'> Function <i><tt class='parameter'>cmp_function</tt></i> should accept two parameters which will be filled by pairs of <i><tt class='parameter'>array</tt></i> keys. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </p> </dd> </dl> <p> </p> </div> <a name='function.uksort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.uksort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>uksort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'@^(a|an|the)&amp;nbsp;@'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>preg_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'@^(a|an|the)&amp;nbsp;@'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>strcasecmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'John'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'the&amp;nbsp;Earth'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'an&amp;nbsp;apple'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;banana'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>uksort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$key</span><span style='color: #DD0000'>:&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> an apple: 3 a banana: 4 the Earth: 2 John: 1 </pre></div> </div> </div><p> </p> </div> <a name='function.uksort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.usort.php' class='function' rel='rdfs-seeAlso'>usort()</a> - Sort an array by values using a user-defined comparison function</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ucwords" value="<div id='function.ucwords' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ucwords.php'>ucwords</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ucwords</span> &amp;mdash; <span class='dc-title'>Uppercase the first character of each word in a string</span></p> </div> <a name='function.ucwords.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ucwords</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a string with the first character of each word in <i><tt class='parameter'>str</tt></i> capitalized, if that character is alphabetic. </p> <p class='para'> The definition of a word is any string of characters that is immediately after a whitespace (These are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab). </p> </div> <a name='function.ucwords.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.ucwords.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the modified string. </p> </div> <a name='function.ucwords.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ucwords()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'hello&amp;nbsp;world!'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucwords</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Hello&amp;nbsp;World!<br /><br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'HELLO&amp;nbsp;WORLD!'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucwords</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;HELLO&amp;nbsp;WORLD!<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucwords</span><span style='color: #007700'>(</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Hello&amp;nbsp;World!<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ucwords.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.ucwords.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strtoupper.php' class='function' rel='rdfs-seeAlso'>strtoupper()</a> - Make a string uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtolower.php' class='function' rel='rdfs-seeAlso'>strtolower()</a> - Make a string lowercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucfirst.php' class='function' rel='rdfs-seeAlso'>ucfirst()</a> - Make a string's first character uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-convert-case.php' class='function' rel='rdfs-seeAlso'>mb_convert_case()</a> - Perform case folding on a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="ucfirst" value="<div id='function.ucfirst' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.ucfirst.php'>ucfirst</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>ucfirst</span> &amp;mdash; <span class='dc-title'>Make a string&amp;#039;s first character uppercase</span></p> </div> <a name='function.ucfirst.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>ucfirst</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a string with the first character of <i><tt class='parameter'>str</tt></i> capitalized, if that character is alphabetic. </p> <p class='para'> Note that &amp;#039;alphabetic&amp;#039; is determined by the current locale. For instance, in the default &amp;quot;C&amp;quot; locale characters such as umlaut-a (&amp;Atilde;&amp;curren;) will not be converted. </p> </div> <a name='function.ucfirst.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.ucfirst.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the resulting string. </p> </div> <a name='function.ucfirst.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>ucfirst()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'hello&amp;nbsp;world!'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucfirst</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Hello&amp;nbsp;world!<br /><br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'HELLO&amp;nbsp;WORLD!'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucfirst</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;HELLO&amp;nbsp;WORLD!<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>ucfirst</span><span style='color: #007700'>(</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Hello&amp;nbsp;world!<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.ucfirst.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.lcfirst.php' class='function' rel='rdfs-seeAlso'>lcfirst()</a> - Make a string's first character lowercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtolower.php' class='function' rel='rdfs-seeAlso'>strtolower()</a> - Make a string lowercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtoupper.php' class='function' rel='rdfs-seeAlso'>strtoupper()</a> - Make a string uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucwords.php' class='function' rel='rdfs-seeAlso'>ucwords()</a> - Uppercase the first character of each word in a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="uasort" value="<div id='function.uasort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.uasort.php'>uasort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>uasort</span> &amp;mdash; <span class='dc-title'>Sort an array with a user-defined comparison function and maintain index association</span></p> </div> <a name='function.uasort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>uasort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$cmp_function</tt></span> )</div> <p class='para rdfs-comment'> This function sorts an array such that array indices maintain their correlation with the array elements they are associated with, using a user-defined comparison function. </p> <p class='para'> This is used mainly when sorting associative arrays where the actual element order is significant. </p> </div> <a name='function.uasort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmp_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <a href='http://www.php.net/manual/en/function.usort.php' class='function'>usort()</a> and <a href='http://www.php.net/manual/en/function.uksort.php' class='function'>uksort()</a> for examples of user-defined comparison functions. </p> </dd> </dl> <p> </p> </div> <a name='function.uasort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.uasort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Basic <b>uasort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Comparison&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>cmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(</span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>)&amp;nbsp;?&amp;nbsp;-</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>:&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Array&amp;nbsp;to&amp;nbsp;be&amp;nbsp;sorted<br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'c'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>9</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'f'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'g'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'h'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Sort&amp;nbsp;and&amp;nbsp;print&amp;nbsp;the&amp;nbsp;resulting&amp;nbsp;array<br /></span><span style='color: #0000BB'>uasort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cmp'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [a] =&amp;gt; 4 [b] =&amp;gt; 8 [c] =&amp;gt; -1 [d] =&amp;gt; -9 [e] =&amp;gt; 2 [f] =&amp;gt; 5 [g] =&amp;gt; 3 [h] =&amp;gt; -4 ) Array ( [d] =&amp;gt; -9 [h] =&amp;gt; -4 [c] =&amp;gt; -1 [e] =&amp;gt; 2 [g] =&amp;gt; 3 [a] =&amp;gt; 4 [f] =&amp;gt; 5 [b] =&amp;gt; 8 ) </pre></div> </div> </div><p> </p> </div> <a name='function.uasort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.usort.php' class='function' rel='rdfs-seeAlso'>usort()</a> - Sort an array by values using a user-defined comparison function</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="trim" value="<div id='function.trim' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.trim.php'>trim</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>trim</span> &amp;mdash; <span class='dc-title'>Strip whitespace (or other characters) from the beginning and end of a string</span></p> </div> <a name='function.trim.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>trim</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$charlist</tt></span> ] )</div> <p class='para rdfs-comment'> This function returns a string with whitespace stripped from the beginning and end of <i><tt class='parameter'>str</tt></i> . Without the second parameter, <b>trim()</b> will strip these characters: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot; &amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>32</i> (<i>0x20</i>)), an ordinary space. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\t&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>9</i> (<i>0x09</i>)), a tab. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\n&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>10</i> (<i>0x0A</i>)), a new line (line feed). </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\r&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>13</i> (<i>0x0D</i>)), a carriage return. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\0&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>0</i> (<i>0x00</i>)), the <i>NUL</i>-byte. </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;\x0B&amp;quot; (<acronym title='American Standard Code for Information Interchange'>ASCII</acronym> <i>11</i> (<i>0x0B</i>)), a vertical tab. </span> </li> </ul><p> </p> </div> <a name='function.trim.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> that will be trimmed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>charlist</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optionally, the stripped characters can also be specified using the <i><tt class='parameter'>charlist</tt></i> parameter. Simply list all characters that you want to be stripped. With <i>..</i> you can specify a range of characters. </p> </dd> </dl> <p> </p> </div> <a name='function.trim.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The trimmed string. </p> </div> <a name='function.trim.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.1.0</td> <td align='left'> The optional <i><tt class='parameter'>charlist</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.trim.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Usage example of <b>trim()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$text&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\t\tThese&amp;nbsp;are&amp;nbsp;a&amp;nbsp;few&amp;nbsp;words&amp;nbsp;:)&amp;nbsp;...&amp;nbsp;&amp;nbsp;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$binary&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'\x09Example&amp;nbsp;string\x0A'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$hello&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$binary</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$hello</span><span style='color: #007700'>);<br /><br />print&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;\t.'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$trimmed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$hello</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Hdle'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$trimmed</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;trim&amp;nbsp;the&amp;nbsp;ASCII&amp;nbsp;control&amp;nbsp;characters&amp;nbsp;at&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;and&amp;nbsp;end&amp;nbsp;of&amp;nbsp;$binary<br />//&amp;nbsp;(from&amp;nbsp;0&amp;nbsp;to&amp;nbsp;31&amp;nbsp;inclusive)<br /></span><span style='color: #0000BB'>$clean&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$binary</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\x00..\x1F'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$clean</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(32) &amp;quot; These are a few words :) ... &amp;quot; string(16) &amp;quot; Example string &amp;quot; string(11) &amp;quot;Hello World&amp;quot; string(28) &amp;quot;These are a few words :) ...&amp;quot; string(24) &amp;quot;These are a few words :)&amp;quot; string(5) &amp;quot;o Wor&amp;quot; string(14) &amp;quot;Example string&amp;quot; </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Trimming array values with <b>trim()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>trim_value</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;<br />{&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>trim</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>);&amp;nbsp;<br />}<br /><br /></span><span style='color: #0000BB'>$fruit&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,</span><span style='color: #DD0000'>'banana&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;cranberry&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>array_walk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'trim_value'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(3) { [0]=&amp;gt; string(5) &amp;quot;apple&amp;quot; [1]=&amp;gt; string(7) &amp;quot;banana &amp;quot; [2]=&amp;gt; string(11) &amp;quot; cranberry &amp;quot; } array(3) { [0]=&amp;gt; string(5) &amp;quot;apple&amp;quot; [1]=&amp;gt; string(6) &amp;quot;banana&amp;quot; [2]=&amp;gt; string(9) &amp;quot;cranberry&amp;quot; } </pre></div> </div> </div><p> </p> </div> <a name='function.trim.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ltrim.php' class='function' rel='rdfs-seeAlso'>ltrim()</a> - Strip whitespace (or other characters) from the beginning of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.rtrim.php' class='function' rel='rdfs-seeAlso'>rtrim()</a> - Strip whitespace (or other characters) from the end of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="trigger_error" value="<div id='function.trigger-error' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.trigger-error.php'>trigger_error</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>trigger_error</span> &amp;mdash; <span class='dc-title'>Generates a user-level error/warning/notice message</span></p> </div> <a name='function.trigger-error.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>trigger_error</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$error_msg</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$error_type</tt><span class='initializer'> = E_USER_NOTICE</span></span> ] )</div> <p class='para rdfs-comment'> Used to trigger a user error condition, it can be used by in conjunction with the built-in error handler, or with a user defined function that has been set as the new error handler (<a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function'>set_error_handler()</a>). </p> <p class='para'> This function is useful when you need to generate a particular response to an exception at runtime. </p> </div> <a name='function.trigger-error.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_msg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The designated error message for this error. It&amp;#039;s limited to 1024 characters in length. Any additional characters beyond 1024 will be truncated. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The designated error type for this error. It only works with the E_USER family of constants, and will default to <b><tt class='constant'>E_USER_NOTICE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.trigger-error.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns <b><tt class='constant'>FALSE</tt></b> if wrong <i><tt class='parameter'>error_type</tt></i> is specified, <b><tt class='constant'>TRUE</tt></b> otherwise. </p> </div> <a name='function.trigger-error.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>trigger_error()</b> example</b></p> <div class='example-contents para'><p> See <a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function'>set_error_handler()</a> for a more extensive example. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>assert</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$divisor&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>trigger_error</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Cannot&amp;nbsp;divide&amp;nbsp;by&amp;nbsp;zero'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_USER_ERROR</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.trigger-error.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.error-reporting.php' class='function' rel='rdfs-seeAlso'>error_reporting()</a> - Sets which PHP errors are reported</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-error-handler.php' class='function' rel='rdfs-seeAlso'>set_error_handler()</a> - Sets a user-defined error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-error-handler.php' class='function' rel='rdfs-seeAlso'>restore_error_handler()</a> - Restores the previous error handler function</li> <li class='member'>The <a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'>error level constants</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="touch" value="<div id='function.touch' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.touch.php'>touch</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>touch</span> &amp;mdash; <span class='dc-title'>Sets access and modification time of file</span></p> </div> <a name='function.touch.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>touch</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$time</tt><span class='initializer'> = time()</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$atime</tt></span> ]] )</div> <p class='para rdfs-comment'> Attempts to set the access and modification times of the file named in the <i><tt class='parameter'>filename</tt></i> parameter to the value given in <i><tt class='parameter'>time</tt></i> . Note that the access time is always modified, regardless of the number of parameters. </p> <p class='para'> If the file does not exist, it will be created. </p> </div> <a name='function.touch.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the file being touched. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>time</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The touch time. If <i><tt class='parameter'>time</tt></i> is not supplied, the current system time is used. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>atime</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If present, the access time of the given filename is set to the value of <i><tt class='parameter'>atime</tt></i> . Otherwise, it is set to <i><tt class='parameter'>time</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.touch.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.touch.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> It became possible to change the modification time of a directory under Windows. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.touch.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>touch()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>touch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$FileName</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$FileName</span><span style='color: #DD0000'>&amp;nbsp;modification&amp;nbsp;time&amp;nbsp;has&amp;nbsp;been&amp;nbsp;changed&amp;nbsp;to&amp;nbsp;present&amp;nbsp;time'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Sorry,&amp;nbsp;could&amp;nbsp;not&amp;nbsp;change&amp;nbsp;modification&amp;nbsp;time&amp;nbsp;of&amp;nbsp;</span><span style='color: #0000BB'>$FileName</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>touch()</b> using the <i><tt class='parameter'>time</tt></i> parameter</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;<br />&amp;nbsp;*&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;touch&amp;nbsp;time,&amp;nbsp;we'll&amp;nbsp;set&amp;nbsp;it&amp;nbsp;to&amp;nbsp;one&amp;nbsp;hour&amp;nbsp;<br />&amp;nbsp;*&amp;nbsp;in&amp;nbsp;the&amp;nbsp;past.<br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$time&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Touch&amp;nbsp;the&amp;nbsp;file&amp;nbsp;*/<br /></span><span style='color: #007700'>if(!</span><span style='color: #0000BB'>touch</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'some_file.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$time</span><span style='color: #007700'>))<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Whoops,&amp;nbsp;something&amp;nbsp;went&amp;nbsp;wrong...'</span><span style='color: #007700'>;<br />}<br />else<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Touched&amp;nbsp;file&amp;nbsp;with&amp;nbsp;success'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.touch.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Note that time resolution may differ from one file system to another.<br /></p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Prior to PHP 5.3.0 it was not possible to change the modification time of a directory with this function under Windows. </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="token_name" value="<div id='function.token-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.token-name.php'>token_name</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>token_name</span> &amp;mdash; <span class='dc-title'>Get the symbolic name of a given PHP token</span></p> </div> <a name='function.token-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>token_name</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$token</tt></span> )</div> <p class='para rdfs-comment'> <b>token_name()</b> gets the symbolic name for a PHP <i><tt class='parameter'>token</tt></i> value. </p> </div> <a name='function.token-name.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>token</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The token value. </p> </dd> </dl> <p> </p> </div> <a name='function.token-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The symbolic name of the given <i><tt class='parameter'>token</tt></i> . The returned name returned matches the name of the matching token constant. </p> </div> <a name='function.token-name.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>token_name()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;260&amp;nbsp;is&amp;nbsp;the&amp;nbsp;token&amp;nbsp;value&amp;nbsp;for&amp;nbsp;the&amp;nbsp;T_REQUIRE&amp;nbsp;token<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>token_name</span><span style='color: #007700'>(</span><span style='color: #0000BB'>260</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-&amp;gt;&amp;nbsp;'T_REQUIRE'<br /><br />//&amp;nbsp;a&amp;nbsp;token&amp;nbsp;constant&amp;nbsp;maps&amp;nbsp;to&amp;nbsp;its&amp;nbsp;own&amp;nbsp;name<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>token_name</span><span style='color: #007700'>(</span><span style='color: #0000BB'>T_FUNCTION</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-&amp;gt;&amp;nbsp;'T_FUNCTION'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.token-name.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/tokens.php' class='link'>List of Parser Tokens</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="token_get_all" value="<div id='function.token-get-all' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.token-get-all.php'>token_get_all</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>token_get_all</span> &amp;mdash; <span class='dc-title'>Split given source into PHP tokens</span></p> </div> <a name='function.token-get-all.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>token_get_all</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$source</tt></span> )</div> <p class='para rdfs-comment'> <b>token_get_all()</b> parses the given <i><tt class='parameter'>source</tt></i> string into PHP language tokens using the Zend engine&amp;#039;s lexical scanner. </p> <p class='para'> For a list of parser tokens, see <a href='http://www.php.net/manual/en/tokens.php' class='xref'>List of Parser Tokens</a>, or use <a href='http://www.php.net/manual/en/function.token-name.php' class='function'>token_name()</a> to translate a token value into its string representation. </p> </div> <a name='function.token-get-all.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>source</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The PHP source to parse. </p> </dd> </dl> <p> </p> </div> <a name='function.token-get-all.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An array of token identifiers. Each individual token identifier is either a single character (i.e.: <i>;</i>, <i>.</i>, <i>&amp;gt;</i>, <i>!</i>, etc...), or a three element array containing the token index in element 0, the string content of the original token in element 1 and the line number in element 2. </p> </div> <a name='function.token-get-all.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>token_get_all()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$tokens&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>token_get_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;?php&amp;nbsp;echo;&amp;nbsp;?&amp;gt;'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;=&amp;gt;&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(T_OPEN_TAG,&amp;nbsp;'&amp;lt;?php'),&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(T_ECHO,&amp;nbsp;'echo'),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;';',<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(T_CLOSE_TAG,&amp;nbsp;'?&amp;gt;')&amp;nbsp;);&amp;nbsp;*/<br /><br />/*&amp;nbsp;Note&amp;nbsp;in&amp;nbsp;the&amp;nbsp;following&amp;nbsp;example&amp;nbsp;that&amp;nbsp;the&amp;nbsp;string&amp;nbsp;is&amp;nbsp;parsed&amp;nbsp;as&amp;nbsp;T_INLINE_HTML<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;the&amp;nbsp;otherwise&amp;nbsp;expected&amp;nbsp;T_COMMENT&amp;nbsp;(T_ML_COMMENT&amp;nbsp;in&amp;nbsp;PHP&amp;nbsp;&amp;lt;5).<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;because&amp;nbsp;no&amp;nbsp;open/close&amp;nbsp;tags&amp;nbsp;were&amp;nbsp;used&amp;nbsp;in&amp;nbsp;the&amp;nbsp;'code'&amp;nbsp;provided.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;would&amp;nbsp;be&amp;nbsp;equivalent&amp;nbsp;to&amp;nbsp;putting&amp;nbsp;a&amp;nbsp;comment&amp;nbsp;outside&amp;nbsp;of&amp;nbsp;&amp;lt;?php&amp;nbsp;?&amp;gt;&amp;nbsp;tags&amp;nbsp;in&amp;nbsp;a&amp;nbsp;normal&amp;nbsp;file.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$tokens&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>token_get_all</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/*&amp;nbsp;comment&amp;nbsp;*/'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;=&amp;gt;&amp;nbsp;array(array(T_INLINE_HTML,&amp;nbsp;'/*&amp;nbsp;comment&amp;nbsp;*/'));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.token-get-all.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.2</td> <td align='left'>Line numbers are returned in element 2 </td> </tr> </tbody> </table> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="tmpfile" value="<div id='function.tmpfile' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.tmpfile.php'>tmpfile</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>tmpfile</span> &amp;mdash; <span class='dc-title'>Creates a temporary file</span></p> </div> <a name='function.tmpfile.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>tmpfile</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Creates a temporary file with a unique name in read-write (w+) mode and returns a file handle . </p> <p class='para'> The file is automatically removed when closed (using <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>), or when the script ends. </p> <p class='para'> For details, consult your system documentation on the <i>tmpfile(3)</i> function, as well as the <var class='filename'>stdio.h</var> header file. </p> </div> <a name='function.tmpfile.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a file handle, similar to the one returned by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, for the new file, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.tmpfile.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>tmpfile()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$temp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>tmpfile</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'writing&amp;nbsp;to&amp;nbsp;tempfile'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fseek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1024</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;removes&amp;nbsp;the&amp;nbsp;file<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> writing to tempfile </pre></div> </div> </div><p> </p> </div> <a name='function.tmpfile.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.tempnam.php' class='function' rel='rdfs-seeAlso'>tempnam()</a> - Create file with unique file name</li> <li class='member'><a href='http://www.php.net/manual/en/function.sys-get-temp-dir.php' class='function' rel='rdfs-seeAlso'>sys_get_temp_dir()</a> - Returns directory path used for temporary files</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_transitions_get" value="<div id='function.timezone-transitions-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-transitions-get.php'>timezone_transitions_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>timezone_transitions_get</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.gettransitions.php' class='function'>DateTimeZone::getTransitions</a></span></span></p> </div> <a name='function.timezone-transitions-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.gettransitions.php' class='function'>DateTimeZone::getTransitions</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_open" value="<div id='function.timezone-open' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-open.php'>timezone_open</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>timezone_open</span> &amp;mdash; <span class='dc-title'>Returns new DateTimeZone object</span></p> </div> <a name='function.timezone-open.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <span class='methodname'><b>timezone_open</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$timezone</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/class.datetimezone.php' class='type DateTimeZone'>DateTimeZone</a></span> <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.construct.php' class='function'>DateTimeZone::__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$timezone</tt></span> )</div> </div> <a name='function.timezone-open.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timezone</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Time zone identifier as full name (e.g. Europe/Prague) or abbreviation (e.g. CET). </p> </dd> </dl> <p> </p> </div> <a name='function.timezone-open.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns DateTimeZone object on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_offset_get" value="<div id='function.timezone-offset-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-offset-get.php'>timezone_offset_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>timezone_offset_get</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getoffset.php' class='function'>DateTimeZone::getOffset</a></span></span></p> </div> <a name='function.timezone-offset-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getoffset.php' class='function'>DateTimeZone::getOffset</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_name_get" value="<div id='function.timezone-name-get' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-name-get.php'>timezone_name_get</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>timezone_name_get</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getname.php' class='function'>DateTimeZone::getName</a></span></span></p> </div> <a name='function.timezone-name-get.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.getname.php' class='function'>DateTimeZone::getName</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_name_from_abbr" value="<div id='function.timezone-name-from-abbr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-name-from-abbr.php'>timezone_name_from_abbr</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.3)</p><p class='refpurpose'><span class='refname'>timezone_name_from_abbr</span> &amp;mdash; <span class='dc-title'>Returns the timezone name from abbreviation</span></p> </div> <a name='function.timezone-name-from-abbr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>timezone_name_from_abbr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$abbr</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$gmtOffset</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$isdst</tt><span class='initializer'> = -1</span></span> ]] )</div> </div> <a name='function.timezone-name-from-abbr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>abbr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Time zone abbreviation. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>gmtOffset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Offset from GMT in seconds. Defaults to -1 which means that first found time zone corresponding to <i><tt class='parameter'>abbr</tt></i> is returned. Otherwise exact offset is searched and only if not found then the first time zone with any offset is returned. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>isdst</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Daylight saving time indicator. If <i><tt class='parameter'>abbr</tt></i> doesn&amp;#039;t exist then the time zone is searched solely by <i><tt class='parameter'>offset</tt></i> and <i><tt class='parameter'>isdst</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.timezone-name-from-abbr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns time zone name on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.timezone-name-from-abbr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>timezone_name_from_abbr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>timezone_name_from_abbr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'CET'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>timezone_name_from_abbr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Europe/Berlin Europe/Paris </pre></div> </div> </div><p> </p> </div> <a name='function.timezone-name-from-abbr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.timezone-abbreviations-list.php' class='function' rel='rdfs-seeAlso'>timezone_abbreviations_list()</a> - Alias of DateTimeZone::listAbbreviations</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_identifiers_list" value="<div id='function.timezone-identifiers-list' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-identifiers-list.php'>timezone_identifiers_list</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>timezone_identifiers_list</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listidentifiers.php' class='function'>DateTimeZone::listIdentifiers</a></span></span></p> </div> <a name='function.timezone-identifiers-list.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listidentifiers.php' class='function'>DateTimeZone::listIdentifiers</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="timezone_abbreviations_list" value="<div id='function.timezone-abbreviations-list' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.timezone-abbreviations-list.php'>timezone_abbreviations_list</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>timezone_abbreviations_list</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listabbreviations.php' class='function'>DateTimeZone::listAbbreviations</a></span></span></p> </div> <a name='function.timezone-abbreviations-list.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <span class='methodname'><a href='http://www.php.net/manual/en/datetimezone.listabbreviations.php' class='function'>DateTimeZone::listAbbreviations</a></span> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="time" value="<div id='function.time' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.time.php'>time</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>time</span> &amp;mdash; <span class='dc-title'>Return current Unix timestamp</span></p> </div> <a name='function.time.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>time</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT). </p> </div> <a name='function.time.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>time()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$nextWeek&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()&amp;nbsp;+&amp;nbsp;(</span><span style='color: #0000BB'>7&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>24&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>60&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>60</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;7&amp;nbsp;days;&amp;nbsp;24&amp;nbsp;hours;&amp;nbsp;60&amp;nbsp;mins;&amp;nbsp;60secs<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Now:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d'</span><span style='color: #007700'>)&amp;nbsp;.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Next&amp;nbsp;Week:&amp;nbsp;'</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$nextWeek</span><span style='color: #007700'>)&amp;nbsp;.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;or&amp;nbsp;using&amp;nbsp;strtotime():<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Next&amp;nbsp;Week:&amp;nbsp;'</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y-m-d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+1&amp;nbsp;week'</span><span style='color: #007700'>))&amp;nbsp;.</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Now: 2005-03-30 Next Week: 2005-04-06 Next Week: 2005-04-06 </pre></div> </div> </div><p> </p> </div> <a name='function.time.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b> <p class='para'> Timestamp of the start of the request is available in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.server.php' class='classname'>$_SERVER['REQUEST_TIME']</a></var> since PHP 5.1. </p> </div> </div> <a name='function.time.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.date.php' class='function' rel='rdfs-seeAlso'>date()</a> - Format a local time/date</li> <li class='member'><a href='http://www.php.net/manual/en/function.microtime.php' class='function' rel='rdfs-seeAlso'>microtime()</a> - Return current Unix timestamp with microseconds</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="tempnam" value="<div id='function.tempnam' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.tempnam.php'>tempnam</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>tempnam</span> &amp;mdash; <span class='dc-title'>Create file with unique file name</span></p> </div> <a name='function.tempnam.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>tempnam</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$dir</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$prefix</tt></span> )</div> <p class='para rdfs-comment'> Creates a file with a unique filename, with access permission set to 0600, in the specified directory. If the directory does not exist, <b>tempnam()</b> may generate a file in the system&amp;#039;s temporary directory, and return the name of that. </p> </div> <a name='function.tempnam.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dir</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory where the temporary filename will be created. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>prefix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The prefix of the generated temporary filename. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Windows use only the first three characters of prefix. </span> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.tempnam.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the new temporary filename, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.tempnam.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.6</td> <td align='left'> Prior to PHP 4.0.6, the behaviour of the <b>tempnam()</b> function was system dependent. On Windows the <var class='varname'>TMP</var> environment variable will override the <i><tt class='parameter'>dir</tt></i> parameter, on Linux the <var class='varname'>TMPDIR</var> environment variable has precedence, while SVR4 will always use your <i><tt class='parameter'>dir</tt></i> parameter if the directory it points to exists. Consult your system documentation on the tempnam(3) function if in doubt. </td> </tr> <tr valign='middle'> <td align='left'>4.0.3</td> <td align='left'> This function&amp;#039;s behavior changed in 4.0.3. The temporary file is also created to avoid a race condition where the file might appear in the filesystem between the time the string was generated and before the script gets around to creating the file. Note, that you need to remove the file in case you need it no more, it is not done automatically. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.tempnam.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>tempnam()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$tmpfname&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>tempnam</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'FOO'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$handle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$tmpfname</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'writing&amp;nbsp;to&amp;nbsp;tempfile'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$handle</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;do&amp;nbsp;here&amp;nbsp;something<br /><br /></span><span style='color: #0000BB'>unlink</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$tmpfname</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.tempnam.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> If PHP cannot create a file in the specified <i><tt class='parameter'>dir</tt></i> parameter, it falls back on the system default. On NTFS this also happens if the specified <i><tt class='parameter'>dir</tt></i> contains more than 65534 files. </span> </p></blockquote> </div> <a name='function.tempnam.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.tmpfile.php' class='function' rel='rdfs-seeAlso'>tmpfile()</a> - Creates a temporary file</li> <li class='member'><a href='http://www.php.net/manual/en/function.sys-get-temp-dir.php' class='function' rel='rdfs-seeAlso'>sys_get_temp_dir()</a> - Returns directory path used for temporary files</li> <li class='member'><a href='http://www.php.net/manual/en/function.unlink.php' class='function' rel='rdfs-seeAlso'>unlink()</a> - Deletes a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="tanh" value="<div id='function.tanh' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.tanh.php'>tanh</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>tanh</span> &amp;mdash; <span class='dc-title'>Hyperbolic tangent</span></p> </div> <a name='function.tanh.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>tanh</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the hyperbolic tangent of <i><tt class='parameter'>arg</tt></i> , defined as <i>sinh(arg)/cosh(arg)</i>. </p> </div> <a name='function.tanh.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.tanh.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The hyperbolic tangent of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.tanh.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.tan.php' class='function' rel='rdfs-seeAlso'>tan()</a> - Tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.atanh.php' class='function' rel='rdfs-seeAlso'>atanh()</a> - Inverse hyperbolic tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.sinh.php' class='function' rel='rdfs-seeAlso'>sinh()</a> - Hyperbolic sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.cosh.php' class='function' rel='rdfs-seeAlso'>cosh()</a> - Hyperbolic cosine</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="tan" value="<div id='function.tan' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.tan.php'>tan</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>tan</span> &amp;mdash; <span class='dc-title'>Tangent</span></p> </div> <a name='function.tan.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>tan</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> <b>tan()</b> returns the tangent of the <i><tt class='parameter'>arg</tt></i> parameter. The <i><tt class='parameter'>arg</tt></i> parameter is in radians. </p> </div> <a name='function.tan.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process in radians </p> </dd> </dl> <p> </p> </div> <a name='function.tan.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The tangent of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.tan.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>tan()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>tan</span><span style='color: #007700'>(</span><span style='color: #0000BB'>M_PI_4</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.tan.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.atan.php' class='function' rel='rdfs-seeAlso'>atan()</a> - Arc tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.atan2.php' class='function' rel='rdfs-seeAlso'>atan2()</a> - Arc tangent of two variables</li> <li class='member'><a href='http://www.php.net/manual/en/function.sin.php' class='function' rel='rdfs-seeAlso'>sin()</a> - Sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.cos.php' class='function' rel='rdfs-seeAlso'>cos()</a> - Cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.tanh.php' class='function' rel='rdfs-seeAlso'>tanh()</a> - Hyperbolic tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.deg2rad.php' class='function' rel='rdfs-seeAlso'>deg2rad()</a> - Converts the number in degrees to the radian equivalent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sys_get_temp_dir" value="<div id='function.sys-get-temp-dir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sys-get-temp-dir.php'>sys_get_temp_dir</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.1)</p><p class='refpurpose'><span class='refname'>sys_get_temp_dir</span> &amp;mdash; <span class='dc-title'>Returns directory path used for temporary files</span></p> </div> <a name='function.sys-get-temp-dir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sys_get_temp_dir</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the path of the directory PHP stores temporary files in by default. </p> </div> <a name='function.sys-get-temp-dir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path of the temporary directory. </p> </div> <a name='function.sys-get-temp-dir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sys_get_temp_dir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;temporary&amp;nbsp;file&amp;nbsp;in&amp;nbsp;the&amp;nbsp;temporary&amp;nbsp;<br />//&amp;nbsp;files&amp;nbsp;directory&amp;nbsp;using&amp;nbsp;sys_get_temp_dir()<br /></span><span style='color: #0000BB'>$temp_file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>tempnam</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sys_get_temp_dir</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'Tux'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$temp_file</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> C:\Windows\Temp\TuxA318.tmp </pre></div> </div> </div><p> </p> </div> <a name='function.sys-get-temp-dir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.tmpfile.php' class='function' rel='rdfs-seeAlso'>tmpfile()</a> - Creates a temporary file</li> <li class='member'><a href='http://www.php.net/manual/en/function.tempnam.php' class='function' rel='rdfs-seeAlso'>tempnam()</a> - Create file with unique file name</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="system" value="<div id='function.system' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.system.php'>system</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>system</span> &amp;mdash; <span class='dc-title'>Execute an external program and display the output</span></p> </div> <a name='function.system.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>system</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$command</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$return_var</tt></span> ] )</div> <p class='para rdfs-comment'> <b>system()</b> is just like the C version of the function in that it executes the given <i><tt class='parameter'>command</tt></i> and outputs the result. </p> <p class='para'> The <b>system()</b> call also tries to automatically flush the web server&amp;#039;s output buffer after each line of output if PHP is running as a server module. </p> <p class='para'> If you need to execute a command and have all the data from the command passed directly back without any interference, use the <a href='http://www.php.net/manual/en/function.passthru.php' class='function'>passthru()</a> function. </p> </div> <a name='function.system.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>command</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command that will be executed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>return_var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>return_var</tt></i> argument is present, then the return status of the executed command will be written to this variable. </p> </dd> </dl> <p> </p> </div> <a name='function.system.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the last line of the command output on success, and <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.system.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>system()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;pre&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs&amp;nbsp;all&amp;nbsp;the&amp;nbsp;result&amp;nbsp;of&amp;nbsp;shellcommand&amp;nbsp;'ls',&amp;nbsp;and&amp;nbsp;returns<br />//&amp;nbsp;the&amp;nbsp;last&amp;nbsp;output&amp;nbsp;line&amp;nbsp;into&amp;nbsp;$last_line.&amp;nbsp;Stores&amp;nbsp;the&amp;nbsp;return&amp;nbsp;value<br />//&amp;nbsp;of&amp;nbsp;the&amp;nbsp;shell&amp;nbsp;command&amp;nbsp;in&amp;nbsp;$retval.<br /></span><span style='color: #0000BB'>$last_line&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>system</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ls'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$retval</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Printing&amp;nbsp;additional&amp;nbsp;info<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'<br />&amp;lt;/pre&amp;gt;<br />&amp;lt;hr&amp;nbsp;/&amp;gt;Last&amp;nbsp;line&amp;nbsp;of&amp;nbsp;the&amp;nbsp;output:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$last_line&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'<br />&amp;lt;hr&amp;nbsp;/&amp;gt;Return&amp;nbsp;value:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$retval</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.system.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='para'>When allowing user-supplied data to be passed to this function, use <a href='http://www.php.net/manual/en/function.escapeshellarg.php' class='function'>escapeshellarg()</a> or <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a> to ensure that users cannot trick the system into executing arbitrary commands.</p></div> <blockquote><p><b class='note'>Note</b>: If a program is started with this function, in order for it to continue running in the background, the output of the program must be redirected to a file or another output stream. Failing to do so will cause PHP to hang until the execution of the program ends.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> is enabled, you can only execute files within the <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir' class='link'>safe_mode_exec_dir</a>. For practical reasons, it is currently not allowed to have <i>..</i> components in the path to the executable.</span></p></blockquote> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>With <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a> enabled, the command string is escaped with <a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function'>escapeshellcmd()</a>. Thus, <i>echo y | echo x</i> becomes <i>echo y \| echo x</i>.</p></div> </div> <a name='function.system.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.passthru.php' class='function' rel='rdfs-seeAlso'>passthru()</a> - Execute an external program and display raw output</li> <li class='member'><a href='http://www.php.net/manual/en/function.popen.php' class='function' rel='rdfs-seeAlso'>popen()</a> - Opens process file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function' rel='rdfs-seeAlso'>escapeshellcmd()</a> - Escape shell metacharacters</li> <li class='member'><a href='http://www.php.net/manual/en/function.pcntl-exec.php' class='function' rel='rdfs-seeAlso'>pcntl_exec()</a> - Executes specified program in current process space</li> <li class='member'><a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="syslog" value="<div id='function.syslog' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.syslog.php'>syslog</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>syslog</span> &amp;mdash; <span class='dc-title'>Generate a system log message</span></p> </div> <a name='function.syslog.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>syslog</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$priority</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$message</tt></span> )</div> <p class='para rdfs-comment'> <b>syslog()</b> generates a log message that will be distributed by the system logger. </p> <p class='para'> For information on setting up a user defined log handler, see the <span class='citerefentry'><span class='refentrytitle'>syslog.conf</span> <span class='manvolnum'>(5)</span></span> Unix manual page. More information on the syslog facilities and option can be found in the man pages for <span class='citerefentry'><span class='refentrytitle'>syslog</span> <span class='manvolnum'>(3)</span></span> on Unix machines. </p> </div> <a name='function.syslog.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>priority</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>priority</tt></i> is a combination of the facility and the level. Possible values are: </p><table class='doctable table'> <caption><b><b>syslog()</b> Priorities (in descending order)</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Constant</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_EMERG</tt></b></td> <td align='left'>system is unusable</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_ALERT</tt></b></td> <td align='left'>action must be taken immediately</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_CRIT</tt></b></td> <td align='left'>critical conditions</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_ERR</tt></b></td> <td align='left'>error conditions</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_WARNING</tt></b></td> <td align='left'>warning conditions</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_NOTICE</tt></b></td> <td align='left'>normal, but significant, condition</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_INFO</tt></b></td> <td align='left'>informational message</td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>LOG_DEBUG</tt></b></td> <td align='left'>debug-level message</td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The message to send, except that the two characters <i>%m</i> will be replaced by the error message string (strerror) corresponding to the present value of <span class='errortype'>errno</span>. </p> </dd> </dl> <p> </p> </div> <a name='function.syslog.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.syslog.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>syslog()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;open&amp;nbsp;syslog,&amp;nbsp;include&amp;nbsp;the&amp;nbsp;process&amp;nbsp;ID&amp;nbsp;and&amp;nbsp;also&amp;nbsp;send<br />//&amp;nbsp;the&amp;nbsp;log&amp;nbsp;to&amp;nbsp;standard&amp;nbsp;error,&amp;nbsp;and&amp;nbsp;use&amp;nbsp;a&amp;nbsp;user&amp;nbsp;defined<br />//&amp;nbsp;logging&amp;nbsp;mechanism<br /></span><span style='color: #0000BB'>openlog</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myScriptLog'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>LOG_PID&amp;nbsp;</span><span style='color: #007700'>|&amp;nbsp;</span><span style='color: #0000BB'>LOG_PERROR</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>LOG_LOCAL0</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;some&amp;nbsp;code<br /><br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>authorized_client</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;do&amp;nbsp;something<br /></span><span style='color: #007700'>}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;unauthorized&amp;nbsp;client!<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;log&amp;nbsp;the&amp;nbsp;attempt<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$access&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y/m/d&amp;nbsp;H:i:s'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>syslog</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LOG_WARNING</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Unauthorized&amp;nbsp;client:&amp;nbsp;</span><span style='color: #0000BB'>$access</span><span style='color: #DD0000'>&amp;nbsp;</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'REMOTE_ADDR'</span><span style='color: #007700'>]}</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #007700'>{</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'HTTP_USER_AGENT'</span><span style='color: #007700'>]}</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>closelog</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.syslog.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <p class='para'> On Windows NT, the syslog service is emulated using the Event Log. </p> <blockquote><p><b class='note'>Note</b>: Use of <i>LOG_LOCAL0</i> through <i>LOG_LOCAL7</i> for the <i><tt class='parameter'>facility</tt></i> parameter of <a href='http://www.php.net/manual/en/function.openlog.php' class='function'>openlog()</a> is not available in Windows. <br /> </p></blockquote> </div> <a name='function.syslog.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.openlog.php' class='function' rel='rdfs-seeAlso'>openlog()</a> - Open connection to system logger</li> <li class='member'><a href='http://www.php.net/manual/en/function.closelog.php' class='function' rel='rdfs-seeAlso'>closelog()</a> - Close connection to system logger</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="substr_replace" value="<div id='function.substr-replace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.substr-replace.php'>substr_replace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>substr_replace</span> &amp;mdash; <span class='dc-title'>Replace text within a portion of a string</span></p> </div> <a name='function.substr-replace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>substr_replace</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$string</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$replacement</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$start</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <p class='para rdfs-comment'> <b>substr_replace()</b> replaces a copy of <i><tt class='parameter'>string</tt></i> delimited by the <i><tt class='parameter'>start</tt></i> and (optionally) <i><tt class='parameter'>length</tt></i> parameters with the string given in <i><tt class='parameter'>replacement</tt></i> . </p> </div> <a name='function.substr-replace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replacement</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The replacement string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>start</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>start</tt></i> is positive, the replacing will begin at the <i><tt class='parameter'>start</tt></i> &amp;#039;th offset into <i><tt class='parameter'>string</tt></i> . </p> <p class='para'> If <i><tt class='parameter'>start</tt></i> is negative, the replacing will begin at the <i><tt class='parameter'>start</tt></i> &amp;#039;th character from the end of <i><tt class='parameter'>string</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If given and is positive, it represents the length of the portion of <i><tt class='parameter'>string</tt></i> which is to be replaced. If it is negative, it represents the number of characters from the end of <i><tt class='parameter'>string</tt></i> at which to stop replacing. If it is not given, then it will default to strlen( <i><tt class='parameter'>string</tt></i> ); i.e. end the replacing at the end of <i><tt class='parameter'>string</tt></i> . Of course, if <i><tt class='parameter'>length</tt></i> is zero then this function will have the effect of inserting <i><tt class='parameter'>replacement</tt></i> into <i><tt class='parameter'>string</tt></i> at the given <i><tt class='parameter'>start</tt></i> offset. </p> </dd> </dl> <p> </p> </div> <a name='function.substr-replace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The result string is returned. If <i><tt class='parameter'>string</tt></i> is an array then array is returned. </p> </div> <a name='function.substr-replace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>substr_replace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'ABCDEFGH:/MNRPQR/'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Original:&amp;nbsp;</span><span style='color: #0000BB'>$var</span><span style='color: #DD0000'>&amp;lt;hr&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;These&amp;nbsp;two&amp;nbsp;examples&amp;nbsp;replace&amp;nbsp;all&amp;nbsp;of&amp;nbsp;$var&amp;nbsp;with&amp;nbsp;'bob'.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Insert&amp;nbsp;'bob'&amp;nbsp;right&amp;nbsp;at&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;$var.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;These&amp;nbsp;next&amp;nbsp;two&amp;nbsp;replace&amp;nbsp;'MNRPQR'&amp;nbsp;in&amp;nbsp;$var&amp;nbsp;with&amp;nbsp;'bob'.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bob'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>7</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Delete&amp;nbsp;'MNRPQR'&amp;nbsp;from&amp;nbsp;$var.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.substr-replace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.substr-replace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.str-replace.php' class='function' rel='rdfs-seeAlso'>str_replace()</a> - Replace all occurrences of the search string with the replacement string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="substr_count" value="<div id='function.substr-count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.substr-count.php'>substr_count</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>substr_count</span> &amp;mdash; <span class='dc-title'>Count the number of substring occurrences</span></p> </div> <a name='function.substr-count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>substr_count</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>substr_count()</b> returns the number of times the <i><tt class='parameter'>needle</tt></i> substring occurs in the <i><tt class='parameter'>haystack</tt></i> string. Please note that <i><tt class='parameter'>needle</tt></i> is case sensitive. </p> <blockquote><p><b class='note'>Note</b>: This function doesn&amp;#039;t count overlapped substrings. See the example below! <br /> </p></blockquote> </div> <a name='function.substr-count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The substring to search for </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset where to start counting </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum length after the specified offset to search for the substring. It outputs a warning if the offset plus the length is greater than the <i><tt class='parameter'>haystack</tt></i> length. </p> </dd> </dl> <p> </p> </div> <a name='function.substr-count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This functions returns an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='function.substr-count.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>offset</tt></i> and the <i><tt class='parameter'>length</tt></i> parameters </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.substr-count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>substr_count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;14<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'is'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;2<br /><br />//&amp;nbsp;the&amp;nbsp;string&amp;nbsp;is&amp;nbsp;reduced&amp;nbsp;to&amp;nbsp;'s&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test',&amp;nbsp;so&amp;nbsp;it&amp;nbsp;prints&amp;nbsp;1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'is'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;the&amp;nbsp;text&amp;nbsp;is&amp;nbsp;reduced&amp;nbsp;to&amp;nbsp;'s&amp;nbsp;i',&amp;nbsp;so&amp;nbsp;it&amp;nbsp;prints&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'is'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;generates&amp;nbsp;a&amp;nbsp;warning&amp;nbsp;because&amp;nbsp;5+10&amp;nbsp;&amp;gt;&amp;nbsp;14<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'is'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;only&amp;nbsp;1,&amp;nbsp;because&amp;nbsp;it&amp;nbsp;doesn't&amp;nbsp;count&amp;nbsp;overlapped&amp;nbsp;subtrings<br /></span><span style='color: #0000BB'>$text2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'gcdgcdgcd'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'gcdgcd'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.substr-count.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.count-chars.php' class='function' rel='rdfs-seeAlso'>count_chars()</a> - Return information about characters used in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="substr_compare" value="<div id='function.substr-compare' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.substr-compare.php'>substr_compare</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>substr_compare</span> &amp;mdash; <span class='dc-title'>Binary safe comparison of 2 strings from an offset, up to length characters</span></p> </div> <a name='function.substr-compare.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>substr_compare</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$main_str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$case_insensitivity</tt><span class='initializer'> = false</span></span> ]] )</div> <p class='para rdfs-comment'> <b>substr_compare()</b> compares <i><tt class='parameter'>main_str</tt></i> from position <i><tt class='parameter'>offset</tt></i> with <i><tt class='parameter'>str</tt></i> up to <i><tt class='parameter'>length</tt></i> characters. </p> </div> <a name='function.substr-compare.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>main_str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The start position for the comparison. If negative, it starts counting from the end of the string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The length of the comparison. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>case_insensitivity</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>case_insensitivity</tt></i> is <b><tt class='constant'>TRUE</tt></b>, comparison is case insensitive. </p> </dd> </dl> <p> </p> </div> <a name='function.substr-compare.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>main_str</tt></i> from position <i><tt class='parameter'>offset</tt></i> is less than <i><tt class='parameter'>str</tt></i> , &amp;gt; 0 if it is greater than <i><tt class='parameter'>str</tt></i> , and 0 if they are equal. If <i><tt class='parameter'>length</tt></i> is equal or greater than length of <i><tt class='parameter'>main_str</tt></i> and <i><tt class='parameter'>length</tt></i> is set, <b>substr_compare()</b> prints warning and returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.substr-compare.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the possibility to use a negative <i><tt class='parameter'>offset</tt></i> . </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.substr-compare.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>substr_compare()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bc'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bcg'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'BC'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'bc'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cd'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-1<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr_compare</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcde'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'abc'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;warning<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="substr" value="<div id='function.substr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.substr.php'>substr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>substr</span> &amp;mdash; <span class='dc-title'>Return part of a string</span></p> </div> <a name='function.substr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>substr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$start</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <p class='para rdfs-comment'> Returns the portion of <i><tt class='parameter'>string</tt></i> specified by the <i><tt class='parameter'>start</tt></i> and <i><tt class='parameter'>length</tt></i> parameters. </p> </div> <a name='function.substr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>start</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>start</tt></i> is non-negative, the returned string will start at the <i><tt class='parameter'>start</tt></i> &amp;#039;th position in <i><tt class='parameter'>string</tt></i> , counting from zero. For instance, in the string &amp;#039;<i>abcdef</i>&amp;#039;, the character at position <i>0</i> is &amp;#039;<i>a</i>&amp;#039;, the character at position <i>2</i> is &amp;#039;<i>c</i>&amp;#039;, and so forth. </p> <p class='para'> If <i><tt class='parameter'>start</tt></i> is negative, the returned string will start at the <i><tt class='parameter'>start</tt></i> &amp;#039;th character from the end of <i><tt class='parameter'>string</tt></i> . </p> <p class='para'> If <i><tt class='parameter'>string</tt></i> is less than or equal to <i><tt class='parameter'>start</tt></i> characters long, <b><tt class='constant'>FALSE</tt></b> will be returned. </p> <p class='para'> </p><div class='example'> <p><b>Example #1 Using a negative <i><tt class='parameter'>start</tt></i> </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'f'<br /></span><span style='color: #0000BB'>$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'ef'<br /></span><span style='color: #0000BB'>$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'d'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>length</tt></i> is given and is positive, the string returned will contain at most <i><tt class='parameter'>length</tt></i> characters beginning from <i><tt class='parameter'>start</tt></i> (depending on the length of <i><tt class='parameter'>string</tt></i> ). </p> <p class='para'> If <i><tt class='parameter'>length</tt></i> is given and is negative, then that many characters will be omitted from the end of <i><tt class='parameter'>string</tt></i> (after the start position has been calculated when a <i><tt class='parameter'>start</tt></i> is negative). If <i><tt class='parameter'>start</tt></i> denotes a position beyond this truncation, an empty string will be returned. </p> <div class='example'> <p><b>Example #2 Using a negative <i><tt class='parameter'>length</tt></i> </b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'abcde'<br /></span><span style='color: #0000BB'>$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'cde'<br /></span><span style='color: #0000BB'>$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;''<br /></span><span style='color: #0000BB'>$rest&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;returns&amp;nbsp;'de'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </dd> </dl> <p> </p> </div> <a name='function.substr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the extracted part of string. </p> </div> <a name='function.substr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #3 Basic <b>substr()</b> usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bcdef<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bcd<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;abcd<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>8</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;abcdef<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;f<br /><br />//&amp;nbsp;Accessing&amp;nbsp;single&amp;nbsp;characters&amp;nbsp;in&amp;nbsp;a&amp;nbsp;string<br />//&amp;nbsp;can&amp;nbsp;also&amp;nbsp;be&amp;nbsp;achieved&amp;nbsp;using&amp;nbsp;'square&amp;nbsp;brackets'<br /></span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>[</span><span style='color: #0000BB'>0</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;a<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>[</span><span style='color: #0000BB'>3</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;d<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>[</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;f<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.substr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr-replace.php' class='function' rel='rdfs-seeAlso'>substr_replace()</a> - Replace text within a portion of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.trim.php' class='function' rel='rdfs-seeAlso'>trim()</a> - Strip whitespace (or other characters) from the beginning and end of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-substr.php' class='function' rel='rdfs-seeAlso'>mb_substr()</a> - Get part of string</li> <li class='member'><a href='http://www.php.net/manual/en/function.wordwrap.php' class='function' rel='rdfs-seeAlso'>wordwrap()</a> - Wraps a string to a given number of characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_word_count" value="<div id='function.str-word-count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-word-count.php'>str_word_count</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>str_word_count</span> &amp;mdash; <span class='dc-title'> Return information about words used in a string </span></p> </div> <a name='function.str-word-count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>str_word_count</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$format</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$charlist</tt></span> ]] )</div> <p class='para rdfs-comment'> Counts the number of words inside <i><tt class='parameter'>string</tt></i> . If the optional <i><tt class='parameter'>format</tt></i> is not specified, then the return value will be an integer representing the number of words found. In the event the <i><tt class='parameter'>format</tt></i> is specified, the return value will be an array, content of which is dependent on the <i><tt class='parameter'>format</tt></i> . The possible value for the <i><tt class='parameter'>format</tt></i> and the resultant outputs are listed below. </p> <p class='para'> For the purpose of this function, &amp;#039;word&amp;#039; is defined as a locale dependent string containing alphabetic characters, which also may contain, but not start with &amp;quot;&amp;#039;&amp;quot; and &amp;quot;-&amp;quot; characters. </p> </div> <a name='function.str-word-count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Specify the return value of this function. The current supported values are: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> 0 - returns the number of words found </span> </li> <li class='listitem'> <span class='simpara'> 1 - returns an array containing all the words found inside the <i><tt class='parameter'>string</tt></i> </span> </li> <li class='listitem'> <span class='simpara'> 2 - returns an associative array, where the key is the numeric position of the word inside the <i><tt class='parameter'>string</tt></i> and the value is the actual word itself </span> </li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>charlist</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A list of additional characters which will be considered as &amp;#039;word&amp;#039; </p> </dd> </dl> <p> </p> </div> <a name='function.str-word-count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array or an integer, depending on the <i><tt class='parameter'>format</tt></i> chosen. </p> </div> <a name='function.str-word-count.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>charlist</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.str-word-count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>str_word_count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;fri3nd,&amp;nbsp;you're<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;looking&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;good&amp;nbsp;today!'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>str_word_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>str_word_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>str_word_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;Atilde;&amp;nbsp;&amp;Atilde;&amp;iexcl;&amp;Atilde;&amp;pound;&amp;Atilde;&amp;sect;3'</span><span style='color: #007700'>));<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>str_word_count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; Hello [1] =&amp;gt; fri [2] =&amp;gt; nd [3] =&amp;gt; you&amp;#039;re [4] =&amp;gt; looking [5] =&amp;gt; good [6] =&amp;gt; today ) Array ( [0] =&amp;gt; Hello [6] =&amp;gt; fri [10] =&amp;gt; nd [14] =&amp;gt; you&amp;#039;re [29] =&amp;gt; looking [46] =&amp;gt; good [51] =&amp;gt; today ) Array ( [0] =&amp;gt; Hello [1] =&amp;gt; fri3nd [2] =&amp;gt; you&amp;#039;re [3] =&amp;gt; looking [4] =&amp;gt; good [5] =&amp;gt; today ) 7 </pre></div> </div> </div><p> </p> </div> <a name='function.str-word-count.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.split.php' class='function' rel='rdfs-seeAlso'>split()</a> - Split string into array by regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.count-chars.php' class='function' rel='rdfs-seeAlso'>count_chars()</a> - Return information about characters used in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr-count.php' class='function' rel='rdfs-seeAlso'>substr_count()</a> - Count the number of substring occurrences</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_split" value="<div id='function.str-split' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-split.php'>str_split</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>str_split</span> &amp;mdash; <span class='dc-title'>Convert a string to an array</span></p> </div> <a name='function.str-split.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>str_split</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$split_length</tt><span class='initializer'> = 1</span></span> ] )</div> <p class='para rdfs-comment'> Converts a string to an array. </p> </div> <a name='function.str-split.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>split_length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Maximum length of the chunk. </p> </dd> </dl> <p> </p> </div> <a name='function.str-split.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If the optional <i><tt class='parameter'>split_length</tt></i> parameter is specified, the returned array will be broken down into chunks with each being <i><tt class='parameter'>split_length</tt></i> in length, otherwise each chunk will be one character in length. </p> <p class='para'> <b><tt class='constant'>FALSE</tt></b> is returned if <i><tt class='parameter'>split_length</tt></i> is less than 1. If the <i><tt class='parameter'>split_length</tt></i> length exceeds the length of <i><tt class='parameter'>string</tt></i> , the entire string is returned as the first (and only) array element. </p> </div> <a name='function.str-split.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Example uses of <b>str_split()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;Friend'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$arr1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_split</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$arr2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_split</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; H [1] =&amp;gt; e [2] =&amp;gt; l [3] =&amp;gt; l [4] =&amp;gt; o [5] =&amp;gt; [6] =&amp;gt; F [7] =&amp;gt; r [8] =&amp;gt; i [9] =&amp;gt; e [10] =&amp;gt; n [11] =&amp;gt; d ) Array ( [0] =&amp;gt; Hel [1] =&amp;gt; lo [2] =&amp;gt; Fri [3] =&amp;gt; end ) </pre></div> </div> </div><p> </p> </div> <a name='function.str-split.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.chunk-split.php' class='function' rel='rdfs-seeAlso'>chunk_split()</a> - Split a string into smaller chunks</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.count-chars.php' class='function' rel='rdfs-seeAlso'>count_chars()</a> - Return information about characters used in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-word-count.php' class='function' rel='rdfs-seeAlso'>str_word_count()</a> - Return information about words used in a string</li> <li class='member'><a href='http://www.php.net/manual/en/control-structures.for.php' class='link'>for</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_shuffle" value="<div id='function.str-shuffle' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-shuffle.php'>str_shuffle</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>str_shuffle</span> &amp;mdash; <span class='dc-title'>Randomly shuffles a string</span></p> </div> <a name='function.str-shuffle.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>str_shuffle</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='simpara'> <b>str_shuffle()</b> shuffles a string. One permutation of all possible is created. </p> </div> <a name='function.str-shuffle.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.str-shuffle.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the shuffled string. </p> </div> <a name='function.str-shuffle.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_shuffle()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$shuffled&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_shuffle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;This&amp;nbsp;will&amp;nbsp;echo&amp;nbsp;something&amp;nbsp;like:&amp;nbsp;bfdaec<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$shuffled</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.str-shuffle.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.shuffle.php' class='function' rel='rdfs-seeAlso'>shuffle()</a> - Shuffle an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.rand.php' class='function' rel='rdfs-seeAlso'>rand()</a> - Generate a random integer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_rot13" value="<div id='function.str-rot13' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-rot13.php'>str_rot13</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>str_rot13</span> &amp;mdash; <span class='dc-title'>Perform the rot13 transform on a string</span></p> </div> <a name='function.str-rot13.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>str_rot13</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Performs the ROT13 encoding on the <i><tt class='parameter'>str</tt></i> argument and returns the resulting string. </p> <p class='para'> The ROT13 encoding simply shifts every letter by 13 places in the alphabet while leaving non-alpha characters untouched. Encoding and decoding are done by the same function, passing an encoded string as argument will return the original version. </p> </div> <a name='function.str-rot13.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.str-rot13.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the ROT13 version of the given string. </p> </div> <a name='function.str-rot13.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_rot13()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>str_rot13</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'PHP&amp;nbsp;4.3.0'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;CUC&amp;nbsp;4.3.0<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.str-rot13.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The behaviour of this function was fixed. Before this fix, the <i><tt class='parameter'>str</tt></i> was also modified, as if it was passed by reference. </td> </tr> </tbody> </table> <p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_replace" value="<div id='function.str-replace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-replace.php'>str_replace</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>str_replace</span> &amp;mdash; <span class='dc-title'>Replace all occurrences of the search string with the replacement string</span></p> </div> <a name='function.str-replace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>str_replace</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$search</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$replace</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$count</tt></span> ] )</div> <p class='para rdfs-comment'> This function returns a string or an array with all occurrences of <i><tt class='parameter'>search</tt></i> in <i><tt class='parameter'>subject</tt></i> replaced with the given <i><tt class='parameter'>replace</tt></i> value. </p> <p class='para'> If you don&amp;#039;t need fancy replacing rules (like regular expressions), you should always use this function instead of <a href='http://www.php.net/manual/en/function.ereg-replace.php' class='function'>ereg_replace()</a> or <a href='http://www.php.net/manual/en/function.preg-replace.php' class='function'>preg_replace()</a>. </p> </div> <a name='function.str-replace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> If <i><tt class='parameter'>search</tt></i> and <i><tt class='parameter'>replace</tt></i> are arrays, then <b>str_replace()</b> takes a value from each array and uses them to do search and replace on <i><tt class='parameter'>subject</tt></i> . If <i><tt class='parameter'>replace</tt></i> has fewer values than <i><tt class='parameter'>search</tt></i> , then an empty string is used for the rest of replacement values. If <i><tt class='parameter'>search</tt></i> is an array and <i><tt class='parameter'>replace</tt></i> is a string, then this replacement string is used for every value of <i><tt class='parameter'>search</tt></i> . The converse would not make sense, though. </p> <p class='para'> If <i><tt class='parameter'>search</tt></i> or <i><tt class='parameter'>replace</tt></i> are arrays, their elements are processed first to last. </p> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>search</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replace</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>subject</tt></i> is an array, then the search and replace is performed with every entry of <i><tt class='parameter'>subject</tt></i> , and the return value is an array as well. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>count</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> If passed, this will hold the number of matched and replaced needles. </span> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.str-replace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns a string or an array with the replaced values. </p> </div> <a name='function.str-replace.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>count</tt></i> parameter was added. </td> </tr> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> The behaviour of this function changed. In older versions a bug existed when using arrays as both <i><tt class='parameter'>search</tt></i> and <i><tt class='parameter'>replace</tt></i> parameters which caused empty <i><tt class='parameter'>search</tt></i> indexes to be skipped without advancing the internal pointer on the <i><tt class='parameter'>replace</tt></i> array. This has been corrected in PHP 4.3.3, any scripts which relied on this bug should remove empty search values prior to calling this function in order to mimic the original behavior. </td> </tr> <tr valign='middle'> <td align='left'>4.0.5</td> <td align='left'> Most parameters can now be an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.str-replace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_replace()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Provides:&amp;nbsp;&amp;lt;body&amp;nbsp;text='black'&amp;gt;<br /></span><span style='color: #0000BB'>$bodytag&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%body%'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'black'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;body&amp;nbsp;text='%body%'&amp;gt;'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Provides:&amp;nbsp;Hll&amp;nbsp;Wrld&amp;nbsp;f&amp;nbsp;PHP<br /></span><span style='color: #0000BB'>$vowels&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'i'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'u'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'A'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'E'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'I'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'O'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'U'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$onlyconsonants&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$vowels</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World&amp;nbsp;of&amp;nbsp;PHP'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Provides:&amp;nbsp;You&amp;nbsp;should&amp;nbsp;eat&amp;nbsp;pizza,&amp;nbsp;beer,&amp;nbsp;and&amp;nbsp;ice&amp;nbsp;cream&amp;nbsp;every&amp;nbsp;day<br /></span><span style='color: #0000BB'>$phrase&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'You&amp;nbsp;should&amp;nbsp;eat&amp;nbsp;fruits,&amp;nbsp;vegetables,&amp;nbsp;and&amp;nbsp;fiber&amp;nbsp;every&amp;nbsp;day.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$healthy&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'fruits'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'vegetables'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'fiber'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$yummy&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'pizza'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'beer'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ice&amp;nbsp;cream'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$newphrase&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$healthy</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$yummy</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$phrase</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Use&amp;nbsp;of&amp;nbsp;the&amp;nbsp;count&amp;nbsp;parameter&amp;nbsp;is&amp;nbsp;available&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.0.0<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ll'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'good&amp;nbsp;golly&amp;nbsp;miss&amp;nbsp;molly!'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$count</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;2<br /><br />//&amp;nbsp;Order&amp;nbsp;of&amp;nbsp;replacement<br /></span><span style='color: #0000BB'>$str&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Line&amp;nbsp;1\nLine&amp;nbsp;2\rLine&amp;nbsp;3\r\nLine&amp;nbsp;4\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$order&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'\r\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$replace&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;Processes&amp;nbsp;\r\n's&amp;nbsp;first&amp;nbsp;so&amp;nbsp;they&amp;nbsp;aren't&amp;nbsp;converted&amp;nbsp;twice.<br /></span><span style='color: #0000BB'>$newstr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$order</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$replace</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;apearpearle&amp;nbsp;pear<br /></span><span style='color: #0000BB'>$letters&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'p'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$fruit&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'pear'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$text&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;p'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$output&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_replace</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$letters</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.str-replace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: This function is case-sensitive. Use <a href='http://www.php.net/manual/en/function.str-ireplace.php' class='function'>str_ireplace()</a> for case-insensitive replace. <br /> </p></blockquote> </div> <a name='function.str-replace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.str-ireplace.php' class='function' rel='rdfs-seeAlso'>str_ireplace()</a> - Case-insensitive version of str_replace.</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr-replace.php' class='function' rel='rdfs-seeAlso'>substr_replace()</a> - Replace text within a portion of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtr.php' class='function' rel='rdfs-seeAlso'>strtr()</a> - Translate certain characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_repeat" value="<div id='function.str-repeat' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-repeat.php'>str_repeat</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>str_repeat</span> &amp;mdash; <span class='dc-title'>Repeat a string</span></p> </div> <a name='function.str-repeat.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>str_repeat</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$input</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$multiplier</tt></span> )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>input</tt></i> repeated <i><tt class='parameter'>multiplier</tt></i> times. </p> </div> <a name='function.str-repeat.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be repeated. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>multiplier</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of time the <i><tt class='parameter'>input</tt></i> string should be repeated. </p> <p class='para'> <i><tt class='parameter'>multiplier</tt></i> has to be greater than or equal to 0. If the <i><tt class='parameter'>multiplier</tt></i> is set to 0, the function will return an empty string. </p> </dd> </dl> <p> </p> </div> <a name='function.str-repeat.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the repeated string. </p> </div> <a name='function.str-repeat.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_repeat()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>str_repeat</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'-='</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> -=-=-=-=-=-=-=-=-=-= </pre></div> </div> </div><p> </p> </div> <a name='function.str-repeat.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/control-structures.for.php' class='link'>for</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.str-pad.php' class='function' rel='rdfs-seeAlso'>str_pad()</a> - Pad a string to a certain length with another string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr-count.php' class='function' rel='rdfs-seeAlso'>substr_count()</a> - Count the number of substring occurrences</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_pad" value="<div id='function.str-pad' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-pad.php'>str_pad</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>str_pad</span> &amp;mdash; <span class='dc-title'>Pad a string to a certain length with another string</span></p> </div> <a name='function.str-pad.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>str_pad</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$input</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$pad_length</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pad_string</tt><span class='initializer'> = &amp;quot; &amp;quot;</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$pad_type</tt><span class='initializer'> = STR_PAD_RIGHT</span></span> ]] )</div> <p class='para rdfs-comment'> This functions returns the <i><tt class='parameter'>input</tt></i> string padded on the left, the right, or both sides to the specified padding length. If the optional argument <i><tt class='parameter'>pad_string</tt></i> is not supplied, the <i><tt class='parameter'>input</tt></i> is padded with spaces, otherwise it is padded with characters from <i><tt class='parameter'>pad_string</tt></i> up to the limit. </p> </div> <a name='function.str-pad.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>input</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pad_length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the value of <i><tt class='parameter'>pad_length</tt></i> is negative or less than the length of the input string, no padding takes place. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pad_string</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: The <i><tt class='parameter'>pad_string</tt></i> may be truncated if the required number of padding characters can&amp;#039;t be evenly divided by the <i><tt class='parameter'>pad_string</tt></i> &amp;#039;s length. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pad_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optional argument <i><tt class='parameter'>pad_type</tt></i> can be <b><tt class='constant'>STR_PAD_RIGHT</tt></b>, <b><tt class='constant'>STR_PAD_LEFT</tt></b>, or <b><tt class='constant'>STR_PAD_BOTH</tt></b>. If <i><tt class='parameter'>pad_type</tt></i> is not specified it is assumed to be <b><tt class='constant'>STR_PAD_RIGHT</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.str-pad.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the padded string. </p> </div> <a name='function.str-pad.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_pad()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$input&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Alien'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>str_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;produces&amp;nbsp;'Alien&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>str_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'-='</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STR_PAD_LEFT</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;produces&amp;nbsp;'-=-=-Alien'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>str_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'_'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STR_PAD_BOTH</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;produces&amp;nbsp;'__Alien___'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>str_pad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$input</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>6&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'___'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;produces&amp;nbsp;'Alien_'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="str_ireplace" value="<div id='function.str-ireplace' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.str-ireplace.php'>str_ireplace</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>str_ireplace</span> &amp;mdash; <span class='dc-title'>Case-insensitive version of <a href='http://www.php.net/manual/en/function.str-replace.php' class='function'>str_replace()</a>.</span></p> </div> <a name='function.str-ireplace.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>str_ireplace</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$search</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$replace</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$subject</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$count</tt></span> ] )</div> <p class='para rdfs-comment'> This function returns a string or an array with all occurrences of <i><tt class='parameter'>search</tt></i> in <i><tt class='parameter'>subject</tt></i> (ignoring case) replaced with the given <i><tt class='parameter'>replace</tt></i> value. If you don&amp;#039;t need fancy replacing rules, you should generally use this function instead of <a href='http://www.php.net/manual/en/function.preg-replace.php' class='function'>preg_replace()</a> with the <i>i</i> modifier. </p> </div> <a name='function.str-ireplace.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>search</tt></i> </span> </dt><dd class='listitem'> <blockquote><p><b class='note'>Note</b>: Every replacement with <i><tt class='parameter'>search</tt></i> array is performed on the result of previous replacement. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replace</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>subject</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>subject</tt></i> is an array, then the search and replace is performed with every entry of <i><tt class='parameter'>subject</tt></i> , and the return value is an array as well. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>count</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number of matched and replaced <i><tt class='parameter'>needles</tt></i> will be returned in <i><tt class='parameter'>count</tt></i> which is passed by reference. </p> </dd> </dl> <p> </p> <p class='para'> If <i><tt class='parameter'>search</tt></i> and <i><tt class='parameter'>replace</tt></i> are arrays, then <b>str_ireplace()</b> takes a value from each array and uses them to do search and replace on <i><tt class='parameter'>subject</tt></i> . If <i><tt class='parameter'>replace</tt></i> has fewer values than <i><tt class='parameter'>search</tt></i> , then an empty string is used for the rest of replacement values. If <i><tt class='parameter'>search</tt></i> is an array and <i><tt class='parameter'>replace</tt></i> is a string, then this replacement string is used for every value of <i><tt class='parameter'>search</tt></i> . </p> </div> <a name='function.str-ireplace.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string or an array of replacements. </p> </div> <a name='function.str-ireplace.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>count</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.str-ireplace.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>str_ireplace()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$bodytag&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>str_ireplace</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%body%'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'black'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;body&amp;nbsp;text=%BODY%&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.str-ireplace.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.str-ireplace.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.str-replace.php' class='function' rel='rdfs-seeAlso'>str_replace()</a> - Replace all occurrences of the search string with the replacement string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> <li class='member'><a href='http://www.php.net/manual/en/function.strtr.php' class='function' rel='rdfs-seeAlso'>strtr()</a> - Translate certain characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strval" value="<div id='function.strval' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strval.php'>strval</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strval</span> &amp;mdash; <span class='dc-title'>Get string value of a variable</span></p> </div> <a name='function.strval.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strval</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$var</tt></span> )</div> <p class='simpara'> Get the string value of a variable. See the documentation on <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> for more information on converting to string. </p> </div> <a name='function.strval.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable that is being converted to a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> <p class='para'> <i><tt class='parameter'>var</tt></i> may be any scalar type. You cannot use <b>strval()</b> on arrays or objects. </p> </dd> </dl> <p> </p> </div> <a name='function.strval.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> value of <i><tt class='parameter'>var</tt></i> . </p> </div> <a name='function.strval.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strval()</b> example using PHP5&amp;#039;s magic __toString method</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>StrValTest<br /></span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__toString</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>__CLASS__</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Prints&amp;nbsp;'StrValTest'<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strval</span><span style='color: #007700'>(new&amp;nbsp;</span><span style='color: #0000BB'>StrValTest</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strval.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.floatval.php' class='function' rel='rdfs-seeAlso'>floatval()</a> - Get float value of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.intval.php' class='function' rel='rdfs-seeAlso'>intval()</a> - Get the integer value of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.settype.php' class='function' rel='rdfs-seeAlso'>settype()</a> - Set the type of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/language.types.type-juggling.php' class='link'>Type juggling</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strtr" value="<div id='function.strtr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strtr.php'>strtr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strtr</span> &amp;mdash; <span class='dc-title'>Translate certain characters</span></p> </div> <a name='function.strtr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$from</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$to</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$replace_pairs</tt></span> )</div> <p class='para rdfs-comment'> This function returns a copy of <i><tt class='parameter'>str</tt></i> , translating all occurrences of each character in <i><tt class='parameter'>from</tt></i> to the corresponding character in <i><tt class='parameter'>to</tt></i> . </p> <p class='para'> If <i><tt class='parameter'>from</tt></i> and <i><tt class='parameter'>to</tt></i> are different lengths, the extra characters in the longer of the two are ignored. </p> </div> <a name='function.strtr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being translated. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>from</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being translated to <i><tt class='parameter'>to</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>to</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> replacing <i><tt class='parameter'>from</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>replace_pairs</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>replace_pairs</tt></i> parameter may be used as a substitute for <i><tt class='parameter'>to</tt></i> and <i><tt class='parameter'>from</tt></i> in which case it&amp;#039;s an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> in the form <i>array(&amp;#039;from&amp;#039; =&amp;gt; &amp;#039;to&amp;#039;, ...)</i>. </p> </dd> </dl> <p> </p> </div> <a name='function.strtr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns a copy of <i><tt class='parameter'>str</tt></i> , translating all occurrences of each character in <i><tt class='parameter'>from</tt></i> to the corresponding character in <i><tt class='parameter'>to</tt></i> . </p> </div> <a name='function.strtr.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> The optional <i><tt class='parameter'>to</tt></i> and <i><tt class='parameter'>from</tt></i> parameters were added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strtr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strtr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$addr&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$addr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;Atilde;&amp;curren;&amp;Atilde;&amp;yen;&amp;Atilde;&amp;para;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'aao'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> <b>strtr()</b> may be called with only two arguments. If called with two arguments it behaves in a new way: <i><tt class='parameter'>from</tt></i> then has to be an array that contains string -&amp;gt; string pairs that will be replaced in the source string. <b>strtr()</b> will always look for the longest possible match first and will *NOT* try to replace stuff that it has already worked on. </p> <div class='example'> <p><b>Example #2 <b>strtr()</b> example with two arguments</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$trans&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'hello'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'hi'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hi'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtr</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'hi&amp;nbsp;all,&amp;nbsp;I&amp;nbsp;said&amp;nbsp;hello'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$trans</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> hello all, I said hi </pre></div> </div> </div> </div> <a name='function.strtr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-replace.php' class='function' rel='rdfs-seeAlso'>preg_replace()</a> - Perform a regular expression search and replace</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strtoupper" value="<div id='function.strtoupper' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strtoupper.php'>strtoupper</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strtoupper</span> &amp;mdash; <span class='dc-title'>Make a string uppercase</span></p> </div> <a name='function.strtoupper.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtoupper</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>string</tt></i> with all alphabetic characters converted to uppercase. </p> <p class='para'> Note that &amp;#039;alphabetic&amp;#039; is determined by the current locale. For instance, in the default &amp;quot;C&amp;quot; locale characters such as umlaut-a (&amp;Atilde;&amp;curren;) will not be converted. </p> </div> <a name='function.strtoupper.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.strtoupper.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the uppercased string. </p> </div> <a name='function.strtoupper.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strtoupper()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Mary&amp;nbsp;Had&amp;nbsp;A&amp;nbsp;Little&amp;nbsp;Lamb&amp;nbsp;and&amp;nbsp;She&amp;nbsp;LOVED&amp;nbsp;It&amp;nbsp;So'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtoupper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Prints&amp;nbsp;MARY&amp;nbsp;HAD&amp;nbsp;A&amp;nbsp;LITTLE&amp;nbsp;LAMB&amp;nbsp;AND&amp;nbsp;SHE&amp;nbsp;LOVED&amp;nbsp;IT&amp;nbsp;SO<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strtoupper.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strtoupper.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strtolower.php' class='function' rel='rdfs-seeAlso'>strtolower()</a> - Make a string lowercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucfirst.php' class='function' rel='rdfs-seeAlso'>ucfirst()</a> - Make a string's first character uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucwords.php' class='function' rel='rdfs-seeAlso'>ucwords()</a> - Uppercase the first character of each word in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-strtoupper.php' class='function' rel='rdfs-seeAlso'>mb_strtoupper()</a> - Make a string uppercase</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strtotime" value="<div id='function.strtotime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strtotime.php'>strtotime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strtotime</span> &amp;mdash; <span class='dc-title'>Parse about any English textual datetime description into a Unix timestamp</span></p> </div> <a name='function.strtotime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strtotime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$time</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$now</tt></span> ] )</div> <p class='simpara'> The function expects to be given a string containing a US English date format and will try to parse that format into a Unix timestamp (the number of seconds since January 1 1970 00:00:00 UTC), relative to the timestamp given in <i><tt class='parameter'>now</tt></i> , or the current time if <i><tt class='parameter'>now</tt></i> is not supplied. </p> <p class='para'> This function will use the <span class='envar'>TZ</span> environment variable (if available) to calculate the timestamp. Since PHP 5.1.0 there are easier ways to define the timezone that is used across all date/time functions. That process is explained in the <a href='http://www.php.net/manual/en/function.date-default-timezone-get.php' class='function'>date_default_timezone_get()</a> function page. </p> <blockquote><p><b class='note'>Note</b>: If the number of the year is specified in a two digit format, the values between 00-69 are mapped to 2000-2069 and 70-99 to 1970-1999. See the notes below for possible differences on 32bit systems (possible dates might end on 2038-01-19 03:14:07). <br /> </p></blockquote> </div> <a name='function.strtotime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>time</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to parse. Before PHP 5.0.0, microseconds weren&amp;#039;t allowed in the time, since PHP 5.0.0 they are allowed but ignored. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>now</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The timestamp which is used as a base for the calculation of relative dates. </p> </dd> </dl> <p> </p> </div> <a name='function.strtotime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a timestamp on success, <b><tt class='constant'>FALSE</tt></b> otherwise. Previous to PHP 5.1.0, this function would return <i>-1</i> on failure. </p> </div> <a name='function.strtotime.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the time zone is not valid, and/or a <b><tt class='constant'>E_STRICT</tt></b> or <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. See also <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a></p> </div> <a name='function.strtotime.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> It now returns <b><tt class='constant'>FALSE</tt></b> on failure, instead of <i>-1</i>. </td> </tr> <tr valign='middle'><td align='left'>5.1.0</td><td align='left'><p class='para'> Now issues the <b><tt class='constant'>E_STRICT</tt></b> and <b><tt class='constant'>E_NOTICE</tt></b> time zone errors.</p></td></tr> </tbody> </table> <p> </p> </div> <a name='function.strtotime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>strtotime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'now'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'10&amp;nbsp;September&amp;nbsp;2000'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+1&amp;nbsp;day'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+1&amp;nbsp;week'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'+1&amp;nbsp;week&amp;nbsp;2&amp;nbsp;days&amp;nbsp;4&amp;nbsp;hours&amp;nbsp;2&amp;nbsp;seconds'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'next&amp;nbsp;Thursday'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'last&amp;nbsp;Monday'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Checking for failure</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Not&amp;nbsp;Good'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;previous&amp;nbsp;to&amp;nbsp;PHP&amp;nbsp;5.1.0&amp;nbsp;you&amp;nbsp;would&amp;nbsp;compare&amp;nbsp;with&amp;nbsp;-1,&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;false<br /></span><span style='color: #007700'>if&amp;nbsp;((</span><span style='color: #0000BB'>$timestamp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>))&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;(</span><span style='color: #0000BB'>$str</span><span style='color: #DD0000'>)&amp;nbsp;is&amp;nbsp;bogus'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$str</span><span style='color: #DD0000'>&amp;nbsp;==&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'l&amp;nbsp;dS&amp;nbsp;\o\f&amp;nbsp;F&amp;nbsp;Y&amp;nbsp;h:i:s&amp;nbsp;A'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$timestamp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strtotime.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> In PHP 5 up to 5.0.2, <i>&amp;quot;now&amp;quot;</i> and other relative times are wrongly computed from today&amp;#039;s midnight. It differs from other versions where it is correctly computed from current time. </p> </div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> In PHP versions prior to 4.4.0, <i>&amp;quot;next&amp;quot;</i> is incorrectly computed as +2. A typical solution to this is to use <i>&amp;quot;+1&amp;quot;</i>. </p> </div> <blockquote><p><b class='note'>Note</b>: The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 UTC to Tue, 19 Jan 2038 03:14:07 UTC. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer.) Additionally, not all platforms support negative timestamps, therefore your date range may be limited to no earlier than the Unix epoch. This means that e.g. dates prior to Jan 1, 1970 will not work on Windows, some Linux distributions, and a few other operating systems. PHP 5.1.0 and newer versions overcome this limitation though. <br /> </p></blockquote> </div> <a name='function.strtotime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strptime.php' class='function' rel='rdfs-seeAlso'>strptime()</a> - Parse a time/date generated with strftime</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strtolower" value="<div id='function.strtolower' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strtolower.php'>strtolower</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strtolower</span> &amp;mdash; <span class='dc-title'>Make a string lowercase</span></p> </div> <a name='function.strtolower.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtolower</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>string</tt></i> with all alphabetic characters converted to lowercase. </p> <p class='para'> Note that &amp;#039;alphabetic&amp;#039; is determined by the current locale. This means that in i.e. the default &amp;quot;C&amp;quot; locale, characters such as umlaut-A (&amp;Atilde;&amp;#132;) will not be converted. </p> </div> <a name='function.strtolower.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.strtolower.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the lowercased string. </p> </div> <a name='function.strtolower.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strtolower()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Mary&amp;nbsp;Had&amp;nbsp;A&amp;nbsp;Little&amp;nbsp;Lamb&amp;nbsp;and&amp;nbsp;She&amp;nbsp;LOVED&amp;nbsp;It&amp;nbsp;So'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Prints&amp;nbsp;mary&amp;nbsp;had&amp;nbsp;a&amp;nbsp;little&amp;nbsp;lamb&amp;nbsp;and&amp;nbsp;she&amp;nbsp;loved&amp;nbsp;it&amp;nbsp;so<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strtolower.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strtolower.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strtoupper.php' class='function' rel='rdfs-seeAlso'>strtoupper()</a> - Make a string uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucfirst.php' class='function' rel='rdfs-seeAlso'>ucfirst()</a> - Make a string's first character uppercase</li> <li class='member'><a href='http://www.php.net/manual/en/function.ucwords.php' class='function' rel='rdfs-seeAlso'>ucwords()</a> - Uppercase the first character of each word in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-strtolower.php' class='function' rel='rdfs-seeAlso'>mb_strtolower()</a> - Make a string lowercase</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strtok" value="<div id='function.strtok' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strtok.php'>strtok</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strtok</span> &amp;mdash; <span class='dc-title'>Tokenize string</span></p> </div> <a name='function.strtok.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtok</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$token</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strtok</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$token</tt></span> )</div> <p class='para rdfs-comment'> <b>strtok()</b> splits a string (<i><tt class='parameter'>str</tt></i> ) into smaller strings (tokens), with each token being delimited by any character from <i><tt class='parameter'>token</tt></i> . That is, if you have a string like &amp;quot;This is an example string&amp;quot; you could tokenize this string into its individual words by using the space character as the token. </p> <p class='para'> Note that only the first call to strtok uses the string argument. Every subsequent call to strtok only needs the token to use, as it keeps track of where it is in the current string. To start over, or to tokenize a new string you simply call strtok with the string argument again to initialize it. Note that you may put multiple tokens in the token parameter. The string will be tokenized when any one of the characters in the argument are found. </p> </div> <a name='function.strtok.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being split up into smaller strings (tokens). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>token</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The delimiter used when splitting up <i><tt class='parameter'>str</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.strtok.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> token. </p> </div> <a name='function.strtok.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strtok()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is\tan&amp;nbsp;example\nstring'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Use&amp;nbsp;tab&amp;nbsp;and&amp;nbsp;newline&amp;nbsp;as&amp;nbsp;tokenizing&amp;nbsp;characters&amp;nbsp;as&amp;nbsp;well&amp;nbsp;&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$tok&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;\n\t'</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(</span><span style='color: #0000BB'>$tok&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Word=</span><span style='color: #0000BB'>$tok</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$tok&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;\n\t'</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> The behavior when an empty part was found changed with PHP 4.1.0. The old behavior returned an empty string, while the new, correct, behavior simply skips the part of the string: </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Old <b>strtok()</b> behavior</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$first_token&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/something'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$second_token&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$first_token</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$second_token</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(0) &amp;quot;&amp;quot; string(9) &amp;quot;something&amp;quot; </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 New <b>strtok()</b> behavior</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$first_token&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/something'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$second_token&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtok</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$first_token</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$second_token</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(9) &amp;quot;something&amp;quot; bool(false) </pre></div> </div> </div><p> </p> </div> <a name='function.strtok.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.strtok.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.split.php' class='function' rel='rdfs-seeAlso'>split()</a> - Split string into array by regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strstr" value="<div id='function.strstr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strstr.php'>strstr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strstr</span> &amp;mdash; <span class='dc-title'>Find first occurrence of a string</span></p> </div> <a name='function.strstr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strstr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$before_needle</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Returns part of <i><tt class='parameter'>haystack</tt></i> string from the first occurrence of <i><tt class='parameter'>needle</tt></i> to the end of <i><tt class='parameter'>haystack</tt></i> . </p> <blockquote><p><b class='note'>Note</b>: This function is case-sensitive. For case-insensitive searches, use <a href='http://www.php.net/manual/en/function.stristr.php' class='function'>stristr()</a>. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If you only want to determine if a particular <i><tt class='parameter'>needle</tt></i> occurs within <i><tt class='parameter'>haystack</tt></i> , use the faster and less memory intensive function <a href='http://www.php.net/manual/en/function.strpos.php' class='function'>strpos()</a> instead. <br /> </p></blockquote> </div> <a name='function.strstr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>before_needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <b><tt class='constant'>TRUE</tt></b> (the default is <b><tt class='constant'>FALSE</tt></b>), <b>strstr()</b> returns the part of the <i><tt class='parameter'>haystack</tt></i> before the first occurrence of the <i><tt class='parameter'>needle</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.strstr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the portion of string, or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>needle</tt></i> is not found. </p> </div> <a name='function.strstr.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added the optional parameter <i><tt class='parameter'>before_needle</tt></i> . </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <b>strstr()</b> was made binary safe. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strstr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strstr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$email&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'name@example.com'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$domain&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strstr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$email</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'@'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$domain</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;@example.com<br /><br /></span><span style='color: #0000BB'>$user&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strstr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$email</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'@'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;prints&amp;nbsp;name<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strstr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strspn" value="<div id='function.strspn' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strspn.php'>strspn</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strspn</span> &amp;mdash; <span class='dc-title'>Find length of initial segment matching mask</span></p> </div> <a name='function.strspn.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strspn</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$start</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ]] )</div> <p class='para rdfs-comment'> Finds the length of the initial segment matching mask. </p> <p class='para'> The line of code: </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strspn</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'42&amp;nbsp;is&amp;nbsp;the&amp;nbsp;answer,&amp;nbsp;what&amp;nbsp;is&amp;nbsp;the&amp;nbsp;question&amp;nbsp;...'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'1234567890'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> will assign 2 to <var class='varname'>$var</var>, because the string &amp;quot;42&amp;quot; will be the longest segment containing characters from &amp;quot;1234567890&amp;quot;. </p> </div> <a name='function.strspn.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>start</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The start position of the string to examine. Negative value counts position from the end of a string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The length of the string to examine. Negative value sets length from the end of a string. </p> </dd> </dl> <p> </p> </div> <a name='function.strspn.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the initial segment of <i><tt class='parameter'>str1</tt></i> which consists entirely of characters in <i><tt class='parameter'>str2</tt></i> . </p> </div> <a name='function.strspn.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <i><tt class='parameter'>start</tt></i> and <i><tt class='parameter'>length</tt></i> parameters were added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strspn.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strspn()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strspn</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;2<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strspn.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strspn.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strcspn.php' class='function' rel='rdfs-seeAlso'>strcspn()</a> - Find length of initial segment not matching mask</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strrpos" value="<div id='function.strrpos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strrpos.php'>strrpos</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strrpos</span> &amp;mdash; <span class='dc-title'>Find position of last occurrence of a char in a string</span></p> </div> <a name='function.strrpos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strrpos</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Returns the numeric position of the last occurrence of <i><tt class='parameter'>needle</tt></i> in the <i><tt class='parameter'>haystack</tt></i> string. Note that the needle in this case can only be a single character in PHP 4. If a string is passed as the needle, then only the first character of that string will be used. </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not found, returns <b><tt class='constant'>FALSE</tt></b>. </p> <p class='para'> It is easy to mistake the return values for &amp;quot;character found at position 0&amp;quot; and &amp;quot;character not found&amp;quot;. Here&amp;#039;s how to detect the difference: </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;in&amp;nbsp;PHP&amp;nbsp;4.0.0&amp;nbsp;and&amp;nbsp;newer:<br /></span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strrpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;note:&amp;nbsp;three&amp;nbsp;equal&amp;nbsp;signs<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;not&amp;nbsp;found...<br /></span><span style='color: #007700'>}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;in&amp;nbsp;versions&amp;nbsp;older&amp;nbsp;than&amp;nbsp;4.0.0:<br /></span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strrpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>is_bool</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$pos</span><span style='color: #007700'>)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;!</span><span style='color: #0000BB'>$pos</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;not&amp;nbsp;found...<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> As of PHP 5.0.0 <i><tt class='parameter'>offset</tt></i> may be specified to begin searching an arbitrary number of characters into the string. Negative values will stop searching at an arbitrary point prior to the end of the string. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> The <i><tt class='parameter'>needle</tt></i> may be a string of more than one character as of PHP 5.0.0. </span> </p></blockquote> </div> <a name='function.strrpos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.strrpos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p> </div> <a name='function.strrpos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strripos.php' class='function' rel='rdfs-seeAlso'>strripos()</a> - Find position of last occurrence of a case-insensitive string in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strripos" value="<div id='function.strripos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strripos.php'>strripos</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>strripos</span> &amp;mdash; <span class='dc-title'>Find position of last occurrence of a case-insensitive string in a string</span></p> </div> <a name='function.strripos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strripos</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Find position of last occurrence of a case-insensitive string in a string. Unlike <a href='http://www.php.net/manual/en/function.strrpos.php' class='function'>strrpos()</a>, <b>strripos()</b> is case-insensitive. </p> </div> <a name='function.strripos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Note that the <i><tt class='parameter'>needle</tt></i> may be a string of one or more characters. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>offset</tt></i> parameter may be specified to begin searching an arbitrary number of characters into the string. </p> <p class='para'> Negative offset values will start the search at <i><tt class='parameter'>offset</tt></i> characters from the <em class='emphasis'>start</em> of the string. </p> </dd> </dl> <p> </p> </div> <a name='function.strripos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the numerical position of the last occurrence of <i><tt class='parameter'>needle</tt></i> . Also note that string positions start at 0, and not 1. </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not found, <b><tt class='constant'>FALSE</tt></b> is returned. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.strripos.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>strripos()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$haystack&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'ababcd'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$needle&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'aB'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$pos&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strripos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$haystack</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$needle</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Sorry,&amp;nbsp;we&amp;nbsp;did&amp;nbsp;not&amp;nbsp;find&amp;nbsp;(</span><span style='color: #0000BB'>$needle</span><span style='color: #DD0000'>)&amp;nbsp;in&amp;nbsp;(</span><span style='color: #0000BB'>$haystack</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Congratulations!\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'We&amp;nbsp;found&amp;nbsp;the&amp;nbsp;last&amp;nbsp;(</span><span style='color: #0000BB'>$needle</span><span style='color: #DD0000'>)&amp;nbsp;in&amp;nbsp;(</span><span style='color: #0000BB'>$haystack</span><span style='color: #DD0000'>)&amp;nbsp;at&amp;nbsp;position&amp;nbsp;(</span><span style='color: #0000BB'>$pos</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Congratulations! We found the last (aB) in (ababcd) at position (2) </pre></div> </div> </div><p> </p> </div> <a name='function.strripos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripos.php' class='function' rel='rdfs-seeAlso'>stripos()</a> - Find position of first occurrence of a case-insensitive string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strrev" value="<div id='function.strrev' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strrev.php'>strrev</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strrev</span> &amp;mdash; <span class='dc-title'>Reverse a string</span></p> </div> <a name='function.strrev.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strrev</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> Returns <i><tt class='parameter'>string</tt></i> , reversed. </p> </div> <a name='function.strrev.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be reversed. </p> </dd> </dl> <p> </p> </div> <a name='function.strrev.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the reversed string. </p> </div> <a name='function.strrev.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Reversing a string with <b>strrev()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strrev</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Hello&amp;nbsp;world!'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;'!dlrow&amp;nbsp;olleH'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strrchr" value="<div id='function.strrchr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strrchr.php'>strrchr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strrchr</span> &amp;mdash; <span class='dc-title'>Find the last occurrence of a character in a string</span></p> </div> <a name='function.strrchr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strrchr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$needle</tt></span> )</div> <p class='para rdfs-comment'> This function returns the portion of <i><tt class='parameter'>haystack</tt></i> which starts at the last occurrence of <i><tt class='parameter'>needle</tt></i> and goes until the end of <i><tt class='parameter'>haystack</tt></i> . </p> </div> <a name='function.strrchr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>needle</tt></i> contains more than one character, only the first is used. This behavior is different from that of <a href='http://www.php.net/manual/en/function.strstr.php' class='function'>strstr()</a>. </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> </dd> </dl> <p> </p> </div> <a name='function.strrchr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns the portion of string, or <b><tt class='constant'>FALSE</tt></b> if <i><tt class='parameter'>needle</tt></i> is not found. </p> </div> <a name='function.strrchr.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> This function is now binary safe. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strrchr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strrchr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;last&amp;nbsp;directory&amp;nbsp;in&amp;nbsp;$PATH<br /></span><span style='color: #0000BB'>$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>strrchr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$PATH</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>':'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;everything&amp;nbsp;after&amp;nbsp;last&amp;nbsp;newline<br /></span><span style='color: #0000BB'>$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Line&amp;nbsp;1\nLine&amp;nbsp;2\nLine&amp;nbsp;3'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$last&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>strrchr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>1&amp;nbsp;</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strrchr.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strrchr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strpos" value="<div id='function.strpos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strpos.php'>strpos</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strpos</span> &amp;mdash; <span class='dc-title'>Find position of first occurrence of a string</span></p> </div> <a name='function.strpos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strpos</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Returns the numeric position of the first occurrence of <i><tt class='parameter'>needle</tt></i> in the <i><tt class='parameter'>haystack</tt></i> string. Unlike the <a href='http://www.php.net/manual/en/function.strrpos.php' class='function'>strrpos()</a> before PHP 5, this function can take a full string as the <i><tt class='parameter'>needle</tt></i> parameter and the entire string will be used. </p> </div> <a name='function.strpos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>offset</tt></i> parameter allows you to specify which character in <i><tt class='parameter'>haystack</tt></i> to start searching. The position returned is still relative to the beginning of <i><tt class='parameter'>haystack</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.strpos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the position as an integer. If <i><tt class='parameter'>needle</tt></i> is not found, <b>strpos()</b> will return <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>FALSE</tt></b>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.strpos.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using ===</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$mystring&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abc'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$findme&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$findme</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Note&amp;nbsp;our&amp;nbsp;use&amp;nbsp;of&amp;nbsp;===.&amp;nbsp;&amp;nbsp;Simply&amp;nbsp;==&amp;nbsp;would&amp;nbsp;not&amp;nbsp;work&amp;nbsp;as&amp;nbsp;expected<br />//&amp;nbsp;because&amp;nbsp;the&amp;nbsp;position&amp;nbsp;of&amp;nbsp;'a'&amp;nbsp;was&amp;nbsp;the&amp;nbsp;0th&amp;nbsp;(first)&amp;nbsp;character.<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$mystring</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;was&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$mystring</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;and&amp;nbsp;exists&amp;nbsp;at&amp;nbsp;position&amp;nbsp;</span><span style='color: #0000BB'>$pos</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Using !==</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$mystring&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abc'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$findme&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$findme</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;!==&amp;nbsp;operator&amp;nbsp;can&amp;nbsp;also&amp;nbsp;be&amp;nbsp;used.&amp;nbsp;&amp;nbsp;Using&amp;nbsp;!=&amp;nbsp;would&amp;nbsp;not&amp;nbsp;work&amp;nbsp;as&amp;nbsp;expected<br />//&amp;nbsp;because&amp;nbsp;the&amp;nbsp;position&amp;nbsp;of&amp;nbsp;'a'&amp;nbsp;is&amp;nbsp;0.&amp;nbsp;The&amp;nbsp;statement&amp;nbsp;(0&amp;nbsp;!=&amp;nbsp;false)&amp;nbsp;evaluates&amp;nbsp;<br />//&amp;nbsp;to&amp;nbsp;false.<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;was&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$mystring</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;and&amp;nbsp;exists&amp;nbsp;at&amp;nbsp;position&amp;nbsp;</span><span style='color: #0000BB'>$pos</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$mystring</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #3 Using an offset</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;We&amp;nbsp;can&amp;nbsp;search&amp;nbsp;for&amp;nbsp;the&amp;nbsp;character,&amp;nbsp;ignoring&amp;nbsp;anything&amp;nbsp;before&amp;nbsp;the&amp;nbsp;offset<br /></span><span style='color: #0000BB'>$newstring&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef&amp;nbsp;abcdef'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strpos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$newstring</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$pos&amp;nbsp;=&amp;nbsp;7,&amp;nbsp;not&amp;nbsp;0<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strpos.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strpos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strrpos.php' class='function' rel='rdfs-seeAlso'>strrpos()</a> - Find position of last occurrence of a char in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stripos.php' class='function' rel='rdfs-seeAlso'>stripos()</a> - Find position of first occurrence of a case-insensitive string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strripos.php' class='function' rel='rdfs-seeAlso'>strripos()</a> - Find position of last occurrence of a case-insensitive string in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strpbrk" value="<div id='function.strpbrk' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strpbrk.php'>strpbrk</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>strpbrk</span> &amp;mdash; <span class='dc-title'>Search a string for any of a set of characters</span></p> </div> <a name='function.strpbrk.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strpbrk</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$char_list</tt></span> )</div> <p class='para rdfs-comment'> <b>strpbrk()</b> searches the <i><tt class='parameter'>haystack</tt></i> string for a <i><tt class='parameter'>char_list</tt></i> . </p> </div> <a name='function.strpbrk.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string where <i><tt class='parameter'>char_list</tt></i> is looked for. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>char_list</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This parameter is case sensitive. </p> </dd> </dl> <p> </p> </div> <a name='function.strpbrk.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string starting from the character found, or <b><tt class='constant'>FALSE</tt></b> if it is not found. </p> </div> <a name='function.strpbrk.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strpbrk()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;Simple&amp;nbsp;text.'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;echoes&amp;nbsp;'is&amp;nbsp;is&amp;nbsp;a&amp;nbsp;Simple&amp;nbsp;text.'&amp;nbsp;because&amp;nbsp;'i'&amp;nbsp;is&amp;nbsp;matched&amp;nbsp;first<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strpbrk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'mi'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;echoes&amp;nbsp;'Simple&amp;nbsp;text.'&amp;nbsp;because&amp;nbsp;chars&amp;nbsp;are&amp;nbsp;case&amp;nbsp;sensitive<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strpbrk</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'S'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strncmp" value="<div id='function.strncmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strncmp.php'>strncmp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strncmp</span> &amp;mdash; <span class='dc-title'>Binary safe string comparison of the first n characters</span></p> </div> <a name='function.strncmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strncmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$len</tt></span> )</div> <p class='para rdfs-comment'> This function is similar to <a href='http://www.php.net/manual/en/function.strcmp.php' class='function'>strcmp()</a>, with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison. </p> <p class='para'> Note that this comparison is case sensitive. </p> </div> <a name='function.strncmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>len</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of characters to use in the comparison. </p> </dd> </dl> <p> </p> </div> <a name='function.strncmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strncmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strncasecmp" value="<div id='function.strncasecmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strncasecmp.php'>strncasecmp</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.2, PHP 5)</p><p class='refpurpose'><span class='refname'>strncasecmp</span> &amp;mdash; <span class='dc-title'>Binary safe case-insensitive string comparison of the first n characters</span></p> </div> <a name='function.strncasecmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strncasecmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$len</tt></span> )</div> <p class='para rdfs-comment'> This function is similar to <a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function'>strcasecmp()</a>, with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison. </p> </div> <a name='function.strncasecmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>len</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The length of strings to be used in the comparison. </p> </dd> </dl> <p> </p> </div> <a name='function.strncasecmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strncasecmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strnatcmp" value="<div id='function.strnatcmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strnatcmp.php'>strnatcmp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strnatcmp</span> &amp;mdash; <span class='dc-title'>String comparisons using a &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='function.strnatcmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strnatcmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> )</div> <p class='para rdfs-comment'> This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a &amp;quot;natural ordering&amp;quot;. Note that this comparison is case sensitive. </p> </div> <a name='function.strnatcmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> </dl> <p> </p> </div> <a name='function.strnatcmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Similar to other string comparison functions, this one returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strnatcmp.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> An example of the difference between this algorithm and the regular computer string sorting algorithms (used in <a href='http://www.php.net/manual/en/function.strcmp.php' class='function'>strcmp()</a>) can be seen below: </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$arr1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$arr2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'img12.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img10.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img2.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'img1.png'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Standard&amp;nbsp;string&amp;nbsp;comparison\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strcmp'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr1</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\nNatural&amp;nbsp;order&amp;nbsp;string&amp;nbsp;comparison\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>usort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strnatcmp'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$arr2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p class='para'>The above example will output:</p> <div class='example-contents screen'> <div class='cdata'><pre> Standard string comparison Array ( [0] =&amp;gt; img1.png [1] =&amp;gt; img10.png [2] =&amp;gt; img12.png [3] =&amp;gt; img2.png ) Natural order string comparison Array ( [0] =&amp;gt; img1.png [1] =&amp;gt; img2.png [2] =&amp;gt; img10.png [3] =&amp;gt; img12.png ) </pre></div> </div> </div><p> For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p> </div> <a name='function.strnatcmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncmp.php' class='function' rel='rdfs-seeAlso'>strncmp()</a> - Binary safe string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strnatcasecmp.php' class='function' rel='rdfs-seeAlso'>strnatcasecmp()</a> - Case insensitive string comparisons using a 'natural order' algorithm</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.natsort.php' class='function' rel='rdfs-seeAlso'>natsort()</a> - Sort an array using a 'natural order' algorithm</li> <li class='member'><a href='http://www.php.net/manual/en/function.natcasesort.php' class='function' rel='rdfs-seeAlso'>natcasesort()</a> - Sort an array using a case insensitive 'natural order' algorithm</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strnatcasecmp" value="<div id='function.strnatcasecmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strnatcasecmp.php'>strnatcasecmp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strnatcasecmp</span> &amp;mdash; <span class='dc-title'>Case insensitive string comparisons using a &amp;quot;natural order&amp;quot; algorithm</span></p> </div> <a name='function.strnatcasecmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strnatcasecmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> )</div> <p class='para rdfs-comment'> This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would. The behaviour of this function is similar to <a href='http://www.php.net/manual/en/function.strnatcmp.php' class='function'>strnatcmp()</a>, except that the comparison is not case sensitive. For more information see: Martin Pool&amp;#039;s <a href='http://sourcefrog.net/projects/natsort/' class='link external'>&amp;raquo; Natural Order String Comparison</a> page. </p> </div> <a name='function.strnatcasecmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> </dl> <p> </p> </div> <a name='function.strnatcasecmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Similar to other string comparison functions, this one returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strnatcasecmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncmp.php' class='function' rel='rdfs-seeAlso'>strncmp()</a> - Binary safe string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strlen" value="<div id='function.strlen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strlen.php'>strlen</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strlen</span> &amp;mdash; <span class='dc-title'>Get string length</span></p> </div> <a name='function.strlen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strlen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> Returns the length of the given <i><tt class='parameter'>string</tt></i> . </p> </div> <a name='function.strlen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being measured for length. </p> </dd> </dl> <p> </p> </div> <a name='function.strlen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The length of the <i><tt class='parameter'>string</tt></i> on success, and <i>0</i> if the <i><tt class='parameter'>string</tt></i> is empty. </p> </div> <a name='function.strlen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>strlen()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'abcdef'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;6<br /><br /></span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;ab&amp;nbsp;cd&amp;nbsp;'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;7<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strlen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.count.php' class='function' rel='rdfs-seeAlso'>count()</a> - Count all elements in an array, or properties in an object</li> <li class='member'><a href='http://www.php.net/manual/en/function.mb-strlen.php' class='function' rel='rdfs-seeAlso'>mb_strlen()</a> - Get string length</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stristr" value="<div id='function.stristr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stristr.php'>stristr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>stristr</span> &amp;mdash; <span class='dc-title'>Case-insensitive <a href='http://www.php.net/manual/en/function.strstr.php' class='function'>strstr()</a></span></p> </div> <a name='function.stristr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stristr</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$before_needle</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> Returns all of <i><tt class='parameter'>haystack</tt></i> from the first occurrence of <i><tt class='parameter'>needle</tt></i> to the end. </p> </div> <a name='function.stristr.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>before_needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <b><tt class='constant'>TRUE</tt></b> (the default is <b><tt class='constant'>FALSE</tt></b>), <b>stristr()</b> returns the part of the <i><tt class='parameter'>haystack</tt></i> before the first occurrence of the <i><tt class='parameter'>needle</tt></i> . </p> </dd> </dl> <p> </p> <p class='para'> <i><tt class='parameter'>needle</tt></i> and <i><tt class='parameter'>haystack</tt></i> are examined in a case-insensitive manner. </p> </div> <a name='function.stristr.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the matched substring. If <i><tt class='parameter'>needle</tt></i> is not found, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.stristr.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added the optional parameter <i><tt class='parameter'>before_needle</tt></i> . </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <b>stristr()</b> was made binary safe. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stristr.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stristr()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />&amp;nbsp;&amp;nbsp;$email&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'USER@EXAMPLE.com'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>stristr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$email</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;ER@EXAMPLE.com<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>stristr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$email</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'e'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0,&amp;nbsp;outputs&amp;nbsp;US<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Testing if a string is found or not</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />&amp;nbsp;&amp;nbsp;$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello&amp;nbsp;World!'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;if(</span><span style='color: #0000BB'>stristr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'earth'</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #0000BB'>FALSE</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>''earth'&amp;nbsp;not&amp;nbsp;found&amp;nbsp;in&amp;nbsp;string'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br /></span><span style='color: #FF8000'>//&amp;nbsp;outputs:&amp;nbsp;'earth'&amp;nbsp;not&amp;nbsp;found&amp;nbsp;in&amp;nbsp;string<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 Using a non &amp;quot;string&amp;quot; needle</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />&amp;nbsp;&amp;nbsp;$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'APPLE'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>stristr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>97</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;97&amp;nbsp;=&amp;nbsp;lowercase&amp;nbsp;a<br />//&amp;nbsp;outputs:&amp;nbsp;APPLE<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stristr.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.stristr.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strip_tags" value="<div id='function.strip-tags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strip-tags.php'>strip_tags</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strip_tags</span> &amp;mdash; <span class='dc-title'>Strip HTML and PHP tags from a string</span></p> </div> <a name='function.strip-tags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strip_tags</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$allowable_tags</tt></span> ] )</div> <p class='para rdfs-comment'> This function tries to return a string with all HTML and PHP tags stripped from a given <i><tt class='parameter'>str</tt></i> . It uses the same tag stripping state machine as the <a href='http://www.php.net/manual/en/function.fgetss.php' class='function'>fgetss()</a> function. </p> </div> <a name='function.strip-tags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>allowable_tags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can use the optional second parameter to specify tags which should not be stripped. </p> <blockquote><p><b class='note'>Note</b>: HTML comments and PHP tags are also stripped. This is hardcoded and can not be changed with <i><tt class='parameter'>allowable_tags</tt></i> . <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.strip-tags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the stripped string. </p> </div> <a name='function.strip-tags.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> <b>strip_tags()</b> is now binary safe </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> HTML comments are now always stripped </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> The <i><tt class='parameter'>allowable_tags</tt></i> parameter was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strip-tags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strip_tags()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$text&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;p&amp;gt;Test&amp;nbsp;paragraph.&amp;lt;/p&amp;gt;&amp;lt;!--&amp;nbsp;Comment&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/#fragment'&amp;gt;Other&amp;nbsp;text&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strip_tags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Allow&amp;nbsp;&amp;lt;p&amp;gt;&amp;nbsp;and&amp;nbsp;&amp;lt;a&amp;gt;<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strip_tags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$text</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;p&amp;gt;&amp;lt;a&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Test paragraph. Other text &amp;lt;p&amp;gt;Test paragraph.&amp;lt;/p&amp;gt; &amp;lt;a href=&amp;quot;#fragment&amp;quot;&amp;gt;Other text&amp;lt;/a&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.strip-tags.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Because <b>strip_tags()</b> does not actually validate the HTML, partial, or broken tags can result in the removal of more text/data than expected. </p> </div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> This function does not modify any attributes on the tags that you allow using <i><tt class='parameter'>allowable_tags</tt></i> , including the <i>style</i> and <i>onmouseover</i> attributes that a mischievous user may abuse when posting text that will be shown to other users. </p> </div> </div> <a name='function.strip-tags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.htmlspecialchars.php' class='function' rel='rdfs-seeAlso'>htmlspecialchars()</a> - Convert special characters to HTML entities</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stripslashes" value="<div id='function.stripslashes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stripslashes.php'>stripslashes</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>stripslashes</span> &amp;mdash; <span class='dc-title'>Un-quotes a quoted string</span></p> </div> <a name='function.stripslashes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stripslashes</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Un-quotes a quoted string. </p> <blockquote><p><b class='note'>Note</b>: If <a href='http://www.php.net/manual/en/sybase.configuration.php#ini.magic-quotes-sybase' class='link'>magic_quotes_sybase</a> is on, no backslashes are stripped off but two apostrophes are replaced by one instead. <br /> </p></blockquote> <p class='para'> An example use of <b>stripslashes()</b> is when the PHP directive <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc' class='link'>magic_quotes_gpc</a> is <i>on</i> (it&amp;#039;s on by default), and you aren&amp;#039;t inserting this data into a place (such as a database) that requires escaping. For example, if you&amp;#039;re simply outputting data straight from an HTML form. </p> </div> <a name='function.stripslashes.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.stripslashes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string with backslashes stripped off. (<i>\&amp;#039;</i> becomes <i>&amp;#039;</i> and so on.) Double backslashes (<i>\\</i>) are made into a single backslash (<i>\</i>). </p> </div> <a name='function.stripslashes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>stripslashes()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Is&amp;nbsp;your&amp;nbsp;name&amp;nbsp;O\'reilly?'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;Is&amp;nbsp;your&amp;nbsp;name&amp;nbsp;O'reilly?<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>stripslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <blockquote><p><b class='note'>Note</b>: <b>stripslashes()</b> is not recursive. If you want to apply this function to a multi-dimensional array, you need to use a recursive function. <br /> </p></blockquote> <p class='para'> </p><div class='example'> <p><b>Example #2 Using <b>stripslashes()</b> on an array</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>stripslashes_deep</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>is_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;?<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>array_map</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'stripslashes_deep'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stripslashes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Example<br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'f\\'oo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b\\'ar'</span><span style='color: #007700'>,&amp;nbsp;array(</span><span style='color: #DD0000'>'fo\\'o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'b\\'ar'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stripslashes_deep</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Output<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; f&amp;#039;oo [1] =&amp;gt; b&amp;#039;ar [2] =&amp;gt; Array ( [0] =&amp;gt; fo&amp;#039;o [1] =&amp;gt; b&amp;#039;ar ) ) </pre></div> </div> </div><p> </p> </div> <a name='function.stripslashes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.addslashes.php' class='function' rel='rdfs-seeAlso'>addslashes()</a> - Quote string with slashes</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_gpc()</a> - Gets the current configuration setting of magic quotes gpc</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stripos" value="<div id='function.stripos' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stripos.php'>stripos</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stripos</span> &amp;mdash; <span class='dc-title'>Find position of first occurrence of a case-insensitive string</span></p> </div> <a name='function.stripos.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>stripos</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$haystack</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$needle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Returns the numeric position of the first occurrence of <i><tt class='parameter'>needle</tt></i> in the <i><tt class='parameter'>haystack</tt></i> <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> <p class='para'> Unlike <a href='http://www.php.net/manual/en/function.strpos.php' class='function'>strpos()</a>, <b>stripos()</b> is case-insensitive. </p> </div> <a name='function.stripos.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>haystack</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to search in </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>needle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Note that the <i><tt class='parameter'>needle</tt></i> may be a string of one or more characters. </p> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not a string, it is converted to an integer and applied as the ordinal value of a character. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>offset</tt></i> parameter allows you to specify which character in <i><tt class='parameter'>haystack</tt></i> to start searching. The position returned is still relative to the beginning of <i><tt class='parameter'>haystack</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.stripos.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If <i><tt class='parameter'>needle</tt></i> is not found, <b>stripos()</b> will return <a href='http://www.php.net/manual/en/language.types.boolean.php' class='type boolean'>boolean</a> <b><tt class='constant'>FALSE</tt></b>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='function.stripos.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stripos()</b> examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$findme&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$mystring1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'xyz'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$mystring2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'ABC'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$pos1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stripos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$findme</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$pos2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stripos</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mystring2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$findme</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Nope,&amp;nbsp;'a'&amp;nbsp;is&amp;nbsp;certainly&amp;nbsp;not&amp;nbsp;in&amp;nbsp;'xyz'<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$pos1&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;was&amp;nbsp;not&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;string&amp;nbsp;'</span><span style='color: #0000BB'>$mystring1</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Note&amp;nbsp;our&amp;nbsp;use&amp;nbsp;of&amp;nbsp;===.&amp;nbsp;&amp;nbsp;Simply&amp;nbsp;==&amp;nbsp;would&amp;nbsp;not&amp;nbsp;work&amp;nbsp;as&amp;nbsp;expected<br />//&amp;nbsp;because&amp;nbsp;the&amp;nbsp;position&amp;nbsp;of&amp;nbsp;'a'&amp;nbsp;is&amp;nbsp;the&amp;nbsp;0th&amp;nbsp;(first)&amp;nbsp;character.<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$pos2&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'We&amp;nbsp;found&amp;nbsp;'</span><span style='color: #0000BB'>$findme</span><span style='color: #DD0000'>'&amp;nbsp;in&amp;nbsp;'</span><span style='color: #0000BB'>$mystring2</span><span style='color: #DD0000'>'&amp;nbsp;at&amp;nbsp;position&amp;nbsp;</span><span style='color: #0000BB'>$pos2</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stripos.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.stripos.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strpos.php' class='function' rel='rdfs-seeAlso'>strpos()</a> - Find position of first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrpos.php' class='function' rel='rdfs-seeAlso'>strrpos()</a> - Find position of last occurrence of a char in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strrchr.php' class='function' rel='rdfs-seeAlso'>strrchr()</a> - Find the last occurrence of a character in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.strripos.php' class='function' rel='rdfs-seeAlso'>strripos()</a> - Find position of last occurrence of a case-insensitive string in a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-ireplace.php' class='function' rel='rdfs-seeAlso'>str_ireplace()</a> - Case-insensitive version of str_replace.</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stripcslashes" value="<div id='function.stripcslashes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stripcslashes.php'>stripcslashes</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>stripcslashes</span> &amp;mdash; <span class='dc-title'>Un-quote string quoted with <a href='http://www.php.net/manual/en/function.addcslashes.php' class='function'>addcslashes()</a></span></p> </div> <a name='function.stripcslashes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stripcslashes</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Returns a string with backslashes stripped off. Recognizes C-like <i>\n</i>, <i>\r</i> ..., octal and hexadecimal representation. </p> </div> <a name='function.stripcslashes.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be unescaped. </p> </dd> </dl> <p> </p> </div> <a name='function.stripcslashes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the unescaped string. </p> </div> <a name='function.stripcslashes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.addcslashes.php' class='function' rel='rdfs-seeAlso'>addcslashes()</a> - Quote string with slashes in a C style</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strftime" value="<div id='function.strftime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strftime.php'>strftime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strftime</span> &amp;mdash; <span class='dc-title'>Format a local time/date according to locale settings</span></p> </div> <a name='function.strftime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>strftime</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$timestamp</tt><span class='initializer'> = time()</span></span> ] )</div> <p class='para rdfs-comment'> Format the time and/or date according to locale settings. Month and weekday names and other language-dependent strings respect the current locale set with <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a>. </p> <p class='para'> Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP&amp;#039;s <b>strftime()</b>. Additionally, not all platforms support negative timestamps, so your date range may be limited to no earlier than the Unix epoch. This means that %e, %T, %R and, %D (and possibly others) - as well as dates prior to <i>Jan 1, 1970</i> - will not work on Windows, some Linux distributions, and a few other operating systems. For Windows systems, a complete overview of supported conversion specifiers can be found at <a href='http://msdn.microsoft.com/en-us/library/az4se3k1(VS.71).aspx' class='link external'>&amp;raquo; <acronym title='Microsoft Developer Network'>MSDN</acronym></a>. </p> </div> <a name='function.strftime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p><table class='doctable table'> <caption><b>The following characters are recognized in the <i><tt class='parameter'>format</tt></i> parameter string</b></caption> <thead valign='middle'> <tr valign='middle'> <th><i><tt class='parameter'>format</tt></i> </th> <th>Description</th> <th>Example returned values</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='center'><em class='emphasis'>Day</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%a</i></td> <td align='left'>An abbreviated textual representation of the day</td> <td align='left'><i>Sun</i> through <i>Sat</i></td> </tr> <tr valign='middle'> <td align='left'><i>%A</i></td> <td align='left'>A full textual representation of the day</td> <td align='left'><i>Sunday</i> through <i>Saturday</i></td> </tr> <tr valign='middle'> <td align='left'><i>%d</i></td> <td align='left'>Two-digit day of the month (with leading zeros)</td> <td align='left'><i>01</i> to <i>31</i></td> </tr> <tr valign='middle'> <td align='left'><i>%e</i></td> <td align='left'>Day of the month, with a space preceding single digits</td> <td align='left'><i> 1</i> to <i>31</i></td> </tr> <tr valign='middle'> <td align='left'><i>%j</i></td> <td align='left'>Day of the year, 3 digits with leading zeros</td> <td align='left'><i>001</i> to <i>366</i></td> </tr> <tr valign='middle'> <td align='left'><i>%u</i></td> <td align='left'>ISO-8601 numeric representation of the day of the week</td> <td align='left'><i>1</i> (for Monday) though <i>7</i> (for Sunday)</td> </tr> <tr valign='middle'> <td align='left'><i>%w</i></td> <td align='left'>Numeric representation of the day of the week</td> <td align='left'><i>0</i> (for Sunday) through <i>6</i> (for Saturday)</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Week</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%U</i></td> <td align='left'>Week number of the given year, starting with the the first Sunday as the first week</td> <td align='left'><i>13</i> (for the 13th full week of the year)</td> </tr> <tr valign='middle'> <td align='left'><i>%V</i></td> <td align='left'>ISO-8601:1988 week number of the given year, starting with the first week of the year with at least 4 weekdays, with Monday being the start of the week</td> <td align='left'><i>01</i> through <i>53</i> (where 53 accounts for an overlapping week)</td> </tr> <tr valign='middle'> <td align='left'><i>%W</i></td> <td align='left'>A numeric representation of the week of the year, starting with the first Monday as the first week</td> <td align='left'><i>46</i> (for the 46th week of the year beginning with a Monday)</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Month</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%b</i></td> <td align='left'>Abbreviated month name, based on the locale</td> <td align='left'><i>Jan</i> through <i>Dec</i></td> </tr> <tr valign='middle'> <td align='left'><i>%B</i></td> <td align='left'>Full month name, based on the locale</td> <td align='left'><i>January</i> through <i>December</i></td> </tr> <tr valign='middle'> <td align='left'><i>%h</i></td> <td align='left'>Abbreviated month name, based on the locale (an alias of %b)</td> <td align='left'><i>Jan</i> through <i>Dec</i></td> </tr> <tr valign='middle'> <td align='left'><i>%m</i></td> <td align='left'>Two digit representation of the month</td> <td align='left'><i>01</i> (for January) through <i>12</i> (for December)</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Year</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%C</i></td> <td align='left'>Two digit representation of the century (year divided by 100, truncated to an integer)</td> <td align='left'><i>19</i> for the 20th Century</td> </tr> <tr valign='middle'> <td align='left'><i>%g</i></td> <td align='left'>Two digit representation of the year going by ISO-8601:1988 standards (see %V)</td> <td align='left'>Example: <i>09</i> for the week of January 6, 2009</td> </tr> <tr valign='middle'> <td align='left'><i>%G</i></td> <td align='left'>The full four-digit version of %g</td> <td align='left'>Example: <i>2008</i> for the week of January 3, 2009</td> </tr> <tr valign='middle'> <td align='left'><i>%y</i></td> <td align='left'>Two digit representation of the year</td> <td align='left'>Example: <i>09</i> for 2009, <i>79</i> for 1979</td> </tr> <tr valign='middle'> <td align='left'><i>%Y</i></td> <td align='left'>Four digit representation for the year</td> <td align='left'>Example: <i>2038</i></td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Time</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%H</i></td> <td align='left'>Two digit representation of the hour in 24-hour format</td> <td align='left'><i>00</i> through <i>23</i></td> </tr> <tr valign='middle'> <td align='left'><i>%I</i></td> <td align='left'>Two digit representation of the hour in 12-hour format</td> <td align='left'><i>01</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>%l (lower-case &amp;#039;L&amp;#039;)</i></td> <td align='left'>Hour in 12-hour format, with a space preceeding single digits</td> <td align='left'><i> 1</i> through <i>12</i></td> </tr> <tr valign='middle'> <td align='left'><i>%M</i></td> <td align='left'>Two digit representation of the minute</td> <td align='left'><i>00</i> through <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>%p</i></td> <td align='left'>UPPER-CASE &amp;#039;AM&amp;#039; or &amp;#039;PM&amp;#039; based on the given time</td> <td align='left'>Example: <i>AM</i> for 00:31, <i>PM</i> for 22:23</td> </tr> <tr valign='middle'> <td align='left'><i>%P</i></td> <td align='left'>lower-case &amp;#039;am&amp;#039; or &amp;#039;pm&amp;#039; based on the given time</td> <td align='left'>Example: <i>am</i> for 00:31, <i>pm</i> for 22:23</td> </tr> <tr valign='middle'> <td align='left'><i>%r</i></td> <td align='left'>Same as &amp;quot;%I:%M:%S %p&amp;quot;</td> <td align='left'>Example: <i>09:34:17 PM</i> for 21:34:17</td> </tr> <tr valign='middle'> <td align='left'><i>%R</i></td> <td align='left'>Same as &amp;quot;%H:%M&amp;quot;</td> <td align='left'>Example: <i>00:35</i> for 12:35 AM, <i>16:44</i> for 4:44 PM</td> </tr> <tr valign='middle'> <td align='left'><i>%S</i></td> <td align='left'>Two digit representation of the second</td> <td align='left'><i>00</i> through <i>59</i></td> </tr> <tr valign='middle'> <td align='left'><i>%T</i></td> <td align='left'>Same as &amp;quot;%H:%M:%S&amp;quot;</td> <td align='left'>Example: <i>21:34:17</i> for 09:34:17 PM</td> </tr> <tr valign='middle'> <td align='left'><i>%X</i></td> <td align='left'>Preferred time representation based on locale, without the date</td> <td align='left'>Example: <i>03:59:16</i> or <i>15:59:16</i></td> </tr> <tr valign='middle'> <td align='left'><i>%z</i></td> <td align='left'>Either the time zone offset from UTC or the abbreviation (depends on operating system)</td> <td align='left'>Example: <i>-0500</i> or <i>EST</i> for Eastern Time</td> </tr> <tr valign='middle'> <td align='left'><i>%Z</i></td> <td align='left'>The time zone offset/abbreviation option NOT given by %z (depends on operating system)</td> <td align='left'>Example: <i>-0500</i> or <i>EST</i> for Eastern Time</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Time and Date Stamps</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%c</i></td> <td align='left'>Preferred date and time stamp based on local</td> <td align='left'>Example: <i>Tue Feb 5 00:45:10 2009</i> for February 4, 2009 at 12:45:10 AM</td> </tr> <tr valign='middle'> <td align='left'><i>%D</i></td> <td align='left'>Same as &amp;quot;%m/%d/%y&amp;quot;</td> <td align='left'>Example: <i>02/05/09</i> for February 5, 2009</td> </tr> <tr valign='middle'> <td align='left'><i>%F</i></td> <td align='left'>Same as &amp;quot;%Y-%m-%d&amp;quot; (commonly used in database datestamps)</td> <td align='left'>Example: <i>2009-02-05</i> for February 5, 2009</td> </tr> <tr valign='middle'> <td align='left'><i>%s</i></td> <td align='left'>Unix Epoch Time timestamp (same as the <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a> function)</td> <td align='left'>Example: <i>305815200</i> for September 10, 1979 08:40:00 AM</td> </tr> <tr valign='middle'> <td align='left'><i>%x</i></td> <td align='left'>Preferred date representation based on locale, without the time</td> <td align='left'>Example: <i>02/05/09</i> for February 5, 2009</td> </tr> <tr valign='middle'> <td align='center'><em class='emphasis'>Miscellaneous</em></td> <td align='left'>---</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%n</i></td> <td align='left'>A newline character (&amp;quot;\n&amp;quot;)</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%t</i></td> <td align='left'>A Tab character (&amp;quot;\t&amp;quot;)</td> <td align='left'>---</td> </tr> <tr valign='middle'> <td align='left'><i>%%</i></td> <td align='left'>A literal percentage character (&amp;quot;%&amp;quot;)</td> <td align='left'>---</td> </tr> </tbody> </table> <p> </p> <p class='para'> Maximum length of this parameter is 1023 characters. </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> Contrary to ISO-9889:1999, Sun Solaris starts with Sunday as 1. As a result, %u may not function as described in this manual. </p> </div> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timestamp</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>timestamp</tt></i> parameter is an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> Unix timestamp that defaults to the current local time if a <i><tt class='parameter'>timestamp</tt></i> is not given. In other words, it defaults to the value of <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a>. </p></dd> </dl> <p> </p> </div> <a name='function.strftime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string formatted according <i><tt class='parameter'>format</tt></i> using the given <i><tt class='parameter'>timestamp</tt></i> or the current local time if no timestamp is given. Month and weekday names and other language-dependent strings respect the current locale set with <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a>. </p> </div> <a name='function.strftime.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Every call to a date/time function will generate a <b><tt class='constant'>E_NOTICE</tt></b> if the time zone is not valid, and/or a <b><tt class='constant'>E_STRICT</tt></b> or <b><tt class='constant'>E_WARNING</tt></b> message if using the system settings or the <var class='varname'>TZ</var> environment variable. See also <a href='http://www.php.net/manual/en/function.date-default-timezone-set.php' class='function'>date_default_timezone_set()</a></p> </div> <a name='function.strftime.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>5.1.0</td><td align='left'><p class='para'> Now issues the <b><tt class='constant'>E_STRICT</tt></b> and <b><tt class='constant'>E_NOTICE</tt></b> time zone errors.</p></td></tr> </tbody> </table> <p> </p> </div> <a name='function.strftime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> This example will work if you have the respective locales installed in your system. </p><div class='example'> <p><b>Example #1 <b>strftime()</b> locale examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_TIME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'C'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%A'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_TIME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'fi_FI'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;in&amp;nbsp;Finnish&amp;nbsp;is&amp;nbsp;%A,'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_TIME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'fr_FR'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;in&amp;nbsp;French&amp;nbsp;%A&amp;nbsp;and'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_TIME</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de_DE'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;in&amp;nbsp;German&amp;nbsp;%A.\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 ISO 8601:1988 week number example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;December&amp;nbsp;2002&amp;nbsp;/&amp;nbsp;January&amp;nbsp;2003<br />ISOWk&amp;nbsp;&amp;nbsp;M&amp;nbsp;&amp;nbsp;&amp;nbsp;Tu&amp;nbsp;&amp;nbsp;W&amp;nbsp;&amp;nbsp;&amp;nbsp;Thu&amp;nbsp;F&amp;nbsp;&amp;nbsp;&amp;nbsp;Sa&amp;nbsp;&amp;nbsp;Su<br />-----&amp;nbsp;----------------------------<br />51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;16&amp;nbsp;&amp;nbsp;17&amp;nbsp;&amp;nbsp;18&amp;nbsp;&amp;nbsp;19&amp;nbsp;&amp;nbsp;20&amp;nbsp;&amp;nbsp;21&amp;nbsp;&amp;nbsp;22<br />52&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;23&amp;nbsp;&amp;nbsp;24&amp;nbsp;&amp;nbsp;25&amp;nbsp;&amp;nbsp;26&amp;nbsp;&amp;nbsp;27&amp;nbsp;&amp;nbsp;28&amp;nbsp;&amp;nbsp;29<br />1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30&amp;nbsp;&amp;nbsp;31&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;2&amp;nbsp;&amp;nbsp;&amp;nbsp;3&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;&amp;nbsp;&amp;nbsp;5<br />2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6&amp;nbsp;&amp;nbsp;&amp;nbsp;7&amp;nbsp;&amp;nbsp;&amp;nbsp;8&amp;nbsp;&amp;nbsp;&amp;nbsp;9&amp;nbsp;&amp;nbsp;10&amp;nbsp;&amp;nbsp;11&amp;nbsp;&amp;nbsp;12<br />3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;13&amp;nbsp;&amp;nbsp;14&amp;nbsp;&amp;nbsp;15&amp;nbsp;&amp;nbsp;16&amp;nbsp;&amp;nbsp;17&amp;nbsp;&amp;nbsp;18&amp;nbsp;&amp;nbsp;19&amp;nbsp;&amp;nbsp;&amp;nbsp;*/<br /><br />//&amp;nbsp;Outputs:&amp;nbsp;12/28/2002&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;52,2002,2002<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'12/28/2002&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'12/28/2002'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;12/30/2002&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;1,2003,2002<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'12/30/2002&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'12/30/2002'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;1/3/2003&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;1,2003,2003<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'1/3/2003&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'1/3/2003'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;1/10/2003&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;2,2003,2003<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'1/10/2003&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'1/10/2003'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /><br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;December&amp;nbsp;2004&amp;nbsp;/&amp;nbsp;January&amp;nbsp;2005<br />ISOWk&amp;nbsp;&amp;nbsp;M&amp;nbsp;&amp;nbsp;&amp;nbsp;Tu&amp;nbsp;&amp;nbsp;W&amp;nbsp;&amp;nbsp;&amp;nbsp;Thu&amp;nbsp;F&amp;nbsp;&amp;nbsp;&amp;nbsp;Sa&amp;nbsp;&amp;nbsp;Su<br />-----&amp;nbsp;----------------------------<br />51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;13&amp;nbsp;&amp;nbsp;14&amp;nbsp;&amp;nbsp;15&amp;nbsp;&amp;nbsp;16&amp;nbsp;&amp;nbsp;17&amp;nbsp;&amp;nbsp;18&amp;nbsp;&amp;nbsp;19<br />52&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20&amp;nbsp;&amp;nbsp;21&amp;nbsp;&amp;nbsp;22&amp;nbsp;&amp;nbsp;23&amp;nbsp;&amp;nbsp;24&amp;nbsp;&amp;nbsp;25&amp;nbsp;&amp;nbsp;26<br />53&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;27&amp;nbsp;&amp;nbsp;28&amp;nbsp;&amp;nbsp;29&amp;nbsp;&amp;nbsp;30&amp;nbsp;&amp;nbsp;31&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;2<br />1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;&amp;nbsp;&amp;nbsp;5&amp;nbsp;&amp;nbsp;&amp;nbsp;6&amp;nbsp;&amp;nbsp;&amp;nbsp;7&amp;nbsp;&amp;nbsp;&amp;nbsp;8&amp;nbsp;&amp;nbsp;&amp;nbsp;9<br />2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10&amp;nbsp;&amp;nbsp;11&amp;nbsp;&amp;nbsp;12&amp;nbsp;&amp;nbsp;13&amp;nbsp;&amp;nbsp;14&amp;nbsp;&amp;nbsp;15&amp;nbsp;&amp;nbsp;16&amp;nbsp;&amp;nbsp;&amp;nbsp;*/<br /><br />//&amp;nbsp;Outputs:&amp;nbsp;12/23/2004&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;52,2004,2004<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'12/23/2004&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'12/23/2004'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;12/31/2004&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;53,2004,2004<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'12/31/2004&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'12/31/2004'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;1/2/2005&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;53,2004,2005<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'1/2/2005&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'1/2/2005'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Outputs:&amp;nbsp;1/3/2005&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;1,2005,2005<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'1/3/2005&amp;nbsp;-&amp;nbsp;%V,%G,%Y&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%V,%G,%Y'</span><span style='color: #007700'>,</span><span style='color: #0000BB'>strtotime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'1/3/2005'</span><span style='color: #007700'>))&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strftime.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albeit correct) results if the numbering system is not thoroughly understood. See %V examples in this manual page. </span> </p></blockquote> </div> <a name='function.strftime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> <li class='member'><a href='http://www.php.net/manual/en/function.mktime.php' class='function' rel='rdfs-seeAlso'>mktime()</a> - Get Unix timestamp for a date</li> <li class='member'><a href='http://www.php.net/manual/en/function.strptime.php' class='function' rel='rdfs-seeAlso'>strptime()</a> - Parse a time/date generated with strftime</li> <li class='member'><a href='http://www.php.net/manual/en/function.gmstrftime.php' class='function' rel='rdfs-seeAlso'>gmstrftime()</a> - Format a GMT/UTC time/date according to locale settings</li> <li class='member'><a href='http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html' class='link external'>&amp;raquo; Open Group specification of <b>strftime()</b></a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_wrapper_unregister" value="<div id='function.stream-wrapper-unregister' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-wrapper-unregister.php'>stream_wrapper_unregister</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>stream_wrapper_unregister</span> &amp;mdash; <span class='dc-title'>Unregister a URL wrapper</span></p> </div> <a name='function.stream-wrapper-unregister.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_wrapper_unregister</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$protocol</tt></span> )</div> <p class='para rdfs-comment'> Allows you to disable an already defined stream wrapper. Once the wrapper has been disabled you may override it with a user-defined wrapper using <a href='http://www.php.net/manual/en/function.stream-wrapper-register.php' class='function'>stream_wrapper_register()</a> or reenable it later on with <a href='http://www.php.net/manual/en/function.stream-wrapper-restore.php' class='function'>stream_wrapper_restore()</a>. </p> </div> <a name='function.stream-wrapper-unregister.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>protocol</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.stream-wrapper-unregister.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_wrapper_restore" value="<div id='function.stream-wrapper-restore' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-wrapper-restore.php'>stream_wrapper_restore</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>stream_wrapper_restore</span> &amp;mdash; <span class='dc-title'>Restores a previously unregistered built-in wrapper</span></p> </div> <a name='function.stream-wrapper-restore.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_wrapper_restore</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$protocol</tt></span> )</div> <p class='para rdfs-comment'> Restores a built-in wrapper previously unregistered with <a href='http://www.php.net/manual/en/function.stream-wrapper-unregister.php' class='function'>stream_wrapper_unregister()</a>. </p> </div> <a name='function.stream-wrapper-restore.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>protocol</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.stream-wrapper-restore.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_wrapper_register" value="<div id='function.stream-wrapper-register' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-wrapper-register.php'>stream_wrapper_register</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.2, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_wrapper_register</span> &amp;mdash; <span class='dc-title'>Register a URL wrapper implemented as a PHP class</span></p> </div> <a name='function.stream-wrapper-register.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_wrapper_register</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$protocol</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$classname</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt> <span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Allows you to implement your own protocol handlers and streams for use with all the other filesystem functions (such as <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> etc.). </p> </div> <a name='function.stream-wrapper-register.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>protocol</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The wrapper name to be registered. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>classname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The classname which implements the <i><tt class='parameter'>protocol</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Should be set to <b><tt class='constant'>STREAM_IS_URL</tt></b> if <i><tt class='parameter'>protocol</tt></i> is a URL protocol. Default is 0, local stream. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-wrapper-register.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <p class='para'> <b>stream_wrapper_register()</b> will return <b><tt class='constant'>FALSE</tt></b> if the <i><tt class='parameter'>protocol</tt></i> already has a handler. </p> </div> <a name='function.stream-wrapper-register.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.4</td> <td align='left'> Added the <i><tt class='parameter'>flags</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-wrapper-register.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 How to register a stream wrapper</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$existed&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>in_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>stream_get_wrappers</span><span style='color: #007700'>());<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$existed</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_wrapper_unregister</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>stream_wrapper_register</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'VariableStream'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$myvar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var://myvar'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r+'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'line1\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'line2\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'line3\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$myvar</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$existed</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_wrapper_restore</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'var'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> line1 line2 line3 string(18) &amp;quot;line1 line2 line3 &amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='function.stream-wrapper-register.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'>The <a href='http://www.php.net/manual/en/class.streamwrapper.php' class='xref'>streamWrapper</a> prototype class</li> <li class='member'><a href='http://www.php.net/manual/en/stream.streamwrapper.example-1.php' class='xref'>Example class registered as stream wrapper</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-wrapper-unregister.php' class='function' rel='rdfs-seeAlso'>stream_wrapper_unregister()</a> - Unregister a URL wrapper</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-wrapper-restore.php' class='function' rel='rdfs-seeAlso'>stream_wrapper_restore()</a> - Restores a previously unregistered built-in wrapper</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-wrappers.php' class='function' rel='rdfs-seeAlso'>stream_get_wrappers()</a> - Retrieve list of registered streams</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_shutdown" value="<div id='function.stream-socket-shutdown' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-shutdown.php'>stream_socket_shutdown</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.1)</p><p class='refpurpose'><span class='refname'>stream_socket_shutdown</span> &amp;mdash; <span class='dc-title'>Shutdown a full-duplex connection</span></p> </div> <a name='function.stream-socket-shutdown.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_socket_shutdown</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$how</tt></span> )</div> <p class='para rdfs-comment'> Shutdowns (partially or not) a full-duplex connection. </p> </div> <a name='function.stream-socket-shutdown.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An open stream (opened with <a href='http://www.php.net/manual/en/function.stream-socket-client.php' class='function'>stream_socket_client()</a>, for example) </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>how</tt></i> </span> </dt><dd class='listitem'> <p class='para'> One of the following constants: <b><tt class='constant'>STREAM_SHUT_RD</tt></b> (disable further receptions), <b><tt class='constant'>STREAM_SHUT_WR</tt></b> (disable further transmissions) or <b><tt class='constant'>STREAM_SHUT_RDWR</tt></b> (disable further receptions and transmissions). </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-shutdown.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-socket-shutdown.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>stream_socket_shutdown()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$server&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_server</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://127.0.0.1:1337'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$client&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_client</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://127.0.0.1:1337'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>fputs</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$client</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>stream_socket_shutdown</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$client</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_SHUT_WR</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>fputs</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$client</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>));&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;doesn't&amp;nbsp;work&amp;nbsp;now<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(5) Notice: fputs(): send of 5 bytes failed with errno=32 Broken pipe in test.php on line 9 int(0) </pre></div> </div> </div><p> </p> </div> <a name='function.stream-socket-shutdown.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_server" value="<div id='function.stream-socket-server' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-server.php'>stream_socket_server</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_server</span> &amp;mdash; <span class='dc-title'>Create an Internet or Unix domain server socket</span></p> </div> <a name='function.stream-socket-server.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_socket_server</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$local_socket</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$errno</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$errstr</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]]]] )</div> <p class='para rdfs-comment'> Creates a stream or datagram socket on the specified <i><tt class='parameter'>local_socket</tt></i> . </p> <p class='para'> This function only creates a socket, to begin accepting connections use <a href='http://www.php.net/manual/en/function.stream-socket-accept.php' class='function'>stream_socket_accept()</a>. </p> </div> <a name='function.stream-socket-server.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>local_socket</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The type of socket created is determined by the transport specified using standard URL formatting: <i>transport://target</i>. </p> <p class='para'> For Internet Domain sockets (<b><tt class='constant'>AF_INET</tt></b>) such as TCP and UDP, the <i>target</i> portion of the <i><tt class='parameter'>remote_socket</tt></i> parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the <i>target</i> portion should point to the socket file on the filesystem. </p> <p class='para'> Depending on the environment, Unix domain sockets may not be available. A list of available transports can be retrieved using <a href='http://www.php.net/manual/en/function.stream-get-transports.php' class='function'>stream_get_transports()</a>. See <a href='http://www.php.net/manual/en/transports.php' class='xref'>List of Supported Socket Transports</a> for a list of bulitin transports. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errno</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>errno</tt></i> and <i><tt class='parameter'>errstr</tt></i> arguments are present they will be set to indicate the actual system level error that occurred in the system-level <i>socket()</i>, <i>bind()</i>, and <i>listen()</i> calls. If the value returned in <i><tt class='parameter'>errno</tt></i> is <i>0</i> and the function returned <b><tt class='constant'>FALSE</tt></b>, it is an indication that the error occurred before the <i>bind()</i> call. This is most likely due to a problem initializing the socket. Note that the <i><tt class='parameter'>errno</tt></i> and <i><tt class='parameter'>errstr</tt></i> arguments will always be passed by reference. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errstr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <i><tt class='parameter'>errno</tt></i> description. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A bitmask field which may be set to any combination of socket creation flags. The default value of flags is <b><tt class='constant'>STREAM_SERVER_BIND</tt></b> | <b><tt class='constant'>STREAM_SERVER_LISTEN</tt></b>. </p> <blockquote><p><b class='note'>Note</b>: For UDP sockets, you must use <b><tt class='constant'>STREAM_SERVER_BIND</tt></b> as the <i><tt class='parameter'>flags</tt></i> parameter. <br /> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-server.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the created stream, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.stream-socket-server.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using TCP server sockets</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$socket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_server</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://0.0.0.0:8000'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>)&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_accept</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;local&amp;nbsp;time&amp;nbsp;is&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'n/j/Y&amp;nbsp;g:i&amp;nbsp;a'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> The example below shows how to act as a time server which can respond to time queries as shown in an example on <a href='http://www.php.net/manual/en/function.stream-socket-client.php' class='function'>stream_socket_client()</a>. </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'> Most systems require root access to create a server socket on a port below 1024. </span> </p></blockquote><p> </p><div class='example'> <p><b>Example #2 Using UDP server sockets</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$socket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_server</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'udp://127.0.0.1:1113'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_SERVER_BIND</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;die(</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>);<br />}<br /><br />do&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$pkt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_recvfrom</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$peer</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$peer</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_sendto</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'D&amp;nbsp;M&amp;nbsp;j&amp;nbsp;H:i:s&amp;nbsp;Y\r\n'</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$peer</span><span style='color: #007700'>);<br />}&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$pkt&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-socket-server.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When specifying a numerical IPv6 address (e.g. <i>fe80::1</i>), you must enclose the IP in square brackets&amp;acirc;&amp;#128;&amp;#148;for example, <i>tcp://[fe80::1]:80</i>.</span></p></blockquote> </div> <a name='function.stream-socket-server.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-client.php' class='function' rel='rdfs-seeAlso'>stream_socket_client()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function' rel='rdfs-seeAlso'>stream_set_blocking()</a> - Set blocking/non-blocking mode on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.feof.php' class='function' rel='rdfs-seeAlso'>feof()</a> - Tests for end-of-file on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/ref.curl.php' class='link'>Curl extension</a></li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_sendto" value="<div id='function.stream-socket-sendto' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-sendto.php'>stream_socket_sendto</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_sendto</span> &amp;mdash; <span class='dc-title'>Sends a message to a socket, whether it is connected or not </span></p> </div> <a name='function.stream-socket-sendto.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>stream_socket_sendto</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$socket</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$address</tt></span> ]] )</div> <p class='para rdfs-comment'> Sends the specified <i><tt class='parameter'>data</tt></i> through the <i><tt class='parameter'>socket</tt></i> . </p> </div> <a name='function.stream-socket-sendto.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>socket</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The socket to send <i><tt class='parameter'>data</tt></i> to. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data to be sent. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value of <i><tt class='parameter'>flags</tt></i> can be any combination of the following: </p><table class='doctable table'> <caption><b>possible values for <i><tt class='parameter'>flags</tt></i> </b></caption> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>STREAM_OOB</tt></b></td> <td align='left'> Process OOB (out-of-band) data. </td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>address</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The address specified when the socket stream was created will be used unless an alternate address is specified in <i><tt class='parameter'>address</tt></i> . </p> <p class='para'> If specified, it must be in dotted quad (or [ipv6]) format. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-sendto.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a result code, as an integer. </p> </div> <a name='function.stream-socket-sendto.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_socket_sendto()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;socket&amp;nbsp;to&amp;nbsp;port&amp;nbsp;1234&amp;nbsp;on&amp;nbsp;localhost&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$socket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_client</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://127.0.0.1:1234'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Send&amp;nbsp;ordinary&amp;nbsp;data&amp;nbsp;via&amp;nbsp;ordinary&amp;nbsp;channels.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Normal&amp;nbsp;data&amp;nbsp;transmit.'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Send&amp;nbsp;more&amp;nbsp;data&amp;nbsp;out&amp;nbsp;of&amp;nbsp;band.&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_socket_sendto</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Out&amp;nbsp;of&amp;nbsp;Band&amp;nbsp;data.'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_OOB</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Close&amp;nbsp;it&amp;nbsp;up&amp;nbsp;*/<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-socket-sendto.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-recvfrom.php' class='function' rel='rdfs-seeAlso'>stream_socket_recvfrom()</a> - Receives data from a socket, connected or not</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-client.php' class='function' rel='rdfs-seeAlso'>stream_socket_client()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function' rel='rdfs-seeAlso'>stream_socket_server()</a> - Create an Internet or Unix domain server socket</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_recvfrom" value="<div id='function.stream-socket-recvfrom' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-recvfrom.php'>stream_socket_recvfrom</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_recvfrom</span> &amp;mdash; <span class='dc-title'>Receives data from a socket, connected or not </span></p> </div> <a name='function.stream-socket-recvfrom.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stream_socket_recvfrom</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$socket</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$address</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>stream_socket_recvfrom()</b> accepts data from a remote socket up to <i><tt class='parameter'>length</tt></i> bytes. </p> </div> <a name='function.stream-socket-recvfrom.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>socket</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The remote socket. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number of bytes to receive from the <i><tt class='parameter'>socket</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value of <i><tt class='parameter'>flags</tt></i> can be any combination of the following: </p><table class='doctable table'> <caption><b>Possible values for <i><tt class='parameter'>flags</tt></i> </b></caption> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>STREAM_OOB</tt></b></td> <td align='left'> Process OOB (<i>out-of-band</i>) data. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>STREAM_PEEK</tt></b></td> <td align='left'> Retrieve data from the socket, but do not consume the buffer. Subsequent calls to <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> or <b>stream_socket_recvfrom()</b> will see the same data. </td> </tr> </tbody> </table> <p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>address</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>address</tt></i> is provided it will be populated with the address of the remote socket. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-recvfrom.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the read data, as a string </p> </div> <a name='function.stream-socket-recvfrom.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_socket_recvfrom()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;server&amp;nbsp;socket&amp;nbsp;to&amp;nbsp;port&amp;nbsp;1234&amp;nbsp;on&amp;nbsp;localhost&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$server&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_server</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://127.0.0.1:1234'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Accept&amp;nbsp;a&amp;nbsp;connection&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$socket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_accept</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$server</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Grab&amp;nbsp;a&amp;nbsp;packet&amp;nbsp;(1500&amp;nbsp;is&amp;nbsp;a&amp;nbsp;typical&amp;nbsp;MTU&amp;nbsp;size)&amp;nbsp;of&amp;nbsp;OOB&amp;nbsp;data&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Received&amp;nbsp;Out-Of-Band:&amp;nbsp;''&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_recvfrom</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1500</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_OOB</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Take&amp;nbsp;a&amp;nbsp;peek&amp;nbsp;at&amp;nbsp;the&amp;nbsp;normal&amp;nbsp;in-band&amp;nbsp;data,&amp;nbsp;but&amp;nbsp;don't&amp;nbsp;comsume&amp;nbsp;it.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Data:&amp;nbsp;''&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_recvfrom</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1500</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_PEEK</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;exact&amp;nbsp;same&amp;nbsp;packet&amp;nbsp;again,&amp;nbsp;but&amp;nbsp;remove&amp;nbsp;it&amp;nbsp;from&amp;nbsp;the&amp;nbsp;buffer&amp;nbsp;this&amp;nbsp;time.&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Data:&amp;nbsp;''&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_recvfrom</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1500</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>''\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Close&amp;nbsp;it&amp;nbsp;up&amp;nbsp;*/<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$socket</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$server</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-socket-recvfrom.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If a message received is longer than the <i><tt class='parameter'>length</tt></i> parameter, excess bytes may be discarded depending on the type of socket the message is received from (such as UDP). <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Calls to <b>stream_socket_recvfrom()</b> on socket-based streams, after calls to buffer-based stream functions (like <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> or <a href='http://www.php.net/manual/en/function.stream-get-line.php' class='function'>stream_get_line()</a>) read data directly from the socket and bypass the stream buffer. <br /> </p></blockquote> </div> <a name='function.stream-socket-recvfrom.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-sendto.php' class='function' rel='rdfs-seeAlso'>stream_socket_sendto()</a> - Sends a message to a socket, whether it is connected or not</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-client.php' class='function' rel='rdfs-seeAlso'>stream_socket_client()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function' rel='rdfs-seeAlso'>stream_socket_server()</a> - Create an Internet or Unix domain server socket</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_get_name" value="<div id='function.stream-socket-get-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-get-name.php'>stream_socket_get_name</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_get_name</span> &amp;mdash; <span class='dc-title'>Retrieve the name of the local or remote sockets</span></p> </div> <a name='function.stream-socket-get-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stream_socket_get_name</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$want_peer</tt></span> )</div> <p class='para rdfs-comment'> Returns the local or remote name of a given socket connection. </p> </div> <a name='function.stream-socket-get-name.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The socket to get the name of. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>want_peer</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b> the <i>remote</i> socket name will be returned, if set to <b><tt class='constant'>FALSE</tt></b> the <i>local</i> socket name will be returned. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-get-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The name of the socket. </p> </div> <a name='function.stream-socket-get-name.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-accept.php' class='function' rel='rdfs-seeAlso'>stream_socket_accept()</a> - Accept a connection on a socket created by stream_socket_server</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_enable_crypto" value="<div id='function.stream-socket-enable-crypto' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-enable-crypto.php'>stream_socket_enable_crypto</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>stream_socket_enable_crypto</span> &amp;mdash; <span class='dc-title'>Turns encryption on/off on an already connected socket</span></p> </div> <a name='function.stream-socket-enable-crypto.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>stream_socket_enable_crypto</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$enable</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$crypto_type</tt></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$session_stream</tt></span> ]] )</div> <p class='simpara'> Enable or disable encryption on the stream. </p> <p class='simpara'> Once the crypto settings are established, cryptography can be turned on and off dynamically by passing <b><tt class='constant'>TRUE</tt></b> or <b><tt class='constant'>FALSE</tt></b> in the <i><tt class='parameter'>enable</tt></i> parameter. </p> </div> <a name='function.stream-socket-enable-crypto.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream resource. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>enable</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Enable/disable cryptography on the stream. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>crypto_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Setup encryption on the stream. Valid methods are </p><ul class='itemizedlist'> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv2_CLIENT</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv3_CLIENT</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv23_CLIENT</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_TLS_CLIENT</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv2_SERVER</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv3_SERVER</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_SSLv23_SERVER</tt></b></span></li> <li class='listitem'><span class='simpara'><b><tt class='constant'>STREAM_CRYPTO_METHOD_TLS_SERVER</tt></b></span></li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>session_stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Seed the stream with settings from <i><tt class='parameter'>session_stream</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-enable-crypto.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success, <b><tt class='constant'>FALSE</tt></b> if negotiation has failed or <i>0</i> if there isn&amp;#039;t enough data and you should try again (only for non-blocking sockets). </p> </div> <a name='function.stream-socket-enable-crypto.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_socket_enable_crypto()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_client</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://myproto.example.com:31337'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>30</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;die(</span><span style='color: #DD0000'>'Unable&amp;nbsp;to&amp;nbsp;connect:&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Turn&amp;nbsp;on&amp;nbsp;encryption&amp;nbsp;for&amp;nbsp;login&amp;nbsp;phase&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_socket_enable_crypto</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_CRYPTO_METHOD_SSLv23_CLIENT</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'USER&amp;nbsp;god\r\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'PASS&amp;nbsp;secret\r\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Turn&amp;nbsp;off&amp;nbsp;encryption&amp;nbsp;for&amp;nbsp;the&amp;nbsp;rest&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_socket_enable_crypto</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /><br />while&amp;nbsp;(</span><span style='color: #0000BB'>$motd&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$motd</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> </pre></div> </div> </div><p> </p> </div> <a name='function.stream-socket-enable-crypto.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/ref.openssl.php' class='xref'>OpenSSL Functions</a></li> <li class='member'><a href='http://www.php.net/manual/en/transports.php' class='xref'>List of Supported Socket Transports</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_client" value="<div id='function.stream-socket-client' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-client.php'>stream_socket_client</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_client</span> &amp;mdash; <span class='dc-title'>Open Internet or Unix domain socket connection</span></p> </div> <a name='function.stream-socket-client.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_socket_client</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$remote_socket</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$errno</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$errstr</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$timeout</tt><span class='initializer'> = ini_get(&amp;quot;default_socket_timeout&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt><span class='initializer'> = STREAM_CLIENT_CONNECT</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]]]]] )</div> <p class='para rdfs-comment'> Initiates a stream or datagram connection to the destination specified by <i><tt class='parameter'>remote_socket</tt></i> . The type of socket created is determined by the transport specified using standard URL formatting: <i>transport://target</i>. For Internet Domain sockets (AF_INET) such as TCP and UDP, the <i>target</i> portion of the <i><tt class='parameter'>remote_socket</tt></i> parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the <i><tt class='parameter'>target</tt></i> portion should point to the socket file on the filesystem. </p> <blockquote><p><b class='note'>Note</b>: The stream will by default be opened in blocking mode. You can switch it to non-blocking mode by using <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a>. <br /> </p></blockquote> </div> <a name='function.stream-socket-client.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>remote_socket</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Address to the socket to connect to. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errno</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Will be set to the system level error number if connection fails. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errstr</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Will be set to the system level error message if the connection fails. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timeout</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Number of seconds until the <i>connect()</i> system call should timeout. </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'> This parameter only applies when not making asynchronous connection attempts. </span> </p></blockquote><p> </p><blockquote><p><b class='note'>Note</b>: To set a timeout for reading/writing data over the socket, use the <a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function'>stream_set_timeout()</a>, as the <i><tt class='parameter'>timeout</tt></i> only applies while making connecting the socket. <br /> </p></blockquote><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Bitmask field which may be set to any combination of connection flags. Currently the select of connection flags is limited to <b><tt class='constant'>STREAM_CLIENT_CONNECT</tt></b> (default), <b><tt class='constant'>STREAM_CLIENT_ASYNC_CONNECT</tt></b> and <b><tt class='constant'>STREAM_CLIENT_PERSISTENT</tt></b>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid context resource created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-client.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On success a stream resource is returned which may be used together with the other file functions (such as <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a>, <a href='http://www.php.net/manual/en/function.fgetss.php' class='function'>fgetss()</a>, <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a>, <a href='http://www.php.net/manual/en/function.fclose.php' class='function'>fclose()</a>, and <a href='http://www.php.net/manual/en/function.feof.php' class='function'>feof()</a>), <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-socket-client.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> On failure the <i><tt class='parameter'>errno</tt></i> and <i><tt class='parameter'>errstr</tt></i> arguments will be populated with the actual system level error that occurred in the system-level <i>connect()</i> call. If the value returned in <i><tt class='parameter'>errno</tt></i> is <i>0</i> and the function returned <b><tt class='constant'>FALSE</tt></b>, it is an indication that the error occurred before the <i>connect()</i> call. This is most likely due to a problem initializing the socket. Note that the <i><tt class='parameter'>errno</tt></i> and <i><tt class='parameter'>errstr</tt></i> arguments will always be passed by reference. </p> </div> <a name='function.stream-socket-client.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_socket_client()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_client</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'tcp://www.example.com:80'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>30</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>)&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'GET&amp;nbsp;/&amp;nbsp;HTTP/1.0\r\nHost:&amp;nbsp;www.example.com\r\nAccept:&amp;nbsp;*/*\r\n\r\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(!</span><span style='color: #0000BB'>feof</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1024</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 Using UDP connection</b></p> <div class='example-contents para'><p> Retrieving the day and time from the UDP service &amp;quot;daytime&amp;quot; (port 13) on localhost. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_socket_client</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'udp://127.0.0.1:13'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'ERROR:&amp;nbsp;</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>26</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-socket-client.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> UDP sockets will sometimes appear to have opened without an error, even if the remote host is unreachable. The error will only become apparent when you read or write data to/from the socket. The reason for this is because UDP is a &amp;quot;connectionless&amp;quot; protocol, which means that the operating system does not try to establish a link for the socket until it actually needs to send or receive data. </p> </div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>When specifying a numerical IPv6 address (e.g. <i>fe80::1</i>), you must enclose the IP in square brackets&amp;acirc;&amp;#128;&amp;#148;for example, <i>tcp://[fe80::1]:80</i>.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: Depending on the environment, the Unix domain or the optional connect timeout may not be available. A list of available transports can be retrieved using <a href='http://www.php.net/manual/en/function.stream-get-transports.php' class='function'>stream_get_transports()</a>. See <a href='http://www.php.net/manual/en/transports.php' class='xref'>List of Supported Socket Transports</a> for a list of built in transports. <br /> </p></blockquote> </div> <a name='function.stream-socket-client.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function' rel='rdfs-seeAlso'>stream_socket_server()</a> - Create an Internet or Unix domain server socket</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function' rel='rdfs-seeAlso'>stream_set_blocking()</a> - Set blocking/non-blocking mode on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-select.php' class='function' rel='rdfs-seeAlso'>stream_select()</a> - Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.feof.php' class='function' rel='rdfs-seeAlso'>feof()</a> - Tests for end-of-file on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/ref.curl.php' class='xref'>cURL Functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_socket_accept" value="<div id='function.stream-socket-accept' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-socket-accept.php'>stream_socket_accept</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_socket_accept</span> &amp;mdash; <span class='dc-title'>Accept a connection on a socket created by <a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function'>stream_socket_server()</a></span></p> </div> <a name='function.stream-socket-accept.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_socket_accept</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$server_socket</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$timeout</tt><span class='initializer'> = ini_get(&amp;quot;default_socket_timeout&amp;quot;)</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$peername</tt></span> ]] )</div> <p class='para rdfs-comment'> Accept a connection on a socket previously created by <a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function'>stream_socket_server()</a>. </p> </div> <a name='function.stream-socket-accept.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>timeout</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Override the default socket accept timeout. Time should be given in seconds. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>peername</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Will be set to the name (address) of the client which connected, if included and available from the selected transport. </p> <blockquote><p><b class='note'>Note</b>: Can also be determined later using <a href='http://www.php.net/manual/en/function.stream-socket-get-name.php' class='function'>stream_socket_get_name()</a>. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.stream-socket-accept.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-socket-accept.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> This function should not be used with UDP server sockets. Instead, use <a href='http://www.php.net/manual/en/function.stream-socket-recvfrom.php' class='function'>stream_socket_recvfrom()</a> and <a href='http://www.php.net/manual/en/function.stream-socket-sendto.php' class='function'>stream_socket_sendto()</a>. </p> </div> </div> <a name='function.stream-socket-accept.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-server.php' class='function' rel='rdfs-seeAlso'>stream_socket_server()</a> - Create an Internet or Unix domain server socket</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-socket-get-name.php' class='function' rel='rdfs-seeAlso'>stream_socket_get_name()</a> - Retrieve the name of the local or remote sockets</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function' rel='rdfs-seeAlso'>stream_set_blocking()</a> - Set blocking/non-blocking mode on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function' rel='rdfs-seeAlso'>stream_set_timeout()</a> - Set timeout period on a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> <li class='member'><a href='http://www.php.net/manual/en/function.fclose.php' class='function' rel='rdfs-seeAlso'>fclose()</a> - Closes an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.feof.php' class='function' rel='rdfs-seeAlso'>feof()</a> - Tests for end-of-file on a file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/ref.curl.php' class='xref'>cURL Functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_set_write_buffer" value="<div id='function.stream-set-write-buffer' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-set-write-buffer.php'>stream_set_write_buffer</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_set_write_buffer</span> &amp;mdash; <span class='dc-title'>Sets file buffering on the given stream</span></p> </div> <a name='function.stream-set-write-buffer.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>stream_set_write_buffer</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$buffer</tt></span> )</div> <p class='para rdfs-comment'> Sets the buffering for write operations on the given <i><tt class='parameter'>stream</tt></i> to <i><tt class='parameter'>buffer</tt></i> bytes. </p> <p class='simpara'> Output using <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a> is normally buffered at 8K. This means that if there are two processes wanting to write to the same output stream (a file), each is paused after 8K of data to allow the other to write. </p> </div> <a name='function.stream-set-write-buffer.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file pointer. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>buffer</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number of bytes to buffer. If <i><tt class='parameter'>buffer</tt></i> is 0 then write operations are unbuffered. This ensures that all writes with <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a> are completed before other processes are allowed to write to that output stream. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-set-write-buffer.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 0 on success, or <acronym title='End Of File'>EOF</acronym> if the request cannot be honored. </p> </div> <a name='function.stream-set-write-buffer.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_set_write_buffer()</b> example</b></p> <div class='example-contents para'><p> The following example demonstrates how to use <b>stream_set_write_buffer()</b> to create an unbuffered stream. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_set_write_buffer</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$output</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-set-write-buffer.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_set_timeout" value="<div id='function.stream-set-timeout' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-set-timeout.php'>stream_set_timeout</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_set_timeout</span> &amp;mdash; <span class='dc-title'>Set timeout period on a stream</span></p> </div> <a name='function.stream-set-timeout.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_set_timeout</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$seconds</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$microseconds</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> Sets the timeout value on <i><tt class='parameter'>stream</tt></i> , expressed in the sum of <i><tt class='parameter'>seconds</tt></i> and <i><tt class='parameter'>microseconds</tt></i> . </p> <p class='para'> When the stream times out, the &amp;#039;timed_out&amp;#039; key of the array returned by <a href='http://www.php.net/manual/en/function.stream-get-meta-data.php' class='function'>stream_get_meta_data()</a> is set to <b><tt class='constant'>TRUE</tt></b>, although no error/warning is generated. </p> </div> <a name='function.stream-set-timeout.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The target stream. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>seconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The seconds part of the timeout to be set. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>microseconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The microseconds part of the timeout to be set. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-set-timeout.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-set-timeout.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> As of PHP 4.3, this function can (potentially) work on any kind of stream. In PHP 4.3, socket based streams are still the only kind supported in the PHP core, although streams from other extensions may support this function. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-set-timeout.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_set_timeout()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fsockopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>80</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Unable&amp;nbsp;to&amp;nbsp;open\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'GET&amp;nbsp;/&amp;nbsp;HTTP/1.0\r\n\r\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_set_timeout</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$res&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2000</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_get_meta_data</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'timed_out'</span><span style='color: #007700'>])&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Connection&amp;nbsp;timed&amp;nbsp;out!'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$res</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-set-timeout.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function doesn&amp;#039;t work with advanced operations like <a href='http://www.php.net/manual/en/function.stream-socket-recvfrom.php' class='function'>stream_socket_recvfrom()</a>, use <a href='http://www.php.net/manual/en/function.stream-select.php' class='function'>stream_select()</a> with timeout parameter instead. <br /> </p></blockquote> <p class='para'> This function was previously called as <b>set_socket_timeout()</b> and later <a href='http://www.php.net/manual/en/function.socket-set-timeout.php' class='function'>socket_set_timeout()</a> but this usage is deprecated. </p> </div> <a name='function.stream-set-timeout.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fsockopen.php' class='function' rel='rdfs-seeAlso'>fsockopen()</a> - Open Internet or Unix domain socket connection</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_set_blocking" value="<div id='function.stream-set-blocking' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-set-blocking.php'>stream_set_blocking</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_set_blocking</span> &amp;mdash; <span class='dc-title'>Set blocking/non-blocking mode on a stream</span></p> </div> <a name='function.stream-set-blocking.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_set_blocking</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt></span> )</div> <p class='para rdfs-comment'> Sets blocking or non-blocking mode on a <i><tt class='parameter'>stream</tt></i> . </p> <p class='para'> This function works for any stream that supports non-blocking mode (currently, regular files and socket streams). </p> </div> <a name='function.stream-set-blocking.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>mode</tt></i> is 0, the given stream will be switched to non-blocking mode, and if 1, it will be switched to blocking mode. This affects calls like <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a> and <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> that read from the stream. In non-blocking mode an <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a> call will always return right away while in blocking mode it will wait for data to become available on the stream. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-set-blocking.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-set-blocking.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Prior to PHP 4.3.0, this function only worked on socket based streams. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-set-blocking.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function was previously called as <a href='http://www.php.net/manual/en/function.set-socket-blocking.php' class='function'>set_socket_blocking()</a> and later <a href='http://www.php.net/manual/en/function.socket-set-blocking.php' class='function'>socket_set_blocking()</a> but this usage is deprecated. <br /> </p></blockquote> </div> <a name='function.stream-set-blocking.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-select.php' class='function' rel='rdfs-seeAlso'>stream_select()</a> - Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_select" value="<div id='function.stream-select' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-select.php'>stream_select</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_select</span> &amp;mdash; <span class='dc-title'>Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec </span></p> </div> <a name='function.stream-select.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>stream_select</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$read</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$write</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$except</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$tv_sec</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$tv_usec</tt><span class='initializer'> = 0</span></span> ] )</div> <p class='para rdfs-comment'> The <b>stream_select()</b> function accepts arrays of streams and waits for them to change status. Its operation is equivalent to that of the <a href='http://www.php.net/manual/en/function.socket-select.php' class='function'>socket_select()</a> function except in that it acts on streams. </p> </div> <a name='function.stream-select.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>read</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The streams listed in the <i><tt class='parameter'>read</tt></i> array will be watched to see if characters become available for reading (more precisely, to see if a read will not block - in particular, a stream resource is also ready on end-of-file, in which case an <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> will return a zero length string). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>write</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The streams listed in the <i><tt class='parameter'>write</tt></i> array will be watched to see if a write will not block. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>except</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The streams listed in the <i><tt class='parameter'>except</tt></i> array will be watched for high priority exceptional (&amp;quot;out-of-band&amp;quot;) data arriving. </p> <blockquote><p><b class='note'>Note</b>: When <b>stream_select()</b> returns, the arrays <i><tt class='parameter'>read</tt></i> , <i><tt class='parameter'>write</tt></i> and <i><tt class='parameter'>except</tt></i> are modified to indicate which stream resource(s) actually changed status. <br /> </p></blockquote> <span class='simpara'> You do not need to pass every array to <b>stream_select()</b>. You can leave it out and use an empty array or <b><tt class='constant'>NULL</tt></b> instead. Also do not forget that those arrays are passed <em class='emphasis'>by reference</em> and will be modified after <b>stream_select()</b> returns. </span> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>tv_sec</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <i><tt class='parameter'>tv_sec</tt></i> and <i><tt class='parameter'>tv_usec</tt></i> together form the <em class='emphasis'>timeout</em> parameter, <i><tt class='parameter'>tv_sec</tt></i> specifies the number of seconds while <i><tt class='parameter'>tv_usec</tt></i> the number of microseconds. The <i><tt class='parameter'>timeout</tt></i> is an upper bound on the amount of time that <b>stream_select()</b> will wait before it returns. If <i><tt class='parameter'>tv_sec</tt></i> and <i><tt class='parameter'>tv_usec</tt></i> are both set to <i>0</i>, <b>stream_select()</b> will not wait for data - instead it will return immediately, indicating the current status of the streams. </p> <p class='para'> If <i><tt class='parameter'>tv_sec</tt></i> is <b><tt class='constant'>NULL</tt></b> <b>stream_select()</b> can block indefinitely, returning only when an event on one of the watched streams occurs (or if a signal interrupts the system call). </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Using a timeout value of <i>0</i> allows you to instantaneously poll the status of the streams, however, it is NOT a good idea to use a <i>0</i> timeout value in a loop as it will cause your script to consume too much CPU time. </p> <p class='para'> It is much better to specify a timeout value of a few seconds, although if you need to be checking and running other code concurrently, using a timeout value of at least <i>200000</i> microseconds will help reduce the CPU usage of your script. </p> <p class='para'> Remember that the timeout value is the maximum time that will elapse; <b>stream_select()</b> will return as soon as the requested streams are ready for use. </p> </div> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>tv_usec</tt></i> </span> </dt><dd class='listitem'> <p class='para'> See <i><tt class='parameter'>tv_sec</tt></i> description. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-select.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> On success <b>stream_select()</b> returns the number of stream resources contained in the modified arrays, which may be zero if the timeout expires before anything interesting happens. On error <b><tt class='constant'>FALSE</tt></b> is returned and a warning raised (this can happen if the system call is interrupted by an incoming signal). </p> </div> <a name='function.stream-select.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_select()</b> Example</b></p> <div class='example-contents para'><p> This example checks to see if data has arrived for reading on either <i><tt class='parameter'>$stream1</tt></i> or <i><tt class='parameter'>$stream2</tt></i> . Since the timeout value is <i>0</i> it will return immediately: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Prepare&amp;nbsp;the&amp;nbsp;read&amp;nbsp;array&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$read&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>$stream1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$stream2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$write&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$except&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;(</span><span style='color: #0000BB'>$num_changed_streams&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_select</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$read</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$write</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$except</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Error&amp;nbsp;handling&amp;nbsp;*/<br /></span><span style='color: #007700'>}&amp;nbsp;elseif&amp;nbsp;(</span><span style='color: #0000BB'>$num_changed_streams&amp;nbsp;</span><span style='color: #007700'>&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;At&amp;nbsp;least&amp;nbsp;on&amp;nbsp;one&amp;nbsp;of&amp;nbsp;the&amp;nbsp;streams&amp;nbsp;something&amp;nbsp;interesting&amp;nbsp;happened&amp;nbsp;*/<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-select.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Due to a limitation in the current Zend Engine it is not possible to pass a constant modifier like <b><tt class='constant'>NULL</tt></b> directly as a parameter to a function which expects this parameter to be passed by reference. Instead use a temporary variable or an expression with the leftmost member being a temporary variable: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$e&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>stream_select</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$r</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Be sure to use the <i>===</i> operator when checking for an error. Since the <b>stream_select()</b> may return 0 the comparison with <i>==</i> would evaluate to <b><tt class='constant'>TRUE</tt></b>: </p><div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$e&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>NULL</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>===&amp;nbsp;</span><span style='color: #0000BB'>stream_select</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$r</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$w</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'stream_select()&amp;nbsp;failed\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <p> <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If you read/write to a stream returned in the arrays be aware that they do not necessarily read/write the full amount of data you have requested. Be prepared to even only be able to read/write a single byte. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Windows compatibility: <b>stream_select()</b> used on a pipe returned from <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> may cause data loss under Windows 98. <br /> Use of <b>stream_select()</b> on file descriptors returned by <a href='http://www.php.net/manual/en/function.proc-open.php' class='function'>proc_open()</a> will fail and return <b><tt class='constant'>FALSE</tt></b> under Windows. <br /> </p></blockquote> </div> <a name='function.stream-select.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function' rel='rdfs-seeAlso'>stream_set_blocking()</a> - Set blocking/non-blocking mode on a stream</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_register_wrapper" value="<div id='function.stream-register-wrapper' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-register-wrapper.php'>stream_register_wrapper</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_register_wrapper</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-wrapper-register.php' class='function'>stream_wrapper_register()</a></span></p> </div> <a name='function.stream-register-wrapper.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='para'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-wrapper-register.php' class='function'>stream_wrapper_register()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_is_local" value="<div id='function.stream-is-local' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-is-local.php'>stream_is_local</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.4)</p><p class='refpurpose'><span class='refname'>stream_is_local</span> &amp;mdash; <span class='dc-title'>Checks if a stream is a local stream</span></p> </div> <a name='function.stream-is-local.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_is_local</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$stream_or_url</tt></span> )</div> <p class='para rdfs-comment'> Checks if a stream, or a URL, is a local one or not. </p> </div> <a name='function.stream-is-local.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream_or_url</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a> or URL to check. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-is-local.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-is-local.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_is_local()</b> example</b></p> <div class='example-contents para'><p> Basic usage example. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>stream_is_local</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://example.com'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>stream_is_local</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) bool(true) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_wrappers" value="<div id='function.stream-get-wrappers' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-wrappers.php'>stream_get_wrappers</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_wrappers</span> &amp;mdash; <span class='dc-title'>Retrieve list of registered streams</span></p> </div> <a name='function.stream-get-wrappers.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stream_get_wrappers</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Retrieve list of registered streams available on the running system. </p> </div> <a name='function.stream-get-wrappers.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array containing the name of all stream wrappers available on the running system. </p> </div> <a name='function.stream-get-wrappers.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_get_wrappers()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>stream_get_wrappers</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; php [1] =&amp;gt; file [2] =&amp;gt; http [3] =&amp;gt; ftp [4] =&amp;gt; compress.bzip2 [5] =&amp;gt; compress.zlib ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Checking for the existence of a stream wrapper</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;check&amp;nbsp;for&amp;nbsp;the&amp;nbsp;existence&amp;nbsp;of&amp;nbsp;the&amp;nbsp;bzip2&amp;nbsp;stream&amp;nbsp;wrapper<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>in_array</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'compress.bzip2'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>stream_get_wrappers</span><span style='color: #007700'>()))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'compress.bzip2://&amp;nbsp;support&amp;nbsp;enabled.'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'compress.bzip2://&amp;nbsp;support&amp;nbsp;not&amp;nbsp;enabled.'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-get-wrappers.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-wrapper-register.php' class='function' rel='rdfs-seeAlso'>stream_wrapper_register()</a> - Register a URL wrapper implemented as a PHP class</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_transports" value="<div id='function.stream-get-transports' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-transports.php'>stream_get_transports</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_transports</span> &amp;mdash; <span class='dc-title'>Retrieve list of registered socket transports</span></p> </div> <a name='function.stream-get-transports.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stream_get_transports</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Returns an indexed array containing the name of all socket transports available on the running system. </p> </div> <a name='function.stream-get-transports.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array of socket transports names. </p> </div> <a name='function.stream-get-transports.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>stream_get_transports()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xportlist&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_get_transports</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xportlist</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; tcp [1] =&amp;gt; udp [2] =&amp;gt; unix [3] =&amp;gt; udg ) </pre></div> </div> </div><p> </p> </div> <a name='function.stream-get-transports.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-filters.php' class='function' rel='rdfs-seeAlso'>stream_get_filters()</a> - Retrieve list of registered filters</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-wrappers.php' class='function' rel='rdfs-seeAlso'>stream_get_wrappers()</a> - Retrieve list of registered streams</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_meta_data" value="<div id='function.stream-get-meta-data' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-meta-data.php'>stream_get_meta_data</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_meta_data</span> &amp;mdash; <span class='dc-title'>Retrieves header/meta data from streams/file pointers</span></p> </div> <a name='function.stream-get-meta-data.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stream_get_meta_data</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> )</div> <p class='para rdfs-comment'> Returns information about an existing <i><tt class='parameter'>stream</tt></i> . </p> </div> <a name='function.stream-get-meta-data.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream can be any stream created by <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.fsockopen.php' class='function'>fsockopen()</a> and <a href='http://www.php.net/manual/en/function.pfsockopen.php' class='function'>pfsockopen()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-get-meta-data.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The result array contains the following items: </p> <ul class='itemizedlist'> <li class='listitem'> <p class='para'> <i>timed_out</i> (bool) - <b><tt class='constant'>TRUE</tt></b> if the stream timed out while waiting for data on the last call to <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> or <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a>. </p> </li> <li class='listitem'> <p class='para'> <i>blocked</i> (bool) - <b><tt class='constant'>TRUE</tt></b> if the stream is in blocking IO mode. See <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a>. </p> </li> <li class='listitem'> <p class='para'> <i>eof</i> (bool) - <b><tt class='constant'>TRUE</tt></b> if the stream has reached end-of-file. Note that for socket streams this member can be <b><tt class='constant'>TRUE</tt></b> even when <i>unread_bytes</i> is non-zero. To determine if there is more data to be read, use <a href='http://www.php.net/manual/en/function.feof.php' class='function'>feof()</a> instead of reading this item. </p> </li> <li class='listitem'> <p class='para'> <i>unread_bytes</i> (int) - the number of bytes currently contained in the PHP&amp;#039;s own internal buffer. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> You shouldn&amp;#039;t use this value in a script. </span> </p></blockquote> </li> <li class='listitem'> <p class='para'> <i>stream_type</i> (string) - a label describing the underlying implementation of the stream. </p> </li> <li class='listitem'> <p class='para'> <i>wrapper_type</i> (string) - a label describing the protocol wrapper implementation layered over the stream. See <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for more information about wrappers. </p> </li> <li class='listitem'> <p class='para'> <i>wrapper_data</i> (mixed) - wrapper specific data attached to this stream. See <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for more information about wrappers and their wrapper data. </p> </li> <li class='listitem'> <p class='para'> <i>filters</i> (array) - and array containing the names of any filters that have been stacked onto this stream. Documentation on filters can be found in the <a href='http://www.php.net/manual/en/filters.php' class='link'>Filters appendix</a>. </p> </li> <li class='listitem'> <p class='para'> <i>mode</i> (string) - the type of access required for this stream (see Table 1 of the <a href='http://www.php.net/manual/en/function.fopen.php' class='link'>fopen()</a> reference) </p> </li> <li class='listitem'> <p class='para'> <i>seekable</i> (bool) - whether the current stream can be seeked. </p> </li> <li class='listitem'> <p class='para'> <i>uri</i> (string) - the URI/filename associated with this stream. </p> </li> </ul> </div> <a name='function.stream-get-meta-data.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The following entries were added in the returned array: <i>mode</i>, <i>seekable</i>, and <i>uri</i>. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The following entries were added in the returned array: <i>stream_type</i>, <i>wrapper_type</i>, <i>wrapper_data</i>, and <i>filters</i>. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> <a href='http://www.php.net/manual/en/function.socket-get-status.php' class='function'>socket_get_status()</a> is an alias for this function. Prior to PHP 4.3.0, it was used to retrieve the first four items, for <em class='emphasis'>socket based streams only</em>. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-get-meta-data.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function does NOT work on sockets created by the <a href='http://www.php.net/manual/en/ref.sockets.php' class='link'>Socket extension</a>. <br /> </p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_line" value="<div id='function.stream-get-line' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-line.php'>stream_get_line</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_line</span> &amp;mdash; <span class='dc-title'>Gets line from stream resource up to a given delimiter</span></p> </div> <a name='function.stream-get-line.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stream_get_line</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$ending</tt></span> ] )</div> <p class='para rdfs-comment'> Gets a line from the given handle. </p> <p class='para'> Reading ends when <i><tt class='parameter'>length</tt></i> bytes have been read, when the string specified by <i><tt class='parameter'>ending</tt></i> is found (which is <em class='emphasis'>not</em> included in the return value), or on <acronym title='End Of File'>EOF</acronym> (whichever comes first). </p> <p class='para'> This function is nearly identical to <a href='http://www.php.net/manual/en/function.fgets.php' class='function'>fgets()</a> except in that it allows end of line delimiters other than the standard \n, \r, and \r\n, and does <em class='emphasis'>not</em> return the delimiter itself. </p> </div> <a name='function.stream-get-line.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid file handle. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number of bytes to read from the handle. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>ending</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An optional string delimiter. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-get-line.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string of up to <i><tt class='parameter'>length</tt></i> bytes read from the file pointed to by <i><tt class='parameter'>handle</tt></i> . </p> <p class='para'> If an error occurs, returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.stream-get-line.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fgetc.php' class='function' rel='rdfs-seeAlso'>fgetc()</a> - Gets character from file pointer</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_filters" value="<div id='function.stream-get-filters' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-filters.php'>stream_get_filters</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_filters</span> &amp;mdash; <span class='dc-title'>Retrieve list of registered filters</span></p> </div> <a name='function.stream-get-filters.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stream_get_filters</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> Retrieve the list of registered filters on the running system. </p> </div> <a name='function.stream-get-filters.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array containing the name of all stream filters available. </p> </div> <a name='function.stream-get-filters.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>stream_get_filters()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$streamlist&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_get_filters</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$streamlist</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; string.rot13 [1] =&amp;gt; string.toupper [2] =&amp;gt; string.tolower [3] =&amp;gt; string.base64 [4] =&amp;gt; string.quoted-printable ) </pre></div> </div> </div><p> </p> </div> <a name='function.stream-get-filters.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function' rel='rdfs-seeAlso'>stream_filter_register()</a> - Register a user defined stream filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-wrappers.php' class='function' rel='rdfs-seeAlso'>stream_get_wrappers()</a> - Retrieve list of registered streams</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_get_contents" value="<div id='function.stream-get-contents' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-get-contents.php'>stream_get_contents</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_get_contents</span> &amp;mdash; <span class='dc-title'>Reads remainder of a stream into a string</span></p> </div> <a name='function.stream-get-contents.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>stream_get_contents</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$handle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$maxlength</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ]] )</div> <p class='para rdfs-comment'> Identical to <a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function'>file_get_contents()</a>, except that <b>stream_get_contents()</b> operates on an already open stream resource and returns the remaining contents in a string, up to <i><tt class='parameter'>maxlength</tt></i> bytes and starting at the specified <i><tt class='parameter'>offset</tt></i> . </p> </div> <a name='function.stream-get-contents.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>handle</tt></i> (<a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>)</span> </dt><dd class='listitem'> <p class='para'> A stream resource (e.g. returned from <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>) </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>maxlength</tt></i> (<a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>)</span> </dt><dd class='listitem'> <p class='para'> The maximum bytes to read. Defaults to -1 (read all the remaining buffer). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> (<a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>)</span> </dt><dd class='listitem'> <p class='para'> Seek to the specified offset before reading. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-get-contents.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string, or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-get-contents.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> The <i><tt class='parameter'>offset</tt></i> was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-get-contents.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_get_contents()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$stream&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;all&amp;nbsp;the&amp;nbsp;page&amp;nbsp;starting&amp;nbsp;at&amp;nbsp;the&amp;nbsp;offset&amp;nbsp;10<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>stream_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stream</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stream</span><span style='color: #007700'>);<br />}<br /><br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$stream&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.net'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;the&amp;nbsp;first&amp;nbsp;5&amp;nbsp;bytes<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>stream_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stream</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stream</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-get-contents.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.stream-get-contents.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.fread.php' class='function' rel='rdfs-seeAlso'>fread()</a> - Binary-safe file read</li> <li class='member'><a href='http://www.php.net/manual/en/function.fpassthru.php' class='function' rel='rdfs-seeAlso'>fpassthru()</a> - Output all remaining data on a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_filter_remove" value="<div id='function.stream-filter-remove' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-filter-remove.php'>stream_filter_remove</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>stream_filter_remove</span> &amp;mdash; <span class='dc-title'>Remove a filter from a stream</span></p> </div> <a name='function.stream-filter-remove.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_filter_remove</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream_filter</tt></span> )</div> <p class='para rdfs-comment'> Removes a stream filter previously added to a stream with <a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function'>stream_filter_prepend()</a> or <a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function'>stream_filter_append()</a>. Any data remaining in the filter&amp;#039;s internal buffer will be flushed through to the next filter before removing it. </p> </div> <a name='function.stream-filter-remove.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream_filter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream filter to be removed. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-filter-remove.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.stream-filter-remove.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Dynamicly refiltering a stream</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;test&amp;nbsp;file&amp;nbsp;for&amp;nbsp;reading&amp;nbsp;and&amp;nbsp;writing&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'test.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rw'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$rot13_filter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_filter_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string.rot13'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_FILTER_WRITE</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>stream_filter_remove</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$rot13_filter</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'a&amp;nbsp;test\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Guvf vf a test </pre></div> </div> </div><p> </p> </div> <a name='function.stream-filter-remove.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function' rel='rdfs-seeAlso'>stream_filter_register()</a> - Register a user defined stream filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function' rel='rdfs-seeAlso'>stream_filter_append()</a> - Attach a filter to a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function' rel='rdfs-seeAlso'>stream_filter_prepend()</a> - Attach a filter to a stream</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_filter_register" value="<div id='function.stream-filter-register' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-filter-register.php'>stream_filter_register</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_filter_register</span> &amp;mdash; <span class='dc-title'>Register a user defined stream filter</span></p> </div> <a name='function.stream-filter-register.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_filter_register</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filtername</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$classname</tt></span> )</div> <p class='para rdfs-comment'> <b>stream_filter_register()</b> allows you to implement your own filter on any registered stream used with all the other filesystem functions (such as <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> etc.). </p> </div> <a name='function.stream-filter-register.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filtername</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filter name to be registered. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>classname</tt></i> </span> </dt><dd class='listitem'> <p class='para'> To implement a filter, you need to define a class as an extension of <i>php_user_filter</i> with a number of member functions as defined below. When performing read/write operations on the stream to which your filter is attached, PHP will pass the data through your filter (and any other filters attached to that stream) so that the data may be modified as desired. You must implement the methods exactly as described below - doing otherwise will lead to undefined behaviour. </p> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>filter</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$in</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$out</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$consumed</tt></span> , <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$closing</tt></span> )</div> <p class='para'> This method is called whenever data is read from or written to the attached stream (such as with <a href='http://www.php.net/manual/en/function.fread.php' class='function'>fread()</a> or <a href='http://www.php.net/manual/en/function.fwrite.php' class='function'>fwrite()</a>). <i><tt class='parameter'>in</tt></i> is a resource pointing to a <i>bucket brigade</i> which contains one or more <i>bucket</i> objects containing data to be filtered. <i><tt class='parameter'>out</tt></i> is a resource pointing to a second <i>bucket brigade</i> into which your modified buckets should be placed. <i><tt class='parameter'>consumed</tt></i> , which must <em class='emphasis'>always</em> be declared by reference, should be incremented by the length of the data which your filter reads in and alters. In most cases this means you will increment <i><tt class='parameter'>consumed</tt></i> by <i>$bucket-&amp;gt;datalen</i> for each <i>$bucket</i>. If the stream is in the process of closing (and therefore this is the last pass through the filterchain), the <i><tt class='parameter'>closing</tt></i> parameter will be set to <b><tt class='constant'>TRUE</tt></b>. The <span class='methodname'><b>filter</b></span> method must return one of three values upon completion. </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Return Value</th> <th>Meaning</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><b><tt class='constant'>PSFS_PASS_ON</tt></b></td> <td align='left'> Filter processed successfully with data available in the <i><tt class='parameter'>out</tt></i> <i>bucket brigade</i>. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>PSFS_FEED_ME</tt></b></td> <td align='left'> Filter processed successfully, however no data was available to return. More data is required from the stream or prior filter. </td> </tr> <tr valign='middle'> <td align='left'><b><tt class='constant'>PSFS_ERR_FATAL</tt></b> (default)</td> <td align='left'> The filter experienced an unrecoverable error and cannot continue. </td> </tr> </tbody> </table> <p> </p> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>onCreate</b></span> ( <span class='methodparam'>void</span> )</div> <span class='simpara'> This method is called during instantiation of the filter class object. If your filter allocates or initializes any other resources (such as a buffer), this is the place to do it. Your implementation of this method should return <b><tt class='constant'>FALSE</tt></b> on failure, or <b><tt class='constant'>TRUE</tt></b> on success. </span> <span class='simpara'> When your filter is first instantiated, and <i>yourfilter-&amp;gt;onCreate()</i> is called, a number of properties will be available as shown in the table below. </span> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Property</th> <th>Contents</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>FilterClass-&amp;gt;filtername</i></td> <td align='left'> A string containing the name the filter was instantiated with. Filters may be registered under multiple names or under wildcards. Use this property to determine which name was used. </td> </tr> <tr valign='middle'> <td align='left'><i>FilterClass-&amp;gt;params</i></td> <td align='left'> The contents of the <i><tt class='parameter'>params</tt></i> parameter passed to <a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function'>stream_filter_append()</a> or <a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function'>stream_filter_prepend()</a>. </td> </tr> <tr valign='middle'> <td align='left'><i>FilterClass-&amp;gt;stream</i></td> <td align='left'> The stream resource being filtered. Maybe available only during <span class='methodname'><b>filter</b></span> calls when the <i>closing</i> parameter is set to <b><tt class='constant'>FALSE</tt></b>. </td> </tr> </tbody> </table> <p> </p> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>onClose</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para'> This method is called upon filter shutdown (typically, this is also during stream shutdown), and is executed <em class='emphasis'>after</em> the <i>flush</i> method is called. If any resources were allocated or initialzed during <i>onCreate()</i> this would be the time to destroy or dispose of them. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-filter-register.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <p class='para'> <b>stream_filter_register()</b> will return <b><tt class='constant'>FALSE</tt></b> if the <i><tt class='parameter'>filtername</tt></i> is already defined. </p> </div> <a name='function.stream-filter-register.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Filter for capitalizing characters on <var class='filename'>foo-bar.txt</var> stream</b></p> <div class='example-contents para'><p> The example below implements a filter named <i>strtoupper</i> on the <var class='filename'>foo-bar.txt</var> stream which will capitalize all letter characters written to/read from that stream. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Define&amp;nbsp;our&amp;nbsp;filter&amp;nbsp;class&amp;nbsp;*/<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>strtoupper_filter&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>php_user_filter&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>filter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$in</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;&amp;amp;</span><span style='color: #0000BB'>$consumed</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$closing</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$bucket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_bucket_make_writeable</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$in</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtoupper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$consumed&amp;nbsp;</span><span style='color: #007700'>+=&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>datalen</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_bucket_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>PSFS_PASS_ON</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Register&amp;nbsp;our&amp;nbsp;filter&amp;nbsp;with&amp;nbsp;PHP&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_filter_register</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'strtoupper'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strtoupper_filter'</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;or&amp;nbsp;die(</span><span style='color: #DD0000'>'Failed&amp;nbsp;to&amp;nbsp;register&amp;nbsp;filter'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo-bar.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Attach&amp;nbsp;the&amp;nbsp;registered&amp;nbsp;filter&amp;nbsp;to&amp;nbsp;the&amp;nbsp;stream&amp;nbsp;just&amp;nbsp;opened&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_filter_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'strtoupper'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Line1\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Word&amp;nbsp;-&amp;nbsp;2\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Easy&amp;nbsp;As&amp;nbsp;123\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Read&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;back&amp;nbsp;out<br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>readfile</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo-bar.txt'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> LINE1 WORD - 2 EASY AS 123 </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Registering a generic filter class to match multiple filter names.</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Define&amp;nbsp;our&amp;nbsp;filter&amp;nbsp;class&amp;nbsp;*/<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>string_filter&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>php_user_filter&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;var&amp;nbsp;</span><span style='color: #0000BB'>$mode</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>filter</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$in</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;&amp;amp;</span><span style='color: #0000BB'>$consumed</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$closing</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(</span><span style='color: #0000BB'>$bucket&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_bucket_make_writeable</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$in</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>mode&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtoupper</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;elseif&amp;nbsp;(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>mode&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strtolower</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$consumed&amp;nbsp;</span><span style='color: #007700'>+=&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>datalen</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>stream_bucket_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$out</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$bucket</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>PSFS_PASS_ON</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>onCreate</span><span style='color: #007700'>()<br />&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>filtername&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #DD0000'>'str.toupper'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;elseif&amp;nbsp;(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>filtername&amp;nbsp;</span><span style='color: #007700'>==&amp;nbsp;</span><span style='color: #DD0000'>'str.tolower'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>mode&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Some&amp;nbsp;other&amp;nbsp;str.*&amp;nbsp;filter&amp;nbsp;was&amp;nbsp;asked&amp;nbsp;for,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;report&amp;nbsp;failure&amp;nbsp;so&amp;nbsp;that&amp;nbsp;PHP&amp;nbsp;will&amp;nbsp;keep&amp;nbsp;looking&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Register&amp;nbsp;our&amp;nbsp;filter&amp;nbsp;with&amp;nbsp;PHP&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_filter_register</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'str.*'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string_filter'</span><span style='color: #007700'>)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;or&amp;nbsp;die(</span><span style='color: #DD0000'>'Failed&amp;nbsp;to&amp;nbsp;register&amp;nbsp;filter'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo-bar.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Attach&amp;nbsp;the&amp;nbsp;registered&amp;nbsp;filter&amp;nbsp;to&amp;nbsp;the&amp;nbsp;stream&amp;nbsp;just&amp;nbsp;opened<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;We&amp;nbsp;could&amp;nbsp;alternately&amp;nbsp;bind&amp;nbsp;to&amp;nbsp;str.tolower&amp;nbsp;here&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_filter_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'str.toupper'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Line1\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Word&amp;nbsp;-&amp;nbsp;2\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'Easy&amp;nbsp;As&amp;nbsp;123\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Read&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;back&amp;nbsp;out<br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>readfile</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo-bar.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> LINE1 WORD - 2 EASY AS 123 </pre></div> </div> </div><p> </p> </div> <a name='function.stream-filter-register.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-wrapper-register.php' class='function' rel='rdfs-seeAlso'>stream_wrapper_register()</a> - Register a URL wrapper implemented as a PHP class</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function' rel='rdfs-seeAlso'>stream_filter_append()</a> - Attach a filter to a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function' rel='rdfs-seeAlso'>stream_filter_prepend()</a> - Attach a filter to a stream</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_filter_prepend" value="<div id='function.stream-filter-prepend' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-filter-prepend.php'>stream_filter_prepend</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_filter_prepend</span> &amp;mdash; <span class='dc-title'>Attach a filter to a stream</span></p> </div> <a name='function.stream-filter-prepend.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_filter_prepend</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filtername</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$read_write</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$params</tt></span> ]] )</div> <p class='para rdfs-comment'> Adds <i><tt class='parameter'>filtername</tt></i> to the list of filters attached to <i><tt class='parameter'>stream</tt></i> . </p> </div> <a name='function.stream-filter-prepend.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The target stream. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filtername</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filter name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>read_write</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By default, <b>stream_filter_prepend()</b> will attach the filter to the <i>read filter chain</i> if the file was opened for reading (i.e. File Mode: <i>r</i>, and/or <i>+</i>). The filter will also be attached to the <i>write filter chain</i> if the file was opened for writing (i.e. File Mode: <i>w</i>, <i>a</i>, and/or <i>+</i>). <b><tt class='constant'>STREAM_FILTER_READ</tt></b>, <b><tt class='constant'>STREAM_FILTER_WRITE</tt></b>, and/or <b><tt class='constant'>STREAM_FILTER_ALL</tt></b> can also be passed to the <i><tt class='parameter'>read_write</tt></i> parameter to override this behavior. See <a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function'>stream_filter_append()</a> for an example of using this parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>params</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This filter will be added with the specified <i><tt class='parameter'>params</tt></i> to the <em class='emphasis'>beginning</em> of the list and will therefore be called first during stream operations. To add a filter to the end of the list, use <a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function'>stream_filter_append()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-filter-prepend.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a resource which can be used to refer to this filter instance during a call to <a href='http://www.php.net/manual/en/function.stream-filter-remove.php' class='function'>stream_filter_remove()</a>. </p> </div> <a name='function.stream-filter-prepend.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Prior to PHP 5.1.0, this function returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-filter-prepend.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>When using custom (user) filters</b><br /> <span class='simpara'> <a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function'>stream_filter_register()</a> must be called first in order to register the desired user filter to <i><tt class='parameter'>filtername</tt></i> . </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is prepended to a stream, data in the internal buffers, which has already been processed through other filters will <em class='emphasis'>not</em> be reprocessed through the new filter at that time. This differs from the behavior of <a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function'>stream_filter_append()</a>. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> When a filter is added for read and write, two instances of the filter are created. <b>stream_filter_prepend()</b> must be called twice with <b><tt class='constant'>STREAM_FILTER_READ</tt></b> and <b><tt class='constant'>STREAM_FILTER_WRITE</tt></b> to get both filter resources. </span> </p></blockquote> </div> <a name='function.stream-filter-prepend.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function' rel='rdfs-seeAlso'>stream_filter_register()</a> - Register a user defined stream filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-append.php' class='function' rel='rdfs-seeAlso'>stream_filter_append()</a> - Attach a filter to a stream</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_filter_append" value="<div id='function.stream-filter-append' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-filter-append.php'>stream_filter_append</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_filter_append</span> &amp;mdash; <span class='dc-title'>Attach a filter to a stream</span></p> </div> <a name='function.stream-filter-append.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_filter_append</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filtername</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$read_write</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$params</tt></span> ]] )</div> <p class='para rdfs-comment'> Adds <i><tt class='parameter'>filtername</tt></i> to the list of filters attached to <i><tt class='parameter'>stream</tt></i> . </p> </div> <a name='function.stream-filter-append.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The target stream. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filtername</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filter name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>read_write</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By default, <b>stream_filter_append()</b> will attach the filter to the <i>read filter chain</i> if the file was opened for reading (i.e. File Mode: <i>r</i>, and/or <i>+</i>). The filter will also be attached to the <i>write filter chain</i> if the file was opened for writing (i.e. File Mode: <i>w</i>, <i>a</i>, and/or <i>+</i>). <b><tt class='constant'>STREAM_FILTER_READ</tt></b>, <b><tt class='constant'>STREAM_FILTER_WRITE</tt></b>, and/or <b><tt class='constant'>STREAM_FILTER_ALL</tt></b> can also be passed to the <i><tt class='parameter'>read_write</tt></i> parameter to override this behavior. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>params</tt></i> </span> </dt><dd class='listitem'> <p class='para'> This filter will be added with the specified <i><tt class='parameter'>params</tt></i> to the <em class='emphasis'>end</em> of the list and will therefore be called last during stream operations. To add a filter to the beginning of the list, use <a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function'>stream_filter_prepend()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-filter-append.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a resource which can be used to refer to this filter instance during a call to <a href='http://www.php.net/manual/en/function.stream-filter-remove.php' class='function'>stream_filter_remove()</a>. </p> </div> <a name='function.stream-filter-append.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Prior to PHP 5.1.0, this function returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-filter-append.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Controlling where filters are applied</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Open&amp;nbsp;a&amp;nbsp;test&amp;nbsp;file&amp;nbsp;for&amp;nbsp;reading&amp;nbsp;and&amp;nbsp;writing&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'test.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w+'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Apply&amp;nbsp;the&amp;nbsp;ROT13&amp;nbsp;filter&amp;nbsp;to&amp;nbsp;the<br />&amp;nbsp;*&amp;nbsp;write&amp;nbsp;filter&amp;nbsp;chain,&amp;nbsp;but&amp;nbsp;not&amp;nbsp;the<br />&amp;nbsp;*&amp;nbsp;read&amp;nbsp;filter&amp;nbsp;chain&amp;nbsp;*/<br /></span><span style='color: #0000BB'>stream_filter_append</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string.rot13'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>STREAM_FILTER_WRITE</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Write&amp;nbsp;a&amp;nbsp;simple&amp;nbsp;string&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file<br />&amp;nbsp;*&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;ROT13&amp;nbsp;transformed&amp;nbsp;on&amp;nbsp;the<br />&amp;nbsp;*&amp;nbsp;way&amp;nbsp;out&amp;nbsp;*/<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;test\n'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Back&amp;nbsp;up&amp;nbsp;to&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file&amp;nbsp;*/<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Read&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file&amp;nbsp;back&amp;nbsp;out.<br />&amp;nbsp;*&amp;nbsp;Had&amp;nbsp;the&amp;nbsp;filter&amp;nbsp;been&amp;nbsp;applied&amp;nbsp;to&amp;nbsp;the<br />&amp;nbsp;*&amp;nbsp;read&amp;nbsp;filter&amp;nbsp;chain&amp;nbsp;as&amp;nbsp;well,&amp;nbsp;we&amp;nbsp;would&amp;nbsp;see<br />&amp;nbsp;*&amp;nbsp;the&amp;nbsp;text&amp;nbsp;ROT13ed&amp;nbsp;back&amp;nbsp;to&amp;nbsp;its&amp;nbsp;original&amp;nbsp;state&amp;nbsp;*/<br /></span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Expected&amp;nbsp;Output<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;---------------<br /><br />Guvf&amp;nbsp;vf&amp;nbsp;n&amp;nbsp;grfg<br /><br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-filter-append.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <b>When using custom (user) filters</b><br /> <span class='simpara'> <a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function'>stream_filter_register()</a> must be called first in order to register the desired user filter to <i><tt class='parameter'>filtername</tt></i> . </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is appended to a stream, data in the internal buffers is processed through the new filter at that time. This differs from the behavior of <a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function'>stream_filter_prepend()</a>. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> When a filter is added for read and write, two instances of the filter are created. <b>stream_filter_append()</b> must be called twice with <b><tt class='constant'>STREAM_FILTER_READ</tt></b> and <b><tt class='constant'>STREAM_FILTER_WRITE</tt></b> to get both filter resources. </span> </p></blockquote> </div> <a name='function.stream-filter-append.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-register.php' class='function' rel='rdfs-seeAlso'>stream_filter_register()</a> - Register a user defined stream filter</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-filter-prepend.php' class='function' rel='rdfs-seeAlso'>stream_filter_prepend()</a> - Attach a filter to a stream</li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-get-filters.php' class='function' rel='rdfs-seeAlso'>stream_get_filters()</a> - Retrieve list of registered filters</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_copy_to_stream" value="<div id='function.stream-copy-to-stream' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-copy-to-stream.php'>stream_copy_to_stream</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_copy_to_stream</span> &amp;mdash; <span class='dc-title'>Copies data from one stream to another</span></p> </div> <a name='function.stream-copy-to-stream.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>stream_copy_to_stream</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$source</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dest</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$maxlength</tt><span class='initializer'> = -1</span></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt><span class='initializer'> = 0</span></span> ]] )</div> <p class='para rdfs-comment'> Makes a copy of up to <i><tt class='parameter'>maxlength</tt></i> bytes of data from the current position (or from the <i><tt class='parameter'>offset</tt></i> position, if specified) in <i><tt class='parameter'>source</tt></i> to <i><tt class='parameter'>dest</tt></i> . If <i><tt class='parameter'>maxlength</tt></i> is not specified, all remaining content in <i><tt class='parameter'>source</tt></i> will be copied. </p> </div> <a name='function.stream-copy-to-stream.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>source</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The source stream </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dest</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The destination stream </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>maxlength</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Maximum bytes to copy </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset where to start to copy data </p> </dd> </dl> <p> </p> </div> <a name='function.stream-copy-to-stream.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the total count of bytes copied. </p> </div> <a name='function.stream-copy-to-stream.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>offset</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-copy-to-stream.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>stream_copy_to_stream()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$src&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dest1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'first1k.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dest2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'remainder.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>stream_copy_to_stream</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$src</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dest1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1024</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;bytes&amp;nbsp;copied&amp;nbsp;to&amp;nbsp;first1k.txt\n'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #0000BB'>stream_copy_to_stream</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$src</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dest2</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;bytes&amp;nbsp;copied&amp;nbsp;to&amp;nbsp;remainder.txt\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-copy-to-stream.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.copy.php' class='function' rel='rdfs-seeAlso'>copy()</a> - Copies file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_context_set_params" value="<div id='function.stream-context-set-params' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-context-set-params.php'>stream_context_set_params</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_context_set_params</span> &amp;mdash; <span class='dc-title'>Set parameters for a stream/wrapper/context</span></p> </div> <a name='function.stream-context-set-params.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_context_set_params</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream_or_context</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$params</tt></span> )</div> <p class='para rdfs-comment'> Sets parameters on the specified context. </p> </div> <a name='function.stream-context-set-params.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream_or_context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream or context to apply the parameters too. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>params</tt></i> </span> </dt><dd class='listitem'> <p class='para'> An array of parameters to set. </p> <blockquote><p><b class='note'>Note</b>: <i><tt class='parameter'>params</tt></i> should be an associative array of the structure: <i>$params[&amp;#039;paramname&amp;#039;] = &amp;quot;paramvalue&amp;quot;;</i>. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.stream-context-set-params.options'></a><div class='refsect1 options'> <h3 class='title'>Supported parameters</h3> <table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Parameters</th> <th>Purpose</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>notification</i></td> <td align='left'> Name of user-defined callback function to be called whenever a stream triggers a notification. </td> </tr> <tr valign='middle'> <td align='left'><i>options</i></td> <td align='left'> Array of options as in <a href='http://www.php.net/manual/en/context.php' class='link'>context options and parameters</a>. </td> </tr> </tbody> </table> </div> <a name='function.stream-context-set-params.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_context_set_option" value="<div id='function.stream-context-set-option' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-context-set-option.php'>stream_context_set_option</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_context_set_option</span> &amp;mdash; <span class='dc-title'>Sets an option for a stream/wrapper/context</span></p> </div> <a name='function.stream-context-set-option.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_context_set_option</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream_or_context</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$wrapper</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$option</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>stream_context_set_option</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream_or_context</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$options</tt></span> )</div> <p class='simpara'> Sets an option on the specified context. <i><tt class='parameter'>value</tt></i> is set to <i><tt class='parameter'>option</tt></i> for <i><tt class='parameter'>wrapper</tt></i> </p> </div> <a name='function.stream-context-set-option.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream_or_context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The stream or context resource to apply the options too. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The options to set for the default context. </p> <blockquote><p><b class='note'>Note</b>: <i><tt class='parameter'>options</tt></i> must be an associative array of associative arrays in the format <i>$arr[&amp;#039;wrapper&amp;#039;][&amp;#039;option&amp;#039;] = $value</i>. <br /> Refer to <a href='http://www.php.net/manual/en/context.php' class='link'>context options and parameters</a> for a listing of stream options. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.stream-context-set-option.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_context_get_options" value="<div id='function.stream-context-get-options' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-context-get-options.php'>stream_context_get_options</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_context_get_options</span> &amp;mdash; <span class='dc-title'>Retrieve options for a stream/wrapper/context</span></p> </div> <a name='function.stream-context-get-options.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stream_context_get_options</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream_or_context</tt></span> )</div> <p class='simpara'> Returns an array of options on the specified stream or context. </p> </div> <a name='function.stream-context-get-options.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>stream_or_context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <span class='type stream'>stream</span> or <span class='type context'>context</span> to get options from </p> </dd> </dl> <p> </p> </div> <a name='function.stream-context-get-options.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an associative array with the options. </p> </div> <a name='function.stream-context-get-options.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stream_context_get_options()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$params&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'method'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #DD0000'>'POST'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>stream_context_get_default</span><span style='color: #007700'>(array(</span><span style='color: #DD0000'>'http'&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$params</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>stream_context_get_options</span><span style='color: #007700'>(</span><span style='color: #0000BB'>stream_context_get_default</span><span style='color: #007700'>()));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(1) { [&amp;quot;http&amp;quot;]=&amp;gt; array(1) { [&amp;quot;method&amp;quot;]=&amp;gt; string(4) &amp;quot;POST&amp;quot; } } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_context_get_default" value="<div id='function.stream-context-get-default' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-context-get-default.php'>stream_context_get_default</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>stream_context_get_default</span> &amp;mdash; <span class='dc-title'>Retreive the default streams context</span></p> </div> <a name='function.stream-context-get-default.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_context_get_default</b></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$options</tt></span> ] )</div> <p class='simpara'> Returns the default stream context which is used whenever file operations (<a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a>, <a href='http://www.php.net/manual/en/function.file-get-contents.php' class='function'>file_get_contents()</a>, etc...) are called without a context parameter. Options for the default context can optionally be specified with this function using the same syntax as <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. </p> </div> <a name='function.stream-context-get-default.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> <i><tt class='parameter'>options</tt></i> must be an associative array of associative arrays in the format <i>$arr[&amp;#039;wrapper&amp;#039;][&amp;#039;option&amp;#039;] = $value</i>. </span> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0, the <a href='http://www.php.net/manual/en/function.stream-context-set-default.php' class='function'>stream_context_set_default()</a> function can be used to set the default context. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.stream-context-get-default.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A stream context <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>. </p> </div> <a name='function.stream-context-get-default.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Using <b>stream_context_get_default()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$default_opts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'http'</span><span style='color: #007700'>=&amp;gt;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'method'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'GET'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'header'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'Accept-language:&amp;nbsp;en\r\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'Cookie:&amp;nbsp;foo=bar'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'proxy'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'tcp://10.54.1.39:8000'<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>)<br />);<br /><br /><br /></span><span style='color: #0000BB'>$alternate_opts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'http'</span><span style='color: #007700'>=&amp;gt;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'method'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'POST'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'header'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'Content-type:&amp;nbsp;application/x-www-form-urlencoded\r\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'Content-length:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'baz=bomb'</span><span style='color: #007700'>),<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'content'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'baz=bomb'<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>)<br />);<br /><br /></span><span style='color: #0000BB'>$default&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_context_get_default</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$default_opts</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$alternate&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_context_create</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$alternate_opts</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Sends&amp;nbsp;a&amp;nbsp;regular&amp;nbsp;GET&amp;nbsp;request&amp;nbsp;to&amp;nbsp;proxy&amp;nbsp;server&amp;nbsp;at&amp;nbsp;10.54.1.39<br />&amp;nbsp;*&amp;nbsp;For&amp;nbsp;www.example.com&amp;nbsp;using&amp;nbsp;context&amp;nbsp;options&amp;nbsp;specified&amp;nbsp;in&amp;nbsp;$default_opts<br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>readfile</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Sends&amp;nbsp;a&amp;nbsp;POST&amp;nbsp;request&amp;nbsp;directly&amp;nbsp;to&amp;nbsp;www.example.com<br />&amp;nbsp;*&amp;nbsp;Using&amp;nbsp;context&amp;nbsp;options&amp;nbsp;specified&amp;nbsp;in&amp;nbsp;$alternate_opts<br />&amp;nbsp;*/<br /></span><span style='color: #0000BB'>readfile</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$alternate</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stream-context-get-default.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> <li class='member'>Listing of supported wrappers with context options (<a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a>).</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_context_create" value="<div id='function.stream-context-create' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-context-create.php'>stream_context_create</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>stream_context_create</span> &amp;mdash; <span class='dc-title'>Create a streams context</span></p> </div> <a name='function.stream-context-create.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>stream_context_create</b></span> ([ <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$options</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$params</tt></span> ]] )</div> <p class='para rdfs-comment'> Creates and returns a stream context with any options supplied in <i><tt class='parameter'>options</tt></i> preset. </p> </div> <a name='function.stream-context-create.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>options</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Must be an associative array of associative arrays in the format <i>$arr[&amp;#039;wrapper&amp;#039;][&amp;#039;option&amp;#039;] = $value</i>. </p> <p class='para'> Default to an empty array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>params</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Must be an associative array in the format <i>$arr[&amp;#039;parameter&amp;#039;] = $value</i>. Refer to <a href='http://www.php.net/manual/en/context.params.php' class='link'>context parameters</a> for a listing of standard stream parameters. </p> </dd> </dl> <p> </p> </div> <a name='function.stream-context-create.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A stream context <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>. </p> </div> <a name='function.stream-context-create.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Added the optional <i><tt class='parameter'>params</tt></i> argument. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stream-context-create.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'> <p><b>Example #1 Using <b>stream_context_create()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$opts&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'http'</span><span style='color: #007700'>=&amp;gt;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'method'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'GET'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'header'</span><span style='color: #007700'>=&amp;gt;</span><span style='color: #DD0000'>'Accept-language:&amp;nbsp;en\r\n'&amp;nbsp;</span><span style='color: #007700'>.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'Cookie:&amp;nbsp;foo=bar\r\n'<br />&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>)<br />);<br /><br /></span><span style='color: #0000BB'>$context&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stream_context_create</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$opts</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Sends&amp;nbsp;an&amp;nbsp;http&amp;nbsp;request&amp;nbsp;to&amp;nbsp;www.example.com<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;with&amp;nbsp;additional&amp;nbsp;headers&amp;nbsp;shown&amp;nbsp;above&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>false</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='function.stream-context-create.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-set-option.php' class='function' rel='rdfs-seeAlso'>stream_context_set_option()</a> - Sets an option for a stream/wrapper/context</li> <li class='member'>Listing of supported wrappers (<a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a>)</li> <li class='member'>Context options (<a href='http://www.php.net/manual/en/context.php' class='xref'>Context options and parameters</a>)</li> </ul> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_bucket_prepend" value="<div id='function.stream-bucket-prepend' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-bucket-prepend.php'>stream_bucket_prepend</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_bucket_prepend</span> &amp;mdash; <span class='dc-title'> Prepend bucket to brigade </span></p> </div> <a name='function.stream-bucket-prepend.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>stream_bucket_prepend</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$brigade</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$bucket</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_bucket_new" value="<div id='function.stream-bucket-new' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-bucket-new.php'>stream_bucket_new</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_bucket_new</span> &amp;mdash; <span class='dc-title'> Create a new bucket for use on the current stream </span></p> </div> <a name='function.stream-bucket-new.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>stream_bucket_new</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$stream</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$buffer</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_bucket_make_writeable" value="<div id='function.stream-bucket-make-writeable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-bucket-make-writeable.php'>stream_bucket_make_writeable</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_bucket_make_writeable</span> &amp;mdash; <span class='dc-title'> Return a bucket object from the brigade for operating on </span></p> </div> <a name='function.stream-bucket-make-writeable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>stream_bucket_make_writeable</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$brigade</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stream_bucket_append" value="<div id='function.stream-bucket-append' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stream-bucket-append.php'>stream_bucket_append</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>stream_bucket_append</span> &amp;mdash; <span class='dc-title'> Append bucket to brigade </span></p> </div> <a name='function.stream-bucket-append.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>stream_bucket_append</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$brigade</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$bucket</tt></span> )</div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strcspn" value="<div id='function.strcspn' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strcspn.php'>strcspn</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strcspn</span> &amp;mdash; <span class='dc-title'>Find length of initial segment not matching mask</span></p> </div> <a name='function.strcspn.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strcspn</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$start</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ]] )</div> <p class='para rdfs-comment'> Returns the length of the initial segment of <i><tt class='parameter'>str1</tt></i> which does <em class='emphasis'>not</em> contain any of the characters in <i><tt class='parameter'>str2</tt></i> . </p> </div> <a name='function.strcspn.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>start</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The start position of the string to examine. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The length of the string to examine. </p> </dd> </dl> <p> </p> </div> <a name='function.strcspn.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the length of the segment as an integer. </p> </div> <a name='function.strcspn.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> The <i><tt class='parameter'>start</tt></i> and <i><tt class='parameter'>length</tt></i> were added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strcspn.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function is binary-safe.</span></p></blockquote> </div> <a name='function.strcspn.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.strspn.php' class='function' rel='rdfs-seeAlso'>strspn()</a> - Find length of initial segment matching mask</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strcoll" value="<div id='function.strcoll' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strcoll.php'>strcoll</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.5, PHP 5)</p><p class='refpurpose'><span class='refname'>strcoll</span> &amp;mdash; <span class='dc-title'>Locale based string comparison</span></p> </div> <a name='function.strcoll.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strcoll</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> )</div> <p class='para rdfs-comment'> Note that this comparison is case sensitive, and unlike <a href='http://www.php.net/manual/en/function.strcmp.php' class='function'>strcmp()</a> this function is not binary safe. </p> <p class='para'> <b>strcoll()</b> uses the current locale for doing the comparisons. If the current locale is C or POSIX, this function is equivalent to <a href='http://www.php.net/manual/en/function.strcmp.php' class='function'>strcmp()</a>. </p> </div> <a name='function.strcoll.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> </dl> <p> </p> </div> <a name='function.strcoll.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strcoll.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.3</td> <td align='left'> This function now works on win32. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.strcoll.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncmp.php' class='function' rel='rdfs-seeAlso'>strncmp()</a> - Binary safe string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.setlocale.php' class='function' rel='rdfs-seeAlso'>setlocale()</a> - Set locale information</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strcmp" value="<div id='function.strcmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strcmp.php'>strcmp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strcmp</span> &amp;mdash; <span class='dc-title'>Binary safe string comparison</span></p> </div> <a name='function.strcmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strcmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> )</div> <p class='simpara'> Note that this comparison is case sensitive. </p> </div> <a name='function.strcmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> </dl> <p> </p> </div> <a name='function.strcmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strcmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcasecmp.php' class='function' rel='rdfs-seeAlso'>strcasecmp()</a> - Binary safe case-insensitive string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncmp.php' class='function' rel='rdfs-seeAlso'>strncmp()</a> - Binary safe string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strchr" value="<div id='function.strchr' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strchr.php'>strchr</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strchr</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.strstr.php' class='function'>strstr()</a></span></p> </div> <a name='function.strchr.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.strstr.php' class='function'>strstr()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="strcasecmp" value="<div id='function.strcasecmp' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.strcasecmp.php'>strcasecmp</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>strcasecmp</span> &amp;mdash; <span class='dc-title'>Binary safe case-insensitive string comparison</span></p> </div> <a name='function.strcasecmp.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>strcasecmp</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str1</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str2</tt></span> )</div> <p class='para rdfs-comment'> Binary safe case-insensitive string comparison. </p> </div> <a name='function.strcasecmp.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str1</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str2</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string </p> </dd> </dl> <p> </p> </div> <a name='function.strcasecmp.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns &amp;lt; 0 if <i><tt class='parameter'>str1</tt></i> is less than <i><tt class='parameter'>str2</tt></i> ; &amp;gt; 0 if <i><tt class='parameter'>str1</tt></i> is greater than <i><tt class='parameter'>str2</tt></i> , and 0 if they are equal. </p> </div> <a name='function.strcasecmp.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>strcasecmp()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$var1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'Hello'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$var2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>;<br />if&amp;nbsp;(</span><span style='color: #0000BB'>strcasecmp</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$var1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$var2</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'$var1&amp;nbsp;is&amp;nbsp;equal&amp;nbsp;to&amp;nbsp;$var2&amp;nbsp;in&amp;nbsp;a&amp;nbsp;case-insensitive&amp;nbsp;string&amp;nbsp;comparison'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.strcasecmp.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-match.php' class='function' rel='rdfs-seeAlso'>preg_match()</a> - Perform a regular expression match</li> <li class='member'><a href='http://www.php.net/manual/en/function.strcmp.php' class='function' rel='rdfs-seeAlso'>strcmp()</a> - Binary safe string comparison</li> <li class='member'><a href='http://www.php.net/manual/en/function.substr.php' class='function' rel='rdfs-seeAlso'>substr()</a> - Return part of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.stristr.php' class='function' rel='rdfs-seeAlso'>stristr()</a> - Case-insensitive strstr</li> <li class='member'><a href='http://www.php.net/manual/en/function.strncasecmp.php' class='function' rel='rdfs-seeAlso'>strncasecmp()</a> - Binary safe case-insensitive string comparison of the first n characters</li> <li class='member'><a href='http://www.php.net/manual/en/function.strstr.php' class='function' rel='rdfs-seeAlso'>strstr()</a> - Find first occurrence of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="stat" value="<div id='function.stat' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.stat.php'>stat</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>stat</span> &amp;mdash; <span class='dc-title'>Gives information about a file</span></p> </div> <a name='function.stat.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>stat</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> )</div> <p class='para rdfs-comment'> Gathers the statistics of the file named by <i><tt class='parameter'>filename</tt></i> . If <i><tt class='parameter'>filename</tt></i> is a symbolic link, statistics are from the file itself, not the symlink. </p> <p class='para'> <a href='http://www.php.net/manual/en/function.lstat.php' class='function'>lstat()</a> is identical to <b>stat()</b> except it would instead be based off the symlinks status. </p> </div> <a name='function.stat.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='function.stat.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> </p><table class='doctable table'> <caption><b><b>stat()</b> and <a href='http://www.php.net/manual/en/function.fstat.php' class='function'>fstat()</a> result format</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Numeric</th> <th>Associative (since PHP 4.0.6)</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>0</td> <td align='left'>dev</td> <td align='left'>device number</td> </tr> <tr valign='middle'> <td align='left'>1</td> <td align='left'>ino</td> <td align='left'>inode number *</td> </tr> <tr valign='middle'> <td align='left'>2</td> <td align='left'>mode</td> <td align='left'>inode protection mode</td> </tr> <tr valign='middle'> <td align='left'>3</td> <td align='left'>nlink</td> <td align='left'>number of links</td> </tr> <tr valign='middle'> <td align='left'>4</td> <td align='left'>uid</td> <td align='left'>userid of owner *</td> </tr> <tr valign='middle'> <td align='left'>5</td> <td align='left'>gid</td> <td align='left'>groupid of owner *</td> </tr> <tr valign='middle'> <td align='left'>6</td> <td align='left'>rdev</td> <td align='left'>device type, if inode device</td> </tr> <tr valign='middle'> <td align='left'>7</td> <td align='left'>size</td> <td align='left'>size in bytes</td> </tr> <tr valign='middle'> <td align='left'>8</td> <td align='left'>atime</td> <td align='left'>time of last access (Unix timestamp)</td> </tr> <tr valign='middle'> <td align='left'>9</td> <td align='left'>mtime</td> <td align='left'>time of last modification (Unix timestamp)</td> </tr> <tr valign='middle'> <td align='left'>10</td> <td align='left'>ctime</td> <td align='left'>time of last inode change (Unix timestamp)</td> </tr> <tr valign='middle'> <td align='left'>11</td> <td align='left'>blksize</td> <td align='left'>blocksize of filesystem IO **</td> </tr> <tr valign='middle'> <td align='left'>12</td> <td align='left'>blocks</td> <td align='left'>number of blocks allocated **</td> </tr> </tbody> </table> <p> * On Windows this will always be 0. </p> <p class='para'> ** Only valid on systems supporting the st_blksize type - other systems (e.g. Windows) return -1. </p> <p class='para'> In case of error, <b>stat()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.stat.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Upon failure, an <b><tt class='constant'>E_WARNING</tt></b> is emitted. </p> </div> <a name='function.stat.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.6</td> <td align='left'> In addition to returning these attributes in a numeric array, they can be accessed with associative indices, as noted next to each parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.stat.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>stat()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Get&amp;nbsp;file&amp;nbsp;stat&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>stat</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'C:\php\php.exe'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*<br />&amp;nbsp;*&amp;nbsp;Print&amp;nbsp;file&amp;nbsp;access&amp;nbsp;file,&amp;nbsp;this&amp;nbsp;is&amp;nbsp;the&amp;nbsp;same&amp;nbsp;<br />&amp;nbsp;*&amp;nbsp;as&amp;nbsp;calling&amp;nbsp;fileatime()<br />&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Access&amp;nbsp;time:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'atime'</span><span style='color: #007700'>];<br /><br /></span><span style='color: #FF8000'>/*<br />&amp;nbsp;*&amp;nbsp;Print&amp;nbsp;file&amp;nbsp;modification&amp;nbsp;time,&amp;nbsp;this&amp;nbsp;is&amp;nbsp;the&amp;nbsp;<br />&amp;nbsp;*&amp;nbsp;same&amp;nbsp;as&amp;nbsp;calling&amp;nbsp;filemtime()<br />&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Modification&amp;nbsp;time:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'mtime'</span><span style='color: #007700'>];<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Print&amp;nbsp;the&amp;nbsp;device&amp;nbsp;number&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'Device&amp;nbsp;number:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'dev'</span><span style='color: #007700'>];</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Using <b>stat()</b> information together with <a href='http://www.php.net/manual/en/function.touch.php' class='function'>touch()</a></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Get&amp;nbsp;file&amp;nbsp;stat&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$stat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;@</span><span style='color: #0000BB'>stat</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'C:\php\php.exe'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Did&amp;nbsp;we&amp;nbsp;failed&amp;nbsp;to&amp;nbsp;get&amp;nbsp;stat&amp;nbsp;information&amp;nbsp;?&amp;nbsp;*/<br /></span><span style='color: #007700'>if(!</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Stat&amp;nbsp;call&amp;nbsp;failed...'</span><span style='color: #007700'>;<br />}<br />else<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;We&amp;nbsp;want&amp;nbsp;the&amp;nbsp;access&amp;nbsp;time&amp;nbsp;to&amp;nbsp;be&amp;nbsp;1&amp;nbsp;week&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;before&amp;nbsp;the&amp;nbsp;current&amp;nbsp;access&amp;nbsp;time.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$atime&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'atime'</span><span style='color: #007700'>]&amp;nbsp;+&amp;nbsp;</span><span style='color: #0000BB'>604800</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Touch&amp;nbsp;the&amp;nbsp;file&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>if(!@</span><span style='color: #0000BB'>touch</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'some_file.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #0000BB'>$atime</span><span style='color: #007700'>))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Failed&amp;nbsp;to&amp;nbsp;touch&amp;nbsp;file...'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Touch&amp;nbsp;returned&amp;nbsp;success...'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.stat.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Note that time resolution may differ from one file system to another.<br /></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>The results of this function are cached. See <a href='http://www.php.net/manual/en/function.clearstatcache.php' class='function'>clearstatcache()</a> for more details.</span></p></blockquote> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>As of PHP 5.0.0, this function can also be used with <em class='emphasis'>some</em> URL wrappers. Refer to <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for a listing of which wrappers support <b>stat()</b> family of functionality.</p></div> </div> <a name='function.stat.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.lstat.php' class='function' rel='rdfs-seeAlso'>lstat()</a> - Gives information about a file or symbolic link</li> <li class='member'><a href='http://www.php.net/manual/en/function.fstat.php' class='function' rel='rdfs-seeAlso'>fstat()</a> - Gets information about a file using an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.filemtime.php' class='function' rel='rdfs-seeAlso'>filemtime()</a> - Gets file modification time</li> <li class='member'><a href='http://www.php.net/manual/en/function.filegroup.php' class='function' rel='rdfs-seeAlso'>filegroup()</a> - Gets file group</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sscanf" value="<div id='function.sscanf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sscanf.php'>sscanf</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>sscanf</span> &amp;mdash; <span class='dc-title'>Parses input from a string according to a format</span></p> </div> <a name='function.sscanf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>sscanf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$...</tt></span> ] )</div> <p class='para rdfs-comment'> The function <b>sscanf()</b> is the input analog of <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a>. <b>sscanf()</b> reads from the string <i><tt class='parameter'>str</tt></i> and interprets it according to the specified <i><tt class='parameter'>format</tt></i> , which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>. </p> <p class='para'> Any whitespace in the format string matches any whitespace in the input string. This means that even a tab \t in the format string can match a single space character in the input string. </p> </div> <a name='function.sscanf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being parsed. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The interpreted format for <i><tt class='parameter'>str</tt></i> , which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optionally pass in variables by reference that will contain the parsed values. </p> </dd> </dl> <p> </p> </div> <a name='function.sscanf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If only two parameters were passed to this function, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference. </p> </div> <a name='function.sscanf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sscanf()</b> Example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;getting&amp;nbsp;the&amp;nbsp;serial&amp;nbsp;number<br /></span><span style='color: #007700'>list(</span><span style='color: #0000BB'>$serial</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>sscanf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SN/2350001'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SN/%d'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;and&amp;nbsp;the&amp;nbsp;date&amp;nbsp;of&amp;nbsp;manufacturing<br /></span><span style='color: #0000BB'>$mandate&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'January&amp;nbsp;01&amp;nbsp;2000'</span><span style='color: #007700'>;<br />list(</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>sscanf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$mandate</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%s&amp;nbsp;%d&amp;nbsp;%d'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Item&amp;nbsp;</span><span style='color: #0000BB'>$serial</span><span style='color: #DD0000'>&amp;nbsp;was&amp;nbsp;manufactured&amp;nbsp;on:&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #DD0000'>-'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'-</span><span style='color: #0000BB'>$day</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> If optional parameters are passed, the function will return the number of assigned values. </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>sscanf()</b> - using optional parameters</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;get&amp;nbsp;author&amp;nbsp;info&amp;nbsp;and&amp;nbsp;generate&amp;nbsp;DocBook&amp;nbsp;entry<br /></span><span style='color: #0000BB'>$auth&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'24\tLewis&amp;nbsp;Carroll'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$n&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sscanf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$auth</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'%d\t%s&amp;nbsp;%s'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$first</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$last</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;author&amp;nbsp;id='</span><span style='color: #0000BB'>$id</span><span style='color: #DD0000'>'&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;firstname&amp;gt;</span><span style='color: #0000BB'>$first</span><span style='color: #DD0000'>&amp;lt;/firstname&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;surname&amp;gt;</span><span style='color: #0000BB'>$last</span><span style='color: #DD0000'>&amp;lt;/surname&amp;gt;<br />&amp;lt;/author&amp;gt;\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sscanf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sprintf.php' class='function' rel='rdfs-seeAlso'>sprintf()</a> - Return a formatted string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="srand" value="<div id='function.srand' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.srand.php'>srand</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>srand</span> &amp;mdash; <span class='dc-title'>Seed the random number generator</span></p> </div> <a name='function.srand.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>srand</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$seed</tt></span> ] )</div> <p class='para rdfs-comment'> Seeds the random number generator with <i><tt class='parameter'>seed</tt></i> or with a random value if no <i><tt class='parameter'>seed</tt></i> is given. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>As of PHP 4.2.0, there is no need to seed the random number generator with <b>srand()</b> or <a href='http://www.php.net/manual/en/function.mt-srand.php' class='function'>mt_srand()</a> as this is now done automatically. </span></p></blockquote> </div> <a name='function.srand.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>seed</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optional seed value </p> </dd> </dl> <p> </p> </div> <a name='function.srand.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.srand.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>Since 4.2.0</td> <td align='left'> The <i><tt class='parameter'>seed</tt></i> becomes optional and defaults to a random value if omitted. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.srand.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>srand()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;seed&amp;nbsp;with&amp;nbsp;microseconds<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>make_seed</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;list(</span><span style='color: #0000BB'>$usec</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sec</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>explode</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>microtime</span><span style='color: #007700'>());<br />&amp;nbsp;&amp;nbsp;return&amp;nbsp;(float)&amp;nbsp;</span><span style='color: #0000BB'>$sec&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;((float)&amp;nbsp;</span><span style='color: #0000BB'>$usec&amp;nbsp;</span><span style='color: #007700'>*&amp;nbsp;</span><span style='color: #0000BB'>100000</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>srand</span><span style='color: #007700'>(</span><span style='color: #0000BB'>make_seed</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>$randval&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>rand</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.srand.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.rand.php' class='function' rel='rdfs-seeAlso'>rand()</a> - Generate a random integer</li> <li class='member'><a href='http://www.php.net/manual/en/function.getrandmax.php' class='function' rel='rdfs-seeAlso'>getrandmax()</a> - Show largest possible random value</li> <li class='member'><a href='http://www.php.net/manual/en/function.mt-srand.php' class='function' rel='rdfs-seeAlso'>mt_srand()</a> - Seed the better random number generator</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqrt" value="<div id='function.sqrt' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqrt.php'>sqrt</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sqrt</span> &amp;mdash; <span class='dc-title'>Square root</span></p> </div> <a name='function.sqrt.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>sqrt</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the square root of <i><tt class='parameter'>arg</tt></i> . </p> </div> <a name='function.sqrt.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.sqrt.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The square root of <i><tt class='parameter'>arg</tt></i> or the special value <i>NAN</i> for negative numbers. </p> </div> <a name='function.sqrt.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sqrt()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Precision&amp;nbsp;depends&amp;nbsp;on&amp;nbsp;your&amp;nbsp;precision&amp;nbsp;directive<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>sqrt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>9</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;3<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>sqrt</span><span style='color: #007700'>(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;3.16227766&amp;nbsp;...<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqrt.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.pow.php' class='function' rel='rdfs-seeAlso'>pow()</a> - Exponential expression</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sql_regcase" value="<div id='function.sql-regcase' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sql-regcase.php'>sql_regcase</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sql_regcase</span> &amp;mdash; <span class='dc-title'>Make regular expression for case insensitive match</span></p> </div> <a name='function.sql-regcase.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sql_regcase</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> )</div> <p class='para rdfs-comment'> Creates a regular expression for a case insensitive match. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.sql-regcase.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.sql-regcase.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a valid regular expression which will match <i><tt class='parameter'>string</tt></i> , ignoring case. This expression is <i><tt class='parameter'>string</tt></i> with each alphabetic character converted to a bracket expression; this bracket expression contains that character&amp;#039;s uppercase and lowercase form. Other characters remain unchanged. </p> </div> <a name='function.sql-regcase.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sql_regcase()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>sql_regcase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo&amp;nbsp;-&amp;nbsp;bar.'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> [Ff][Oo][Oo] - [Bb][Aa][Rr]. </pre></div> </div> </div><p> </p> <p class='para'> This can be used to achieve case insensitive pattern matching in products which support only case sensitive regular expressions. </p> </div> <a name='function.sql-regcase.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_valid" value="<div id='function.sqlite-valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-valid.php'>sqlite_valid</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;valid</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;valid</h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_valid</span> -- <span class='refname'>SQLiteResult-&amp;gt;valid</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;valid</span> &amp;mdash; <span class='dc-title'>Returns whether more rows are available</span></p> </div> <a name='function.sqlite-valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_valid</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>valid</b></span> ( <span class='methodparam'>void</span> )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>valid</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Finds whether more rows are available from the given result handle. </p> </div> <a name='function.sqlite-valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if there are more rows available from the <i><tt class='parameter'>result</tt></i> handle, or <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.sqlite-valid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-num-rows.php' class='function' rel='rdfs-seeAlso'>sqlite_num_rows()</a> - Returns the number of rows in a buffered result set</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-changes.php' class='function' rel='rdfs-seeAlso'>sqlite_changes()</a> - Returns the number of rows that were changed by the most recent SQL statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_unbuffered_query" value="<div id='function.sqlite-unbuffered-query' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php'>sqlite_unbuffered_query</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;unbufferedQuery</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_unbuffered_query</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;unbufferedQuery</span> &amp;mdash; <span class='dc-title'>Execute a query that does not prefetch and buffer all data</span></p> </div> <a name='function.sqlite-unbuffered-query.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_unbuffered_query</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_unbuffered_query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>SQLiteUnbuffered</span> <span class='methodname'><b>unbufferedQuery</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> </div> <p class='para'> <b>sqlite_unbuffered_query()</b> is identical to <a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function'>sqlite_query()</a> except that the result that is returned is a sequential forward-only result set that can only be used to read each row, one after the other. </p> <p class='para'> This function is ideal for generating things such as HTML tables where you only need to process one row at a time and don&amp;#039;t need to randomly access the row data. </p> <blockquote><p><b class='note'>Note</b>: Functions such as <a href='http://www.php.net/manual/en/function.sqlite-seek.php' class='function'>sqlite_seek()</a>, <a href='http://www.php.net/manual/en/function.sqlite-rewind.php' class='function'>sqlite_rewind()</a>, <a href='http://www.php.net/manual/en/function.sqlite-next.php' class='function'>sqlite_next()</a>, <a href='http://www.php.net/manual/en/function.sqlite-current.php' class='function'>sqlite_current()</a>, and <a href='http://www.php.net/manual/en/function.sqlite-num-rows.php' class='function'>sqlite_num_rows()</a> do not work on result handles returned from <b>sqlite_unbuffered_query()</b>. <br /> </p></blockquote> </div> <a name='function.sqlite-unbuffered-query.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>query</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The query to be executed. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='link'>properly escaped</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_msg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can&amp;#039;t be fetched using the <a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function'>sqlite_last_error()</a> function. </p> </dd> </dl> <p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Two alternative syntaxes are supported for compatibility with other database extensions (such as MySQL). The preferred form is the first, where the <i><tt class='parameter'>dbhandle</tt></i> parameter is the first parameter to the function.</span></p></blockquote> </div> <a name='function.sqlite-unbuffered-query.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a result handle or <b><tt class='constant'>FALSE</tt></b> on failure. </p> <p class='para'> <b>sqlite_unbuffered_query()</b> returns a sequential forward-only result set that can only be used to read each row, one after the other. </p> </div> <a name='function.sqlite-unbuffered-query.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>error_msg</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sqlite-unbuffered-query.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function' rel='rdfs-seeAlso'>sqlite_query()</a> - Executes a query against a given database and returns a result handle</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_udf_encode_binary" value="<div id='function.sqlite-udf-encode-binary' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php'>sqlite_udf_encode_binary</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_udf_encode_binary</span> &amp;mdash; <span class='dc-title'>Encode binary data before returning it from an UDF</span></p> </div> <a name='function.sqlite-udf-encode-binary.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_udf_encode_binary</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> <b>sqlite_udf_encode_binary()</b> applies a binary encoding to the <i><tt class='parameter'>data</tt></i> so that it can be safely returned from queries (since the underlying <var class='filename'>libsqlite</var> API is not binary safe). </p> <p class='para'> If there is a chance that your data might be binary unsafe (e.g.: it contains a NUL byte in the middle rather than at the end, or if it has and <i>0x01</i> byte as the first character) then you must call this function to encode the return value from your UDF. </p> <p class='para'> PHP does not perform this encode/decode operation automatically as it would severely impact performance if it did. </p> <blockquote><p><b class='note'>Note</b>: Do not use <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a> to quote strings returned from UDF&amp;#039;s as it will lead to double-quoting of the data. Use <b>sqlite_udf_encode_binary()</b> instead! <br /> </p></blockquote> </div> <a name='function.sqlite-udf-encode-binary.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being encoded. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-udf-encode-binary.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The encoded <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </div> <a name='function.sqlite-udf-encode-binary.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-udf-decode-binary.php' class='function' rel='rdfs-seeAlso'>sqlite_udf_decode_binary()</a> - Decode binary data passed as parameters to an UDF</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function' rel='rdfs-seeAlso'>sqlite_escape_string()</a> - Escapes a string for use as a query parameter</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function' rel='rdfs-seeAlso'>sqlite_create_function()</a> - Registers a 'regular' User Defined Function for use in SQL statements</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php' class='function' rel='rdfs-seeAlso'>sqlite_create_aggregate()</a> - Register an aggregating UDF for use in SQL statements</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_udf_decode_binary" value="<div id='function.sqlite-udf-decode-binary' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-udf-decode-binary.php'>sqlite_udf_decode_binary</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_udf_decode_binary</span> &amp;mdash; <span class='dc-title'>Decode binary data passed as parameters to an <acronym title='User Defined Functions'>UDF</acronym></span></p> </div> <a name='function.sqlite-udf-decode-binary.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_udf_decode_binary</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> Decodes binary data passed as parameters to a <acronym title='User Defined Functions'>UDF</acronym>. </p> <p class='para'> You must call this function on parameters passed to your UDF if you need them to handle binary data, as the binary encoding employed by PHP will obscure the content and of the parameter in its natural, non-coded form. </p> <p class='para'> PHP does not perform this encode/decode operation automatically as it would severely impact performance if it did. </p> </div> <a name='function.sqlite-udf-decode-binary.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The encoded data that will be decoded, data that was applied by either <a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function'>sqlite_udf_encode_binary()</a> or <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-udf-decode-binary.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The decoded <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </div> <a name='function.sqlite-udf-decode-binary.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 binary-safe max_length aggregation function example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'five'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'six'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'seven'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'eight'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'nine'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'ten'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br /></span><span style='color: #0000BB'>$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':memory:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CREATE&amp;nbsp;TABLE&amp;nbsp;strings(a)'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_escape_string</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;strings&amp;nbsp;VALUES&amp;nbsp;('</span><span style='color: #0000BB'>$str</span><span style='color: #DD0000'>')'</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>max_len_step</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_udf_decode_binary</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$context&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>max_len_finalize</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>sqlite_create_aggregate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len_step'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len_finalize'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sqlite_array_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;max_len(a)&amp;nbsp;from&amp;nbsp;strings'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-udf-decode-binary.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function' rel='rdfs-seeAlso'>sqlite_udf_encode_binary()</a> - Encode binary data before returning it from an UDF</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function' rel='rdfs-seeAlso'>sqlite_create_function()</a> - Registers a 'regular' User Defined Function for use in SQL statements</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php' class='function' rel='rdfs-seeAlso'>sqlite_create_aggregate()</a> - Register an aggregating UDF for use in SQL statements</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_single_query" value="<div id='function.sqlite-single-query' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-single-query.php'>sqlite_single_query</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;singleQuery</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.1)</p><p class='refpurpose'><span class='refname'>sqlite_single_query</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;singleQuery</span> &amp;mdash; <span class='dc-title'> Executes a query and returns either an array for one single column or the value of the first row </span></p> </div> <a name='function.sqlite-single-query.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_single_query</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$db</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$first_row_only</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>singleQuery</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$first_row_only</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt></span> ]] )</div> </div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_seek" value="<div id='function.sqlite-seek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-seek.php'>sqlite_seek</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;seek</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_seek</span> -- <span class='refname'>SQLiteResult-&amp;gt;seek</span> &amp;mdash; <span class='dc-title'>Seek to a particular row number of a buffered result set</span></p> </div> <a name='function.sqlite-seek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_seek</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$rownum</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>seek</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$rownum</tt></span> )</div> </div> <p class='para'> <b>sqlite_seek()</b> seeks to the row given by the parameter <i><tt class='parameter'>rownum</tt></i> . </p> </div> <a name='function.sqlite-seek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>rownum</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The ordinal row number to seek to. The row number is zero-based (0 is the first row). </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-seek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> if the row does not exist, <b><tt class='constant'>TRUE</tt></b> otherwise. </p> </div> <a name='function.sqlite-seek.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-next.php' class='function' rel='rdfs-seeAlso'>sqlite_next()</a> - Seek to the next row number</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-current.php' class='function' rel='rdfs-seeAlso'>sqlite_current()</a> - Fetches the current row from a result set as an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-rewind.php' class='function' rel='rdfs-seeAlso'>sqlite_rewind()</a> - Seek to the first row number</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_rewind" value="<div id='function.sqlite-rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-rewind.php'>sqlite_rewind</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;rewind</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_rewind</span> -- <span class='refname'>SQLiteResult-&amp;gt;rewind</span> &amp;mdash; <span class='dc-title'>Seek to the first row number</span></p> </div> <a name='function.sqlite-rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_rewind</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> <b>sqlite_rewind()</b> seeks back to the first row in the given result set. </p> </div> <a name='function.sqlite-rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> if there are no rows in the result set, <b><tt class='constant'>TRUE</tt></b> otherwise. </p> </div> <a name='function.sqlite-rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-next.php' class='function' rel='rdfs-seeAlso'>sqlite_next()</a> - Seek to the next row number</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-current.php' class='function' rel='rdfs-seeAlso'>sqlite_current()</a> - Fetches the current row from a result set as an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-seek.php' class='function' rel='rdfs-seeAlso'>sqlite_seek()</a> - Seek to a particular row number of a buffered result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_query" value="<div id='function.sqlite-query' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-query.php'>sqlite_query</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;query</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_query</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;query</span> &amp;mdash; <span class='dc-title'>Executes a query against a given database and returns a result handle</span></p> </div> <a name='function.sqlite-query.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_query</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>SQLiteResult</span> <span class='methodname'><b>query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ]] )</div> </div> <p class='para'> Executes an SQL statement given by the <i><tt class='parameter'>query</tt></i> against a given database handle. </p> </div> <a name='function.sqlite-query.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>query</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The query to be executed. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='link'>properly escaped</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_msg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can&amp;#039;t be fetched using the <a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function'>sqlite_last_error()</a> function. </p> </dd> </dl> <p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Two alternative syntaxes are supported for compatibility with other database extensions (such as MySQL). The preferred form is the first, where the <i><tt class='parameter'>dbhandle</tt></i> parameter is the first parameter to the function.</span></p></blockquote> </div> <a name='function.sqlite-query.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function will return a result handle or <b><tt class='constant'>FALSE</tt></b> on failure. For queries that return rows, the result handle can then be used with functions such as <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a> and <a href='http://www.php.net/manual/en/function.sqlite-seek.php' class='function'>sqlite_seek()</a>. </p> <p class='para'> Regardless of the query type, this function will return <b><tt class='constant'>FALSE</tt></b> if the query failed. </p> <p class='para'> <b>sqlite_query()</b> returns a buffered, seekable result handle. This is useful for reasonably small queries where you need to be able to randomly access the rows. Buffered result handles will allocate memory to hold the entire result and will not return until it has been fetched. If you only need sequential access to the data, it is recommended that you use the much higher performance <a href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php' class='function'>sqlite_unbuffered_query()</a> instead. </p> </div> <a name='function.sqlite-query.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>error_msg</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sqlite-query.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> SQLite <em class='emphasis'>will</em> execute multiple queries separated by semicolons, so you can use it to execute a batch of SQL that you have loaded from a file or have embedded in a script. However, this works only when the result of the function is not used - if it is used, only the first SQL statement would be executed. Function <a href='http://www.php.net/manual/en/function.sqlite-exec.php' class='function'>sqlite_exec()</a> will always execute multiple SQL statements. </p> <p class='simpara'> When executing multiple queries, the return value of this function will be <b><tt class='constant'>FALSE</tt></b> if there was an error, but undefined otherwise (it might be <b><tt class='constant'>TRUE</tt></b> for success or it might return a result handle). </p> </div> </div> <a name='function.sqlite-query.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php' class='function' rel='rdfs-seeAlso'>sqlite_unbuffered_query()</a> - Execute a query that does not prefetch and buffer all data</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-array-query.php' class='function' rel='rdfs-seeAlso'>sqlite_array_query()</a> - Execute a query against a given database and returns an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_prev" value="<div id='function.sqlite-prev' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-prev.php'>sqlite_prev</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;prev</h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_prev</span> -- <span class='refname'>SQLiteResult-&amp;gt;prev</span> &amp;mdash; <span class='dc-title'>Seek to the previous row number of a result set</span></p> </div> <a name='function.sqlite-prev.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_prev</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.prev.php' class='function'>prev</a></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> <b>sqlite_prev()</b> seeks back the <i><tt class='parameter'>result</tt></i> handle to the previous row. </p> </div> <a name='function.sqlite-prev.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-prev.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success, or <b><tt class='constant'>FALSE</tt></b> if there are no more previous rows. </p> </div> <a name='function.sqlite-prev.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-has-prev.php' class='function' rel='rdfs-seeAlso'>sqlite_has_prev()</a> - Returns whether or not a previous row is available</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-rewind.php' class='function' rel='rdfs-seeAlso'>sqlite_rewind()</a> - Seek to the first row number</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-next.php' class='function' rel='rdfs-seeAlso'>sqlite_next()</a> - Seek to the next row number</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_popen" value="<div id='function.sqlite-popen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-popen.php'>sqlite_popen</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_popen</span> &amp;mdash; <span class='dc-title'> Opens a persistent handle to an SQLite database and create the database if it does not exist </span></p> </div> <a name='function.sqlite-popen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_popen</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = 0666</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_message</tt></span> ]] )</div> <p class='simpara'> This function behaves identically to <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> except that is uses the persistent resource mechanism of PHP. For information about the meaning of the parameters, read the <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> manual page. </p> <p class='para'> <b>sqlite_popen()</b> will first check to see if a persistent handle has already been opened for the given <i><tt class='parameter'>filename</tt></i> . If it finds one, it returns that handle to your script, otherwise it opens a fresh handle to the database. </p> <p class='para'> The benefit of this approach is that you don&amp;#039;t incur the performance cost of re-reading the database and index schema on each page hit served by persistent web server SAPI&amp;#039;s (any SAPI except for regular CGI or CLI). </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> If you use persistent handles and have the database updated by a background process (perhaps via a crontab), and that process re-creates the database by overwriting it (either by unlinking and rebuilding, or moving the updated version to replace the current version), you may experience undefined behaviour when a persistent handle on the old version of the database is recycled. </span> <span class='simpara'> To avoid this situation, have your background processes open the same database file and perform their updates in a transaction. </span> </p></blockquote> </div> <a name='function.sqlite-popen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename of the SQLite database. If the file does not exist, SQLite will attempt to create it. PHP must have write permissions to the file if data is inserted, the database schema is modified or to create the database if it does not exist. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value <i>0666</i> and this is the recommended value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-popen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a resource (database handle) on success, <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.sqlite-popen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function' rel='rdfs-seeAlso'>sqlite_open()</a> - Opens a SQLite database and create the database if it does not exist</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-close.php' class='function' rel='rdfs-seeAlso'>sqlite_close()</a> - Closes an open SQLite database</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-factory.php' class='function' rel='rdfs-seeAlso'>sqlite_factory()</a> - Opens a SQLite database and returns a SQLiteDatabase object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_open" value="<div id='function.sqlite-open' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-open.php'>sqlite_open</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_open</span> &amp;mdash; <span class='dc-title'>Opens a SQLite database and create the database if it does not exist</span></p> </div> <a name='function.sqlite-open.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>resource</span> <span class='methodname'><b>sqlite_open</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = 0666</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_message</tt></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (constructor):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='constructorsynopsis dc-description'> <span class='methodname'><b>__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = 0666</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_message</tt></span> ]] )</div> </div> <p class='para'> Opens a SQLite database or creates the database if it does not exist. </p> </div> <a name='function.sqlite-open.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename of the SQLite database. If the file does not exist, SQLite will attempt to create it. PHP must have write permissions to the file if data is inserted, the database schema is modified or to create the database if it does not exist. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value <i>0666</i> and this is the recommended value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-open.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a resource (database handle) on success, <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='function.sqlite-open.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sqlite_open()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0666</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqliteerror</span><span style='color: #007700'>))&amp;nbsp;{&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CREATE&amp;nbsp;TABLE&amp;nbsp;foo&amp;nbsp;(bar&amp;nbsp;varchar(10))'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;foo&amp;nbsp;VALUES&amp;nbsp;('fnord')'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'select&amp;nbsp;bar&amp;nbsp;from&amp;nbsp;foo'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sqlite_fetch_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>));&amp;nbsp;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;die(</span><span style='color: #0000BB'>$sqliteerror</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-open.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b> <p class='simpara'> On Unix platforms, SQLite is sensitive to scripts that use the fork() system call. If you do have such a script, it is recommended that you close the handle prior to forking and then re-open it in the child and/or parent. For more information on this issue, see <a href='http://sqlite.org/c_interface.html' class='link external'>&amp;raquo; The C language interface to the SQLite library</a> in the section entitled <i>Multi-Threading And SQLite</i>. </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='simpara'> It is not recommended to work with SQLite databases mounted on NFS partitions. Since NFS is notoriously bad when it comes to locking you may find that you cannot even open the database at all, and if it succeeds, the locking behaviour may be undefined. </p> </div> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Starting with SQLite library version 2.8.2, you can specify <i>:memory:</i> as the <i><tt class='parameter'>filename</tt></i> to create a database that lives only in the memory of the computer. This is useful mostly for temporary processing, as the in-memory database will be destroyed when the process ends. It can also be useful when coupled with the <i>ATTACH DATABASE</i> SQL statement to load other databases and move and query data between them. </span> </p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> SQLite is <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a> and open_basedir aware. </span> </p></blockquote> </div> <a name='function.sqlite-open.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-popen.php' class='function' rel='rdfs-seeAlso'>sqlite_popen()</a> - Opens a persistent handle to an SQLite database and create the database if it does not exist</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-close.php' class='function' rel='rdfs-seeAlso'>sqlite_close()</a> - Closes an open SQLite database</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-factory.php' class='function' rel='rdfs-seeAlso'>sqlite_factory()</a> - Opens a SQLite database and returns a SQLiteDatabase object</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_num_rows" value="<div id='function.sqlite-num-rows' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-num-rows.php'>sqlite_num_rows</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;numRows</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_num_rows</span> -- <span class='refname'>SQLiteResult-&amp;gt;numRows</span> &amp;mdash; <span class='dc-title'>Returns the number of rows in a buffered result set</span></p> </div> <a name='function.sqlite-num-rows.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sqlite_num_rows</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>numRows</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Returns the number of rows in the buffered <i><tt class='parameter'>result</tt></i> set. </p> </div> <a name='function.sqlite-num-rows.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-num-rows.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of rows, as an integer. </p> </div> <a name='function.sqlite-num-rows.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;*&amp;nbsp;FROM&amp;nbsp;mytable&amp;nbsp;WHERE&amp;nbsp;name='John&amp;nbsp;Doe''</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$rows&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_num_rows</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows:&amp;nbsp;</span><span style='color: #0000BB'>$rows</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;*&amp;nbsp;FROM&amp;nbsp;mytable&amp;nbsp;WHERE&amp;nbsp;name='John&amp;nbsp;Doe''</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$rows&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$result</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>numRows</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows:&amp;nbsp;</span><span style='color: #0000BB'>$rows</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-num-rows.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-changes.php' class='function' rel='rdfs-seeAlso'>sqlite_changes()</a> - Returns the number of rows that were changed by the most recent SQL statement</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function' rel='rdfs-seeAlso'>sqlite_query()</a> - Executes a query against a given database and returns a result handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-num-fields.php' class='function' rel='rdfs-seeAlso'>sqlite_num_fields()</a> - Returns the number of fields in a result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_num_fields" value="<div id='function.sqlite-num-fields' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-num-fields.php'>sqlite_num_fields</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;numFields</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;numFields</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_num_fields</span> -- <span class='refname'>SQLiteResult-&amp;gt;numFields</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;numFields</span> &amp;mdash; <span class='dc-title'>Returns the number of fields in a result set</span></p> </div> <a name='function.sqlite-num-fields.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sqlite_num_fields</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>numFields</b></span> ( <span class='methodparam'>void</span> )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>numFields</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Returns the number of fields in the <i><tt class='parameter'>result</tt></i> set. </p> </div> <a name='function.sqlite-num-fields.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-num-fields.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of fields, as an integer. </p> </div> <a name='function.sqlite-num-fields.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-changes.php' class='function' rel='rdfs-seeAlso'>sqlite_changes()</a> - Returns the number of rows that were changed by the most recent SQL statement</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-num-rows.php' class='function' rel='rdfs-seeAlso'>sqlite_num_rows()</a> - Returns the number of rows in a buffered result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_next" value="<div id='function.sqlite-next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-next.php'>sqlite_next</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;next</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;next</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_next</span> -- <span class='refname'>SQLiteResult-&amp;gt;next</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;next</span> &amp;mdash; <span class='dc-title'>Seek to the next row number</span></p> </div> <a name='function.sqlite-next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_next</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> <b>sqlite_next()</b> advances the result handle <i><tt class='parameter'>result</tt></i> to the next row. </p> </div> <a name='function.sqlite-next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success, or <b><tt class='constant'>FALSE</tt></b> if there are no more rows. </p> </div> <a name='function.sqlite-next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-seek.php' class='function' rel='rdfs-seeAlso'>sqlite_seek()</a> - Seek to a particular row number of a buffered result set</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-current.php' class='function' rel='rdfs-seeAlso'>sqlite_current()</a> - Fetches the current row from a result set as an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-rewind.php' class='function' rel='rdfs-seeAlso'>sqlite_rewind()</a> - Seek to the first row number</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_libversion" value="<div id='function.sqlite-libversion' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-libversion.php'>sqlite_libversion</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_libversion</span> &amp;mdash; <span class='dc-title'>Returns the version of the linked SQLite library</span></p> </div> <a name='function.sqlite-libversion.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_libversion</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the version of the linked SQLite library. </p> </div> <a name='function.sqlite-libversion.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the librart version, as a string. </p> </div> <a name='function.sqlite-libversion.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-libencoding.php' class='function' rel='rdfs-seeAlso'>sqlite_libencoding()</a> - Returns the encoding of the linked SQLite library</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_libencoding" value="<div id='function.sqlite-libencoding' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-libencoding.php'>sqlite_libencoding</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_libencoding</span> &amp;mdash; <span class='dc-title'>Returns the encoding of the linked SQLite library</span></p> </div> <a name='function.sqlite-libencoding.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_libencoding</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> The SQLite library may be compiled in either <i>ISO-8859-1</i> or <i>UTF-8</i> compatible modes. This function allows you to determine which encoding scheme is used by your version of the library. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The default PHP distribution builds <var class='filename'>libsqlite</var> in <i>ISO-8859-1</i> encoding mode. However, this is a misnomer; rather than handling <i>ISO-8859-1</i>, it operates according to your current locale settings for string comparisons and sort ordering. So, rather than <i>ISO-8859-1</i>, you should think of it as being &amp;#039;<i>8-bit</i>&amp;#039; instead. </p> </div> <p class='para'> When compiled with <i>UTF-8</i> support, sqlite handles encoding and decoding of <i>UTF-8</i> multi-byte character sequences, but does not yet do a complete job when working with the data (no normalization is performed for example), and some comparison operations may still not be carried out correctly. </p> <div class='warning'><b class='warning'>Warning</b> <p class='para'> It is not recommended that you use PHP in a web-server configuration with a version of the SQLite library compiled with <i>UTF-8</i> support, since <var class='filename'>libsqlite</var> will abort the process if it detects a problem with the <i>UTF-8</i> encoding. </p> </div> </div> <a name='function.sqlite-libencoding.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the library encoding. </p> </div> <a name='function.sqlite-libencoding.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><b>sqlite_lib_version()</b></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_last_insert_rowid" value="<div id='function.sqlite-last-insert-rowid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-last-insert-rowid.php'>sqlite_last_insert_rowid</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;lastInsertRowid</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_last_insert_rowid</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;lastInsertRowid</span> &amp;mdash; <span class='dc-title'>Returns the rowid of the most recently inserted row</span></p> </div> <a name='function.sqlite-last-insert-rowid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sqlite_last_insert_rowid</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>lastInsertRowid</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Returns the rowid of the row that was most recently inserted into the database <i><tt class='parameter'>dbhandle</tt></i> , if it was created as an auto-increment field. </p> <div class='tip'><b class='tip'>Tip</b> <p class='para'> You can create auto-increment fields in SQLite by declaring them as <i>INTEGER PRIMARY KEY</i> in your table schema. </p> </div> </div> <a name='function.sqlite-last-insert-rowid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-last-insert-rowid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the row id, as an integer. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_last_error" value="<div id='function.sqlite-last-error' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-last-error.php'>sqlite_last_error</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;lastError</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_last_error</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;lastError</span> &amp;mdash; <span class='dc-title'>Returns the error code of the last error for a database</span></p> </div> <a name='function.sqlite-last-error.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sqlite_last_error</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>lastError</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Returns the error code from the last operation performed on <i><tt class='parameter'>dbhandle</tt></i> (the database handle), or <i>0</i> when no error occurred. A human readable description of the error code can be retrieved using <a href='http://www.php.net/manual/en/function.sqlite-error-string.php' class='function'>sqlite_error_string()</a>. </p> </div> <a name='function.sqlite-last-error.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-last-error.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an error code, or 0 if no error occurred. </p> </div> <a name='function.sqlite-last-error.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-error-string.php' class='function' rel='rdfs-seeAlso'>sqlite_error_string()</a> - Returns the textual description of an error code</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_has_prev" value="<div id='function.sqlite-has-prev' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-has-prev.php'>sqlite_has_prev</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;hasPrev</h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_has_prev</span> -- <span class='refname'>SQLiteResult-&amp;gt;hasPrev</span> &amp;mdash; <span class='dc-title'>Returns whether or not a previous row is available</span></p> </div> <a name='function.sqlite-has-prev.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_has_prev</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>hasPrev</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Find whether there are more previous rows from the given result handle. </p> </div> <a name='function.sqlite-has-prev.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> <blockquote><p><b class='note'>Note</b>: This function cannot be used with unbuffered result handles.<br /></p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-has-prev.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if there are more previous rows available from the <i><tt class='parameter'>result</tt></i> handle, or <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.sqlite-has-prev.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-prev.php' class='function' rel='rdfs-seeAlso'>sqlite_prev()</a> - Seek to the previous row number of a result set</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-has-more.php' class='function' rel='rdfs-seeAlso'>sqlite_has_more()</a> - Finds whether or not more rows are available</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-num-rows.php' class='function' rel='rdfs-seeAlso'>sqlite_num_rows()</a> - Returns the number of rows in a buffered result set</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_has_more" value="<div id='function.sqlite-has-more' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-has-more.php'>sqlite_has_more</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_has_more</span> &amp;mdash; <span class='dc-title'>Finds whether or not more rows are available</span></p> </div> <a name='function.sqlite-has-more.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_has_more</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> )</div> <p class='para rdfs-comment'> Finds whether more rows are available from the given result set. </p> </div> <a name='function.sqlite-has-more.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-has-more.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if there are more rows available from the <i><tt class='parameter'>result</tt></i> handle, or <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.sqlite-has-more.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-num-rows.php' class='function' rel='rdfs-seeAlso'>sqlite_num_rows()</a> - Returns the number of rows in a buffered result set</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-changes.php' class='function' rel='rdfs-seeAlso'>sqlite_changes()</a> - Returns the number of rows that were changed by the most recent SQL statement</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_field_name" value="<div id='function.sqlite-field-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-field-name.php'>sqlite_field_name</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;fieldName</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;fieldName</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_field_name</span> -- <span class='refname'>SQLiteResult-&amp;gt;fieldName</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;fieldName</span> &amp;mdash; <span class='dc-title'>Returns the name of a particular field</span></p> </div> <a name='function.sqlite-field-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_field_name</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$field_index</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fieldName</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$field_index</tt></span> )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fieldName</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$field_index</tt></span> )</div> </div> <p class='para'> Given the ordinal column number, <i><tt class='parameter'>field_index</tt></i> , <b>sqlite_field_name()</b> returns the name of that field in the result set <i><tt class='parameter'>result</tt></i> . </p> </div> <a name='function.sqlite-field-name.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>field_index</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The ordinal column number in the result set. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-field-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of a field in an SQLite result set, given the ordinal column number; <b><tt class='constant'>FALSE</tt></b> on error. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_string" value="<div id='function.sqlite-fetch-string' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-string.php'>sqlite_fetch_string</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_string</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.sqlite-fetch-single.php' class='function'>sqlite_fetch_single()</a></span></p> </div> <a name='function.sqlite-fetch-string.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.sqlite-fetch-single.php' class='function'>sqlite_fetch_single()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_single" value="<div id='function.sqlite-fetch-single' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-single.php'>sqlite_fetch_single</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;fetchSingle</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;fetchSingle</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.1)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_single</span> -- <span class='refname'>SQLiteResult-&amp;gt;fetchSingle</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;fetchSingle</span> &amp;mdash; <span class='dc-title'>Fetches the first column of a result set as a string</span></p> </div> <a name='function.sqlite-fetch-single.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_fetch_single</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fetchSingle</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>fetchSingle</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> </div> <p class='para'> <b>sqlite_fetch_single()</b> is identical to <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a> except that it returns the value of the first column of the rowset. </p> <p class='para'> This is the most optimal way to retrieve data when you are only interested in the values from a single column of data. </p> </div> <a name='function.sqlite-fetch-single.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-fetch-single.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the first column value, as a string. </p> </div> <a name='function.sqlite-fetch-single.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>sqlite_fetch_single()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>if&amp;nbsp;(</span><span style='color: #0000BB'>$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0666</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqliteerror</span><span style='color: #007700'>))&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;id&amp;nbsp;FROM&amp;nbsp;sometable&amp;nbsp;WHERE&amp;nbsp;id&amp;nbsp;=&amp;nbsp;42'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$res&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>sqlite_num_rows</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$res</span><span style='color: #007700'>)&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>sqlite_fetch_single</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$res</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;42<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-fetch-single.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_array()</a> - Fetches the next row from a result set as an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_object" value="<div id='function.sqlite-fetch-object' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-object.php'>sqlite_fetch_object</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;fetchObject</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;fetchObject</h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_object</span> -- <span class='refname'>SQLiteResult-&amp;gt;fetchObject</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;fetchObject</span> &amp;mdash; <span class='dc-title'>Fetches the next row from a result set as an object</span></p> </div> <a name='function.sqlite-fetch-object.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>sqlite_fetch_object</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_params</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>fetchObject</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_params</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]]] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>fetchObject</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$ctor_params</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]]] )</div> </div> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function is currently not documented; only its argument list is available. </p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_column_types" value="<div id='function.sqlite-fetch-column-types' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-column-types.php'>sqlite_fetch_column_types</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;fetchColumnTypes</h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_column_types</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;fetchColumnTypes</span> &amp;mdash; <span class='dc-title'> Return an array of column types from a particular table </span></p> </div> <a name='function.sqlite-fetch-column-types.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_fetch_column_types</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$table_name</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> ] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fetchColumnTypes</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$table_name</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> ] )</div> </div> <p class='para'> <b>sqlite_fetch_column_types()</b> returns an array of column data types from the specified <i><tt class='parameter'>table_name</tt></i> table. </p> </div> <a name='function.sqlite-fetch-column-types.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>table_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The table name to query. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_ASSOC</tt></b> is the default for this function. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-fetch-column-types.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of column data types; <b><tt class='constant'>FALSE</tt></b> on error. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-fetch-column-types.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'>Added <i><tt class='parameter'>result_type</tt></i> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sqlite-fetch-column-types.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CREATE&amp;nbsp;TABLE&amp;nbsp;foo&amp;nbsp;(bar&amp;nbsp;varchar(10),&amp;nbsp;arf&amp;nbsp;text)'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$cols&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_fetch_column_types</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$cols&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$column&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Column:&amp;nbsp;</span><span style='color: #0000BB'>$column</span><span style='color: #DD0000'>&amp;nbsp;&amp;nbsp;Type:&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$db&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'CREATE&amp;nbsp;TABLE&amp;nbsp;foo&amp;nbsp;(bar&amp;nbsp;varchar(10),&amp;nbsp;arf&amp;nbsp;text)'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$cols&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$db</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchColumnTypes</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br /><br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$cols&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$column&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Column:&amp;nbsp;</span><span style='color: #0000BB'>$column</span><span style='color: #DD0000'>&amp;nbsp;&amp;nbsp;Type:&amp;nbsp;</span><span style='color: #0000BB'>$type</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Column: bar Type: VARCHAR Column: arf Type: TEXT </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_array" value="<div id='function.sqlite-fetch-array' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-array.php'>sqlite_fetch_array</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;fetch</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;fetch</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_array</span> -- <span class='refname'>SQLiteResult-&amp;gt;fetch</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;fetch</span> &amp;mdash; <span class='dc-title'>Fetches the next row from a result set as an array</span></p> </div> <a name='function.sqlite-fetch-array.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_fetch_array</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fetch</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fetch</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <p class='para'> Fetches the next row from the given <i><tt class='parameter'>result</tt></i> handle. If there are no more rows, returns <b><tt class='constant'>FALSE</tt></b>, otherwise returns an associative array representing the row data. </p> </div> <a name='function.sqlite-fetch-array.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-fetch-array.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the next row from a result set; <b><tt class='constant'>FALSE</tt></b> if the next position is beyond the final row. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-fetch-array.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>$entry&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_fetch_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;buffered&amp;nbsp;result&amp;nbsp;set<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>unbufferedQuery</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;unbuffered&amp;nbsp;result&amp;nbsp;set<br /><br /></span><span style='color: #007700'>while&amp;nbsp;(</span><span style='color: #0000BB'>$entry&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetch</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-fetch-array.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-array-query.php' class='function' rel='rdfs-seeAlso'>sqlite_array_query()</a> - Execute a query against a given database and returns an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-string.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_string()</a> - Alias of sqlite_fetch_single</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_fetch_all" value="<div id='function.sqlite-fetch-all' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-fetch-all.php'>sqlite_fetch_all</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;fetchAll</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;fetchAll</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_fetch_all</span> -- <span class='refname'>SQLiteResult-&amp;gt;fetchAll</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;fetchAll</span> &amp;mdash; <span class='dc-title'>Fetches all rows from a result set as an array of arrays</span></p> </div> <a name='function.sqlite-fetch-all.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_fetch_all</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fetchAll</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>fetchAll</b></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <p class='para'> <b>sqlite_fetch_all()</b> returns an array of the entire result set from the <i><tt class='parameter'>result</tt></i> resource. It is similar to calling <a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function'>sqlite_query()</a> (or <a href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php' class='function'>sqlite_unbuffered_query()</a>) and then <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a> for each row in the result set. </p> </div> <a name='function.sqlite-fetch-all.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-fetch-all.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the remaining rows in a result set. If called right after <a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function'>sqlite_query()</a>, it returns all rows. If called after <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a>, it returns the rest. If there are no rows in a result set, it returns an empty array. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-fetch-all.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_fetch_all</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;buffered&amp;nbsp;result&amp;nbsp;set<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>unbufferedQuery</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;unbuffered&amp;nbsp;result&amp;nbsp;set<br /><br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fetchAll</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-fetch-all.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_array()</a> - Fetches the next row from a result set as an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_factory" value="<div id='function.sqlite-factory' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-factory.php'>sqlite_factory</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>sqlite_factory</span> &amp;mdash; <span class='dc-title'>Opens a SQLite database and returns a SQLiteDatabase object</span></p> </div> <a name='function.sqlite-factory.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type SQLiteDatabase'>SQLiteDatabase</span></span> <span class='methodname'><b>sqlite_factory</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$mode</tt><span class='initializer'> = 0666</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_message</tt></span> ]] )</div> <p class='para rdfs-comment'> <b>sqlite_factory()</b> behaves similarly to <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> in that it opens an SQLite database or attempts to create it if it does not exist. However, a <a href='http://www.php.net/manual/en/ref.sqlite.php#sqlite.class.sqlitedatabase' class='link'>SQLiteDatabase</a> object is returned rather than a resource. Please see the <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> reference page for further usage and caveats. </p> </div> <a name='function.sqlite-factory.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename of the SQLite database. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value <i>0666</i> and this is the recommended value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_message</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-factory.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a SQLiteDatabase object on success, <b><tt class='constant'>NULL</tt></b> on error. </p> </div> <a name='function.sqlite-factory.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sqlite_factory()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_factory</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;user_id,&amp;nbsp;username&amp;nbsp;FROM&amp;nbsp;users'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;functionally&amp;nbsp;equivalent&amp;nbsp;to:&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;user_id,&amp;nbsp;username&amp;nbsp;FROM&amp;nbsp;users'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-factory.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function' rel='rdfs-seeAlso'>sqlite_open()</a> - Opens a SQLite database and create the database if it does not exist</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-popen.php' class='function' rel='rdfs-seeAlso'>sqlite_popen()</a> - Opens a persistent handle to an SQLite database and create the database if it does not exist</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_exec" value="<div id='function.sqlite-exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-exec.php'>sqlite_exec</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;exec</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.3)</p><p class='refpurpose'><span class='refname'>sqlite_exec</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;exec</span> &amp;mdash; <span class='dc-title'>Executes a result-less query against a given database</span></p> </div> <a name='function.sqlite-exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_exec</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sqlite_exec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>queryExec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter reference'>&amp;amp;$error_msg</tt></span> ] )</div> </div> <p class='para'> Executes an SQL statement given by the <i><tt class='parameter'>query</tt></i> against a given database handle (specified by the <i><tt class='parameter'>dbhandle</tt></i> parameter). </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> SQLite <em class='emphasis'>will</em> execute multiple queries separated by semicolons, so you can use it to execute a batch of SQL that you have loaded from a file or have embedded in a script. </p> </div> </div> <a name='function.sqlite-exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>query</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The query to be executed. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='link'>properly escaped</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_msg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can&amp;#039;t be fetched using the <a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function'>sqlite_last_error()</a> function. </p> </dd> </dl> <p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Two alternative syntaxes are supported for compatibility with other database extensions (such as MySQL). The preferred form is the first, where the <i><tt class='parameter'>dbhandle</tt></i> parameter is the first parameter to the function.</span></p></blockquote> </div> <a name='function.sqlite-exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function will return a boolean result; <b><tt class='constant'>TRUE</tt></b> for success or <b><tt class='constant'>FALSE</tt></b> for failure. If you need to run a query that returns rows, see <a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function'>sqlite_query()</a>. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-exec.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>error_msg</tt></i> parameter </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sqlite-exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_exec</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;users&amp;nbsp;SET&amp;nbsp;email='jDoe@example.com'&amp;nbsp;WHERE&amp;nbsp;username='jDoe''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$error</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(</span><span style='color: #DD0000'>'Error&amp;nbsp;in&amp;nbsp;query:&amp;nbsp;'</span><span style='color: #0000BB'>$error</span><span style='color: #DD0000'>''</span><span style='color: #007700'>);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;modified:&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>sqlite_changes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>queryExec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;users&amp;nbsp;SET&amp;nbsp;email='jDoe@example.com'&amp;nbsp;WHERE&amp;nbsp;username='jDoe''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$error</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(</span><span style='color: #DD0000'>'Error&amp;nbsp;in&amp;nbsp;query:&amp;nbsp;'</span><span style='color: #0000BB'>$error</span><span style='color: #DD0000'>''</span><span style='color: #007700'>);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;modified:&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>changes</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function' rel='rdfs-seeAlso'>sqlite_query()</a> - Executes a query against a given database and returns a result handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php' class='function' rel='rdfs-seeAlso'>sqlite_unbuffered_query()</a> - Execute a query that does not prefetch and buffer all data</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-array-query.php' class='function' rel='rdfs-seeAlso'>sqlite_array_query()</a> - Execute a query against a given database and returns an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_escape_string" value="<div id='function.sqlite-escape-string' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-escape-string.php'>sqlite_escape_string</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_escape_string</span> &amp;mdash; <span class='dc-title'>Escapes a string for use as a query parameter</span></p> </div> <a name='function.sqlite-escape-string.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_escape_string</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$item</tt></span> )</div> <p class='para rdfs-comment'> <b>sqlite_escape_string()</b> will correctly quote the string specified by <i><tt class='parameter'>item</tt></i> for use in an SQLite SQL statement. This includes doubling up single-quote characters (<i>&amp;#039;</i>) and checking for binary-unsafe characters in the query string. </p> <p class='para'> Although the encoding makes it safe to insert the data, it will render simple text comparisons and <i>LIKE</i> clauses in your queries unusable for the columns that contain the binary data. In practice, this shouldn&amp;#039;t be a problem, as your schema should be such that you don&amp;#039;t use such things on binary columns (in fact, it might be better to store binary data using other means, such as in files). </p> </div> <a name='function.sqlite-escape-string.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>item</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> being quoted. </p> <p class='para'> If the <i><tt class='parameter'>item</tt></i> contains a <i>NUL</i> character, or if it begins with a character whose ordinal value is <i>0x01</i>, PHP will apply a binary encoding scheme so that you can safely store and retrieve binary data. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-escape-string.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an escaped <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> for use in an SQLite SQL statement. </p> </div> <a name='function.sqlite-escape-string.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Do not use this function to encode the return values from UDF&amp;#039;s created using <a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function'>sqlite_create_function()</a> or <a href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php' class='function'>sqlite_create_aggregate()</a> - use <a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function'>sqlite_udf_encode_binary()</a> instead. </span> </p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> <a href='http://www.php.net/manual/en/function.addslashes.php' class='function'>addslashes()</a> should <em class='emphasis'>NOT</em> be used to quote your strings for SQLite queries; it will lead to strange results when retrieving your data. </p> </div> </div> <a name='function.sqlite-escape-string.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function' rel='rdfs-seeAlso'>sqlite_udf_encode_binary()</a> - Encode binary data before returning it from an UDF</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_error_string" value="<div id='function.sqlite-error-string' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-error-string.php'>sqlite_error_string</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_error_string</span> &amp;mdash; <span class='dc-title'>Returns the textual description of an error code</span></p> </div> <a name='function.sqlite-error-string.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sqlite_error_string</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$error_code</tt></span> )</div> <p class='para rdfs-comment'> Returns a human readable description of the <i><tt class='parameter'>error_code</tt></i> returned from <a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function'>sqlite_last_error()</a>. </p> </div> <a name='function.sqlite-error-string.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_code</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The error code being used, which might be passed in from <a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function'>sqlite_last_error()</a>. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-error-string.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a human readable description of the <i><tt class='parameter'>error_code</tt></i> , as a <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a>. </p> </div> <a name='function.sqlite-error-string.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-last-error.php' class='function' rel='rdfs-seeAlso'>sqlite_last_error()</a> - Returns the error code of the last error for a database</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_current" value="<div id='function.sqlite-current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-current.php'>sqlite_current</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;current</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;current</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_current</span> -- <span class='refname'>SQLiteResult-&amp;gt;current</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;current</span> &amp;mdash; <span class='dc-title'>Fetches the current row from a result set as an array</span></p> </div> <a name='function.sqlite-current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_current</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.current.php' class='function'>current</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/function.current.php' class='function'>current</a></span> ([ <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt><span class='initializer'> = SQLITE_BOTH</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ]] )</div> </div> <p class='para'> <b>sqlite_current()</b> is identical to <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a> except that it does not advance to the next row prior to returning the data; it returns the data from the current position only. </p> </div> <a name='function.sqlite-current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the current row from a result set; <b><tt class='constant'>FALSE</tt></b> if the current position is beyond the final row. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-seek.php' class='function' rel='rdfs-seeAlso'>sqlite_seek()</a> - Seek to a particular row number of a buffered result set</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-next.php' class='function' rel='rdfs-seeAlso'>sqlite_next()</a> - Seek to the next row number</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_array()</a> - Fetches the next row from a result set as an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_create_function" value="<div id='function.sqlite-create-function' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-create-function.php'>sqlite_create_function</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;createFunction</h1> <p class='verinfo'>(PHP 5, sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_create_function</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;createFunction</span> &amp;mdash; <span class='dc-title'> Registers a &amp;quot;regular&amp;quot; User Defined Function for use in SQL statements </span></p> </div> <a name='function.sqlite-create-function.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>sqlite_create_function</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$callback</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num_args</tt><span class='initializer'> = -1</span></span> ] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><b>createFunction</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$callback</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num_args</tt><span class='initializer'> = -1</span></span> ] )</div> </div> <p class='para'> <b>sqlite_create_function()</b> allows you to register a PHP function with SQLite as an <acronym title='User Defined Functions'>UDF</acronym> (User Defined Function), so that it can be called from within your SQL statements. </p> <p class='para'> The UDF can be used in any SQL statement that can call functions, such as SELECT and UPDATE statements and also in triggers. </p> </div> <a name='function.sqlite-create-function.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the function used in SQL statements. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>callback</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Callback function to handle the defined SQL function. </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Callback functions should return a type understood by SQLite (i.e. <a href='http://www.php.net/manual/en/language.types.intro.php' class='link'>scalar type</a>). </span> </p></blockquote> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>num_args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Hint to the SQLite parser if the callback function accepts a predetermined number of arguments. </p> </dd> </dl> <p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Two alternative syntaxes are supported for compatibility with other database extensions (such as MySQL). The preferred form is the first, where the <i><tt class='parameter'>dbhandle</tt></i> parameter is the first parameter to the function.</span></p></blockquote> </div> <a name='function.sqlite-create-function.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.sqlite-create-function.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sqlite_create_function()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>md5_and_reverse</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>strrev</span><span style='color: #007700'>(</span><span style='color: #0000BB'>md5</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>));<br />}<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0666</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqliteerror</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_create_function</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'md5rev'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'md5_and_reverse'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sql&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;md5rev(filename)&amp;nbsp;FROM&amp;nbsp;files'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$rows&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_array_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sql</span><span style='color: #007700'>);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Error&amp;nbsp;opening&amp;nbsp;sqlite&amp;nbsp;db:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$sqliteerror</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> In this example, we have a function that calculates the md5 sum of a string, and then reverses it. When the SQL statement executes, it returns the value of the filename transformed by our function. The data returned in <i><tt class='parameter'>$rows</tt></i> contains the processed result. </p> <p class='para'> The beauty of this technique is that you do not need to process the result using a <a href='http://www.php.net/manual/en/control-structures.foreach.php' class='link'>foreach</a> loop after you have queried for the data. </p> <p class='para'> PHP registers a special function named <i>php</i> when the database is first opened. The php function can be used to call any PHP function without having to register it first. </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Example of using the PHP function</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$rows&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_array_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;php('md5',&amp;nbsp;filename)&amp;nbsp;from&amp;nbsp;files'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This example will call the <a href='http://www.php.net/manual/en/function.md5.php' class='function'>md5()</a> on each <i>filename</i> column in the database and return the result into <i><tt class='parameter'>$rows</tt></i> </p></div> </div><p> </p> <blockquote><p><b class='note'>Note</b>: For performance reasons, PHP will not automatically encode/decode binary data passed to and from your UDF&amp;#039;s. You need to manually encode/decode the parameters and return values if you need to process binary data in this way. Take a look at <a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function'>sqlite_udf_encode_binary()</a> and <a href='http://www.php.net/manual/en/function.sqlite-udf-decode-binary.php' class='function'>sqlite_udf_decode_binary()</a> for more details. <br /> </p></blockquote> <div class='tip'><b class='tip'>Tip</b> <p class='para'> It is not recommended to use UDF&amp;#039;s to handle processing of binary data, unless high performance is not a key requirement of your application. </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='para'> You can use <b>sqlite_create_function()</b> and <a href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php' class='function'>sqlite_create_aggregate()</a> to override SQLite native SQL functions. </p> </div> </div> <a name='function.sqlite-create-function.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php' class='function' rel='rdfs-seeAlso'>sqlite_create_aggregate()</a> - Register an aggregating UDF for use in SQL statements</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_create_aggregate" value="<div id='function.sqlite-create-aggregate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-create-aggregate.php'>sqlite_create_aggregate</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;createAggregate</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_create_aggregate</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;createAggregate</span> &amp;mdash; <span class='dc-title'>Register an aggregating UDF for use in SQL statements</span></p> </div> <a name='function.sqlite-create-aggregate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>sqlite_create_aggregate</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$step_func</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$finalize_func</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num_args</tt><span class='initializer'> = -1</span></span> ] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><b>createAggregate</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$function_name</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$step_func</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$finalize_func</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$num_args</tt><span class='initializer'> = -1</span></span> ] )</div> </div> <p class='para'> <b>sqlite_create_aggregate()</b> is similar to <a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function'>sqlite_create_function()</a> except that it registers functions that can be used to calculate a result aggregated across all the rows of a query. </p> <p class='para'> The key difference between this function and <a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function'>sqlite_create_function()</a> is that two functions are required to manage the aggregate; <i><tt class='parameter'>step_func</tt></i> is called for each row of the result set. Your PHP function should accumulate the result and store it into the aggregation context. Once all the rows have been processed, <i><tt class='parameter'>finalize_func</tt></i> will be called and it should then take the data from the aggregation context and return the result. Callback functions should return a type understood by SQLite (i.e. <a href='http://www.php.net/manual/en/language.types.intro.php' class='link'>scalar type</a>). </p> </div> <a name='function.sqlite-create-aggregate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>function_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the function used in SQL statements. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>step_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Callback function called for each row of the result set. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>finalize_func</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Callback function to aggregate the &amp;quot;stepped&amp;quot; data from each row. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>num_args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Hint to the SQLite parser if the callback function accepts a predetermined number of arguments. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-create-aggregate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.sqlite-create-aggregate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 max_length aggregation function example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'one'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'two'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'three'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'four'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'five'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'six'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'seven'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'eight'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'nine'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'ten'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;);<br /></span><span style='color: #0000BB'>$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':memory:'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'CREATE&amp;nbsp;TABLE&amp;nbsp;strings(a)'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_escape_string</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;strings&amp;nbsp;VALUES&amp;nbsp;('</span><span style='color: #0000BB'>$str</span><span style='color: #DD0000'>')'</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>max_len_step</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>)&amp;nbsp;&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$context&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>strlen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>max_len_finalize</span><span style='color: #007700'>(&amp;amp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>)&amp;nbsp;<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$context</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>sqlite_create_aggregate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len_step'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'max_len_finalize'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sqlite_array_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;max_len(a)&amp;nbsp;from&amp;nbsp;strings'</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> In this example, we are creating an aggregating function that will calculate the length of the longest string in one of the columns of the table. For each row, the <i>max_len_step</i> function is called and passed a <i><tt class='parameter'>context</tt></i> parameter. The context parameter is just like any other PHP variable and be set to hold an array or even an object value. In this example, we are simply using it to hold the maximum length we have seen so far; if the <i><tt class='parameter'>string</tt></i> has a length longer than the current maximum, we update the context to hold this new maximum length. </p> <p class='para'> After all of the rows have been processed, SQLite calls the <i>max_len_finalize</i> function to determine the aggregate result. Here, we could perform some kind of calculation based on the data found in the <i><tt class='parameter'>context</tt></i> . In our simple example though, we have been calculating the result as the query progressed, so we simply need to return the context value. </p> <blockquote><p><b class='note'>Note</b>: The example above will not work correctly if the column contains binary data. Take a look at the manual page for <a href='http://www.php.net/manual/en/function.sqlite-udf-decode-binary.php' class='function'>sqlite_udf_decode_binary()</a> for an explanation of why this is so, and an example of how to make it respect the binary encoding. <br /> </p></blockquote> <div class='tip'><b class='tip'>Tip</b> <p class='para'> It is NOT recommended for you to store a copy of the values in the context and then process them at the end, as you would cause SQLite to use a lot of memory to process the query - just think of how much memory you would need if a million rows were stored in memory, each containing a string 32 bytes in length. </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='para'> You can use <a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function'>sqlite_create_function()</a> and <b>sqlite_create_aggregate()</b> to override SQLite native SQL functions. </p> </div> </div> <a name='function.sqlite-create-aggregate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-create-function.php' class='function' rel='rdfs-seeAlso'>sqlite_create_function()</a> - Registers a 'regular' User Defined Function for use in SQL statements</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-udf-encode-binary.php' class='function' rel='rdfs-seeAlso'>sqlite_udf_encode_binary()</a> - Encode binary data before returning it from an UDF</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-udf-decode-binary.php' class='function' rel='rdfs-seeAlso'>sqlite_udf_decode_binary()</a> - Decode binary data passed as parameters to an UDF</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_column" value="<div id='function.sqlite-column' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-column.php'>sqlite_column</a></h1> <h1 class='refname'>SQLiteResult-&amp;gt;column</h1> <h1 class='refname'>SQLiteUnbuffered-&amp;gt;column</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_column</span> -- <span class='refname'>SQLiteResult-&amp;gt;column</span> -- <span class='refname'>SQLiteUnbuffered-&amp;gt;column</span> &amp;mdash; <span class='dc-title'>Fetches a column from the current row of a result set</span></p> </div> <a name='function.sqlite-column.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>sqlite_column</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$result</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index_or_name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteResult</b></div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><b>column</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index_or_name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> </div> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteUnbuffered</b></div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><b>column</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$index_or_name</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt><span class='initializer'> = true</span></span> ] )</div> </div> <p class='para'> Fetches the value of a column named <i><tt class='parameter'>index_or_name</tt></i> (if it is a string), or of the ordinal column numbered <i><tt class='parameter'>index_or_name</tt></i> (if it is an integer) from the current row of the query result handle <i><tt class='parameter'>result</tt></i> . </p> </div> <a name='function.sqlite-column.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite result resource. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>index_or_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The column index or name to fetch. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-column.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the column value. </p> </div> <a name='function.sqlite-column.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Use this function when you are iterating a large result set with many columns, or with columns that contain large amounts of data. <br /> </p></blockquote> </div> <a name='function.sqlite-column.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-string.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_string()</a> - Alias of sqlite_fetch_single</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_close" value="<div id='function.sqlite-close' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-close.php'>sqlite_close</a></h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_close</span> &amp;mdash; <span class='dc-title'>Closes an open SQLite database</span></p> </div> <a name='function.sqlite-close.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>sqlite_close</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> )</div> <p class='para rdfs-comment'> Closes the given <i><tt class='parameter'>database</tt></i> handle. If the database was persistent, it will be closed and removed from the persistent list. </p> </div> <a name='function.sqlite-close.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-close.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.sqlite-close.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sqlite_close()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sqlite_close</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-close.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function' rel='rdfs-seeAlso'>sqlite_open()</a> - Opens a SQLite database and create the database if it does not exist</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-popen.php' class='function' rel='rdfs-seeAlso'>sqlite_popen()</a> - Opens a persistent handle to an SQLite database and create the database if it does not exist</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_changes" value="<div id='function.sqlite-changes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-changes.php'>sqlite_changes</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;changes</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_changes</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;changes</span> &amp;mdash; <span class='dc-title'> Returns the number of rows that were changed by the most recent SQL statement </span></p> </div> <a name='function.sqlite-changes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sqlite_changes</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>changes</b></span> ( <span class='methodparam'>void</span> )</div> </div> <p class='para'> Returns the numbers of rows that were changed by the most recent SQL statement executed against the <i><tt class='parameter'>dbhandle</tt></i> database handle. </p> </div> <a name='function.sqlite-changes.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> </dl> <p> </p> </div> <a name='function.sqlite-changes.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of changed rows. </p> </div> <a name='function.sqlite-changes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;users&amp;nbsp;SET&amp;nbsp;email='jDoe@example.com'&amp;nbsp;WHERE&amp;nbsp;username='jDoe''</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(</span><span style='color: #DD0000'>'Error&amp;nbsp;in&amp;nbsp;query.'</span><span style='color: #007700'>);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;modified:&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>sqlite_changes</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object oriented style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'mysqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$query&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>query</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;users&amp;nbsp;SET&amp;nbsp;email='jDoe@example.com'&amp;nbsp;WHERE&amp;nbsp;username='jDoe''</span><span style='color: #007700'>);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>$query</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(</span><span style='color: #DD0000'>'Error&amp;nbsp;in&amp;nbsp;query.'</span><span style='color: #007700'>);<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Number&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;modified:&amp;nbsp;'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>changes</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-changes.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function' rel='rdfs-seeAlso'>sqlite_open()</a> - Opens a SQLite database and create the database if it does not exist</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_busy_timeout" value="<div id='function.sqlite-busy-timeout' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-busy-timeout.php'>sqlite_busy_timeout</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;busyTimeout</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_busy_timeout</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;busyTimeout</span> &amp;mdash; <span class='dc-title'>Set busy timeout duration, or disable busy handlers</span></p> </div> <a name='function.sqlite-busy-timeout.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>sqlite_busy_timeout</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$milliseconds</tt></span> )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><b>busyTimeout</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$milliseconds</tt></span> )</div> </div> <p class='para'> Set the maximum time, in milliseconds, that SQLite will wait for a <i><tt class='parameter'>dbhandle</tt></i> to become ready for use. </p> </div> <a name='function.sqlite-busy-timeout.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>milliseconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The number of milliseconds. When set to <i>0</i>, busy handlers will be disabled and SQLite will return immediately with a <i>SQLITE_BUSY</i> status code if another process/thread has the database locked for an update. </p> <p class='para'> PHP sets the default busy timeout to be 60 seconds when the database is opened. </p> <blockquote><p><b class='note'>Note</b>: There are one thousand (1000) milliseconds in one second. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.sqlite-busy-timeout.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.sqlite-busy-timeout.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sqlite_busy_timeout</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>10000</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;timeout&amp;nbsp;to&amp;nbsp;10&amp;nbsp;seconds<br /></span><span style='color: #0000BB'>sqlite_busy_timeout</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;disable&amp;nbsp;busy&amp;nbsp;handler<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object oriented style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>busyTimeout</span><span style='color: #007700'>(</span><span style='color: #0000BB'>10000</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;10&amp;nbsp;seconds<br /></span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>busyTimeout</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;disable<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-busy-timeout.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function' rel='rdfs-seeAlso'>sqlite_open()</a> - Opens a SQLite database and create the database if it does not exist</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sqlite_array_query" value="<div id='function.sqlite-array-query' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sqlite-array-query.php'>sqlite_array_query</a></h1> <h1 class='refname'>SQLiteDatabase-&amp;gt;arrayQuery</h1> <p class='verinfo'>(PHP 5, PECL sqlite &amp;gt;= 1.0.0)</p><p class='refpurpose'><span class='refname'>sqlite_array_query</span> -- <span class='refname'>SQLiteDatabase-&amp;gt;arrayQuery</span> &amp;mdash; <span class='dc-title'>Execute a query against a given database and returns an array</span></p> </div> <a name='function.sqlite-array-query.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_array_query</b></span> ( <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt></span> ]] )</div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>sqlite_array_query</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> , <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$dbhandle</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt></span> ]] )</div> <p class='para rdfs-comment'>Object oriented style (method):</p> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SQLiteDatabase</b></div> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>arrayQuery</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$query</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$result_type</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$decode_binary</tt></span> ]] )</div> </div> <p class='para'> <b>sqlite_array_query()</b> executes the given query and returns an array of the entire result set. It is similar to calling <a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function'>sqlite_query()</a> and then <a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function'>sqlite_fetch_array()</a> for each row in the result set. <b>sqlite_array_query()</b> is significantly faster than the aforementioned. </p> <div class='tip'><b class='tip'>Tip</b> <p class='para'> <b>sqlite_array_query()</b> is best suited to queries returning 45 rows or less. If you have more data than that, it is recommended that you write your scripts to use <a href='http://www.php.net/manual/en/function.sqlite-unbuffered-query.php' class='function'>sqlite_unbuffered_query()</a> instead for more optimal performance. </p> </div> </div> <a name='function.sqlite-array-query.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>query</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The query to be executed. </p> <p class='para'> Data inside the query should be <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='link'>properly escaped</a>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>dbhandle</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The SQLite Database resource; returned from <a href='http://www.php.net/manual/en/function.sqlite-open.php' class='function'>sqlite_open()</a> when used procedurally. This parameter is not required when using the object-oriented method. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>result_type</tt></i> </span> </dt><dd class='listitem'> <p class='para'>The optional <i><tt class='parameter'>result_type</tt></i> parameter accepts a constant and determines how the returned array will be indexed. Using <b><tt class='constant'>SQLITE_ASSOC</tt></b> will return only associative indices (named fields) while <b><tt class='constant'>SQLITE_NUM</tt></b> will return only numerical indices (ordinal field numbers). <b><tt class='constant'>SQLITE_BOTH</tt></b> will return both associative and numerical indices. <b><tt class='constant'>SQLITE_BOTH</tt></b> is the default for this function.</p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>decode_binary</tt></i> </span> </dt><dd class='listitem'> <p class='para'>When the <i><tt class='parameter'>decode_binary</tt></i> parameter is set to <b><tt class='constant'>TRUE</tt></b> (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the <a href='http://www.php.net/manual/en/function.sqlite-escape-string.php' class='function'>sqlite_escape_string()</a>. You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.</p> </dd> </dl> <p> </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>Two alternative syntaxes are supported for compatibility with other database extensions (such as MySQL). The preferred form is the first, where the <i><tt class='parameter'>dbhandle</tt></i> parameter is the first parameter to the function.</span></p></blockquote> </div> <a name='function.sqlite-array-query.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of the entire result set; <b><tt class='constant'>FALSE</tt></b> otherwise. </p> <p class='para'>The column names returned by <b><tt class='constant'>SQLITE_ASSOC</tt></b> and <b><tt class='constant'>SQLITE_BOTH</tt></b> will be case-folded according to the value of the <a href='http://www.php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case' class='link'>sqlite.assoc_case</a> configuration option.</p> </div> <a name='function.sqlite-array-query.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Procedural style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_open</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sqlite_array_query</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Object-oriented style</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dbhandle&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SQLiteDatabase</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sqlitedb'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$dbhandle</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>arrayQuery</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'SELECT&amp;nbsp;name,&amp;nbsp;email&amp;nbsp;FROM&amp;nbsp;users&amp;nbsp;LIMIT&amp;nbsp;25'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>SQLITE_ASSOC</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$result&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Name:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'name'</span><span style='color: #007700'>]&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;E-mail:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$entry</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'email'</span><span style='color: #007700'>];<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sqlite-array-query.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-query.php' class='function' rel='rdfs-seeAlso'>sqlite_query()</a> - Executes a query against a given database and returns a result handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-array.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_array()</a> - Fetches the next row from a result set as an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.sqlite-fetch-string.php' class='function' rel='rdfs-seeAlso'>sqlite_fetch_string()</a> - Alias of sqlite_fetch_single</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sprintf" value="<div id='function.sprintf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sprintf.php'>sprintf</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sprintf</span> &amp;mdash; <span class='dc-title'>Return a formatted string</span></p> </div> <a name='function.sprintf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sprintf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$args</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ]] )</div> <p class='para rdfs-comment'> Returns a string produced according to the formatting string <i><tt class='parameter'>format</tt></i> . </p> </div> <a name='function.sprintf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The format string is composed of zero or more directives: ordinary characters (excluding <i>%</i>) that are copied directly to the result, and <em class='emphasis'>conversion specifications</em>, each of which results in fetching its own parameter. This applies to both <b>sprintf()</b> and <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a>. </p> <p class='para'> Each conversion specification consists of a percent sign (<i>%</i>), followed by one or more of these elements, in order: </p><ol type='1'> <li class='listitem'> <span class='simpara'> An optional <em class='emphasis'>sign specifier</em> that forces a sign (- or +) to be used on a number. By default, only the - sign is used on a number if it&amp;#039;s negative. This specifier forces positive numbers to have the + sign attached as well, and was added in PHP 4.3.0. </span> </li> <li class='listitem'> <span class='simpara'> An optional <em class='emphasis'>padding specifier</em> that says what character will be used for padding the results to the right string size. This may be a space character or a <i>0</i> (zero character). The default is to pad with spaces. An alternate padding character can be specified by prefixing it with a single quote (<i>&amp;#039;</i>). See the examples below. </span> </li> <li class='listitem'> <span class='simpara'> An optional <em class='emphasis'>alignment specifier</em> that says if the result should be left-justified or right-justified. The default is right-justified; a <i>-</i> character here will make it left-justified. </span> </li> <li class='listitem'> <span class='simpara'> An optional number, a <em class='emphasis'>width specifier</em> that says how many characters (minimum) this conversion should result in. </span> </li> <li class='listitem'> <span class='simpara'> An optional <em class='emphasis'>precision specifier</em> in the form of a period (`.&amp;#039;) followed by an optional decimal digit string that says how many decimal digits should be displayed for floating-point numbers. When using this specifier on a string, it acts as a cutoff point, setting a maximum character limit to the string. </span> </li> <li class='listitem'> <p class='para'> A <em class='emphasis'>type specifier</em> that says what type the argument data should be treated as. Possible types: </p><ul class='simplelist'> <li class='member'> <i>%</i> - a literal percent character. No argument is required. </li> <li class='member'> <i>b</i> - the argument is treated as an integer, and presented as a binary number. </li> <li class='member'> <i>c</i> - the argument is treated as an integer, and presented as the character with that ASCII value. </li> <li class='member'> <i>d</i> - the argument is treated as an integer, and presented as a (signed) decimal number. </li> <li class='member'> <i>e</i> - the argument is treated as scientific notation (e.g. 1.2e+2). The precision specifier stands for the number of digits after the decimal point since PHP 5.2.1. In earlier versions, it was taken as number of significant digits (one less). </li> <li class='member'> <i>u</i> - the argument is treated as an integer, and presented as an unsigned decimal number. </li> <li class='member'> <i>f</i> - the argument is treated as a float, and presented as a floating-point number (locale aware). </li> <li class='member'> <i>F</i> - the argument is treated as a float, and presented as a floating-point number (non-locale aware). Available since PHP 4.3.10 and PHP 5.0.3. </li> <li class='member'> <i>o</i> - the argument is treated as an integer, and presented as an octal number. </li> <li class='member'> <i>s</i> - the argument is treated as and presented as a string. </li> <li class='member'> <i>x</i> - the argument is treated as an integer and presented as a hexadecimal number (with lowercase letters). </li> <li class='member'> <i>X</i> - the argument is treated as an integer and presented as a hexadecimal number (with uppercase letters). </li> </ul><p> </p> </li> </ol><p> </p> <p class='para'> The format string supports argument numbering/swapping. Here is an example: </p><div class='example'> <p><b>Example #1 Argument swapping</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'There&amp;nbsp;are&amp;nbsp;%d&amp;nbsp;monkeys&amp;nbsp;in&amp;nbsp;the&amp;nbsp;%s'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$location</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> This might output, &amp;quot;There are 5 monkeys in the tree&amp;quot;. But imagine we are creating a format string in a separate file, commonly because we would like to internationalize it and we rewrite it as: </p><div class='example'> <p><b>Example #2 Argument swapping</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;%s&amp;nbsp;contains&amp;nbsp;%d&amp;nbsp;monkeys'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$location</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> We now have a problem. The order of the placeholders in the format string does not match the order of the arguments in the code. We would like to leave the code as is and simply indicate in the format string which arguments the placeholders refer to. We would write the format string like this instead: </p><div class='example'> <p><b>Example #3 Argument swapping</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;%2$s&amp;nbsp;contains&amp;nbsp;%1$d&amp;nbsp;monkeys'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$location</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> An added benefit here is that you can repeat the placeholders without adding more arguments in the code. For example: </p><div class='example'> <p><b>Example #4 Argument swapping</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$format&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;%2$s&amp;nbsp;contains&amp;nbsp;%1$d&amp;nbsp;monkeys.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;That\'s&amp;nbsp;a&amp;nbsp;nice&amp;nbsp;%2$s&amp;nbsp;full&amp;nbsp;of&amp;nbsp;%1$d&amp;nbsp;monkeys.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$format</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$num</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$location</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>args</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.sprintf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string produced according to the formatting string <i><tt class='parameter'>format</tt></i> . </p> </div> <a name='function.sprintf.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.6</td> <td align='left'> Support for argument numbering/swapping was added </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sprintf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <div class='example'> <p><b>Example #5 <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a>: various examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$n&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>43951789</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$u&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;-</span><span style='color: #0000BB'>43951789</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>65</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;ASCII&amp;nbsp;65&amp;nbsp;is&amp;nbsp;'A'<br /><br />//&amp;nbsp;notice&amp;nbsp;the&amp;nbsp;double&amp;nbsp;%%,&amp;nbsp;this&amp;nbsp;prints&amp;nbsp;a&amp;nbsp;literal&amp;nbsp;'%'&amp;nbsp;character<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%b&amp;nbsp;=&amp;nbsp;'%b'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;binary&amp;nbsp;representation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%c&amp;nbsp;=&amp;nbsp;'%c'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;print&amp;nbsp;the&amp;nbsp;ascii&amp;nbsp;character,&amp;nbsp;same&amp;nbsp;as&amp;nbsp;chr()&amp;nbsp;function<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%d&amp;nbsp;=&amp;nbsp;'%d'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;standard&amp;nbsp;integer&amp;nbsp;representation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%e&amp;nbsp;=&amp;nbsp;'%e'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;scientific&amp;nbsp;notation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%u&amp;nbsp;=&amp;nbsp;'%u'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;unsigned&amp;nbsp;integer&amp;nbsp;representation&amp;nbsp;of&amp;nbsp;a&amp;nbsp;positive&amp;nbsp;integer<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%u&amp;nbsp;=&amp;nbsp;'%u'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$u</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;unsigned&amp;nbsp;integer&amp;nbsp;representation&amp;nbsp;of&amp;nbsp;a&amp;nbsp;negative&amp;nbsp;integer<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%f&amp;nbsp;=&amp;nbsp;'%f'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;floating&amp;nbsp;point&amp;nbsp;representation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%o&amp;nbsp;=&amp;nbsp;'%o'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;octal&amp;nbsp;representation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%s&amp;nbsp;=&amp;nbsp;'%s'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;string&amp;nbsp;representation<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%x&amp;nbsp;=&amp;nbsp;'%x'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;hexadecimal&amp;nbsp;representation&amp;nbsp;(lower-case)<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%X&amp;nbsp;=&amp;nbsp;'%X'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;hexadecimal&amp;nbsp;representation&amp;nbsp;(upper-case)<br /><br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%+d&amp;nbsp;=&amp;nbsp;'%+d'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$n</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;sign&amp;nbsp;specifier&amp;nbsp;on&amp;nbsp;a&amp;nbsp;positive&amp;nbsp;integer<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%%+d&amp;nbsp;=&amp;nbsp;'%+d'\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$u</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;sign&amp;nbsp;specifier&amp;nbsp;on&amp;nbsp;a&amp;nbsp;negative&amp;nbsp;integer<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> %b = &amp;#039;10100111101010011010101101&amp;#039; %c = &amp;#039;A&amp;#039; %d = &amp;#039;43951789&amp;#039; %e = &amp;#039;4.39518e+7&amp;#039; %u = &amp;#039;43951789&amp;#039; %u = &amp;#039;4251015507&amp;#039; %f = &amp;#039;43951789.000000&amp;#039; %o = &amp;#039;247523255&amp;#039; %s = &amp;#039;43951789&amp;#039; %x = &amp;#039;29ea6ad&amp;#039; %X = &amp;#039;29EA6AD&amp;#039; %+d = &amp;#039;+43951789&amp;#039; %+d = &amp;#039;-43951789&amp;#039; </pre></div> </div> </div> <div class='example'> <p><b>Example #6 <a href='http://www.php.net/manual/en/function.printf.php' class='function'>printf()</a>: string specifiers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'monkey'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$t&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'many&amp;nbsp;monkeys'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%s]\n'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;standard&amp;nbsp;string&amp;nbsp;output<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%10s]\n'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;right-justification&amp;nbsp;with&amp;nbsp;spaces<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%-10s]\n'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;left-justification&amp;nbsp;with&amp;nbsp;spaces<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%010s]\n'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;zero-padding&amp;nbsp;works&amp;nbsp;on&amp;nbsp;strings&amp;nbsp;too<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%'#10s]\n'</span><span style='color: #007700'>,&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;use&amp;nbsp;the&amp;nbsp;custom&amp;nbsp;padding&amp;nbsp;character&amp;nbsp;'#'<br /></span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[%10.10s]\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$t</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;left-justification&amp;nbsp;but&amp;nbsp;with&amp;nbsp;a&amp;nbsp;cutoff&amp;nbsp;of&amp;nbsp;10&amp;nbsp;characters<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> [monkey] [ monkey] [monkey ] [0000monkey] [####monkey] [many monke] </pre></div> </div> </div> <div class='example'> <p><b>Example #7 <b>sprintf()</b>: zero-padded integers</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$isodate&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%04d-%02d-%02d'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'> <p><b>Example #8 <b>sprintf()</b>: formatting currency</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$money1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>68.75</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$money2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>54.35</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$money&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$money1&amp;nbsp;</span><span style='color: #007700'>+&amp;nbsp;</span><span style='color: #0000BB'>$money2</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>//&amp;nbsp;echo&amp;nbsp;$money&amp;nbsp;will&amp;nbsp;output&amp;nbsp;'123.1';<br /></span><span style='color: #0000BB'>$formatted&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%01.2f'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$money</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;echo&amp;nbsp;$formatted&amp;nbsp;will&amp;nbsp;output&amp;nbsp;'123.10'<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> <div class='example'> <p><b>Example #9 <b>sprintf()</b>: scientific notation</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$number&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>362525200</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%.3e'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;outputs&amp;nbsp;3.625e+8<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div> </div> <a name='function.sprintf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.printf.php' class='function' rel='rdfs-seeAlso'>printf()</a> - Output a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.sscanf.php' class='function' rel='rdfs-seeAlso'>sscanf()</a> - Parses input from a string according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> <li class='member'><a href='http://www.php.net/manual/en/function.vsprintf.php' class='function' rel='rdfs-seeAlso'>vsprintf()</a> - Return a formatted string</li> <li class='member'><a href='http://www.php.net/manual/en/function.number-format.php' class='function' rel='rdfs-seeAlso'>number_format()</a> - Format a number with grouped thousands</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_object_hash" value="<div id='function.spl-object-hash' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-object-hash.php'>spl_object_hash</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>spl_object_hash</span> &amp;mdash; <span class='dc-title'> Return hash id for given object </span></p> </div> <a name='function.spl-object-hash.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>spl_object_hash</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$obj</tt></span> )</div> <p class='para rdfs-comment'> This function returns a unique identifier for the object. This id can be used as a hash key for storing objects or for identifying an object. </p> </div> <a name='function.spl-object-hash.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Any object. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-object-hash.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A string that is unique for each object and is always the same for the same object. </p> </div> <a name='function.spl-object-hash.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>spl_object_hash()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$id&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>spl_object_hash</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$storage</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_classes" value="<div id='function.spl-classes' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-classes.php'>spl_classes</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>spl_classes</span> &amp;mdash; <span class='dc-title'>Return available SPL classes</span></p> </div> <a name='function.spl-classes.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>spl_classes</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This function returns an array with the current available SPL classes. </p> </div> <a name='function.spl-classes.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>spl_classes()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>spl_classes</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [ArrayObject] =&amp;gt; ArrayObject [ArrayIterator] =&amp;gt; ArrayIterator [CachingIterator] =&amp;gt; CachingIterator [RecursiveCachingIterator] =&amp;gt; RecursiveCachingIterator [DirectoryIterator] =&amp;gt; DirectoryIterator [FilterIterator] =&amp;gt; FilterIterator [LimitIterator] =&amp;gt; LimitIterator [ParentIterator] =&amp;gt; ParentIterator [RecursiveDirectoryIterator] =&amp;gt; RecursiveDirectoryIterator [RecursiveIterator] =&amp;gt; RecursiveIterator [RecursiveIteratorIterator] =&amp;gt; RecursiveIteratorIterator [SeekableIterator] =&amp;gt; SeekableIterator [SimpleXMLIterator] =&amp;gt; SimpleXMLIterator ) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload_unregister" value="<div id='function.spl-autoload-unregister' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload-unregister.php'>spl_autoload_unregister</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload_unregister</span> &amp;mdash; <span class='dc-title'>Unregister given function as __autoload() implementation</span></p> </div> <a name='function.spl-autoload-unregister.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>spl_autoload_unregister</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$autoload_function</tt></span> )</div> <p class='para rdfs-comment'> Unregister a function from the spl provided __autoload stack. If the stack is activated and empty after unregistering the given function then it will be deactivated. </p> <p class='para'> When this function results in the autoload stack being activated an existing __autoload function will not be reactivated. </p> </div> <a name='function.spl-autoload-unregister.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>autoload_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The autoload function being unregistered. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-autoload-unregister.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload_register" value="<div id='function.spl-autoload-register' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload-register.php'>spl_autoload_register</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload_register</span> &amp;mdash; <span class='dc-title'>Register given function as __autoload() implementation</span></p> </div> <a name='function.spl-autoload-register.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>spl_autoload_register</b></span> ([ <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$autoload_function</tt></span> ] )</div> <p class='para rdfs-comment'> Register a function with the spl provided __autoload stack. If the stack is not yet activated it will be activated. </p> <p class='para'> If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack. This is because spl_autoload_register() will effectively replace the engine cache for the __autoload function by either spl_autoload() or spl_autoload_call(). </p> <p class='para'> If there must be multiple autoload functions, <b>spl_autoload_register()</b> allows for this. It effectively creates a queue of autoload functions, and runs through each of them in the order they are defined. By contrast, <b>__autoload()</b> may only be defined once. </p> </div> <a name='function.spl-autoload-register.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>autoload_function</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The autoload function being registered. If no parameter is provided, then the default implementation of <a href='http://www.php.net/manual/en/function.spl-autoload.php' class='function'>spl_autoload()</a> will be registered. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-autoload-register.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.spl-autoload-register.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> Namespaces support was introduced. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.spl-autoload-register.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>spl_autoload_register()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #007700'>namespace&amp;nbsp;</span><span style='color: #0000BB'>Foobar</span><span style='color: #007700'>;<br /><br />class&amp;nbsp;</span><span style='color: #0000BB'>Foo&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>test</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;</span><span style='color: #DD0000'>'[['</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>']]'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>spl_autoload_register</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__NAMESPACE__&amp;nbsp;</span><span style='color: #007700'>.</span><span style='color: #DD0000'>'\Foo::test'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;5.3.0<br /><br /></span><span style='color: #007700'>new&amp;nbsp;</span><span style='color: #0000BB'>InexistentClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> [[Foobar\InexistentClass]] Fatal error: Class &amp;#039;Foobar\InexistentClass&amp;#039; not found in ... </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload_functions" value="<div id='function.spl-autoload-functions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload-functions.php'>spl_autoload_functions</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload_functions</span> &amp;mdash; <span class='dc-title'>Return all registered __autoload() functions</span></p> </div> <a name='function.spl-autoload-functions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>spl_autoload_functions</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Get all registered __autoload() functions. </p> </div> <a name='function.spl-autoload-functions.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='function.spl-autoload-functions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of all registered __autoload functions. If the autoload stack is not activated then the return value is <b><tt class='constant'>FALSE</tt></b>. If no function is registered the return value will be an empty array. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload_extensions" value="<div id='function.spl-autoload-extensions' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload-extensions.php'>spl_autoload_extensions</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload_extensions</span> &amp;mdash; <span class='dc-title'>Register and return default file extensions for spl_autoload</span></p> </div> <a name='function.spl-autoload-extensions.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>spl_autoload_extensions</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$file_extensions</tt></span> ] )</div> <p class='para rdfs-comment'> This function can modify and check the file extensions that the built in <b>__autoload()</b> fallback function <a href='http://www.php.net/manual/en/function.spl-autoload.php' class='function'>spl_autoload()</a> will be using. </p> </div> <a name='function.spl-autoload-extensions.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>file_extensions</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When calling without an argument, it simply returns the current list of extensions each separated by comma. To modify the list of file extensions, simply invoke the functions with the new list of file extensions to use in a single string with each extensions separated by comma. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-autoload-extensions.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A comma delimited list of default file extensions for <a href='http://www.php.net/manual/en/function.spl-autoload.php' class='function'>spl_autoload()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload_call" value="<div id='function.spl-autoload-call' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload-call.php'>spl_autoload_call</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload_call</span> &amp;mdash; <span class='dc-title'>Try all registered __autoload() function to load the requested class</span></p> </div> <a name='function.spl-autoload-call.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>spl_autoload_call</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> )</div> <p class='para rdfs-comment'> This function can be used to manually search for a class or interface using the registered __autoload functions. </p> </div> <a name='function.spl-autoload-call.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name being searched. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-autoload-call.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spl_autoload" value="<div id='function.spl-autoload' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spl-autoload.php'>spl_autoload</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>spl_autoload</span> &amp;mdash; <span class='dc-title'>Default implementation for __autoload()</span></p> </div> <a name='function.spl-autoload.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>spl_autoload</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$file_extensions</tt><span class='initializer'> = spl_autoload_extensions()</span></span> ] )</div> <p class='para rdfs-comment'> This function is intended to be used as a default implementation for __autoload(). If nothing else is specified and autoload_register() is called without any parameters then this functions will be used for any later call to __autoload(). </p> </div> <a name='function.spl-autoload.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>file_extensions</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php. </p> </dd> </dl> <p> </p> </div> <a name='function.spl-autoload.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplTempFileObject::__construct" value="<div id='spltempfileobject.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/spltempfileobject.construct.php'>SplTempFileObject::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplTempFileObject::__construct</span> &amp;mdash; <span class='dc-title'>Construct a new temporary file object</span></p> </div> <a name='spltempfileobject.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>SplTempFileObject::__construct</b></span> ([ <span class='methodparam'><span class='type'>integer</span> <tt class='parameter'>$max_memory</tt></span> ] )</div> <p class='para rdfs-comment'> Construct a new temporary file object. </p> </div> <a name='spltempfileobject.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>max_memory</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum amount of memory (in bytes, default is 2 MB) for the temporary file to use. If the temporary file exceeds this size, it will be moved to a file in the system&amp;#039;s temp directory. </p> <p class='para'> If <i><tt class='parameter'>max_memory</tt></i> is negative, only memory will be used. If <i><tt class='parameter'>max_memory</tt></i> is zero, no memory will be used. </p> </dd> </dl> <p> </p> </div> <a name='spltempfileobject.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='spltempfileobject.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> if an error occurs. </p> </div> <a name='spltempfileobject.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplTempFileObject</b></span> example</b></p> <div class='example-contents para'><p>This example writes a temporary file in memory which can be written to and read from.</p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$temp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplTempFileObject</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;first&amp;nbsp;line\n'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'And&amp;nbsp;this&amp;nbsp;is&amp;nbsp;the&amp;nbsp;second.\n'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Written&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftell</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;bytes&amp;nbsp;to&amp;nbsp;temporary&amp;nbsp;file.\n\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Rewind&amp;nbsp;and&amp;nbsp;read&amp;nbsp;what&amp;nbsp;was&amp;nbsp;written<br /></span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$temp&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Written 47 bytes to temporary file. This is the first line And this is the second. </pre></div> </div> </div><p> </p> </div> <a name='spltempfileobject.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a></li> <li class='member'> <a href='http://www.php.net/manual/en/wrappers.php.php' class='link'>PHP input/output streams</a> (for <i>php://temp</i> and <i>php://memory</i>) </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplTempFileObject" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.spltempfileobject.php'>The SplTempFileObject class</a></h1> <div class='partintro'> <div id='spltempfileobject.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The SplTempFileObject class offers an object oriented interface for a temporary file. </p> </div> <div id='spltempfileobject.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SplTempFileObject</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SplTempFileObject</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.seekableiterator.php' class='interfacename'>SeekableIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/spltempfileobject.construct.php' class='function'>__construct</a></span> ([ <span class='methodparam'><span class='type'>integer</span> <tt class='parameter'>$max_memory</tt></span> ] )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.construct.php' class='function'>SplFileObject::__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = &amp;quot;r&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string|array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function'>SplFileObject::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.eof.php' class='function'>SplFileObject::eof</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fflush.php' class='function'>SplFileObject::fflush</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetc.php' class='function'>SplFileObject::fgetc</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetcsv.php' class='function'>SplFileObject::fgetcsv</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function'>SplFileObject::fgets</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetss.php' class='function'>SplFileObject::fgetss</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$allowable_tags</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.flock.php' class='function'>SplFileObject::flock</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$operation</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$wouldblock</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fpassthru.php' class='function'>SplFileObject::fpassthru</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fscanf.php' class='function'>SplFileObject::fscanf</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$...</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fseek.php' class='function'>SplFileObject::fseek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$whence</tt><span class='initializer'> = SEEK_SET</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fstat.php' class='function'>SplFileObject::fstat</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.ftell.php' class='function'>SplFileObject::ftell</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.ftruncate.php' class='function'>SplFileObject::ftruncate</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$size</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fwrite.php' class='function'>SplFileObject::fwrite</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getchildren.php' class='function'>SplFileObject::getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getcsvcontrol.php' class='function'>SplFileObject::getCsvControl</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getflags.php' class='function'>SplFileObject::getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getmaxlinelen.php' class='function'>SplFileObject::getMaxLineLen</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.haschildren.php' class='function'>SplFileObject::hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function'>SplFileObject::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function'>SplFileObject::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function'>SplFileObject::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function'>SplFileObject::seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$line_pos</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function'>SplFileObject::setCsvControl</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setflags.php' class='function'>SplFileObject::setFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>SplFileObject::setMaxLineLen</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$max_len</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function'>SplFileObject::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/spltempfileobject.construct.php'>SplTempFileObject::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a new temporary file object</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::valid" value="<div id='splobjectstorage.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.valid.php'>SplObjectStorage::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::valid</span> &amp;mdash; <span class='dc-title'>Returns if the current iterator entry is valid</span></p> </div> <a name='splobjectstorage.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><b>SplObjectStorage::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns if the current iterator entry is valid. </p> </div> <a name='splobjectstorage.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the iterator entry is valid, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splobjectstorage.valid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::valid()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />while(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>().</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0 1 </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.valid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.current.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::current</a> - Returns the current storage entry</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.getinfo.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::getInfo</a> - Returns the data associated with the current iterator entry</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::unserialize" value="<div id='splobjectstorage.unserialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.unserialize.php'>SplObjectStorage::unserialize</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::unserialize</span> &amp;mdash; <span class='dc-title'>Unserializes a storage from its string representation</span></p> </div> <a name='splobjectstorage.unserialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplObjectStorage::unserialize</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$serialized</tt></span> )</div> <p class='para rdfs-comment'> Unserializes storage entries and attach them to the current storage. </p> </div> <a name='splobjectstorage.unserialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>serialized</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The serialized representation of a storage. </p> </dd> </dl> <p> </p> </div> <a name='splobjectstorage.unserialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splobjectstorage.unserialize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::unserialize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s1</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'data'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s2</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s1</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(1) </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.unserialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.serialize.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::serialize</a> - Serializes the storage</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::serialize" value="<div id='splobjectstorage.serialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.serialize.php'>SplObjectStorage::serialize</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::serialize</span> &amp;mdash; <span class='dc-title'>Serializes the storage</span></p> </div> <a name='splobjectstorage.serialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplObjectStorage::serialize</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns a string representation of the storage. </p> </div> <a name='splobjectstorage.serialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.serialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A string representing the storage. </p> </div> <a name='splobjectstorage.serialize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::serialize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'data'</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>().</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> x:i:1;O:8:&amp;quot;stdClass&amp;quot;:0:{},s:4:&amp;quot;data&amp;quot;;;m:a:0:{} </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.serialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.unserialize.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::unserialize</a> - Unserializes a storage from its string representation</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::rewind" value="<div id='splobjectstorage.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.rewind.php'>SplObjectStorage::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the iterator to the first storage element</span></p> </div> <a name='splobjectstorage.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplObjectStorage::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Rewind the iterator to the first storage element. </p> </div> <a name='splobjectstorage.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splobjectstorage.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::rewind()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />while(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$index&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$object&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;current($s)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$data&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getInfo</span><span style='color: #007700'>();<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(1) int(0) </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.next.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::next</a> - Move to the next entry</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::next" value="<div id='splobjectstorage.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.next.php'>SplObjectStorage::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::next</span> &amp;mdash; <span class='dc-title'>Move to the next entry</span></p> </div> <a name='splobjectstorage.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplObjectStorage::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Moves the iterator to the next <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> in the storage. </p> </div> <a name='splobjectstorage.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splobjectstorage.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::next()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />while(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$index&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$object&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;current($s)<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$index</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(0) object(stdClass)#2 (0) { } int(1) object(stdClass)#3 (0) { } </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.rewind.php' class='function' rel='rdfs-seeAlso'>SPLObjectStorage::rewind</a> - Rewind the iterator to the first storage element</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::key" value="<div id='splobjectstorage.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.key.php'>SplObjectStorage::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::key</span> &amp;mdash; <span class='dc-title'>Returns the index at which the iterator currently is</span></p> </div> <a name='splobjectstorage.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplObjectStorage::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the index at which the iterator currently is. </p> </div> <a name='splobjectstorage.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The index corresponding to the position of the iterator. </p> </div> <a name='splobjectstorage.key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::key()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />while(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$index&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$object&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;current($s)<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$index</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(0) object(stdClass)#2 (0) { } int(1) object(stdClass)#3 (0) { } </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.rewind.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::rewind</a> - Rewind the iterator to the first storage element</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.current.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::current</a> - Returns the current storage entry</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.next.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::next</a> - Move to the next entry</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.valid.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::valid</a> - Returns if the current iterator entry is valid</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::detach" value="<div id='splobjectstorage.detach' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.detach.php'>SplObjectStorage::detach</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::detach</span> &amp;mdash; <span class='dc-title'>Removes an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> from the storage</span></p> </div> <a name='splobjectstorage.detach.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplObjectStorage::detach</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <p class='para rdfs-comment'> Removes the <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> from the storage. </p> </div> <a name='splobjectstorage.detach.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> to remove. </p> </dd> </dl> <p> </p> </div> <a name='splobjectstorage.detach.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splobjectstorage.detach.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::detach()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$o&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>detach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(1) int(0) </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.detach.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.attach.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::attach</a> - Adds an object in the storage</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.removeall.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::removeAll</a> - Removes objects contained in another storage from the current storage</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::current" value="<div id='splobjectstorage.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.current.php'>SplObjectStorage::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::current</span> &amp;mdash; <span class='dc-title'>Returns the current storage entry</span></p> </div> <a name='splobjectstorage.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><b>SplObjectStorage::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the current storage entry. </p> </div> <a name='splobjectstorage.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> at the current iterator position. </p> </div> <a name='splobjectstorage.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::current()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d1'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'d2'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />while(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$index&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$object&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;current($s)<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$data&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getInfo</span><span style='color: #007700'>();<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$object</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(stdClass)#2 (0) { } string(2) &amp;quot;d1&amp;quot; object(stdClass)#3 (0) { } string(2) &amp;quot;d2&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.rewind.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::rewind</a> - Rewind the iterator to the first storage element</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.key.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::key</a> - Returns the index at which the iterator currently is</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.next.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::next</a> - Move to the next entry</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.valid.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::valid</a> - Returns if the current iterator entry is valid</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.getinfo.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::getInfo</a> - Returns the data associated with the current iterator entry</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::count" value="<div id='splobjectstorage.count' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.count.php'>SplObjectStorage::count</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::count</span> &amp;mdash; <span class='dc-title'>Returns the number of objects in the storage</span></p> </div> <a name='splobjectstorage.count.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplObjectStorage::count</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Counts the number of objects in the storage. </p> </div> <a name='splobjectstorage.count.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splobjectstorage.count.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The number of objects in the storage. </p> </div> <a name='splobjectstorage.count.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::count()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>count</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>count</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(2) int(2) </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.count.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.attach.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::attach</a> - Adds an object in the storage</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.detach.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::detach</a> - Removes an object from the storage</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::contains" value="<div id='splobjectstorage.contains' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.contains.php'>SplObjectStorage::contains</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::contains</span> &amp;mdash; <span class='dc-title'>Checks if the storage contains a specific object</span></p> </div> <a name='splobjectstorage.contains.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><b>SplObjectStorage::contains</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <p class='para rdfs-comment'> Checks if the storage contains the <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> provided. </p> </div> <a name='splobjectstorage.contains.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> to look for. </p> </dd> </dl> <p> </p> </div> <a name='splobjectstorage.contains.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> is in the storage, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splobjectstorage.contains.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::contains()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.contains.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetexists.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::offsetExists</a> - Checks whether an object exists in the storage</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage::attach" value="<div id='splobjectstorage.attach' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splobjectstorage.attach.php'>SplObjectStorage::attach</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplObjectStorage::attach</span> &amp;mdash; <span class='dc-title'>Adds an object in the storage</span></p> </div> <a name='splobjectstorage.attach.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplObjectStorage::attach</b></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$data</tt></span> ] )</div> <p class='para rdfs-comment'> Adds an <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> inside the storage, and optionaly associate it to some data. </p> </div> <a name='splobjectstorage.attach.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>object</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> to add. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The data to associate with the <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. Defaults to <b><tt class='constant'>NULL</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='splobjectstorage.attach.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splobjectstorage.attach.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplObjectStorage::attach()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;$s[$o1]&amp;nbsp;=&amp;nbsp;NULL;<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'hello'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;$s[$o2]&amp;nbsp;=&amp;nbsp;'hello';<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>]);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> NULL string(5) &amp;quot;hello&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splobjectstorage.attach.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.detach.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::detach</a> - Removes an object from the storage</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetset.php' class='function' rel='rdfs-seeAlso'>SplObjectStorage::offsetSet</a> - Associates data to an object in the storage</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplObjectStorage" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.splobjectstorage.php'>The SplObjectStorage class</a></h1> <div class='partintro'> <div id='splobjectstorage.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The SplObjectStorage class provides a map from objects to data or, by ignoring data, an object set. This dual purpose can be useful in many cases involving the need to uniquely identify objects. </p> </div> <div id='splobjectstorage.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SplObjectStorage</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SplObjectStorage</b> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.serializable.php' class='interfacename'>Serializable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.arrayaccess.php' class='interfacename'>ArrayAccess</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.addall.php' class='function'>addAll</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.splobjectstorage.php' class='type SplObjectStorage'>SplObjectStorage</a></span> <tt class='parameter'>$storage</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.attach.php' class='function'>attach</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$data</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.contains.php' class='function'>contains</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.count.php' class='function'>count</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.detach.php' class='function'>detach</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.getinfo.php' class='function'>getInfo</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetexists.php' class='function'>offsetExists</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetget.php' class='function'>offsetGet</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetset.php' class='function'>offsetSet</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$info</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.offsetunset.php' class='function'>offsetUnset</a></span> ( <span class='methodparam'><span class='type'>object</span> <tt class='parameter'>$object</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.removeall.php' class='function'>removeAll</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/class.splobjectstorage.php' class='type SplObjectStorage'>SplObjectStorage</a></span> <tt class='parameter'>$storage</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.serialize.php' class='function'>serialize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.setinfo.php' class='function'>setInfo</a></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$data</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.unserialize.php' class='function'>unserialize</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$serialized</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splobjectstorage.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='splobjectstorage.examples' class='section'> <h2 class='title'>Examples</h2> <p class='para'> </p><div class='example'> <p><b>Example #1 <b class='classname'>SplObjectStorage</b> as a set</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;an&amp;nbsp;object&amp;nbsp;set<br /></span><span style='color: #0000BB'>$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o3&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>attach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o3</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>detach</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>contains</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$o3</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(true) bool(false) bool(true) bool(false) bool(false) </pre></div> </div> </div><p> </p><div class='example'> <p><b>Example #2 <b class='classname'>SplObjectStorage</b> as a map</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;As&amp;nbsp;a&amp;nbsp;map&amp;nbsp;from&amp;nbsp;objects&amp;nbsp;to&amp;nbsp;data<br /></span><span style='color: #0000BB'>$s&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplObjectStorage</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$o1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$o3&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>StdClass</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o1</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'data&amp;nbsp;for&amp;nbsp;object&amp;nbsp;1'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;array(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(isset(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>]))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$s</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$o2</span><span style='color: #007700'>]);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> array(3) { [0]=&amp;gt; int(1) [1]=&amp;gt; int(2) [2]=&amp;gt; int(3) } </pre></div> </div> </div><p> </p> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/splobjectstorage.addall.php'>SplObjectStorage::addAll</a> &amp;acirc;&amp;#128;&amp;#148; Adds all objects from another storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.attach.php'>SplObjectStorage::attach</a> &amp;acirc;&amp;#128;&amp;#148; Adds an object in the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.contains.php'>SplObjectStorage::contains</a> &amp;acirc;&amp;#128;&amp;#148; Checks if the storage contains a specific object</li><li><a href='http://www.php.net/manual/en/splobjectstorage.count.php'>SplObjectStorage::count</a> &amp;acirc;&amp;#128;&amp;#148; Returns the number of objects in the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.current.php'>SplObjectStorage::current</a> &amp;acirc;&amp;#128;&amp;#148; Returns the current storage entry</li><li><a href='http://www.php.net/manual/en/splobjectstorage.detach.php'>SplObjectStorage::detach</a> &amp;acirc;&amp;#128;&amp;#148; Removes an object from the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.getinfo.php'>SplObjectStorage::getInfo</a> &amp;acirc;&amp;#128;&amp;#148; Returns the data associated with the current iterator entry</li><li><a href='http://www.php.net/manual/en/splobjectstorage.key.php'>SplObjectStorage::key</a> &amp;acirc;&amp;#128;&amp;#148; Returns the index at which the iterator currently is</li><li><a href='http://www.php.net/manual/en/splobjectstorage.next.php'>SplObjectStorage::next</a> &amp;acirc;&amp;#128;&amp;#148; Move to the next entry</li><li><a href='http://www.php.net/manual/en/splobjectstorage.offsetexists.php'>SplObjectStorage::offsetExists</a> &amp;acirc;&amp;#128;&amp;#148; Checks whether an object exists in the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.offsetget.php'>SplObjectStorage::offsetGet</a> &amp;acirc;&amp;#128;&amp;#148; Returns the data associated with an object</li><li><a href='http://www.php.net/manual/en/splobjectstorage.offsetset.php'>SplObjectStorage::offsetSet</a> &amp;acirc;&amp;#128;&amp;#148; Associates data to an object in the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.offsetunset.php'>SplObjectStorage::offsetUnset</a> &amp;acirc;&amp;#128;&amp;#148; Removes an object from the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.removeall.php'>SplObjectStorage::removeAll</a> &amp;acirc;&amp;#128;&amp;#148; Removes objects contained in another storage from the current storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.rewind.php'>SplObjectStorage::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the iterator to the first storage element</li><li><a href='http://www.php.net/manual/en/splobjectstorage.serialize.php'>SplObjectStorage::serialize</a> &amp;acirc;&amp;#128;&amp;#148; Serializes the storage</li><li><a href='http://www.php.net/manual/en/splobjectstorage.setinfo.php'>SplObjectStorage::setInfo</a> &amp;acirc;&amp;#128;&amp;#148; Sets the data associated with the current iterator entry</li><li><a href='http://www.php.net/manual/en/splobjectstorage.unserialize.php'>SplObjectStorage::unserialize</a> &amp;acirc;&amp;#128;&amp;#148; Unserializes a storage from its string representation</li><li><a href='http://www.php.net/manual/en/splobjectstorage.valid.php'>SplObjectStorage::valid</a> &amp;acirc;&amp;#128;&amp;#148; Returns if the current iterator entry is valid</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="spliti" value="<div id='function.spliti' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.spliti.php'>spliti</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>spliti</span> &amp;mdash; <span class='dc-title'>Split string into array by regular expression case insensitive</span></p> </div> <a name='function.spliti.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>spliti</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt></span> ] )</div> <p class='para rdfs-comment'> Splits a <i><tt class='parameter'>string</tt></i> into array by regular expression. </p> <p class='para'> This function is identical to <a href='http://www.php.net/manual/en/function.split.php' class='function'>split()</a> except that this ignores case distinction when matching alphabetic characters. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.spliti.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Case insensitive regular expression. </p> <p class='para'> If you want to split on any of the characters which are considered special by regular expressions, you&amp;#039;ll need to escape them first. If you think <b>spliti()</b> (or any other regex function, for that matter) is doing something weird, please read the file <var class='filename'>regex.7</var>, included in the <var class='filename'>regex/</var> subdirectory of the PHP distribution. It&amp;#039;s in manpage format, so you&amp;#039;ll want to do something along the lines of <strong class='command'>man /usr/local/src/regex/regex.7</strong> in order to read it. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>limit</tt></i> is set, the returned array will contain a maximum of <i><tt class='parameter'>limit</tt></i> elements with the last element containing the whole rest of <i><tt class='parameter'>string</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.spliti.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of strings, each of which is a substring of <i><tt class='parameter'>string</tt></i> formed by splitting it on boundaries formed by the case insensitive regular expression <i><tt class='parameter'>pattern</tt></i> . </p> <p class='para'> If there are <span class='replaceable'>n</span> occurrences of <i><tt class='parameter'>pattern</tt></i> , the returned array will contain <i><span class='replaceable'>n</span>+1</i> items. For example, if there is no occurrence of <i><tt class='parameter'>pattern</tt></i> , an array with only one element will be returned. Of course, this is also true if <i><tt class='parameter'>string</tt></i> is empty. If an error occurs, <b>spliti()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.spliti.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> This example splits a string using &amp;#039;a&amp;#039; as the separator : </p><div class='example'> <p><b>Example #1 <b>spliti()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$string&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'aBBBaCCCADDDaEEEaGGGA'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$chunks&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>spliti&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$string</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$chunks</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; [1] =&amp;gt; BBB [2] =&amp;gt; CCC [3] =&amp;gt; DDD [4] =&amp;gt; EEEaGGGA ) </pre></div> </div> </div><p> </p> </div> <a name='function.spliti.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> </div> <a name='function.spliti.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.split.php' class='function' rel='rdfs-seeAlso'>split()</a> - Split string into array by regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.implode.php' class='function' rel='rdfs-seeAlso'>implode()</a> - Join array elements with a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="split" value="<div id='function.split' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.split.php'>split</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>split</span> &amp;mdash; <span class='dc-title'>Split string into array by regular expression</span></p> </div> <a name='function.split.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>split</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$pattern</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$string</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$limit</tt></span> ] )</div> <p class='para rdfs-comment'> Splits a <i><tt class='parameter'>string</tt></i> into array by regular expression. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.split.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>pattern</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Case sensitive regular expression. </p> <p class='para'> If you want to split on any of the characters which are considered special by regular expressions, you&amp;#039;ll need to escape them first. If you think <b>split()</b> (or any other regex function, for that matter) is doing something weird, please read the file <var class='filename'>regex.7</var>, included in the <var class='filename'>regex/</var> subdirectory of the PHP distribution. It&amp;#039;s in manpage format, so you&amp;#039;ll want to do something along the lines of <strong class='command'>man /usr/local/src/regex/regex.7</strong> in order to read it. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>string</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>limit</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>limit</tt></i> is set, the returned array will contain a maximum of <i><tt class='parameter'>limit</tt></i> elements with the last element containing the whole rest of <i><tt class='parameter'>string</tt></i> . </p> </dd> </dl> <p> </p> </div> <a name='function.split.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array of strings, each of which is a substring of <i><tt class='parameter'>string</tt></i> formed by splitting it on boundaries formed by the case-sensitive regular expression <i><tt class='parameter'>pattern</tt></i> . </p> <p class='para'> If there are <span class='replaceable'>n</span> occurrences of <i><tt class='parameter'>pattern</tt></i> , the returned array will contain <i><span class='replaceable'>n</span>+1</i> items. For example, if there is no occurrence of <i><tt class='parameter'>pattern</tt></i> , an array with only one element will be returned. Of course, this is also true if <i><tt class='parameter'>string</tt></i> is empty. If an error occurs, <b>split()</b> returns <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.split.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>split()</b> example</b></p> <div class='example-contents para'><p> To split off the first four fields from a line from <var class='filename'>/etc/passwd</var>: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>list(</span><span style='color: #0000BB'>$user</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$pass</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$uid</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$gid</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$extra</span><span style='color: #007700'>)&amp;nbsp;=<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>':'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$passwd_line</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>split()</b> example</b></p> <div class='example-contents para'><p> To parse a date which may be delimited with slashes, dots, or hyphens: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Delimiters&amp;nbsp;may&amp;nbsp;be&amp;nbsp;slash,&amp;nbsp;dot,&amp;nbsp;or&amp;nbsp;hyphen<br /></span><span style='color: #0000BB'>$date&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'04/30/1973'</span><span style='color: #007700'>;<br />list(</span><span style='color: #0000BB'>$month</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>split</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'[/.-]'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$date</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Month:&amp;nbsp;</span><span style='color: #0000BB'>$month</span><span style='color: #DD0000'>;&amp;nbsp;Day:&amp;nbsp;</span><span style='color: #0000BB'>$day</span><span style='color: #DD0000'>;&amp;nbsp;Year:&amp;nbsp;</span><span style='color: #0000BB'>$year</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.split.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 5.3.0 the regex extension is deprecated, calling this function will issue an <b><tt class='constant'>E_DEPRECATED</tt></b> notice.<br /></p></blockquote> <div class='tip'><b class='tip'>Tip</b> <p class='para'> <a href='http://www.php.net/manual/en/function.preg-split.php' class='function'>preg_split()</a>, which uses a Perl-compatible regular expression syntax, is often a faster alternative to <b>split()</b>. If you don&amp;#039;t require the power of regular expressions, it is faster to use <a href='http://www.php.net/manual/en/function.explode.php' class='function'>explode()</a>, which doesn&amp;#039;t incur the overhead of the regular expression engine. </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='para'> For users looking for a way to emulate Perl&amp;#039;s <strong class='command'>@chars = split(&amp;#039;&amp;#039;, $str)</strong> behaviour, please see the examples for <a href='http://www.php.net/manual/en/function.preg-split.php' class='function'>preg_split()</a> or <a href='http://www.php.net/manual/en/function.str-split.php' class='function'>str_split()</a>. </p> </div> </div> <a name='function.split.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.preg-split.php' class='function' rel='rdfs-seeAlso'>preg_split()</a> - Split string by a regular expression</li> <li class='member'><a href='http://www.php.net/manual/en/function.spliti.php' class='function' rel='rdfs-seeAlso'>spliti()</a> - Split string into array by regular expression case insensitive</li> <li class='member'><a href='http://www.php.net/manual/en/function.str-split.php' class='function' rel='rdfs-seeAlso'>str_split()</a> - Convert a string to an array</li> <li class='member'><a href='http://www.php.net/manual/en/function.explode.php' class='function' rel='rdfs-seeAlso'>explode()</a> - Split a string by string</li> <li class='member'><a href='http://www.php.net/manual/en/function.implode.php' class='function' rel='rdfs-seeAlso'>implode()</a> - Join array elements with a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.chunk-split.php' class='function' rel='rdfs-seeAlso'>chunk_split()</a> - Split a string into smaller chunks</li> <li class='member'><a href='http://www.php.net/manual/en/function.wordwrap.php' class='function' rel='rdfs-seeAlso'>wordwrap()</a> - Wraps a string to a given number of characters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::__toString" value="<div id='splfileobject.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.tostring.php'>SplFileObject::__toString</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::__toString</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function'>SplFileObject::current</a></span></span></p> </div> <a name='splfileobject.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This method is an alias of <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function'>SplFileObject::current</a></span>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::__construct" value="<div id='splfileobject.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.construct.php'>SplFileObject::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::__construct</span> &amp;mdash; <span class='dc-title'>Construct a new file object.</span></p> </div> <a name='splfileobject.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>SplFileObject::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = &amp;quot;r&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]]] )</div> <p class='para rdfs-comment'> Construct a new file object. </p> </div> <a name='splfileobject.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The file to read. </p> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>open_mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode in which to open the file. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for a list of allowed modes. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>use_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether to search in the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> for <i><tt class='parameter'>filename</tt></i> . </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A valid context resource created with <a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function'>stream_context_create()</a>. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.construct.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.construct.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> if the <i><tt class='parameter'>filename</tt></i> cannot be opened. </p> </div> <a name='splfileobject.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::__construct</b></span> example</b></p> <div class='example-contents para'><p> This example opens the current file and iterates over its contents line by line. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> &amp;lt;?php $file = new SplFileObject(__FILE__); foreach ($file as $line) { echo $line; } ?&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.construct.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.openfile.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::openFile</a> - Gets an SplFileObject object for the file</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::valid" value="<div id='splfileobject.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.valid.php'>SplFileObject::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::valid</span> &amp;mdash; <span class='dc-title'>Not at EOF</span></p> </div> <a name='splfileobject.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileObject::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Check whether EOF has been reached. </p> </div> <a name='splfileobject.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if not reached EOF, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileobject.valid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::valid</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Loop&amp;nbsp;over&amp;nbsp;a&amp;nbsp;file,&amp;nbsp;line&amp;nbsp;by&amp;nbsp;line<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.valid.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function' rel='rdfs-seeAlso'>SplFileObject::key</a> - Get line number</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function' rel='rdfs-seeAlso'>SplFileObject::seek</a> - Seek to specified line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function' rel='rdfs-seeAlso'>SplFileObject::next</a> - Read next line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function' rel='rdfs-seeAlso'>SplFileObject::rewind</a> - Rewind the file to the first line</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::setMaxLineLen" value="<div id='splfileobject.setmaxlinelen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php'>SplFileObject::setMaxLineLen</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::setMaxLineLen</span> &amp;mdash; <span class='dc-title'>Set maximum line length</span></p> </div> <a name='splfileobject.setmaxlinelen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::setMaxLineLen</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$max_len</tt></span> )</div> <p class='para rdfs-comment'> Sets the maximum length of a line to be read. </p> </div> <a name='splfileobject.setmaxlinelen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>max_len</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum length of a line. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.setmaxlinelen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.setmaxlinelen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::setMaxLineLen</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'lipsum.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setMaxLineLen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$line&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>Contents of lipsum.txt</p></div> <div class='example-contents programlisting'> <div class='txtcode'><pre class='txtcode'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis nec sapien felis, ac sodales nisl. Nulla vitae magna vitae purus aliquet consequat.</pre> </div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Lorem ipsum dolor s it amet, consectetu r adipiscing elit. Duis nec sapien fel is, ac sodales nisl . Nulla vitae magna v itae purus aliquet consequat. </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.setmaxlinelen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>Classname::Method</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::setFlags" value="<div id='splfileobject.setflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.setflags.php'>SplFileObject::setFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::setFlags</span> &amp;mdash; <span class='dc-title'>Sets flags for the SplFileObject</span></p> </div> <a name='splfileobject.setflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::setFlags</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <p class='para rdfs-comment'> Sets the flags to be used by the <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a>. </p> </div> <a name='splfileobject.setflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Bit mask of the flags to set. See <a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants' class='link'>SplFileObject constants</a> for the available flags. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.setflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.setflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::setFlags</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'data.csv'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>READ_CSV</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$fields</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fields</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.setflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getflags.php' class='function' rel='rdfs-seeAlso'>SplFileObject::getFlags</a> - Gets flags for the SplFileObject</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::setCsvControl" value="<div id='splfileobject.setcsvcontrol' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php'>SplFileObject::setCsvControl</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::setCsvControl</span> &amp;mdash; <span class='dc-title'>Set the delimiter and enclosure character for CSV</span></p> </div> <a name='splfileobject.setcsvcontrol.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::setCsvControl</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <p class='para rdfs-comment'> Sets the delimiter and enclosure character for parsing CSV fields. </p> </div> <a name='splfileobject.setcsvcontrol.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The field delimiter (one character only). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>enclosure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The field enclosure character (one character only). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>escape</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The field escape character (one character only). </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.setcsvcontrol.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.setcsvcontrol.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::setCsvControl</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'data.csv'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>READ_CSV</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setCsvControl</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'|'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list&amp;nbsp;(</span><span style='color: #0000BB'>$fruit</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$quantity</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Do&amp;nbsp;something&amp;nbsp;with&amp;nbsp;values<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>Contents of data.csv</p></div> <div class='example-contents programlisting'> <div class='txtcode'><pre class='txtcode'>&amp;lt;?php apples|20 bananas|14 cherries|87 ?&amp;gt;</pre> </div> </div> </div><p> </p> </div> <a name='splfileobject.setcsvcontrol.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getcsvcontrol.php' class='function' rel='rdfs-seeAlso'>SplFileObject::getCsvControl</a> - Get the delimiter and enclosure character for CSV</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetcsv.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgetcsv</a> - Gets line from file and parse as CSV fields</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::seek" value="<div id='splfileobject.seek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.seek.php'>SplFileObject::seek</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::seek</span> &amp;mdash; <span class='dc-title'>Seek to specified line</span></p> </div> <a name='splfileobject.seek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::seek</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$line_pos</tt></span> )</div> <p class='para rdfs-comment'> Seek to specified line in the file. </p> </div> <a name='splfileobject.seek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>line_pos</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The zero-based line number to seek to. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.seek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.seek.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <a href='http://www.php.net/manual/en/class.logicexception.php' class='classname'>LogicException</a> if the <i><tt class='parameter'>line_pos</tt></i> is negative. </p> </div> <a name='splfileobject.seek.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::seek</b></span> example</b></p> <div class='example-contents para'><p>This example outputs the third line of the script which is found at position 2.</p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> $file-&amp;gt;seek(2); </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.seek.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function' rel='rdfs-seeAlso'>SplFileObject::key</a> - Get line number</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function' rel='rdfs-seeAlso'>SplFileObject::next</a> - Read next line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function' rel='rdfs-seeAlso'>SplFileObject::rewind</a> - Rewind the file to the first line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::rewind" value="<div id='splfileobject.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.rewind.php'>SplFileObject::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::rewind</span> &amp;mdash; <span class='dc-title'>Rewind the file to the first line</span></p> </div> <a name='splfileobject.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Rewinds the file back to the first line. </p> </div> <a name='splfileobject.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.rewind.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> if cannot be rewound. </p> </div> <a name='splfileobject.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::rewind</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'misc.txt'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Loop&amp;nbsp;over&amp;nbsp;whole&amp;nbsp;file<br /></span><span style='color: #007700'>foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{&amp;nbsp;}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Rewind&amp;nbsp;to&amp;nbsp;first&amp;nbsp;line<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Output&amp;nbsp;first&amp;nbsp;line<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.rewind.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function' rel='rdfs-seeAlso'>SplFileObject::key</a> - Get line number</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function' rel='rdfs-seeAlso'>SplFileObject::seek</a> - Seek to specified line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function' rel='rdfs-seeAlso'>SplFileObject::next</a> - Read next line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::next" value="<div id='splfileobject.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.next.php'>SplFileObject::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::next</span> &amp;mdash; <span class='dc-title'>Read next line</span></p> </div> <a name='splfileobject.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Moves ahead to the next line in the file. </p> </div> <a name='splfileobject.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::next</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;through&amp;nbsp;file&amp;nbsp;line&amp;nbsp;by&amp;nbsp;line<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'misc.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>eof</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.next.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function' rel='rdfs-seeAlso'>SplFileObject::key</a> - Get line number</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function' rel='rdfs-seeAlso'>SplFileObject::seek</a> - Seek to specified line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function' rel='rdfs-seeAlso'>SplFileObject::rewind</a> - Rewind the file to the first line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::key" value="<div id='splfileobject.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.key.php'>SplFileObject::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::key</span> &amp;mdash; <span class='dc-title'>Get line number</span></p> </div> <a name='splfileobject.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the current line number. </p> <blockquote><p><b class='note'>Note</b>: This number may not reflect the actual line number in the file if <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>SplFileObject::setMaxLineLen</a></span> is used to read fixed lengths of the file. <br /> </p></blockquote> </div> <a name='splfileobject.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current line number. </p> </div> <a name='splfileobject.key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::key</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'lipsum.txt'</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'.&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0. Lorem ipsum dolor sit amet, consectetur adipiscing elit. 1. Duis nec sapien felis, ac sodales nisl. 2. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <span class='methodname'><b>SplFileObject::key</b></span> example with <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>SplFileObject::setMaxLineLen</a></span></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'lipsum.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setMaxLineLen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'.&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$line&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 0. Lorem ipsum dolor s 1. it amet, consectetu 2. r adipiscing elit. 3. 4. Duis nec sapien fel 5. is, ac sodales nisl 6. . 7. Lorem ipsum dolor s 8. it amet, consectetu 9. r adipiscing elit. </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.key.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function' rel='rdfs-seeAlso'>SplFileObject::seek</a> - Seek to specified line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function' rel='rdfs-seeAlso'>SplFileObject::next</a> - Read next line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function' rel='rdfs-seeAlso'>SplFileObject::rewind</a> - Rewind the file to the first line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::hasChildren" value="<div id='splfileobject.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.haschildren.php'>SplFileObject::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileObject::hasChildren</span> &amp;mdash; <span class='dc-title'>SplFileObject does not have children</span></p> </div> <a name='splfileobject.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileObject::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> An <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> does not have children so this method always return <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='splfileobject.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='splfileobject.haschildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.haschildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::hasChildren</a> - Returns if an iterator can be created fot the current entry.</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::getMaxLineLen" value="<div id='splfileobject.getmaxlinelen' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.getmaxlinelen.php'>SplFileObject::getMaxLineLen</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::getMaxLineLen</span> &amp;mdash; <span class='dc-title'>Get maximum line length</span></p> </div> <a name='splfileobject.getmaxlinelen.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::getMaxLineLen</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the maximum line length as set by <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>SplFileObject::setMaxLineLen</a></span>. </p> </div> <a name='splfileobject.getmaxlinelen.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.getmaxlinelen.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the maximum line length if one has been set with <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>SplFileObject::setMaxLineLen</a></span>, default is <i>0</i>. </p> </div> <a name='splfileobject.getmaxlinelen.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::getMaxLineLen</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMaxLineLen</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setMaxLineLen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMaxLineLen</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> int(0) int(20) </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.getmaxlinelen.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>Classname::Method</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::getFlags" value="<div id='splfileobject.getflags' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.getflags.php'>SplFileObject::getFlags</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::getFlags</span> &amp;mdash; <span class='dc-title'>Gets flags for the SplFileObject</span></p> </div> <a name='splfileobject.getflags.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::getFlags</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the flags set for an instance of SplFileObject as an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a>. </p> </div> <a name='splfileobject.getflags.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.getflags.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.integer.php' class='type integer'>integer</a> representing the flags. </p> </div> <a name='splfileobject.getflags.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::getFlags</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFlags</span><span style='color: #007700'>()&amp;nbsp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>SKIP_EMPTY</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Skipping&amp;nbsp;empty&amp;nbsp;lines\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Not&amp;nbsp;skipping&amp;nbsp;empty&amp;nbsp;lines\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>SKIP_EMPTY</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFlags</span><span style='color: #007700'>()&amp;nbsp;&amp;amp;&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>SKIP_EMPTY</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Skipping&amp;nbsp;empty&amp;nbsp;lines\n'</span><span style='color: #007700'>;<br />}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Not&amp;nbsp;skipping&amp;nbsp;empty&amp;nbsp;lines\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Not skipping empty lines Skipping empty lines </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.getflags.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setflags.php' class='function' rel='rdfs-seeAlso'>SplFileObject::setFlags</a> - Sets flags for the SplFileObject</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::getCurrentLine" value="<div id='splfileobject.getcurrentline' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.getcurrentline.php'>SplFileObject::getCurrentLine</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileObject::getCurrentLine</span> &amp;mdash; <span class='dc-title'>Alias of <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function'>SplFileObject::fgets</a></span></span></p> </div> <a name='splfileobject.getcurrentline.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This method is an alias of <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function'>SplFileObject::fgets</a></span>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::getCsvControl" value="<div id='splfileobject.getcsvcontrol' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.getcsvcontrol.php'>SplFileObject::getCsvControl</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::getCsvControl</span> &amp;mdash; <span class='dc-title'>Get the delimiter and enclosure character for CSV</span></p> </div> <a name='splfileobject.getcsvcontrol.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>SplFileObject::getCsvControl</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the delimiter and enclosure character used for parsing CSV fields. </p> </div> <a name='splfileobject.getcsvcontrol.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.getcsvcontrol.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array containing the delimiter and enclosure character. </p> </div> <a name='splfileobject.getcsvcontrol.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::getCsvControl</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'data.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getCsvControl</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; , [1] =&amp;gt; &amp;quot; ) </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.getcsvcontrol.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function' rel='rdfs-seeAlso'>SplFileObject::setCsvControl</a> - Set the delimiter and enclosure character for CSV</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetcsv.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgetcsv</a> - Gets line from file and parse as CSV fields</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::getChildren" value="<div id='splfileobject.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.getchildren.php'>SplFileObject::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::getChildren</span> &amp;mdash; <span class='dc-title'>No purpose</span></p> </div> <a name='splfileobject.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileObject::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> An <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> does not have children so this method returns <b><tt class='constant'>NULL</tt></b>. </p> </div> <a name='splfileobject.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileobject.getchildren.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/recursiveiterator.getchildren.php' class='function' rel='rdfs-seeAlso'>RecursiveIterator::getChildren</a> - Returns an iterator for the current entry.</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fwrite" value="<div id='splfileobject.fwrite' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fwrite.php'>SplFileObject::fwrite</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fwrite</span> &amp;mdash; <span class='dc-title'>Write to file</span></p> </div> <a name='splfileobject.fwrite.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::fwrite</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <p class='para rdfs-comment'> Writes the contents of <i><tt class='parameter'>string</tt></i> to the file </p> </div> <a name='splfileobject.fwrite.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string to be written to the file. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>length</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the <i><tt class='parameter'>length</tt></i> argument is given, writing will stop after <i><tt class='parameter'>length</tt></i> bytes have been written or the end of <i><tt class='parameter'>string</tt></i> is reached, whichever comes first. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.fwrite.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of bytes written, or <b><tt class='constant'>NULL</tt></b> on error. </p> </div> <a name='splfileobject.fwrite.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fwrite</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'fwrite.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$written&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'12345'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Wrote&amp;nbsp;</span><span style='color: #0000BB'>$written</span><span style='color: #DD0000'>&amp;nbsp;bytes&amp;nbsp;to&amp;nbsp;file'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Wrote 5 bytes to file </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.fwrite.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fwrite.php' class='function' rel='rdfs-seeAlso'>fwrite()</a> - Binary-safe file write</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::ftruncate" value="<div id='splfileobject.ftruncate' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.ftruncate.php'>SplFileObject::ftruncate</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::ftruncate</span> &amp;mdash; <span class='dc-title'>Truncates the file to a given length</span></p> </div> <a name='splfileobject.ftruncate.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileObject::ftruncate</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$size</tt></span> )</div> <p class='para rdfs-comment'> Truncates the file to <i><tt class='parameter'>size</tt></i> bytes. </p> </div> <a name='splfileobject.ftruncate.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>size</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The size to truncate to. </p> <blockquote><p><b class='note'>Note</b>: If <i><tt class='parameter'>size</tt></i> is larger than the file it is extended with null bytes. <br /> If <i><tt class='parameter'>size</tt></i> is smaller than the file, the extra data will be lost. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='splfileobject.ftruncate.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='splfileobject.ftruncate.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::ftruncate</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;file&amp;nbsp;containing&amp;nbsp;'Hello&amp;nbsp;World!'<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/ftruncate'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w+'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Hello&amp;nbsp;World!'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Truncate&amp;nbsp;to&amp;nbsp;5&amp;nbsp;bytes<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>5</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Rewind&amp;nbsp;and&amp;nbsp;read&amp;nbsp;data<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Hello </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.ftruncate.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ftruncate.php' class='function' rel='rdfs-seeAlso'>ftruncate()</a> - Truncates a file to a given length</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::ftell" value="<div id='splfileobject.ftell' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.ftell.php'>SplFileObject::ftell</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::ftell</span> &amp;mdash; <span class='dc-title'>Return current file position</span></p> </div> <a name='splfileobject.ftell.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::ftell</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the position of the file pointer which represents the current offset in the file stream. </p> </div> <a name='splfileobject.ftell.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.ftell.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the position of the file pointer as an integer, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='splfileobject.ftell.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::ftell</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;first&amp;nbsp;line<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Where&amp;nbsp;are&amp;nbsp;we?<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftell</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.ftell.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ftell.php' class='function' rel='rdfs-seeAlso'>ftell()</a> - Returns the current position of the file read/write pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fstat" value="<div id='splfileobject.fstat' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fstat.php'>SplFileObject::fstat</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fstat</span> &amp;mdash; <span class='dc-title'>Gets information about the file</span></p> </div> <a name='splfileobject.fstat.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>SplFileObject::fstat</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gathers the statistics of the file. Behaves identically to <a href='http://www.php.net/manual/en/function.fstat.php' class='function'>fstat()</a>. </p> </div> <a name='splfileobject.fstat.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.fstat.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with the statistics of the file; the format of the array is described in detail on the <a href='http://www.php.net/manual/en/function.stat.php' class='function'>stat()</a> manual page. </p> </div> <a name='splfileobject.fstat.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fstat</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/etc/passwd'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$stat&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fstat</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;only&amp;nbsp;the&amp;nbsp;associative&amp;nbsp;part<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>array_slice</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stat</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>13</span><span style='color: #007700'>));<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [dev] =&amp;gt; 771 [ino] =&amp;gt; 488704 [mode] =&amp;gt; 33188 [nlink] =&amp;gt; 1 [uid] =&amp;gt; 0 [gid] =&amp;gt; 0 [rdev] =&amp;gt; 0 [size] =&amp;gt; 1114 [atime] =&amp;gt; 1061067181 [mtime] =&amp;gt; 1056136526 [ctime] =&amp;gt; 1056136526 [blksize] =&amp;gt; 4096 [blocks] =&amp;gt; 8 ) </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.fstat.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fstat.php' class='function' rel='rdfs-seeAlso'>fstat()</a> - Gets information about a file using an open file pointer</li> <li class='member'><a href='http://www.php.net/manual/en/function.stat.php' class='function' rel='rdfs-seeAlso'>stat()</a> - Gives information about a file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fseek" value="<div id='splfileobject.fseek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fseek.php'>SplFileObject::fseek</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fseek</span> &amp;mdash; <span class='dc-title'>Seek to a position</span></p> </div> <a name='splfileobject.fseek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::fseek</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$whence</tt><span class='initializer'> = SEEK_SET</span></span> ] )</div> <p class='para rdfs-comment'> Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding <i><tt class='parameter'>offset</tt></i> to the position specified by <i><tt class='parameter'>whence</tt></i> . </p> </div> <a name='splfileobject.fseek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>offset</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The offset. A negative value can be used to move backwards through the file which is useful when SEEK_END is used as the <i><tt class='parameter'>whence</tt></i> value. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>whence</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>whence</tt></i> values are: </p><ul class='simplelist'> <li class='member'><b><tt class='constant'>SEEK_SET</tt></b> - Set position equal to <i><tt class='parameter'>offset</tt></i> bytes.</li> <li class='member'><b><tt class='constant'>SEEK_CUR</tt></b> - Set position to current location plus <i><tt class='parameter'>offset</tt></i> .</li> <li class='member'><b><tt class='constant'>SEEK_END</tt></b> - Set position to end-of-file plus <i><tt class='parameter'>offset</tt></i> .</li> </ul><p> </p> <p class='para'> If <i><tt class='parameter'>whence</tt></i> is not specified, it is assumed to be <b><tt class='constant'>SEEK_SET</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.fseek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns 0 if the seek was successful, -1 otherwise. Note that seeking past EOF is not considered an error. </p> </div> <a name='splfileobject.fseek.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fseek</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'somefile.txt'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Read&amp;nbsp;first&amp;nbsp;line<br /></span><span style='color: #0000BB'>$data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Move&amp;nbsp;back&amp;nbsp;to&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;the&amp;nbsp;file<br />//&amp;nbsp;Same&amp;nbsp;as&amp;nbsp;$file-&amp;gt;rewind();<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fseek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.fseek.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fseek.php' class='function' rel='rdfs-seeAlso'>fseek()</a> - Seeks on a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fscanf" value="<div id='splfileobject.fscanf' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fscanf.php'>SplFileObject::fscanf</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fscanf</span> &amp;mdash; <span class='dc-title'>Parses input from file according to a format</span></p> </div> <a name='splfileobject.fscanf.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>SplFileObject::fscanf</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$...</tt></span> ] )</div> <p class='para rdfs-comment'> Reads a line from the file and interprets it according to the specified <i><tt class='parameter'>format</tt></i> , which is described in the documentation for <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a>. </p> <p class='para'> Any whitespace in the <i><tt class='parameter'>format</tt></i> string matches any whitespace in the line from the file. This means that even a tab <i>\t</i> in the format string can match a single space character in the input stream. </p> </div> <a name='splfileobject.fscanf.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>format</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The specified format as described in the <a href='http://www.php.net/manual/en/function.sprintf.php' class='function'>sprintf()</a> documentation. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional assigned values. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.fscanf.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If only two parameters were passed to this method, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference. </p> </div> <a name='splfileobject.fscanf.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fscanf</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'misc.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>$userinfo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fscanf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%s&amp;nbsp;%s&amp;nbsp;%s'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list&amp;nbsp;(</span><span style='color: #0000BB'>$name</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$profession</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$countrycode</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$userinfo</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Do&amp;nbsp;something&amp;nbsp;with&amp;nbsp;$name&amp;nbsp;$professi<br /></span><span style='color: #007700'>}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>Contents of users.txt</p></div> <div class='example-contents programlisting'> <div class='txtcode'><pre class='txtcode'>javier argonaut pe hiroshi sculptor jp robert slacker us luigi florist it</pre> </div> </div> </div><p> </p> </div> <a name='splfileobject.fscanf.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fscanf.php' class='function' rel='rdfs-seeAlso'>fscanf()</a> - Parses input from a file according to a format</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fpassthru" value="<div id='splfileobject.fpassthru' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fpassthru.php'>SplFileObject::fpassthru</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fpassthru</span> &amp;mdash; <span class='dc-title'>Output all remaining data on a file pointer</span></p> </div> <a name='splfileobject.fpassthru.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileObject::fpassthru</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Reads to EOF on the given file pointer from the current position and writes the results to the output buffer. </p> <p class='para'> You may need to call <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function'>SplFileObject::rewind</a></span> to reset the file pointer to the beginning of the file if you have already written data to the file. </p> </div> <a name='splfileobject.fpassthru.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.fpassthru.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of characters read from <i><tt class='parameter'>handle</tt></i> and passed through to the output. </p> </div> <a name='splfileobject.fpassthru.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fpassthru</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Open&amp;nbsp;the&amp;nbsp;file&amp;nbsp;in&amp;nbsp;binary&amp;nbsp;mode<br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'./img/ok.png'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'rb'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Send&amp;nbsp;the&amp;nbsp;right&amp;nbsp;headers<br /></span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Type:&amp;nbsp;image/png'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>header</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Content-Length:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getSize</span><span style='color: #007700'>());<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Dump&amp;nbsp;the&amp;nbsp;picture&amp;nbsp;and&amp;nbsp;end&amp;nbsp;script<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fpassthru</span><span style='color: #007700'>();<br />exit;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.fpassthru.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fpassthru.php' class='function' rel='rdfs-seeAlso'>fpassthru()</a> - Output all remaining data on a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::flock" value="<div id='splfileobject.flock' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.flock.php'>SplFileObject::flock</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::flock</span> &amp;mdash; <span class='dc-title'>Portable file locking</span></p> </div> <a name='splfileobject.flock.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileObject::flock</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$operation</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$wouldblock</tt></span> ] )</div> <p class='para rdfs-comment'> Locks or unlocks the file in the same portable way as <a href='http://www.php.net/manual/en/function.flock.php' class='function'>flock()</a>. </p> </div> <a name='splfileobject.flock.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>operation</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>operation</tt></i> is one of the following: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_SH</tt></b> to acquire a shared lock (reader). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_EX</tt></b> to acquire an exclusive lock (writer). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_UN</tt></b> to release a lock (shared or exclusive). </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LOCK_NB</tt></b> to not block while locking (not supported on Windows). </span> </li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>wouldblock</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Set to <b><tt class='constant'>TRUE</tt></b> if the lock would block (EWOULDBLOCK errno condition). </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.flock.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='splfileobject.flock.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::flock</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/lock.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>flock</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LOCK_EX</span><span style='color: #007700'>))&amp;nbsp;{&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;do&amp;nbsp;an&amp;nbsp;exclusive&amp;nbsp;lock<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;truncate&amp;nbsp;file<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Write&amp;nbsp;something&amp;nbsp;here\n'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>flock</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LOCK_UN</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;release&amp;nbsp;the&amp;nbsp;lock&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br /></span><span style='color: #007700'>}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Couldn't&amp;nbsp;get&amp;nbsp;the&amp;nbsp;lock!'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.flock.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.flock.php' class='function' rel='rdfs-seeAlso'>flock()</a> - Portable advisory file locking</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fgetss" value="<div id='splfileobject.fgetss' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fgetss.php'>SplFileObject::fgetss</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fgetss</span> &amp;mdash; <span class='dc-title'>Gets line from file and strip HTML tags</span></p> </div> <a name='splfileobject.fgetss.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileObject::fgetss</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$allowable_tags</tt></span> ] )</div> <p class='para rdfs-comment'> Identical to <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function'>SplFileObject::fgets</a></span>, except that <span class='methodname'><b>SplFileObject::fgetss</b></span> attempts to strip any HTML and PHP tags from the text it reads. </p> </div> <a name='splfileobject.fgetss.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>allowable_tags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> You can use the optional third parameter to specify tags which should not be stripped. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.fgetss.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing the next line of the file with HTML and PHP code stripped, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='splfileobject.fgetss.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fgetss</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;lt;&amp;lt;&amp;lt;EOD<br /></span><span style='color: #DD0000'>&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;<br />&amp;nbsp;&amp;lt;p&amp;gt;Welcome!&amp;nbsp;Today&amp;nbsp;is&amp;nbsp;the&amp;nbsp;&amp;lt;?php&amp;nbsp;echo(date('jS'));&amp;nbsp;?&amp;gt;&amp;nbsp;of&amp;nbsp;&amp;lt;?=&amp;nbsp;date('F');&amp;nbsp;?&amp;gt;.&amp;lt;/p&amp;gt;<br />&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;<br />Text&amp;nbsp;outside&amp;nbsp;of&amp;nbsp;the&amp;nbsp;HTML&amp;nbsp;block.<br /></span><span style='color: #007700'>EOD;<br /></span><span style='color: #0000BB'>file_put_contents</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'sample.php'</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>eof</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgetss</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Welcome! Today is the of . Text outside of the HTML block. </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.fgetss.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgetss.php' class='function' rel='rdfs-seeAlso'>fgetss()</a> - Gets line from file pointer and strip HTML tags</li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgets</a> - Gets line from file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetc.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgetc</a> - Gets character from file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fgets" value="<div id='splfileobject.fgets' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fgets.php'>SplFileObject::fgets</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fgets</span> &amp;mdash; <span class='dc-title'>Gets line from file</span></p> </div> <a name='splfileobject.fgets.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileObject::fgets</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a line from the file. </p> </div> <a name='splfileobject.fgets.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.fgets.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing the next line from the file, or <b><tt class='constant'>FALSE</tt></b> on error. </p> </div> <a name='splfileobject.fgets.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> if the file cannot be read. </p> </div> <a name='splfileobject.fgets.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fgets</b></span> example</b></p> <div class='example-contents para'><p>This example simply outputs the contents of <i>file.txt</i> line-by-line.</p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>eof</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.fgets.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fgets.php' class='function' rel='rdfs-seeAlso'>fgets()</a> - Gets line from file pointer</li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetss.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgetss</a> - Gets line from file and strip HTML tags</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetc.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgetc</a> - Gets character from file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fgetcsv" value="<div id='splfileobject.fgetcsv' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fgetcsv.php'>SplFileObject::fgetcsv</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fgetcsv</span> &amp;mdash; <span class='dc-title'>Gets line from file and parse as CSV fields</span></p> </div> <a name='splfileobject.fgetcsv.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><b>SplFileObject::fgetcsv</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <p class='para rdfs-comment'> Gets a line from the file which is in <acronym title='Comma Separated Value'>CSV</acronym> format and returns an array containing the fields read. </p> </div> <a name='splfileobject.fgetcsv.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delimiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The field delimiter (one character only). Defaults as a comma or the value set using <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function'>SplFileObject::setCsvControl</a></span>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>enclosure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The field enclosure character (one character only). Defaults as a double quotation mark or the value set using <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function'>SplFileObject::setCsvControl</a></span>. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>escape</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The escape character (one character only). Defaults as a backslash (<i>\</i>) or the value set using <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function'>SplFileObject::setCsvControl</a></span>. </p> </dd> </dl> <p> </p> </div> <a name='splfileobject.fgetcsv.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an indexed array containing the fields read, or <b><tt class='constant'>FALSE</tt></b> on error. </p> <blockquote><p><b class='note'>Note</b>: A blank line in a CSV file will be returned as an array comprising a single <b><tt class='constant'>NULL</tt></b> field unless using <b><tt class='constant'>SplFileInfo::SKIP_EMPTY | SplFileInfo::DROP_NEW_LINE</tt></b>, in which case empty lines are skipped. <br /> </p></blockquote> </div> <a name='splfileobject.fgetcsv.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fgetcsv</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'data.csv'</span><span style='color: #007700'>);<br />while&amp;nbsp;(!</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>eof</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgetcsv</span><span style='color: #007700'>());<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b><tt class='constant'>SplFileObject::READ_CSV</tt></b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'animals.csv'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFlags</span><span style='color: #007700'>(</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>::</span><span style='color: #0000BB'>READ_CSV</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list(</span><span style='color: #0000BB'>$animal</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$legs</span><span style='color: #007700'>)&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$row</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>printf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'A&amp;nbsp;%s&amp;nbsp;is&amp;nbsp;a&amp;nbsp;%s&amp;nbsp;with&amp;nbsp;%d&amp;nbsp;legs\n'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$animal</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$class</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$legs</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>Contents of animals.csv</p></div> <div class='example-contents programlisting'> <div class='txtcode'><pre class='txtcode'>crocodile,reptile,4 dolphin,mammal,0 duck,bird,2 koala,mammal,4 salmon,fish,0</pre> </div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> A crocodile is a reptile with 4 legs A dolphin is a mammal with 0 legs A duck is a bird with 2 legs A koala is a mammal with 4 legs A salmon is a fish with 0 legs </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.fgetcsv.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function' rel='rdfs-seeAlso'>SplFileObject::setCsvControl</a> - Set the delimiter and enclosure character for CSV</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setflags.php' class='function' rel='rdfs-seeAlso'>SplFileObject::setFlags</a> - Sets flags for the SplFileObject</span></li> <li class='member'><a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants.read-csv' class='link'>SplFileObject::READ_CSV</a></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function' rel='rdfs-seeAlso'>SplFileObject::current</a> - Retrieve current line of file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fgetc" value="<div id='splfileobject.fgetc' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fgetc.php'>SplFileObject::fgetc</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fgetc</span> &amp;mdash; <span class='dc-title'>Gets character from file</span></p> </div> <a name='splfileobject.fgetc.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileObject::fgetc</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets a character from the file. </p> </div> <a name='splfileobject.fgetc.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.fgetc.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing a single character read from the file or <b><tt class='constant'>FALSE</tt></b> on EOF. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function may return Boolean <b><tt class='constant'>FALSE</tt></b>, but may also return a non-Boolean value which evaluates to <b><tt class='constant'>FALSE</tt></b>, such as <i>0</i> or &amp;quot;&amp;quot;. Please read the section on <a href='http://www.php.net/manual/en/language.types.boolean.php' class='link'>Booleans</a> for more information. Use <a href='http://www.php.net/manual/en/language.operators.comparison.php' class='link'>the === operator</a> for testing the return value of this function.</p></div> </div> <a name='splfileobject.fgetc.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fgetc</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$char&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgetc</span><span style='color: #007700'>()))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$char</span><span style='color: #DD0000'>\n'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.fgetc.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function' rel='rdfs-seeAlso'>SplFileObject::fgets</a> - Gets line from file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::fflush" value="<div id='splfileobject.fflush' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.fflush.php'>SplFileObject::fflush</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::fflush</span> &amp;mdash; <span class='dc-title'>Flushes the output to the file</span></p> </div> <a name='splfileobject.fflush.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><b>SplFileObject::fflush</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Forces a write of all buffered output to the file. </p> </div> <a name='splfileobject.fflush.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.fflush.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='splfileobject.fflush.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::fflush</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'misc.txt'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'r+'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fflush</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftruncate</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>ftell</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileobject.fflush.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><b>SplFileInfo::fwrite</b></span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::eof" value="<div id='splfileobject.eof' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.eof.php'>SplFileObject::eof</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::eof</span> &amp;mdash; <span class='dc-title'>Reached end of file</span></p> </div> <a name='splfileobject.eof.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><b>SplFileObject::eof</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Determine whether the end of file has been reached </p> </div> <a name='splfileobject.eof.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.eof.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if file is at EOF, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileobject.eof.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::eof</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'fruits.txt'</span><span style='color: #007700'>);<br />while&amp;nbsp;(&amp;nbsp;!&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>eof</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fgets</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> apple banana cherry date elderberry </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.eof.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> <li class='member'><a href='http://www.php.net/manual/en/function.feof.php' class='function' rel='rdfs-seeAlso'>feof()</a> - Tests for end-of-file on a file pointer</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject::current" value="<div id='splfileobject.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileobject.current.php'>SplFileObject::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SplFileObject::current</span> &amp;mdash; <span class='dc-title'>Retrieve current line of file</span></p> </div> <a name='splfileobject.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type string|array'>string|array</span></span> <span class='methodname'><b>SplFileObject::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Retrieves the current line of the file. </p> </div> <a name='splfileobject.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileobject.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Retrieves the current line of the file. If the <b><tt class='constant'>SplFileObject::READ_CSV</tt></b> flag is set, this method returns an array containing the current line parsed as CSV data. </p> </div> <a name='splfileobject.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileObject::current</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$file&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$k&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$line</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;(</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;+&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>':&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$file</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1: &amp;lt;?php 2: $file = new SplFileObject(__FILE__); 3: foreach ($file as $line) { 4: echo ($file-&amp;gt;key() + 1) . &amp;#039;: &amp;#039; . $file-&amp;gt;current(); 5: } 6: ?&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='splfileobject.current.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function' rel='rdfs-seeAlso'>SplFileObject::key</a> - Get line number</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function' rel='rdfs-seeAlso'>SplFileObject::seek</a> - Seek to specified line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function' rel='rdfs-seeAlso'>SplFileObject::next</a> - Read next line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function' rel='rdfs-seeAlso'>SplFileObject::rewind</a> - Rewind the file to the first line</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function' rel='rdfs-seeAlso'>SplFileObject::valid</a> - Not at EOF</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileObject" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.splfileobject.php'>The SplFileObject class</a></h1> <div class='partintro'> <div id='splfileobject.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The SplFileObject class offers an object oriented interface for a file. </p> </div> <div id='splfileobject.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SplFileObject</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SplFileObject</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.seekableiterator.php' class='interfacename'>SeekableIterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Constants */</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants.drop-new-line'>SplFileObject::DROP_NEW_LINE</a></var> <span class='initializer'> = 1</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants.read-ahead'>SplFileObject::READ_AHEAD</a></var> <span class='initializer'> = 2</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants.skip-empty'>SplFileObject::SKIP_EMPTY</a></var> <span class='initializer'> = 6</span> ;</div> <div class='fieldsynopsis'> <span class='modifier'>const</span> <span class='type'>integer</span> <var class='fieldsynopsis_varname'><a href='http://www.php.net/manual/en/class.splfileobject.php#splfileobject.constants.read-csv'>SplFileObject::READ_CSV</a></var> <span class='initializer'> = 8</span> ;</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = &amp;quot;r&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string|array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.eof.php' class='function'>eof</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fflush.php' class='function'>fflush</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetc.php' class='function'>fgetc</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetcsv.php' class='function'>fgetcsv</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgets.php' class='function'>fgets</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fgetss.php' class='function'>fgetss</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$allowable_tags</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.flock.php' class='function'>flock</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$operation</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter reference'>&amp;amp;$wouldblock</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fpassthru.php' class='function'>fpassthru</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fscanf.php' class='function'>fscanf</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$format</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$...</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fseek.php' class='function'>fseek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$offset</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$whence</tt><span class='initializer'> = SEEK_SET</span></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fstat.php' class='function'>fstat</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.ftell.php' class='function'>ftell</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.ftruncate.php' class='function'>ftruncate</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$size</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.fwrite.php' class='function'>fwrite</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$length</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>array</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getcsvcontrol.php' class='function'>getCsvControl</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getflags.php' class='function'>getFlags</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.getmaxlinelen.php' class='function'>getMaxLineLen</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.seek.php' class='function'>seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$line_pos</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php' class='function'>setCsvControl</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$delimiter</tt><span class='initializer'> = &amp;quot;,&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$enclosure</tt><span class='initializer'> = &amp;quot;\&amp;quot;&amp;quot;</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$escape</tt><span class='initializer'> = &amp;quot;\\&amp;quot;</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setflags.php' class='function'>setFlags</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$flags</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php' class='function'>setMaxLineLen</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$max_len</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileobject.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.construct.php' class='function'>SplFileInfo::__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$file_name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getatime.php' class='function'>SplFileInfo::getATime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getbasename.php' class='function'>SplFileInfo::getBasename</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$suffix</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getctime.php' class='function'>SplFileInfo::getCTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileInfo</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfileinfo.php' class='function'>SplFileInfo::getFileInfo</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfilename.php' class='function'>SplFileInfo::getFilename</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getgroup.php' class='function'>SplFileInfo::getGroup</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getinode.php' class='function'>SplFileInfo::getInode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getlinktarget.php' class='function'>SplFileInfo::getLinkTarget</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getmtime.php' class='function'>SplFileInfo::getMTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getowner.php' class='function'>SplFileInfo::getOwner</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpath.php' class='function'>SplFileInfo::getPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileInfo</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpathinfo.php' class='function'>SplFileInfo::getPathInfo</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpathname.php' class='function'>SplFileInfo::getPathname</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getperms.php' class='function'>SplFileInfo::getPerms</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function'>SplFileInfo::getRealPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getsize.php' class='function'>SplFileInfo::getSize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.gettype.php' class='function'>SplFileInfo::getType</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isdir.php' class='function'>SplFileInfo::isDir</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isexecutable.php' class='function'>SplFileInfo::isExecutable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isfile.php' class='function'>SplFileInfo::isFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.islink.php' class='function'>SplFileInfo::isLink</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isreadable.php' class='function'>SplFileInfo::isReadable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.iswritable.php' class='function'>SplFileInfo::isWritable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileObject</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.openfile.php' class='function'>SplFileInfo::openFile</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = r</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt><span class='initializer'> = null</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setfileclass.php' class='function'>SplFileInfo::setFileClass</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php' class='function'>SplFileInfo::setInfoClass</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.tostring.php' class='function'>SplFileInfo::__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='splfileobject.constants' class='section'> <h2 class='title'>Predefined Constants</h2> <dl> <dt id='splfileobject.constants.drop-new-line' class='varlistentry'> <span class='term'><b><tt class='constant'>SplFileObject::DROP_NEW_LINE</tt></b></span> </dt><dd class='listitem'> <p class='para'>Drop newlines at the end of a line.</p> </dd> <dt id='splfileobject.constants.read-ahead' class='varlistentry'> <span class='term'><b><tt class='constant'>SplFileObject::READ_AHEAD</tt></b></span> </dt><dd class='listitem'> <p class='para'>Read on rewind/next.</p> </dd> <dt id='splfileobject.constants.skip-empty' class='varlistentry'> <span class='term'><b><tt class='constant'>SplFileObject::SKIP_EMPTY</tt></b></span> </dt><dd class='listitem'> <p class='para'>Skips empty lines in the file.</p> </dd> <dt id='splfileobject.constants.read-csv' class='varlistentry'> <span class='term'><b><tt class='constant'>SplFileObject::READ_CSV</tt></b></span> </dt><dd class='listitem'> <p class='para'>Read lines as CSV rows.</p> </dd> </dl> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/splfileobject.construct.php'>SplFileObject::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a new file object.</li><li><a href='http://www.php.net/manual/en/splfileobject.current.php'>SplFileObject::current</a> &amp;acirc;&amp;#128;&amp;#148; Retrieve current line of file</li><li><a href='http://www.php.net/manual/en/splfileobject.eof.php'>SplFileObject::eof</a> &amp;acirc;&amp;#128;&amp;#148; Reached end of file</li><li><a href='http://www.php.net/manual/en/splfileobject.fflush.php'>SplFileObject::fflush</a> &amp;acirc;&amp;#128;&amp;#148; Flushes the output to the file</li><li><a href='http://www.php.net/manual/en/splfileobject.fgetc.php'>SplFileObject::fgetc</a> &amp;acirc;&amp;#128;&amp;#148; Gets character from file</li><li><a href='http://www.php.net/manual/en/splfileobject.fgetcsv.php'>SplFileObject::fgetcsv</a> &amp;acirc;&amp;#128;&amp;#148; Gets line from file and parse as CSV fields</li><li><a href='http://www.php.net/manual/en/splfileobject.fgets.php'>SplFileObject::fgets</a> &amp;acirc;&amp;#128;&amp;#148; Gets line from file</li><li><a href='http://www.php.net/manual/en/splfileobject.fgetss.php'>SplFileObject::fgetss</a> &amp;acirc;&amp;#128;&amp;#148; Gets line from file and strip HTML tags</li><li><a href='http://www.php.net/manual/en/splfileobject.flock.php'>SplFileObject::flock</a> &amp;acirc;&amp;#128;&amp;#148; Portable file locking</li><li><a href='http://www.php.net/manual/en/splfileobject.fpassthru.php'>SplFileObject::fpassthru</a> &amp;acirc;&amp;#128;&amp;#148; Output all remaining data on a file pointer</li><li><a href='http://www.php.net/manual/en/splfileobject.fscanf.php'>SplFileObject::fscanf</a> &amp;acirc;&amp;#128;&amp;#148; Parses input from file according to a format</li><li><a href='http://www.php.net/manual/en/splfileobject.fseek.php'>SplFileObject::fseek</a> &amp;acirc;&amp;#128;&amp;#148; Seek to a position</li><li><a href='http://www.php.net/manual/en/splfileobject.fstat.php'>SplFileObject::fstat</a> &amp;acirc;&amp;#128;&amp;#148; Gets information about the file</li><li><a href='http://www.php.net/manual/en/splfileobject.ftell.php'>SplFileObject::ftell</a> &amp;acirc;&amp;#128;&amp;#148; Return current file position</li><li><a href='http://www.php.net/manual/en/splfileobject.ftruncate.php'>SplFileObject::ftruncate</a> &amp;acirc;&amp;#128;&amp;#148; Truncates the file to a given length</li><li><a href='http://www.php.net/manual/en/splfileobject.fwrite.php'>SplFileObject::fwrite</a> &amp;acirc;&amp;#128;&amp;#148; Write to file</li><li><a href='http://www.php.net/manual/en/splfileobject.getchildren.php'>SplFileObject::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; No purpose</li><li><a href='http://www.php.net/manual/en/splfileobject.getcsvcontrol.php'>SplFileObject::getCsvControl</a> &amp;acirc;&amp;#128;&amp;#148; Get the delimiter and enclosure character for CSV</li><li><a href='http://www.php.net/manual/en/splfileobject.getcurrentline.php'>SplFileObject::getCurrentLine</a> &amp;acirc;&amp;#128;&amp;#148; Alias of SplFileObject::fgets</li><li><a href='http://www.php.net/manual/en/splfileobject.getflags.php'>SplFileObject::getFlags</a> &amp;acirc;&amp;#128;&amp;#148; Gets flags for the SplFileObject</li><li><a href='http://www.php.net/manual/en/splfileobject.getmaxlinelen.php'>SplFileObject::getMaxLineLen</a> &amp;acirc;&amp;#128;&amp;#148; Get maximum line length</li><li><a href='http://www.php.net/manual/en/splfileobject.haschildren.php'>SplFileObject::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; SplFileObject does not have children</li><li><a href='http://www.php.net/manual/en/splfileobject.key.php'>SplFileObject::key</a> &amp;acirc;&amp;#128;&amp;#148; Get line number</li><li><a href='http://www.php.net/manual/en/splfileobject.next.php'>SplFileObject::next</a> &amp;acirc;&amp;#128;&amp;#148; Read next line</li><li><a href='http://www.php.net/manual/en/splfileobject.rewind.php'>SplFileObject::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind the file to the first line</li><li><a href='http://www.php.net/manual/en/splfileobject.seek.php'>SplFileObject::seek</a> &amp;acirc;&amp;#128;&amp;#148; Seek to specified line</li><li><a href='http://www.php.net/manual/en/splfileobject.setcsvcontrol.php'>SplFileObject::setCsvControl</a> &amp;acirc;&amp;#128;&amp;#148; Set the delimiter and enclosure character for CSV</li><li><a href='http://www.php.net/manual/en/splfileobject.setflags.php'>SplFileObject::setFlags</a> &amp;acirc;&amp;#128;&amp;#148; Sets flags for the SplFileObject</li><li><a href='http://www.php.net/manual/en/splfileobject.setmaxlinelen.php'>SplFileObject::setMaxLineLen</a> &amp;acirc;&amp;#128;&amp;#148; Set maximum line length</li><li><a href='http://www.php.net/manual/en/splfileobject.tostring.php'>SplFileObject::__toString</a> &amp;acirc;&amp;#128;&amp;#148; Alias of SplFileObject::current</li><li><a href='http://www.php.net/manual/en/splfileobject.valid.php'>SplFileObject::valid</a> &amp;acirc;&amp;#128;&amp;#148; Not at EOF</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::__toString" value="<div id='splfileinfo.tostring' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.tostring.php'>SplFileInfo::__toString</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::__toString</span> &amp;mdash; <span class='dc-title'>Returns the path to the file as a string</span></p> </div> <a name='splfileinfo.tostring.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileInfo::__toString</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method will return the file name of the referenced file. </p> </div> <a name='splfileinfo.tostring.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.tostring.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path to the file. </p> </div> <a name='splfileinfo.tostring.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::__toString()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>__toString</span><span style='color: #007700'>());<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>.</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin/php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>__toString</span><span style='color: #007700'>());<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>.</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(3) &amp;quot;foo&amp;quot; foo string(12) &amp;quot;/usr/bin/php&amp;quot; /usr/bin/php </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::__construct" value="<div id='splfileinfo.construct' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.construct.php'>SplFileInfo::__construct</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::__construct</span> &amp;mdash; <span class='dc-title'>Construct a new SplFileInfo object</span></p> </div> <a name='splfileinfo.construct.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='methodname'><b>SplFileInfo::__construct</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$file_name</tt></span> )</div> <p class='para rdfs-comment'> Creates a new SplFileInfo object for the file_name specified. The file does not need to exist, or be readable. </p> </div> <a name='splfileinfo.construct.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>file_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Path to the file. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.construct.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::__construct()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'example.php'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFile</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::setInfoClass" value="<div id='splfileinfo.setinfoclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php'>SplFileInfo::setInfoClass</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::setInfoClass</span> &amp;mdash; <span class='dc-title'>Sets the class used with getFileInfo and getPathInfo</span></p> </div> <a name='splfileinfo.setinfoclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileInfo::setInfoClass</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <p class='para rdfs-comment'> Use this method to set a custom class which will be used when getFileInfo and getPathInfo are called. The class name passed to this method must be derived from SplFileInfo. </p> </div> <a name='splfileinfo.setinfoclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name to use. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.setinfoclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileinfo.setinfoclass.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <a href='http://www.php.net/manual/en/splfileinfo.setfileclass.php' class='function'>SplFileInfo::setFileClass()</a> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Define&amp;nbsp;a&amp;nbsp;class&amp;nbsp;which&amp;nbsp;extends&amp;nbsp;SplFileInfo<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>MyFoo&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo&amp;nbsp;</span><span style='color: #007700'>{}<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;class&amp;nbsp;name&amp;nbsp;to&amp;nbsp;use<br /></span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setInfoClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyFoo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFileInfo</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(MyFoo)#2 (0) { } </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.setinfoclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfileinfo.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getFileInfo</a> - Gets an SplFileInfo object for the file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::setFileClass" value="<div id='splfileinfo.setfileclass' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.setfileclass.php'>SplFileInfo::setFileClass</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::setFileClass</span> &amp;mdash; <span class='dc-title'>Sets the class name used with <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.openfile.php' class='function'>SplFileInfo::openFile</a></span></span></p> </div> <a name='splfileinfo.setfileclass.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SplFileInfo::setFileClass</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <p class='para rdfs-comment'> Set the class name which SplFileInfo will use to open files with when openFile() is called. The class name passed to this method must be derived from SplFileObject. </p> </div> <a name='splfileinfo.setfileclass.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The class name to use when openFile() is called. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.setfileclass.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='splfileinfo.setfileclass.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::setFileClass()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;class&amp;nbsp;extending&amp;nbsp;SplFileObject<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>MyFoo&amp;nbsp;</span><span style='color: #007700'>extends&amp;nbsp;</span><span style='color: #0000BB'>SplFileObject&amp;nbsp;</span><span style='color: #007700'>{}<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #FF8000'>//&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;class&amp;nbsp;to&amp;nbsp;use<br /></span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>setFileClass</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'MyFoo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>openFile</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(MyFoo)#2 (0) { } </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.setfileclass.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.openfile.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::openFile</a> - Gets an SplFileObject object for the file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::openFile" value="<div id='splfileinfo.openfile' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.openfile.php'>SplFileInfo::openFile</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::openFile</span> &amp;mdash; <span class='dc-title'>Gets an SplFileObject object for the file</span></p> </div> <a name='splfileinfo.openfile.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.splfileobject.php' class='type SplFileObject'>SplFileObject</a></span> <span class='methodname'><b>SplFileInfo::openFile</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = r</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt><span class='initializer'> = null</span></span> ]]] )</div> <p class='para rdfs-comment'> Creates an <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a> of the file. This is useful because <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> contains additional methods for manipulating the file whereas <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> is only useful for gaining information, like whether the file is writable. </p> </div> <a name='splfileinfo.openfile.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>open_mode</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The mode for opening the file. See the <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> documentation for descriptions of possible modes. The default is read only. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>use_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When set to <b><tt class='constant'>TRUE</tt></b>, the filename is also searched for within the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Refer to the <a href='http://www.php.net/manual/en/context.php' class='link'>context</a> section of the manual for a description of <i>contexts</i>. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.openfile.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The opened file as an <a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a> <a href='http://www.php.net/manual/en/language.types.object.php' class='type object'>object</a>. </p> </div> <a name='splfileinfo.openfile.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> A <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RuntimeException</a> if the file cannot be opened (e.g. insufficient access rights). </p> </div> <a name='splfileinfo.openfile.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SplFileInfo::openFile</b></span> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$fileinfo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp/foo.txt'</span><span style='color: #007700'>);<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isWritable</span><span style='color: #007700'>())&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$fileobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$fileinfo</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>openFile</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'a'</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$fileobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'appended&amp;nbsp;this&amp;nbsp;sample&amp;nbsp;text'</span><span style='color: #007700'>);<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileinfo.openfile.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/class.splfileobject.php' class='classname'>SplFileObject</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.stream-context-create.php' class='function' rel='rdfs-seeAlso'>stream_context_create()</a> - Create a streams context</li> <li class='member'><a href='http://www.php.net/manual/en/function.fopen.php' class='function' rel='rdfs-seeAlso'>fopen()</a> - Opens file or URL</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isWritable" value="<div id='splfileinfo.iswritable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.iswritable.php'>SplFileInfo::isWritable</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isWritable</span> &amp;mdash; <span class='dc-title'>Tells if the entry is writable</span></p> </div> <a name='splfileinfo.iswritable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isWritable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the current entry is writable. </p> </div> <a name='splfileinfo.iswritable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.iswritable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if writable, <b><tt class='constant'>FALSE</tt></b> otherwise; </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isReadable" value="<div id='splfileinfo.isreadable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.isreadable.php'>SplFileInfo::isReadable</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isReadable</span> &amp;mdash; <span class='dc-title'>Tells if file is readable</span></p> </div> <a name='splfileinfo.isreadable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isReadable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Check if the file is readable. </p> </div> <a name='splfileinfo.isreadable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.isreadable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if readable, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileinfo.isreadable.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::isReadable()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isReadable</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isReadable</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isLink" value="<div id='splfileinfo.islink' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.islink.php'>SplFileInfo::isLink</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isLink</span> &amp;mdash; <span class='dc-title'>Tells if the file is a link</span></p> </div> <a name='splfileinfo.islink.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isLink</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Use this method to check if the file referenced by the SplFileInfo object is a link. </p> </div> <a name='splfileinfo.islink.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.islink.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the file is a link, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileinfo.islink.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::isLink()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/symlink'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isLink</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;real&amp;nbsp;path&amp;nbsp;is&amp;nbsp;'</span><span style='color: #007700'>.</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileinfo.islink.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getRealPath</a> - Gets absolute path to file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isFile" value="<div id='splfileinfo.isfile' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.isfile.php'>SplFileInfo::isFile</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isFile</span> &amp;mdash; <span class='dc-title'>Tells if the object references a regular file</span></p> </div> <a name='splfileinfo.isfile.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isFile</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the file referenced by this SplFileInfo object exists and is a regular file. </p> </div> <a name='splfileinfo.isfile.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.isfile.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the file exists and is a regular file (not a link), <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileinfo.isfile.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::isFile()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFile</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isFile</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isExecutable" value="<div id='splfileinfo.isexecutable' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.isexecutable.php'>SplFileInfo::isExecutable</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isExecutable</span> &amp;mdash; <span class='dc-title'>Tells if the file is executable</span></p> </div> <a name='splfileinfo.isexecutable.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isExecutable</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Checks if the file is executable. </p> </div> <a name='splfileinfo.isexecutable.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.isexecutable.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if executable, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileinfo.isexecutable.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::isExecutable()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin/php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isExecutable</span><span style='color: #007700'>());&amp;nbsp;<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isExecutable</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isExecutable</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::isDir" value="<div id='splfileinfo.isdir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.isdir.php'>SplFileInfo::isDir</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::isDir</span> &amp;mdash; <span class='dc-title'>Tells if the file is a directory</span></p> </div> <a name='splfileinfo.isdir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><b>SplFileInfo::isDir</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method can be used to determine if the file is a directory. </p> </div> <a name='splfileinfo.isdir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.isdir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if a directory, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='splfileinfo.isdir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::isDir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDir</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isDir</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(true) bool(false) </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getType" value="<div id='splfileinfo.gettype' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.gettype.php'>SplFileInfo::getType</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getType</span> &amp;mdash; <span class='dc-title'>Gets file type</span></p> </div> <a name='splfileinfo.gettype.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getType</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the type of the file referenced. </p> </div> <a name='splfileinfo.gettype.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.gettype.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> A <a href='http://www.php.net/manual/en/language.types.string.php' class='type string'>string</a> representing the type of the entry. May be one of <i>file</i>, <i>link</i>, or <i>dir</i> </p> </div> <a name='splfileinfo.gettype.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws a RuntimeException on error. </p> </div> <a name='splfileinfo.gettype.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getType()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getType</span><span style='color: #007700'>().</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>dirname</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>));<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getType</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> file dir </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getSize" value="<div id='splfileinfo.getsize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getsize.php'>SplFileInfo::getSize</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getSize</span> &amp;mdash; <span class='dc-title'>Gets file size</span></p> </div> <a name='splfileinfo.getsize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getSize</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the filesize in bytes for the file referenced. </p> </div> <a name='splfileinfo.getsize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getsize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The filesize in bytes. </p> </div> <a name='splfileinfo.getsize.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> A RuntimeException will be thrown if the file does not exist or an error occurs. </p> </div> <a name='splfileinfo.getsize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filesize.php' class='function' rel='rdfs-seeAlso'>filesize()</a> - Gets file size</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getRealPath" value="<div id='splfileinfo.getrealpath' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getrealpath.php'>SplFileInfo::getRealPath</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getRealPath</span> &amp;mdash; <span class='dc-title'>Gets absolute path to file</span></p> </div> <a name='splfileinfo.getrealpath.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getRealPath</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method expands all symbolic links, resolves relative references and returns the real path to the file. </p> </div> <a name='splfileinfo.getrealpath.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getrealpath.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path to the file. </p> </div> <a name='splfileinfo.getrealpath.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getRealPath()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/..//./../../'</span><span style='color: #007700'>.</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(28) &amp;quot;/private/tmp/phptempfile.php&amp;quot; string(12) &amp;quot;/private/tmp&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getrealpath.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.islink.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::isLink</a> - Tells if the file is a link</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getPerms" value="<div id='splfileinfo.getperms' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getperms.php'>SplFileInfo::getPerms</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getPerms</span> &amp;mdash; <span class='dc-title'>Gets file permissions</span></p> </div> <a name='splfileinfo.getperms.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getPerms</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the file permissions for the file. </p> </div> <a name='splfileinfo.getperms.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getperms.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the file permissions. </p> </div> <a name='splfileinfo.getperms.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getPerms()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPerms</span><span style='color: #007700'>()),&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>substr</span><span style='color: #007700'>(</span><span style='color: #0000BB'>sprintf</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%o'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPerms</span><span style='color: #007700'>()),&amp;nbsp;-</span><span style='color: #0000BB'>4</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> 1777 0644 </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getPathname" value="<div id='splfileinfo.getpathname' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getpathname.php'>SplFileInfo::getPathname</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getPathname</span> &amp;mdash; <span class='dc-title'>Gets the path to the file</span></p> </div> <a name='splfileinfo.getpathname.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getPathname</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the path to the file. </p> </div> <a name='splfileinfo.getpathname.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getpathname.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The path to the file. </p> </div> <a name='splfileinfo.getpathname.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getPathname()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin/php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPathname</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(12) &amp;quot;/usr/bin/php&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getpathname.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getRealPath</a> - Gets absolute path to file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getPathInfo" value="<div id='splfileinfo.getpathinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getpathinfo.php'>SplFileInfo::getPathInfo</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getPathInfo</span> &amp;mdash; <span class='dc-title'>Gets an SplFileInfo object for the path</span></p> </div> <a name='splfileinfo.getpathinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.splfileinfo.php' class='type SplFileInfo'>SplFileInfo</a></span> <span class='methodname'><b>SplFileInfo::getPathInfo</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <p class='para rdfs-comment'> Gets an <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> object for the parent of the current file. </p> </div> <a name='splfileinfo.getpathinfo.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of an <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> derived class to use. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.getpathinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> object for the parent path of the file. </p> </div> <a name='splfileinfo.getpathinfo.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getPathInfo()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin/php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$parent_info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPathInfo</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$parent_info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(8) &amp;quot;/usr/bin&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getpathinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::setInfoClass</a> - Sets the class used with getFileInfo and getPathInfo</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getPath" value="<div id='splfileinfo.getpath' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getpath.php'>SplFileInfo::getPath</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getPath</span> &amp;mdash; <span class='dc-title'>Gets the path without filename</span></p> </div> <a name='splfileinfo.getpath.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getPath</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the path to the file, omitting the filename and any trailing slash. </p> </div> <a name='splfileinfo.getpath.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getpath.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path to the file. </p> </div> <a name='splfileinfo.getpath.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getPath()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/bin/php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPath</span><span style='color: #007700'>());<br /><br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/usr/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getPath</span><span style='color: #007700'>());</span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(8) &amp;quot;/usr/bin&amp;quot; string(4) &amp;quot;/usr&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getpath.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getRealPath</a> - Gets absolute path to file</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfilename.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getFilename</a> - Gets the filename</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpathinfo.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getPathInfo</a> - Gets an SplFileInfo object for the path</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getOwner" value="<div id='splfileinfo.getowner' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getowner.php'>SplFileInfo::getOwner</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getOwner</span> &amp;mdash; <span class='dc-title'>Gets the owner of the file</span></p> </div> <a name='splfileinfo.getowner.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getOwner</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the file owner. The owner ID is returned in numerical format. </p> </div> <a name='splfileinfo.getowner.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getowner.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The owner id in numerical format. </p> </div> <a name='splfileinfo.getowner.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws RuntimeException on error. </p> </div> <a name='splfileinfo.getowner.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getOwner()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>posix_getpwuid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getOwner</span><span style='color: #007700'>()));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='splfileinfo.getowner.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.posix-getpwuid.php' class='function' rel='rdfs-seeAlso'>posix_getpwuid()</a> - Return info about a user by user id</li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getgroup.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getGroup</a> - Gets the file group</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getMTime" value="<div id='splfileinfo.getmtime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getmtime.php'>SplFileInfo::getMTime</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getMTime</span> &amp;mdash; <span class='dc-title'>Gets the last modified time</span></p> </div> <a name='splfileinfo.getmtime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getMTime</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the time when the contents of the file were changed. The time returned is a Unix timestamp. </p> </div> <a name='splfileinfo.getmtime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getmtime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the last modified time for the file, in a Unix timestamp. </p> </div> <a name='splfileinfo.getmtime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filemtime.php' class='function' rel='rdfs-seeAlso'>filemtime()</a> - Gets file modification time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getLinkTarget" value="<div id='splfileinfo.getlinktarget' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getlinktarget.php'>SplFileInfo::getLinkTarget</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getLinkTarget</span> &amp;mdash; <span class='dc-title'>Gets the target of a link</span></p> </div> <a name='splfileinfo.getlinktarget.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getLinkTarget</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the target of a filesystem link. </p> <blockquote><p><b class='note'>Note</b>: The target may not be the real path on the filesystem. Use <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function'>SplFileInfo::getRealPath</a></span> to determine the true path on the filesystem. <br /> </p></blockquote> </div> <a name='splfileinfo.getlinktarget.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getlinktarget.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the target of the filesystem link. </p> </div> <a name='splfileinfo.getlinktarget.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws RuntimeException on error. </p> </div> <a name='splfileinfo.getlinktarget.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getLinkTarget()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/Users/bbieber/workspace'</span><span style='color: #007700'>);<br />if&amp;nbsp;(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>isLink</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getLinkTarget</span><span style='color: #007700'>());<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getRealPath</span><span style='color: #007700'>());<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(19) &amp;quot;Documents/workspace&amp;quot; string(34) &amp;quot;/Users/bbieber/Documents/workspace&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getlinktarget.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.islink.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::isLink</a> - Tells if the file is a link</span></li> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getRealPath</a> - Gets absolute path to file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getInode" value="<div id='splfileinfo.getinode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getinode.php'>SplFileInfo::getInode</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getInode</span> &amp;mdash; <span class='dc-title'>Gets the inode for the file</span></p> </div> <a name='splfileinfo.getinode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getInode</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the inode number for the filesystem object. </p> </div> <a name='splfileinfo.getinode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getinode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the inode number for the filesystem object. </p> </div> <a name='splfileinfo.getinode.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws RuntimeException on error. </p> </div> <a name='splfileinfo.getinode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fileinode.php' class='function' rel='rdfs-seeAlso'>fileinode()</a> - Gets file inode</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getGroup" value="<div id='splfileinfo.getgroup' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getgroup.php'>SplFileInfo::getGroup</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getGroup</span> &amp;mdash; <span class='dc-title'>Gets the file group</span></p> </div> <a name='splfileinfo.getgroup.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getGroup</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the file group. The group ID is returned in numerical format. </p> </div> <a name='splfileinfo.getgroup.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getgroup.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The group id in numerical format. </p> </div> <a name='splfileinfo.getgroup.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws RuntimeException on error. </p> </div> <a name='splfileinfo.getgroup.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getGroup()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>posix_getgrgid</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getGroup</span><span style='color: #007700'>()));</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> </div><p> </p> </div> <a name='splfileinfo.getgroup.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.posix-getgrgid.php' class='function' rel='rdfs-seeAlso'>posix_getgrgid()</a> - Return info about a group by group id</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getFilename" value="<div id='splfileinfo.getfilename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getfilename.php'>SplFileInfo::getFilename</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getFilename</span> &amp;mdash; <span class='dc-title'>Gets the filename</span></p> </div> <a name='splfileinfo.getfilename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getFilename</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the filename without any path information. </p> </div> <a name='splfileinfo.getfilename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getfilename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The filename. </p> </div> <a name='splfileinfo.getfilename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getFilename()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'foo.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/foo.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.php.net/'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'http://www.php.net/svn.php'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getFilename</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(7) &amp;quot;foo.txt&amp;quot; string(7) &amp;quot;foo.txt&amp;quot; string(0) &amp;quot;&amp;quot; string(7) &amp;quot;svn.php&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getfilename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getbasename.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getBasename</a> - Gets the base name of the file</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getFileInfo" value="<div id='splfileinfo.getfileinfo' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getfileinfo.php'>SplFileInfo::getFileInfo</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getFileInfo</span> &amp;mdash; <span class='dc-title'>Gets an SplFileInfo object for the file</span></p> </div> <a name='splfileinfo.getfileinfo.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/class.splfileinfo.php' class='type SplFileInfo'>SplFileInfo</a></span> <span class='methodname'><b>SplFileInfo::getFileInfo</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <p class='para rdfs-comment'> This method gets an <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> object for the referenced file. </p> </div> <a name='splfileinfo.getfileinfo.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>class_name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of an <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> derived class to use. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.getfileinfo.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> An <a href='http://www.php.net/manual/en/class.splfileinfo.php' class='classname'>SplFileInfo</a> object created for the file. </p> </div> <a name='splfileinfo.getfileinfo.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::setInfoClass</a> - Sets the class used with getFileInfo and getPathInfo</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getCTime" value="<div id='splfileinfo.getctime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getctime.php'>SplFileInfo::getCTime</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getCTime</span> &amp;mdash; <span class='dc-title'>Gets the inode change time</span></p> </div> <a name='splfileinfo.getctime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getCTime</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Returns the inode change time for the file. The time returned is a Unix timestamp. </p> </div> <a name='splfileinfo.getctime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getctime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The last change time, in a Unix timestamp. </p> </div> <a name='splfileinfo.getctime.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RunTimeException</a> on error. </p> </div> <a name='splfileinfo.getctime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getCTime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #0000BB'>__FILE__</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Last&amp;nbsp;changed&amp;nbsp;at&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'g:i&amp;nbsp;a'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getCTime</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Last changed at 1:49 pm </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getctime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.filectime.php' class='function' rel='rdfs-seeAlso'>filectime()</a> - Gets inode change time of file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getBasename" value="<div id='splfileinfo.getbasename' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getbasename.php'>SplFileInfo::getBasename</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.2.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getBasename</span> &amp;mdash; <span class='dc-title'>Gets the base name of the file</span></p> </div> <a name='splfileinfo.getbasename.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>SplFileInfo::getBasename</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$suffix</tt></span> ] )</div> <p class='para rdfs-comment'> This method returns the base name of the file, directory, or link without path info. </p> </div> <a name='splfileinfo.getbasename.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>suffix</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Optional suffix to omit from the base name returned. </p> </dd> </dl> <p> </p> </div> <a name='splfileinfo.getbasename.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the base name without path information. </p> </div> <a name='splfileinfo.getbasename.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>SplFileInfo::getBasename()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getbaseName</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getbaseName</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$info&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SplFileInfo</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/path/to/file.txt'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$info</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getbaseName</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'.txt'</span><span style='color: #007700'>));<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(8) &amp;quot;file.txt&amp;quot; string(8) &amp;quot;file.txt&amp;quot; string(4) &amp;quot;file&amp;quot; </pre></div> </div> </div><p> </p> </div> <a name='splfileinfo.getbasename.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfilename.php' class='function' rel='rdfs-seeAlso'>SplFileInfo::getFilename</a> - Gets the filename</span></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo::getATime" value="<div id='splfileinfo.getatime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/splfileinfo.getatime.php'>SplFileInfo::getATime</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.2)</p><p class='refpurpose'><span class='refname'>SplFileInfo::getATime</span> &amp;mdash; <span class='dc-title'>Gets last access time of the file</span></p> </div> <a name='splfileinfo.getatime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><b>SplFileInfo::getATime</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the last access time for the file. </p> </div> <a name='splfileinfo.getatime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='splfileinfo.getatime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the time the file was last accessed. </p> </div> <a name='splfileinfo.getatime.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <a href='http://www.php.net/manual/en/class.runtimeexception.php' class='classname'>RunTimeException</a> on error. </p> </div> <a name='splfileinfo.getatime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.fileatime.php' class='function' rel='rdfs-seeAlso'>fileatime()</a> - Gets last access time of file</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SplFileInfo" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.splfileinfo.php'>The SplFileInfo class</a></h1> <div class='partintro'> <div id='splfileinfo.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The SplFileInfo class offers a high-level object oriented interface to information for an individual file. </p> </div> <div id='splfileinfo.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SplFileInfo</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SplFileInfo</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.construct.php' class='function'>__construct</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$file_name</tt></span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getatime.php' class='function'>getATime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getbasename.php' class='function'>getBasename</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$suffix</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getctime.php' class='function'>getCTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileInfo</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfileinfo.php' class='function'>getFileInfo</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getfilename.php' class='function'>getFilename</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getgroup.php' class='function'>getGroup</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getinode.php' class='function'>getInode</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getlinktarget.php' class='function'>getLinkTarget</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getmtime.php' class='function'>getMTime</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getowner.php' class='function'>getOwner</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpath.php' class='function'>getPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileInfo</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpathinfo.php' class='function'>getPathInfo</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getpathname.php' class='function'>getPathname</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getperms.php' class='function'>getPerms</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php' class='function'>getRealPath</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>int</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.getsize.php' class='function'>getSize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.gettype.php' class='function'>getType</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isdir.php' class='function'>isDir</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isexecutable.php' class='function'>isExecutable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isfile.php' class='function'>isFile</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.islink.php' class='function'>isLink</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.isreadable.php' class='function'>isReadable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.iswritable.php' class='function'>isWritable</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>SplFileObject</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.openfile.php' class='function'>openFile</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$open_mode</tt><span class='initializer'> = r</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$use_include_path</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt><span class='initializer'> = null</span></span> ]]] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setfileclass.php' class='function'>setFileClass</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php' class='function'>setInfoClass</a></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$class_name</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/splfileinfo.tostring.php' class='function'>__toString</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/splfileinfo.construct.php'>SplFileInfo::__construct</a> &amp;acirc;&amp;#128;&amp;#148; Construct a new SplFileInfo object</li><li><a href='http://www.php.net/manual/en/splfileinfo.getatime.php'>SplFileInfo::getATime</a> &amp;acirc;&amp;#128;&amp;#148; Gets last access time of the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getbasename.php'>SplFileInfo::getBasename</a> &amp;acirc;&amp;#128;&amp;#148; Gets the base name of the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getctime.php'>SplFileInfo::getCTime</a> &amp;acirc;&amp;#128;&amp;#148; Gets the inode change time</li><li><a href='http://www.php.net/manual/en/splfileinfo.getfileinfo.php'>SplFileInfo::getFileInfo</a> &amp;acirc;&amp;#128;&amp;#148; Gets an SplFileInfo object for the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getfilename.php'>SplFileInfo::getFilename</a> &amp;acirc;&amp;#128;&amp;#148; Gets the filename</li><li><a href='http://www.php.net/manual/en/splfileinfo.getgroup.php'>SplFileInfo::getGroup</a> &amp;acirc;&amp;#128;&amp;#148; Gets the file group</li><li><a href='http://www.php.net/manual/en/splfileinfo.getinode.php'>SplFileInfo::getInode</a> &amp;acirc;&amp;#128;&amp;#148; Gets the inode for the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getlinktarget.php'>SplFileInfo::getLinkTarget</a> &amp;acirc;&amp;#128;&amp;#148; Gets the target of a link</li><li><a href='http://www.php.net/manual/en/splfileinfo.getmtime.php'>SplFileInfo::getMTime</a> &amp;acirc;&amp;#128;&amp;#148; Gets the last modified time</li><li><a href='http://www.php.net/manual/en/splfileinfo.getowner.php'>SplFileInfo::getOwner</a> &amp;acirc;&amp;#128;&amp;#148; Gets the owner of the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getpath.php'>SplFileInfo::getPath</a> &amp;acirc;&amp;#128;&amp;#148; Gets the path without filename</li><li><a href='http://www.php.net/manual/en/splfileinfo.getpathinfo.php'>SplFileInfo::getPathInfo</a> &amp;acirc;&amp;#128;&amp;#148; Gets an SplFileInfo object for the path</li><li><a href='http://www.php.net/manual/en/splfileinfo.getpathname.php'>SplFileInfo::getPathname</a> &amp;acirc;&amp;#128;&amp;#148; Gets the path to the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getperms.php'>SplFileInfo::getPerms</a> &amp;acirc;&amp;#128;&amp;#148; Gets file permissions</li><li><a href='http://www.php.net/manual/en/splfileinfo.getrealpath.php'>SplFileInfo::getRealPath</a> &amp;acirc;&amp;#128;&amp;#148; Gets absolute path to file</li><li><a href='http://www.php.net/manual/en/splfileinfo.getsize.php'>SplFileInfo::getSize</a> &amp;acirc;&amp;#128;&amp;#148; Gets file size</li><li><a href='http://www.php.net/manual/en/splfileinfo.gettype.php'>SplFileInfo::getType</a> &amp;acirc;&amp;#128;&amp;#148; Gets file type</li><li><a href='http://www.php.net/manual/en/splfileinfo.isdir.php'>SplFileInfo::isDir</a> &amp;acirc;&amp;#128;&amp;#148; Tells if the file is a directory</li><li><a href='http://www.php.net/manual/en/splfileinfo.isexecutable.php'>SplFileInfo::isExecutable</a> &amp;acirc;&amp;#128;&amp;#148; Tells if the file is executable</li><li><a href='http://www.php.net/manual/en/splfileinfo.isfile.php'>SplFileInfo::isFile</a> &amp;acirc;&amp;#128;&amp;#148; Tells if the object references a regular file</li><li><a href='http://www.php.net/manual/en/splfileinfo.islink.php'>SplFileInfo::isLink</a> &amp;acirc;&amp;#128;&amp;#148; Tells if the file is a link</li><li><a href='http://www.php.net/manual/en/splfileinfo.isreadable.php'>SplFileInfo::isReadable</a> &amp;acirc;&amp;#128;&amp;#148; Tells if file is readable</li><li><a href='http://www.php.net/manual/en/splfileinfo.iswritable.php'>SplFileInfo::isWritable</a> &amp;acirc;&amp;#128;&amp;#148; Tells if the entry is writable</li><li><a href='http://www.php.net/manual/en/splfileinfo.openfile.php'>SplFileInfo::openFile</a> &amp;acirc;&amp;#128;&amp;#148; Gets an SplFileObject object for the file</li><li><a href='http://www.php.net/manual/en/splfileinfo.setfileclass.php'>SplFileInfo::setFileClass</a> &amp;acirc;&amp;#128;&amp;#148; Sets the class name used with SplFileInfo::openFile</li><li><a href='http://www.php.net/manual/en/splfileinfo.setinfoclass.php'>SplFileInfo::setInfoClass</a> &amp;acirc;&amp;#128;&amp;#148; Sets the class used with getFileInfo and getPathInfo</li><li><a href='http://www.php.net/manual/en/splfileinfo.tostring.php'>SplFileInfo::__toString</a> &amp;acirc;&amp;#128;&amp;#148; Returns the path to the file as a string</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="soundex" value="<div id='function.soundex' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.soundex.php'>soundex</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>soundex</span> &amp;mdash; <span class='dc-title'>Calculate the soundex key of a string</span></p> </div> <a name='function.soundex.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>soundex</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> )</div> <p class='para rdfs-comment'> Calculates the soundex key of <i><tt class='parameter'>str</tt></i> . </p> <p class='para'> Soundex keys have the property that words pronounced similarly produce the same soundex key, and can thus be used to simplify searches in databases where you know the pronunciation but not the spelling. This soundex function returns a string 4 characters long, starting with a letter. </p> <p class='para'> This particular soundex function is one described by Donald Knuth in &amp;quot;The Art Of Computer Programming, vol. 3: Sorting And Searching&amp;quot;, Addison-Wesley (1973), pp. 391-392. </p> </div> <a name='function.soundex.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> </dl> <p> </p> </div> <a name='function.soundex.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the soundex key as a string. </p> </div> <a name='function.soundex.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Soundex Examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Euler'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Ellery'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;E460<br /></span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Gauss'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Ghosh'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;G200<br /></span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Hilbert'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Heilbronn'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;H416<br /></span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Knuth'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Kant'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;K530<br /></span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Lloyd'</span><span style='color: #007700'>)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Ladd'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;L300<br /></span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Lukasiewicz'</span><span style='color: #007700'>)&amp;nbsp;==&amp;nbsp;</span><span style='color: #0000BB'>soundex</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Lissajous'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;L222<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.soundex.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.levenshtein.php' class='function' rel='rdfs-seeAlso'>levenshtein()</a> - Calculate Levenshtein distance between two strings</li> <li class='member'><a href='http://www.php.net/manual/en/function.metaphone.php' class='function' rel='rdfs-seeAlso'>metaphone()</a> - Calculate the metaphone key of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.similar-text.php' class='function' rel='rdfs-seeAlso'>similar_text()</a> - Calculate the similarity between two strings</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sort" value="<div id='function.sort' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sort.php'>sort</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sort</span> &amp;mdash; <span class='dc-title'>Sort an array</span></p> </div> <a name='function.sort.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>sort</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sort_flags</tt><span class='initializer'> = SORT_REGULAR</span></span> ] )</div> <p class='para rdfs-comment'> This function sorts an array. Elements will be arranged from lowest to highest when this function has completed. </p> </div> <a name='function.sort.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input array. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sort_flags</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The optional second parameter <i><tt class='parameter'>sort_flags</tt></i> may be used to modify the sorting behavior using these values: </p> <p class='para'> Sorting type flags: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_REGULAR</tt></b> - compare items normally (don&amp;#039;t change types)</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_NUMERIC</tt></b> - compare items numerically</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_STRING</tt></b> - compare items as strings</span> </li> <li class='listitem'> <span class='simpara'><b><tt class='constant'>SORT_LOCALE_STRING</tt></b> - compare items as strings, based on the current locale. Added in PHP 4.4.0 and 5.0.2. Before PHP 6, it uses the system locale, which can be changed using <a href='http://www.php.net/manual/en/function.setlocale.php' class='function'>setlocale()</a>. Since PHP 6, you must use the <b>i18n_loc_set_default()</b> function. </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.sort.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.sort.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> The <i><tt class='parameter'>sort_flags</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sort.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sort()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br />$fruits&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'lemon'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'orange'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>sort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fruits</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$fruits&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$val</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'fruits['&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$key&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>']&amp;nbsp;=&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$val&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> fruits[0] = apple fruits[1] = banana fruits[2] = lemon fruits[3] = orange </pre></div> </div> </div><p> </p> <p class='para'> The fruits have been sorted in alphabetical order. </p> </div> <a name='function.sort.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function assigns new keys to the elements in <i><tt class='parameter'>array</tt></i> . It will remove any existing keys that may have been assigned, rather than just reordering the keys.</span></p></blockquote> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> Like most PHP sorting functions, <b>sort()</b> uses an implementation of <a href='http://en.wikipedia.org/wiki/Quicksort' class='link external'>&amp;raquo; Quicksort</a>. </span> </p></blockquote> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'> Be careful when sorting arrays with mixed types values because <b>sort()</b> can produce unpredictable results. </p> </div> </div> <a name='function.sort.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.asort.php' class='function' rel='rdfs-seeAlso'>asort()</a> - Sort an array and maintain index association</li> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="socket_set_timeout" value="<div id='function.socket-set-timeout' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.socket-set-timeout.php'>socket_set_timeout</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>socket_set_timeout</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function'>stream_set_timeout()</a></span></p> </div> <a name='function.socket-set-timeout.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-set-timeout.php' class='function'>stream_set_timeout()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="socket_set_blocking" value="<div id='function.socket-set-blocking' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.socket-set-blocking.php'>socket_set_blocking</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>socket_set_blocking</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a></span></p> </div> <a name='function.socket-set-blocking.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="socket_get_status" value="<div id='function.socket-get-status' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.socket-get-status.php'>socket_get_status</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>socket_get_status</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-get-meta-data.php' class='function'>stream_get_meta_data()</a></span></p> </div> <a name='function.socket-get-status.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-get-meta-data.php' class='function'>stream_get_meta_data()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sleep" value="<div id='function.sleep' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sleep.php'>sleep</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sleep</span> &amp;mdash; <span class='dc-title'>Delay execution</span></p> </div> <a name='function.sleep.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>sleep</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$seconds</tt></span> )</div> <p class='simpara'> Delays the program execution for the given number of <i><tt class='parameter'>seconds</tt></i> . </p> </div> <a name='function.sleep.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>seconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Halt time in seconds. </p> </dd> </dl> <p> </p> </div> <a name='function.sleep.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns zero on success, or <b><tt class='constant'>FALSE</tt></b> on errors. If the call was interrupted by a signal, <b>sleep()</b> returns the number of seconds left to sleep. </p> </div> <a name='function.sleep.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> If the specified number of <i><tt class='parameter'>seconds</tt></i> is negative, this function will generate a <b><tt class='constant'>E_WARNING</tt></b>. </p> </div> <a name='function.sleep.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sleep()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;current&amp;nbsp;time<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'h:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;sleep&amp;nbsp;for&amp;nbsp;10&amp;nbsp;seconds<br /></span><span style='color: #0000BB'>sleep</span><span style='color: #007700'>(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;wake&amp;nbsp;up&amp;nbsp;!<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'h:i:s'</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p> This example will output (after 10 seconds) </p></div> <div class='example-contents screen'> <div class='cdata'><pre> 05:31:23 05:31:33 </pre></div> </div> </div><p> </p> </div> <a name='function.sleep.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.usleep.php' class='function' rel='rdfs-seeAlso'>usleep()</a> - Delay execution in microseconds</li> <li class='member'><a href='http://www.php.net/manual/en/function.time-nanosleep.php' class='function' rel='rdfs-seeAlso'>time_nanosleep()</a> - Delay for a number of seconds and nanoseconds</li> <li class='member'><a href='http://www.php.net/manual/en/function.time-sleep-until.php' class='function' rel='rdfs-seeAlso'>time_sleep_until()</a> - Make the script sleep until the specified time</li> <li class='member'><a href='http://www.php.net/manual/en/function.set-time-limit.php' class='function' rel='rdfs-seeAlso'>set_time_limit()</a> - Limits the maximum execution time</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sizeof" value="<div id='function.sizeof' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sizeof.php'>sizeof</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sizeof</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.count.php' class='function'>count()</a></span></p> </div> <a name='function.sizeof.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.count.php' class='function'>count()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sinh" value="<div id='function.sinh' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sinh.php'>sinh</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.1.0, PHP 5)</p><p class='refpurpose'><span class='refname'>sinh</span> &amp;mdash; <span class='dc-title'>Hyperbolic sine</span></p> </div> <a name='function.sinh.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>sinh</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> Returns the hyperbolic sine of <i><tt class='parameter'>arg</tt></i> , defined as <i>(exp(arg) - exp(-arg))/2</i>. </p> </div> <a name='function.sinh.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The argument to process </p> </dd> </dl> <p> </p> </div> <a name='function.sinh.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The hyperbolic sine of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.sinh.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sin.php' class='function' rel='rdfs-seeAlso'>sin()</a> - Sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.asinh.php' class='function' rel='rdfs-seeAlso'>asinh()</a> - Inverse hyperbolic sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.cosh.php' class='function' rel='rdfs-seeAlso'>cosh()</a> - Hyperbolic cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.tanh.php' class='function' rel='rdfs-seeAlso'>tanh()</a> - Hyperbolic tangent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sin" value="<div id='function.sin' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sin.php'>sin</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>sin</span> &amp;mdash; <span class='dc-title'>Sine</span></p> </div> <a name='function.sin.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>float</span> <span class='methodname'><b>sin</b></span> ( <span class='methodparam'><span class='type'>float</span> <tt class='parameter'>$arg</tt></span> )</div> <p class='para rdfs-comment'> <b>sin()</b> returns the sine of the <i><tt class='parameter'>arg</tt></i> parameter. The <i><tt class='parameter'>arg</tt></i> parameter is in radians. </p> </div> <a name='function.sin.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>arg</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A value in radians </p> </dd> </dl> <p> </p> </div> <a name='function.sin.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The sine of <i><tt class='parameter'>arg</tt></i> </p> </div> <a name='function.sin.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sin()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Precision&amp;nbsp;depends&amp;nbsp;on&amp;nbsp;your&amp;nbsp;precision&amp;nbsp;directive<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>sin</span><span style='color: #007700'>(</span><span style='color: #0000BB'>deg2rad</span><span style='color: #007700'>(</span><span style='color: #0000BB'>60</span><span style='color: #007700'>));&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;&amp;nbsp;0.866025403&amp;nbsp;...<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>sin</span><span style='color: #007700'>(</span><span style='color: #0000BB'>60</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;-0.304810621&amp;nbsp;...<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sin.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.asin.php' class='function' rel='rdfs-seeAlso'>asin()</a> - Arc sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.sinh.php' class='function' rel='rdfs-seeAlso'>sinh()</a> - Hyperbolic sine</li> <li class='member'><a href='http://www.php.net/manual/en/function.cos.php' class='function' rel='rdfs-seeAlso'>cos()</a> - Cosine</li> <li class='member'><a href='http://www.php.net/manual/en/function.tan.php' class='function' rel='rdfs-seeAlso'>tan()</a> - Tangent</li> <li class='member'><a href='http://www.php.net/manual/en/function.deg2rad.php' class='function' rel='rdfs-seeAlso'>deg2rad()</a> - Converts the number in degrees to the radian equivalent</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::valid" value="<div id='simplexmliterator.valid' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.valid.php'>SimpleXMLIterator::valid</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::valid</span> &amp;mdash; <span class='dc-title'>Check whether the current element is valid</span></p> </div> <a name='simplexmliterator.valid.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>SimpleXMLIterator::valid</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method checks if the current element is valid after calls to <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.rewind.php' class='function'>SimpleXMLIterator::rewind</a></span> or <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.next.php' class='function'>SimpleXMLIterator::next</a></span>. </p> </div> <a name='simplexmliterator.valid.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.valid.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> if the current element is valid, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='simplexmliterator.valid.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Check whether the current element is valid</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;books&amp;gt;&amp;lt;book&amp;gt;SQL&amp;nbsp;Basics&amp;lt;/book&amp;gt;&amp;lt;/books&amp;gt;'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;rewind&amp;nbsp;to&amp;nbsp;the&amp;nbsp;first&amp;nbsp;element<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>());&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bool(true)<br /><br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;advance&amp;nbsp;to&amp;nbsp;the&amp;nbsp;next&amp;nbsp;element<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>());&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;bool(false)&amp;nbsp;because&amp;nbsp;there&amp;nbsp;is&amp;nbsp;only&amp;nbsp;one&amp;nbsp;element<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::rewind" value="<div id='simplexmliterator.rewind' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.rewind.php'>SimpleXMLIterator::rewind</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::rewind</span> &amp;mdash; <span class='dc-title'>Rewind to the first element</span></p> </div> <a name='simplexmliterator.rewind.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SimpleXMLIterator::rewind</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method rewinds the <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> to the first element. </p> </div> <a name='simplexmliterator.rewind.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.rewind.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='simplexmliterator.rewind.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Rewind to the first element</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;books&amp;gt;&amp;lt;book&amp;gt;PHP&amp;nbsp;Basics&amp;lt;/book&amp;gt;&amp;lt;book&amp;gt;XML&amp;nbsp;Basics&amp;lt;/book&amp;gt;&amp;lt;/books&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(SimpleXMLIterator)#2 (1) { [0]=&amp;gt; string(10) &amp;quot;PHP Basics&amp;quot; } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::next" value="<div id='simplexmliterator.next' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.next.php'>SimpleXMLIterator::next</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::next</span> &amp;mdash; <span class='dc-title'>Move to next element</span></p> </div> <a name='simplexmliterator.next.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SimpleXMLIterator::next</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method moves the <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> to the next element. </p> </div> <a name='simplexmliterator.next.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.next.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='simplexmliterator.next.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Move to the next element</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;books&amp;gt;&amp;lt;book&amp;gt;PHP&amp;nbsp;Basics&amp;lt;/book&amp;gt;&amp;lt;book&amp;gt;XML&amp;nbsp;basics&amp;lt;/book&amp;gt;&amp;lt;/books&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;rewind&amp;nbsp;to&amp;nbsp;the&amp;nbsp;first&amp;nbsp;element<br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(SimpleXMLIterator)#2 (1) { [0]=&amp;gt; string(10) &amp;quot;XML basics&amp;quot; } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::key" value="<div id='simplexmliterator.key' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.key.php'>SimpleXMLIterator::key</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::key</span> &amp;mdash; <span class='dc-title'>Return current key</span></p> </div> <a name='simplexmliterator.key.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>SimpleXMLIterator::key</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method gets the XML tag name of the current element. </p> </div> <a name='simplexmliterator.key.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.key.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the XML tag name of the element referenced by the current <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> object or <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='simplexmliterator.key.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Get the current XML tag key</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;books&amp;gt;&amp;lt;book&amp;gt;PHP&amp;nbsp;basics&amp;lt;/book&amp;gt;&amp;lt;book&amp;gt;XML&amp;nbsp;basics&amp;lt;/book&amp;gt;&amp;lt;/books&amp;gt;'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;rewind&amp;nbsp;to&amp;nbsp;the&amp;nbsp;first&amp;nbsp;element<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> bool(false) string(4) &amp;quot;book&amp;quot; </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::hasChildren" value="<div id='simplexmliterator.haschildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.haschildren.php'>SimpleXMLIterator::hasChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::hasChildren</span> &amp;mdash; <span class='dc-title'>Checks whether the current element has sub elements.</span></p> </div> <a name='simplexmliterator.haschildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>SimpleXMLIterator::hasChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method checks whether the current <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> element has sub-elements. </p> </div> <a name='simplexmliterator.haschildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.haschildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b><tt class='constant'>TRUE</tt></b> if the current element has sub-elements, otherwise <b><tt class='constant'>FALSE</tt></b> </p> </div> <a name='simplexmliterator.haschildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Check whether the current element has sub-elements</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xml&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;lt;&amp;lt;&amp;lt;XML<br /></span><span style='color: #DD0000'>&amp;lt;books&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;PHP&amp;nbsp;Basics&amp;lt;/title&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;author&amp;gt;Jim&amp;nbsp;Smith&amp;lt;/author&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/book&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;XML&amp;nbsp;basics&amp;lt;/book&amp;gt;<br />&amp;lt;/books&amp;gt;<br /></span><span style='color: #007700'>XML;<br /><br /></span><span style='color: #0000BB'>$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(&amp;nbsp;</span><span style='color: #0000BB'>$xml&amp;nbsp;</span><span style='color: #007700'>);<br />for(&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>()&amp;nbsp;)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>hasChildren</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>());<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> object(SimpleXMLIterator)#2 (2) { [&amp;quot;title&amp;quot;]=&amp;gt; string(10) &amp;quot;PHP Basics&amp;quot; [&amp;quot;author&amp;quot;]=&amp;gt; string(9) &amp;quot;Jim Smith&amp;quot; } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::getChildren" value="<div id='simplexmliterator.getchildren' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.getchildren.php'>SimpleXMLIterator::getChildren</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::getChildren</span> &amp;mdash; <span class='dc-title'>Returns the sub-elements of the current element</span></p> </div> <a name='simplexmliterator.getchildren.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><b>SimpleXMLIterator::getChildren</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method returns a <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> object containing sub-elements of the current <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> element. </p> </div> <a name='simplexmliterator.getchildren.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.getchildren.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> object containing the sub-elements of the current element. </p> </div> <a name='simplexmliterator.getchildren.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Return the sub-elements of the current element</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xml&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;&amp;lt;&amp;lt;&amp;lt;XML<br /></span><span style='color: #DD0000'>&amp;lt;books&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;PHP&amp;nbsp;Basics&amp;lt;/title&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;author&amp;gt;Jim&amp;nbsp;Smith&amp;lt;/author&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/book&amp;gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;XML&amp;nbsp;basics&amp;lt;/book&amp;gt;<br />&amp;lt;/books&amp;gt;<br /></span><span style='color: #007700'>XML;<br /><br /></span><span style='color: #0000BB'>$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xml</span><span style='color: #007700'>);<br />for(&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>()&amp;nbsp;)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getChildren</span><span style='color: #007700'>()&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>&amp;nbsp;is&amp;nbsp;'</span><span style='color: #0000BB'>$data</span><span style='color: #DD0000'>'&amp;nbsp;from&amp;nbsp;the&amp;nbsp;class&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>get_class</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> The title is &amp;#039;PHP Basics&amp;#039; from the class SimpleXMLIterator The author is &amp;#039;Jim Smith&amp;#039; from the class SimpleXMLIterator </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator::current" value="<div id='simplexmliterator.current' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/simplexmliterator.current.php'>SimpleXMLIterator::current</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SimpleXMLIterator::current</span> &amp;mdash; <span class='dc-title'>Returns the current element</span></p> </div> <a name='simplexmliterator.current.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>SimpleXMLIterator::current</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> This method returns the current element as a <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> object or <b><tt class='constant'>NULL</tt></b>. </p> </div> <a name='simplexmliterator.current.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='simplexmliterator.current.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current element as a <a href='http://www.php.net/manual/en/class.simplexmliterator.php' class='classname'>SimpleXMLIterator</a> object or <b><tt class='constant'>NULL</tt></b> on failure. </p> </div> <a name='simplexmliterator.current.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Return the current element</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$xmlIterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>SimpleXMLIterator</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'&amp;lt;books&amp;gt;&amp;lt;book&amp;gt;PHP&amp;nbsp;basics&amp;lt;/book&amp;gt;&amp;lt;book&amp;gt;XML&amp;nbsp;basics&amp;lt;/book&amp;gt;&amp;lt;/books&amp;gt;'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>());<br /><br /></span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>();&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;rewind&amp;nbsp;to&amp;nbsp;first&amp;nbsp;element<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$xmlIterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> NULL object(SimpleXMLIterator)#2 (1) { [0]=&amp;gt; string(10) &amp;quot;PHP basics&amp;quot; } </pre></div> </div> </div><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SimpleXMLIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.simplexmliterator.php'>The SimpleXMLIterator class</a></h1> <div class='partintro'> <div id='simplexmliterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The SimpleXMLIterator provides recursive iteration over all nodes of a <a href='http://www.php.net/manual/en/class.simplexmlelement.php' class='classname'>SimpleXMLElement</a> object. </p> </div> <div id='simplexmliterator.synopsis' class='section'> <h2 class='title'>Class synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SimpleXMLIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SimpleXMLIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.simplexmlelement.php' class='classname'>SimpleXMLElement</a> </span> <span class='oointerface'>implements <a href='http://www.php.net/manual/en/class.recursiveiterator.php' class='interfacename'>RecursiveIterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.traversable.php' class='interfacename'>Traversable</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.iterator.php' class='interfacename'>Iterator</a> </span> <span class='oointerface'>, <a href='http://www.php.net/manual/en/class.countable.php' class='interfacename'>Countable</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.current.php' class='function'>current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>object</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.getchildren.php' class='function'>getChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.haschildren.php' class='function'>hasChildren</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.key.php' class='function'>key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.next.php' class='function'>next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.rewind.php' class='function'>rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><a href='http://www.php.net/manual/en/simplexmliterator.valid.php' class='function'>valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/simplexmliterator.current.php'>SimpleXMLIterator::current</a> &amp;acirc;&amp;#128;&amp;#148; Returns the current element</li><li><a href='http://www.php.net/manual/en/simplexmliterator.getchildren.php'>SimpleXMLIterator::getChildren</a> &amp;acirc;&amp;#128;&amp;#148; Returns the sub-elements of the current element</li><li><a href='http://www.php.net/manual/en/simplexmliterator.haschildren.php'>SimpleXMLIterator::hasChildren</a> &amp;acirc;&amp;#128;&amp;#148; Checks whether the current element has sub elements.</li><li><a href='http://www.php.net/manual/en/simplexmliterator.key.php'>SimpleXMLIterator::key</a> &amp;acirc;&amp;#128;&amp;#148; Return current key</li><li><a href='http://www.php.net/manual/en/simplexmliterator.next.php'>SimpleXMLIterator::next</a> &amp;acirc;&amp;#128;&amp;#148; Move to next element</li><li><a href='http://www.php.net/manual/en/simplexmliterator.rewind.php'>SimpleXMLIterator::rewind</a> &amp;acirc;&amp;#128;&amp;#148; Rewind to the first element</li><li><a href='http://www.php.net/manual/en/simplexmliterator.valid.php'>SimpleXMLIterator::valid</a> &amp;acirc;&amp;#128;&amp;#148; Check whether the current element is valid</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="similar_text" value="<div id='function.similar-text' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.similar-text.php'>similar_text</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>similar_text</span> &amp;mdash; <span class='dc-title'>Calculate the similarity between two strings</span></p> </div> <a name='function.similar-text.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>similar_text</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$first</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$second</tt></span> [, <span class='methodparam'><span class='type'>float</span> <tt class='parameter reference'>&amp;amp;$percent</tt></span> ] )</div> <p class='para rdfs-comment'> This calculates the similarity between two strings as described in Oliver [1993]. Note that this implementation does not use a stack as in Oliver&amp;#039;s pseudo code, but recursive calls which may or may not speed up the whole process. Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string. </p> </div> <a name='function.similar-text.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>first</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The first string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>second</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The second string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>percent</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By passing a reference as third argument, <b>similar_text()</b> will calculate the similarity in percent for you. </p> </dd> </dl> <p> </p> </div> <a name='function.similar-text.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the number of matching chars in both strings. </p> </div> <a name='function.similar-text.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.levenshtein.php' class='function' rel='rdfs-seeAlso'>levenshtein()</a> - Calculate Levenshtein distance between two strings</li> <li class='member'><a href='http://www.php.net/manual/en/function.soundex.php' class='function' rel='rdfs-seeAlso'>soundex()</a> - Calculate the soundex key of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="shuffle" value="<div id='function.shuffle' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.shuffle.php'>shuffle</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>shuffle</span> &amp;mdash; <span class='dc-title'>Shuffle an array</span></p> </div> <a name='function.shuffle.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>shuffle</b></span> ( <span class='methodparam'><span class='type'>array</span> <tt class='parameter reference'>&amp;amp;$array</tt></span> )</div> <p class='para rdfs-comment'> This function shuffles (randomizes the order of the elements in) an array. </p> </div> <a name='function.shuffle.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>array</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The array. </p> </dd> </dl> <p> </p> </div> <a name='function.shuffle.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.shuffle.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>shuffle()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$numbers&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>range</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>20</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>shuffle</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$numbers</span><span style='color: #007700'>);<br />foreach&amp;nbsp;(</span><span style='color: #0000BB'>$numbers&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$number</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$number</span><span style='color: #DD0000'>&amp;nbsp;'</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.shuffle.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'><td align='left'>4.2.0</td><td align='left'>The random number generator is seeded automatically.</td></tr> </tbody> </table> <p> </p> </div> <a name='function.shuffle.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: <span class='simpara'>This function assigns new keys to the elements in <i><tt class='parameter'>array</tt></i> . It will remove any existing keys that may have been assigned, rather than just reordering the keys.</span></p></blockquote> </div> <a name='function.shuffle.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'>The <a href='http://www.php.net/manual/en/array.sorting.php' class='link'>comparison of array sorting functions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="show_source" value="<div id='function.show-source' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.show-source.php'>show_source</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>show_source</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.highlight-file.php' class='function'>highlight_file()</a></span></p> </div> <a name='function.show-source.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.highlight-file.php' class='function'>highlight_file()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="shell_exec" value="<div id='function.shell-exec' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.shell-exec.php'>shell_exec</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>shell_exec</span> &amp;mdash; <span class='dc-title'>Execute command via shell and return the complete output as a string</span></p> </div> <a name='function.shell-exec.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>shell_exec</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$cmd</tt></span> )</div> <p class='para rdfs-comment'> This function is identical to the <a href='http://www.php.net/manual/en/language.operators.execution.php' class='link'>backtick operator</a>. </p> </div> <a name='function.shell-exec.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cmd</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The command that will be executed. </p> </dd> </dl> <p> </p> </div> <a name='function.shell-exec.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> The output from the executed command. </p> </div> <a name='function.shell-exec.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>shell_exec()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$output&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>shell_exec</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'ls&amp;nbsp;-lart'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;pre&amp;gt;</span><span style='color: #0000BB'>$output</span><span style='color: #DD0000'>&amp;lt;/pre&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.shell-exec.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: This function is disabled when PHP is running in <a href='http://www.php.net/manual/en/features.safe-mode.php' class='link'>safe mode</a>. <br /> </p></blockquote> </div> <a name='function.shell-exec.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.exec.php' class='function' rel='rdfs-seeAlso'>exec()</a> - Execute an external program</li> <li class='member'><a href='http://www.php.net/manual/en/function.escapeshellcmd.php' class='function' rel='rdfs-seeAlso'>escapeshellcmd()</a> - Escape shell metacharacters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sha1_file" value="<div id='function.sha1-file' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sha1-file.php'>sha1_file</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>sha1_file</span> &amp;mdash; <span class='dc-title'>Calculate the sha1 hash of a file</span></p> </div> <a name='function.sha1-file.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sha1_file</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$filename</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$raw_output</tt><span class='initializer'> = false</span></span> ] )</div> <p class='simpara'> Calculates the sha1 hash of <i><tt class='parameter'>filename</tt></i> using the <a href='http://www.faqs.org/rfcs/rfc3174' class='link external'>&amp;raquo; US Secure Hash Algorithm 1</a>, and returns that hash. The hash is a 40-character hexadecimal number. </p> </div> <a name='function.sha1-file.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>filename</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The filename </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>raw_output</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When <b><tt class='constant'>TRUE</tt></b>, returns the digest in raw binary format with a length of 20. Defaults to <b><tt class='constant'>FALSE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.sha1-file.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string on success, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.sha1-file.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>sha1_file()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>foreach(</span><span style='color: #0000BB'>glob</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/home/Kalle/myproject/*.php'</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$ent</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(</span><span style='color: #0000BB'>is_dir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ent</span><span style='color: #007700'>))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$ent&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;(SHA1:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>sha1_file</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ent</span><span style='color: #007700'>)&amp;nbsp;.&amp;nbsp;</span><span style='color: #DD0000'>')'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sha1-file.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> Added the <i><tt class='parameter'>raw_output</tt></i> parameter </td> </tr> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Changed the function to use the streams API. It means that you can use it with wrappers, like <i>sha1_file(&amp;#039;http://example.com/..&amp;#039;)</i> </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sha1-file.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sha1.php' class='function' rel='rdfs-seeAlso'>sha1()</a> - Calculate the sha1 hash of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.md5-file.php' class='function' rel='rdfs-seeAlso'>md5_file()</a> - Calculates the md5 hash of a given file</li> <li class='member'><a href='http://www.php.net/manual/en/function.crc32.php' class='function' rel='rdfs-seeAlso'>crc32()</a> - Calculates the crc32 polynomial of a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="sha1" value="<div id='function.sha1' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.sha1.php'>sha1</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>sha1</span> &amp;mdash; <span class='dc-title'>Calculate the sha1 hash of a string</span></p> </div> <a name='function.sha1.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>sha1</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$str</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$raw_output</tt><span class='initializer'> = false</span></span> ] )</div> <p class='simpara'> Calculates the sha1 hash of <i><tt class='parameter'>str</tt></i> using the <a href='http://www.faqs.org/rfcs/rfc3174' class='link external'>&amp;raquo; US Secure Hash Algorithm 1</a>. </p> </div> <a name='function.sha1.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>str</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The input string. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>raw_output</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If the optional <i><tt class='parameter'>raw_output</tt></i> is set to <b><tt class='constant'>TRUE</tt></b>, then the sha1 digest is instead returned in raw binary format with a length of 20, otherwise the returned value is a 40-character hexadecimal number. Defaults to <b><tt class='constant'>FALSE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.sha1.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the sha1 hash as a string. </p> </div> <a name='function.sha1.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>raw_output</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.sha1.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>sha1()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$str&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>;<br /><br />if&amp;nbsp;(</span><span style='color: #0000BB'>sha1</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$str</span><span style='color: #007700'>)&amp;nbsp;===&amp;nbsp;</span><span style='color: #DD0000'>'d0be2dc421be4fcd0172e5afceea3970e2f3d940'</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Would&amp;nbsp;you&amp;nbsp;like&amp;nbsp;a&amp;nbsp;green&amp;nbsp;or&amp;nbsp;red&amp;nbsp;apple?'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit;<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.sha1.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.sha1-file.php' class='function' rel='rdfs-seeAlso'>sha1_file()</a> - Calculate the sha1 hash of a file</li> <li class='member'><a href='http://www.php.net/manual/en/function.crc32.php' class='function' rel='rdfs-seeAlso'>crc32()</a> - Calculates the crc32 polynomial of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.md5.php' class='function' rel='rdfs-seeAlso'>md5()</a> - Calculate the md5 hash of a string</li> <li class='member'><a href='http://www.php.net/manual/en/function.hash.php' class='function' rel='rdfs-seeAlso'>hash()</a> - Generate a hash value (message digest)</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_time_limit" value="<div id='function.set-time-limit' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-time-limit.php'>set_time_limit</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>set_time_limit</span> &amp;mdash; <span class='dc-title'>Limits the maximum execution time</span></p> </div> <a name='function.set-time-limit.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>set_time_limit</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$seconds</tt></span> )</div> <p class='para rdfs-comment'> Set the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the <i>max_execution_time</i> value defined in the <var class='filename'>php.ini</var>. </p> <p class='para'> When called, <b>set_time_limit()</b> restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as <i>set_time_limit(20)</i> is made, the script will run for a total of 45 seconds before timing out. </p> </div> <a name='function.set-time-limit.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>seconds</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The maximum execution time, in seconds. If set to zero, no time limit is imposed. </p> </dd> </dl> <p> </p> </div> <a name='function.set-time-limit.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.set-time-limit.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> This function has no effect when PHP is running in <a href='http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode' class='link'>safe mode</a>. There is no workaround other than turning off safe mode or changing the time limit in the <var class='filename'>php.ini</var>. </p> </div> <blockquote><p><b class='note'>Note</b>: The <b>set_time_limit()</b> function and the configuration directive <a href='http://www.php.net/manual/en/info.configuration.php#ini.max-execution-time' class='link'>max_execution_time</a> only affect the execution time of the script itself. Any time spent on activity that happens outside the execution of the script such as system calls using <a href='http://www.php.net/manual/en/function.system.php' class='function'>system()</a>, stream operations, database queries, etc. is not included when determining the maximum time that the script has been running. This is not true on Windows where the measured time is real. <br /> </p></blockquote> </div> <a name='function.set-time-limit.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/info.configuration.php#ini.max-execution-time' class='link'>max_execution_time</a></li> <li class='member'><a href='http://www.php.net/manual/en/info.configuration.php#ini.max-input-time' class='link'>max_input_time</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_socket_blocking" value="<div id='function.set-socket-blocking' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-socket-blocking.php'>set_socket_blocking</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>set_socket_blocking</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a></span></p> </div> <a name='function.set-socket-blocking.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-set-blocking.php' class='function'>stream_set_blocking()</a> </p> <div class='warning'><b class='warning'>Warning</b> <p class='simpara'>This alias has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0. Relying on this alias is highly discouraged.</p></div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_magic_quotes_runtime" value="<div id='function.set-magic-quotes-runtime' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-magic-quotes-runtime.php'>set_magic_quotes_runtime</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>set_magic_quotes_runtime</span> &amp;mdash; <span class='dc-title'>Sets the current active configuration setting of magic_quotes_runtime</span></p> </div> <a name='function.set-magic-quotes-runtime.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>set_magic_quotes_runtime</b></span> ( <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$new_setting</tt></span> )</div> <p class='para rdfs-comment'> Set the current active configuration setting of <a href='http://www.php.net/manual/en/info.configuration.php#ini.magic-quotes-runtime' class='link'>magic_quotes_runtime</a>. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.set-magic-quotes-runtime.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>new_setting</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <b><tt class='constant'>FALSE</tt></b> for off, <b><tt class='constant'>TRUE</tt></b> for on. </p> </dd> </dl> <p> </p> </div> <a name='function.set-magic-quotes-runtime.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.set-magic-quotes-runtime.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>set_magic_quotes_runtime()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;temporary&amp;nbsp;file&amp;nbsp;pointer<br /></span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>tmpfile</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Write&amp;nbsp;some&amp;nbsp;data&amp;nbsp;to&amp;nbsp;the&amp;nbsp;pointer<br /></span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'\'PHP\'&amp;nbsp;is&amp;nbsp;a&amp;nbsp;Recursive&amp;nbsp;acronym'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Without&amp;nbsp;magic_quotes_runtime<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>set_magic_quotes_runtime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Without&amp;nbsp;magic_quotes_runtime:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>64</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;With&amp;nbsp;magic_quotes_runtime<br /></span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>set_magic_quotes_runtime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'With&amp;nbsp;magic_quotes_runtime:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>fread</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>64</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>PHP_EOL</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Clean&amp;nbsp;up<br /></span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Without magic_quotes_runtime: &amp;#039;PHP&amp;#039; is a Recursive acronym With magic_quotes_runtime: \&amp;#039;PHP\&amp;#039; is a Recursive acronym </pre></div> </div> </div><p> </p> </div> <a name='function.set-magic-quotes-runtime.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-gpc.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_gpc()</a> - Gets the current configuration setting of magic quotes gpc</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-magic-quotes-runtime.php' class='function' rel='rdfs-seeAlso'>get_magic_quotes_runtime()</a> - Gets the current active configuration setting of magic_quotes_runtime</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_include_path" value="<div id='function.set-include-path' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-include-path.php'>set_include_path</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.0, PHP 5)</p><p class='refpurpose'><span class='refname'>set_include_path</span> &amp;mdash; <span class='dc-title'>Sets the include_path configuration option</span></p> </div> <a name='function.set-include-path.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>set_include_path</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$new_include_path</tt></span> )</div> <p class='para rdfs-comment'> Sets the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> configuration option for the duration of the script. </p> </div> <a name='function.set-include-path.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>new_include_path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The new value for the <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> </p> </dd> </dl> <p> </p> </div> <a name='function.set-include-path.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the old <a href='http://www.php.net/manual/en/ini.core.php#ini.include-path' class='link'>include_path</a> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.set-include-path.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>set_include_path()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0<br /></span><span style='color: #0000BB'>set_include_path</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'/inc'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;in&amp;nbsp;all&amp;nbsp;PHP&amp;nbsp;versions<br /></span><span style='color: #0000BB'>ini_set</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'include_path'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/inc'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 Adding to the include path</b></p> <div class='example-contents para'><p> Making use of the <b><tt class='constant'>PATH_SEPARATOR</tt></b> constant, it is possible to extend the include path regardless of the operating system. </p></div> <div class='example-contents para'><p> In this example we add <var class='filename'>/usr/lib/pear</var> to the end of the existing <i>include_path</i>. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/usr/lib/pear'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>set_include_path</span><span style='color: #007700'>(</span><span style='color: #0000BB'>get_include_path</span><span style='color: #007700'>()&amp;nbsp;.&amp;nbsp;</span><span style='color: #0000BB'>PATH_SEPARATOR&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>$path</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.set-include-path.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.ini-set.php' class='function' rel='rdfs-seeAlso'>ini_set()</a> - Sets the value of a configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.get-include-path.php' class='function' rel='rdfs-seeAlso'>get_include_path()</a> - Gets the current include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-include-path.php' class='function' rel='rdfs-seeAlso'>restore_include_path()</a> - Restores the value of the include_path configuration option</li> <li class='member'><a href='http://www.php.net/manual/en/function.include.php' class='function' rel='rdfs-seeAlso'>include()</a> - include</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_file_buffer" value="<div id='function.set-file-buffer' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-file-buffer.php'>set_file_buffer</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>set_file_buffer</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.stream-set-write-buffer.php' class='function'>stream_set_write_buffer()</a></span></p> </div> <a name='function.set-file-buffer.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.stream-set-write-buffer.php' class='function'>stream_set_write_buffer()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_exception_handler" value="<div id='function.set-exception-handler' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-exception-handler.php'>set_exception_handler</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>set_exception_handler</span> &amp;mdash; <span class='dc-title'> Sets a user-defined exception handler function </span></p> </div> <a name='function.set-exception-handler.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>set_exception_handler</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$exception_handler</tt></span> )</div> <p class='para rdfs-comment'> Sets the default exception handler if an exception is not caught within a try/catch block. Execution will stop after the <i><tt class='parameter'>exception_handler</tt></i> is called. </p> </div> <a name='function.set-exception-handler.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>exception_handler</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Name of the function to be called when an uncaught exception occurs. This function must be defined before calling <b>set_exception_handler()</b>. This handler function needs to accept one parameter, which will be the exception object that was thrown. </p> </dd> </dl> <p> </p> </div> <a name='function.set-exception-handler.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the previously defined exception handler, or <b><tt class='constant'>NULL</tt></b> on error. If no previous handler was defined, <b><tt class='constant'>NULL</tt></b> is also returned. </p> </div> <a name='function.set-exception-handler.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>set_exception_handler()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>exception_handler</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$exception</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Uncaught&amp;nbsp;exception:&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$exception</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>set_exception_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'exception_handler'</span><span style='color: #007700'>);<br /><br />throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>Exception</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Uncaught&amp;nbsp;Exception'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Not&amp;nbsp;Executed\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.set-exception-handler.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.restore-exception-handler.php' class='function' rel='rdfs-seeAlso'>restore_exception_handler()</a> - Restores the previously defined exception handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-error-handler.php' class='function' rel='rdfs-seeAlso'>restore_error_handler()</a> - Restores the previous error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.error-reporting.php' class='function' rel='rdfs-seeAlso'>error_reporting()</a> - Sets which PHP errors are reported</li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> <li class='member'><a href='http://www.php.net/manual/en/language.exceptions.php' class='link'>PHP 5 Exceptions</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="set_error_handler" value="<div id='function.set-error-handler' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.set-error-handler.php'>set_error_handler</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.1, PHP 5)</p><p class='refpurpose'><span class='refname'>set_error_handler</span> &amp;mdash; <span class='dc-title'>Sets a user-defined error handler function</span></p> </div> <a name='function.set-error-handler.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>set_error_handler</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$error_handler</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$error_types</tt><span class='initializer'> = E_ALL | E_STRICT</span></span> ] )</div> <p class='para rdfs-comment'> Sets a user function (<i><tt class='parameter'>error_handler</tt></i> ) to handle errors in a script. </p> <p class='para'> This function can be used for defining your own way of handling errors during runtime, for example in applications in which you need to do cleanup of data/files when a critical error happens, or when you need to trigger an error under certain conditions (using <a href='http://www.php.net/manual/en/function.trigger-error.php' class='function'>trigger_error()</a>). </p> <p class='para'> It is important to remember that the standard PHP error handler is completely bypassed. <a href='http://www.php.net/manual/en/function.error-reporting.php' class='function'>error_reporting()</a> settings will have no effect and your error handler will be called regardless - however you are still able to read the current value of <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> and act appropriately. Of particular note is that this value will be 0 if the statement that caused the error was prepended by the <a href='http://www.php.net/manual/en/language.operators.errorcontrol.php' class='link'>@ error-control operator</a>. </p> <p class='para'> Also note that it is your responsibility to <a href='http://www.php.net/manual/en/function.die.php' class='function'>die()</a> if necessary. If the error-handler function returns, script execution will continue with the next statement after the one that caused an error. </p> <p class='para'> The following error types cannot be handled with a user defined function: <b><tt class='constant'>E_ERROR</tt></b>, <b><tt class='constant'>E_PARSE</tt></b>, <b><tt class='constant'>E_CORE_ERROR</tt></b>, <b><tt class='constant'>E_CORE_WARNING</tt></b>, <b><tt class='constant'>E_COMPILE_ERROR</tt></b>, <b><tt class='constant'>E_COMPILE_WARNING</tt></b>, and most of <b><tt class='constant'>E_STRICT</tt></b> raised in the file where <b>set_error_handler()</b> is called. </p> <p class='para'> If errors occur before the script is executed (e.g. on file uploads) the custom error handler cannot be called since it is not registered at that time. </p> </div> <a name='function.set-error-handler.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_handler</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The user function needs to accept two parameters: the error code, and a string describing the error. Then there are three optional parameters that may be supplied: the filename in which the error occurred, the line number in which the error occurred, and the context in which the error occurred (an array that points to the active symbol table at the point the error occurred). The function can be shown as: </p> <p class='para'> <div class='methodsynopsis dc-description'> <span class='methodname'><span class='replaceable'>handler</span></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$errno</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$errstr</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$errfile</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$errline</tt></span> [, <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$errcontext</tt></span> ]]] )</div> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errno</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> The first parameter, <i><tt class='parameter'>errno</tt></i> , contains the level of the error raised, as an integer. </span> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errstr</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> The second parameter, <i><tt class='parameter'>errstr</tt></i> , contains the error message, as a string. </span> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errfile</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> The third parameter is optional, <i><tt class='parameter'>errfile</tt></i> , which contains the filename that the error was raised in, as a string. </span> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errline</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> The fourth parameter is optional, <i><tt class='parameter'>errline</tt></i> , which contains the line number the error was raised at, as an integer. </span> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>errcontext</tt></i> </span> </dt><dd class='listitem'> <span class='simpara'> The fifth parameter is optional, <i><tt class='parameter'>errcontext</tt></i> , which is an array that points to the active symbol table at the point the error occurred. In other words, <i><tt class='parameter'>errcontext</tt></i> will contain an array of every variable that existed in the scope the error was triggered in. User error handler must not modify error context. </span> </dd> </dl> <p> </p> <p class='para'> If the function returns <b><tt class='constant'>FALSE</tt></b> then the normal error handler continues. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>error_types</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Can be used to mask the triggering of the <i><tt class='parameter'>error_handler</tt></i> function just like the <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> ini setting controls which errors are shown. Without this mask set the <i><tt class='parameter'>error_handler</tt></i> will be called for every error regardless to the setting of the <a href='http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting' class='link'>error_reporting</a> setting. </p> </dd> </dl> <p> </p> </div> <a name='function.set-error-handler.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing the previously defined error handler (if any). If the built-in error handler is used <b><tt class='constant'>NULL</tt></b> is returned. <b><tt class='constant'>NULL</tt></b> is also returned in case of an error such as an invalid callback. If the previous error handler was a class method, this function will return an indexed array with the class and the method name. </p> </div> <a name='function.set-error-handler.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The error handler must return <b><tt class='constant'>FALSE</tt></b> to populate <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.phperrormsg.php' class='classname'>$php_errormsg</a></var>. </td> </tr> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i><tt class='parameter'>error_types</tt></i> parameter was introduced. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Instead of a function name, an array containing an object reference and a method name can also be supplied as the <i><tt class='parameter'>error_handler</tt></i> . </td> </tr> <tr valign='middle'> <td align='left'>4.0.2</td> <td align='left'> Three optional parameters for the <i><tt class='parameter'>error_handler</tt></i> user function was introduced. These are the filename, the line number, and the context. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.set-error-handler.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Error handling with <b>set_error_handler()</b> and <a href='http://www.php.net/manual/en/function.trigger-error.php' class='function'>trigger_error()</a></b></p> <div class='example-contents para'><p> The example below shows the handling of internal exceptions by triggering errors and handling them with a user defined function: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;error&amp;nbsp;handler&amp;nbsp;function<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>myErrorHandler</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errfile</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$errline</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;switch&amp;nbsp;(</span><span style='color: #0000BB'>$errno</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case&amp;nbsp;</span><span style='color: #0000BB'>E_USER_ERROR</span><span style='color: #007700'>:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;My&amp;nbsp;ERROR&amp;lt;/b&amp;gt;&amp;nbsp;[</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>]&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;&amp;nbsp;Fatal&amp;nbsp;error&amp;nbsp;on&amp;nbsp;line&amp;nbsp;</span><span style='color: #0000BB'>$errline</span><span style='color: #DD0000'>&amp;nbsp;in&amp;nbsp;file&amp;nbsp;</span><span style='color: #0000BB'>$errfile</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>',&amp;nbsp;PHP&amp;nbsp;'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_VERSION&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>'&amp;nbsp;('&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>PHP_OS&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>')&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Aborting...&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case&amp;nbsp;</span><span style='color: #0000BB'>E_USER_WARNING</span><span style='color: #007700'>:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;My&amp;nbsp;WARNING&amp;lt;/b&amp;gt;&amp;nbsp;[</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>]&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;case&amp;nbsp;</span><span style='color: #0000BB'>E_USER_NOTICE</span><span style='color: #007700'>:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;b&amp;gt;My&amp;nbsp;NOTICE&amp;lt;/b&amp;gt;&amp;nbsp;[</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>]&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;default:<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'Unknown&amp;nbsp;error&amp;nbsp;type:&amp;nbsp;[</span><span style='color: #0000BB'>$errno</span><span style='color: #DD0000'>]&amp;nbsp;</span><span style='color: #0000BB'>$errstr</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Don't&amp;nbsp;execute&amp;nbsp;PHP&amp;nbsp;internal&amp;nbsp;error&amp;nbsp;handler&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;function&amp;nbsp;to&amp;nbsp;test&amp;nbsp;the&amp;nbsp;error&amp;nbsp;handling<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>scale_by_log</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$vect</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$scale</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>is_numeric</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$scale</span><span style='color: #007700'>)&amp;nbsp;||&amp;nbsp;</span><span style='color: #0000BB'>$scale&amp;nbsp;</span><span style='color: #007700'>&amp;lt;=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>trigger_error</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'log(x)&amp;nbsp;for&amp;nbsp;x&amp;nbsp;&amp;lt;=&amp;nbsp;0&amp;nbsp;is&amp;nbsp;undefined,&amp;nbsp;you&amp;nbsp;used:&amp;nbsp;scale&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$scale</span><span style='color: #DD0000'>'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_USER_ERROR</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>is_array</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$vect</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>trigger_error</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Incorrect&amp;nbsp;input&amp;nbsp;vector,&amp;nbsp;array&amp;nbsp;of&amp;nbsp;values&amp;nbsp;expected'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_USER_WARNING</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>null</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$temp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach(</span><span style='color: #0000BB'>$vect&amp;nbsp;</span><span style='color: #007700'>as&amp;nbsp;</span><span style='color: #0000BB'>$pos&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>is_numeric</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>trigger_error</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Value&amp;nbsp;at&amp;nbsp;position&amp;nbsp;</span><span style='color: #0000BB'>$pos</span><span style='color: #DD0000'>&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;number,&amp;nbsp;using&amp;nbsp;0&amp;nbsp;(zero)'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>E_USER_NOTICE</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$pos</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>log</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$scale</span><span style='color: #007700'>)&amp;nbsp;*&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$temp</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user&amp;nbsp;defined&amp;nbsp;error&amp;nbsp;handler<br /></span><span style='color: #0000BB'>$old_error_handler&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>set_error_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'myErrorHandler'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;trigger&amp;nbsp;some&amp;nbsp;errors,&amp;nbsp;first&amp;nbsp;define&amp;nbsp;a&amp;nbsp;mixed&amp;nbsp;array&amp;nbsp;with&amp;nbsp;a&amp;nbsp;non-numeric&amp;nbsp;item<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'vector&amp;nbsp;a\n'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$a&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'foo'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>5.5</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>43.3</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>21.11</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;now&amp;nbsp;generate&amp;nbsp;second&amp;nbsp;array<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'----\nvector&amp;nbsp;b&amp;nbsp;-&amp;nbsp;a&amp;nbsp;notice&amp;nbsp;(b&amp;nbsp;=&amp;nbsp;log(PI)&amp;nbsp;*&amp;nbsp;a)\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Value&amp;nbsp;at&amp;nbsp;position&amp;nbsp;$pos&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;number,&amp;nbsp;using&amp;nbsp;0&amp;nbsp;(zero)&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$b&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>scale_by_log</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>M_PI</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$b</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;this&amp;nbsp;is&amp;nbsp;trouble,&amp;nbsp;we&amp;nbsp;pass&amp;nbsp;a&amp;nbsp;string&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;an&amp;nbsp;array<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'----\nvector&amp;nbsp;c&amp;nbsp;-&amp;nbsp;a&amp;nbsp;warning\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Incorrect&amp;nbsp;input&amp;nbsp;vector,&amp;nbsp;array&amp;nbsp;of&amp;nbsp;values&amp;nbsp;expected&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$c&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>scale_by_log</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'not&amp;nbsp;array'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>2.3</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$c</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;NULL<br /><br />//&amp;nbsp;this&amp;nbsp;is&amp;nbsp;a&amp;nbsp;critical&amp;nbsp;error,&amp;nbsp;log&amp;nbsp;of&amp;nbsp;zero&amp;nbsp;or&amp;nbsp;negative&amp;nbsp;number&amp;nbsp;is&amp;nbsp;undefined<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'----\nvector&amp;nbsp;d&amp;nbsp;-&amp;nbsp;fatal&amp;nbsp;error\n'</span><span style='color: #007700'>;<br /></span><span style='color: #FF8000'>/*&amp;nbsp;log(x)&amp;nbsp;for&amp;nbsp;x&amp;nbsp;&amp;lt;=&amp;nbsp;0&amp;nbsp;is&amp;nbsp;undefined,&amp;nbsp;you&amp;nbsp;used:&amp;nbsp;scale&amp;nbsp;=&amp;nbsp;$scale'&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$d&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>scale_by_log</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$a</span><span style='color: #007700'>,&amp;nbsp;-</span><span style='color: #0000BB'>2.5</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$d</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;Never&amp;nbsp;reached<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> vector a Array ( [0] =&amp;gt; 2 [1] =&amp;gt; 3 [2] =&amp;gt; foo [3] =&amp;gt; 5.5 [4] =&amp;gt; 43.3 [5] =&amp;gt; 21.11 ) ---- vector b - a notice (b = log(PI) * a) &amp;lt;b&amp;gt;My NOTICE&amp;lt;/b&amp;gt; [1024] Value at position 2 is not a number, using 0 (zero)&amp;lt;br /&amp;gt; Array ( [0] =&amp;gt; 2.2894597716988 [1] =&amp;gt; 3.4341896575482 [2] =&amp;gt; 0 [3] =&amp;gt; 6.2960143721717 [4] =&amp;gt; 49.566804057279 [5] =&amp;gt; 24.165247890281 ) ---- vector c - a warning &amp;lt;b&amp;gt;My WARNING&amp;lt;/b&amp;gt; [512] Incorrect input vector, array of values expected&amp;lt;br /&amp;gt; NULL ---- vector d - fatal error &amp;lt;b&amp;gt;My ERROR&amp;lt;/b&amp;gt; [256] log(x) for x &amp;lt;= 0 is undefined, you used: scale = -2.5&amp;lt;br /&amp;gt; Fatal error on line 35 in file trigger_error.php, PHP 5.2.1 (FreeBSD)&amp;lt;br /&amp;gt; Aborting...&amp;lt;br /&amp;gt; </pre></div> </div> </div><p> </p> </div> <a name='function.set-error-handler.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/class.errorexception.php' class='classname'>ErrorException</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.error-reporting.php' class='function' rel='rdfs-seeAlso'>error_reporting()</a> - Sets which PHP errors are reported</li> <li class='member'><a href='http://www.php.net/manual/en/function.restore-error-handler.php' class='function' rel='rdfs-seeAlso'>restore_error_handler()</a> - Restores the previous error handler function</li> <li class='member'><a href='http://www.php.net/manual/en/function.trigger-error.php' class='function' rel='rdfs-seeAlso'>trigger_error()</a> - Generates a user-level error/warning/notice message</li> <li class='member'><a href='http://www.php.net/manual/en/errorfunc.constants.php' class='link'>error level constants</a></li> <li class='member'>information about the <a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='link'>callback</a> type</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="settype" value="<div id='function.settype' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.settype.php'>settype</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>settype</span> &amp;mdash; <span class='dc-title'>Set the type of a variable</span></p> </div> <a name='function.settype.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>settype</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter reference'>&amp;amp;$var</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$type</tt></span> )</div> <p class='para rdfs-comment'> Set the type of variable <i><tt class='parameter'>var</tt></i> to <i><tt class='parameter'>type</tt></i> . </p> </div> <a name='function.settype.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>var</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable being converted. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>type</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Possibles values of <i><tt class='parameter'>type</tt></i> are: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> &amp;quot;boolean&amp;quot; (or, since PHP 4.2.0, &amp;quot;bool&amp;quot;) </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;integer&amp;quot; (or, since PHP 4.2.0, &amp;quot;int&amp;quot;) </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;float&amp;quot; (only possible since PHP 4.2.0, for older versions use the deprecated variant &amp;quot;double&amp;quot;) </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;string&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;array&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;object&amp;quot; </span> </li> <li class='listitem'> <span class='simpara'> &amp;quot;null&amp;quot; (since PHP 4.2.0) </span> </li> </ul><p> </p> </dd> </dl> <p> </p> </div> <a name='function.settype.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.settype.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>settype()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$foo&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'5bar'</span><span style='color: #007700'>;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;string<br /></span><span style='color: #0000BB'>$bar&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;boolean<br /><br /></span><span style='color: #0000BB'>settype</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$foo</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'integer'</span><span style='color: #007700'>);&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$foo&amp;nbsp;is&amp;nbsp;now&amp;nbsp;5&amp;nbsp;&amp;nbsp;&amp;nbsp;(integer)<br /></span><span style='color: #0000BB'>settype</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$bar</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'string'</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;$bar&amp;nbsp;is&amp;nbsp;now&amp;nbsp;'1'&amp;nbsp;(string)<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.settype.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Maximum value for &amp;quot;int&amp;quot; is <b><tt class='constant'>PHP_INT_MAX</tt></b>. <br /> </p></blockquote> </div> <a name='function.settype.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.gettype.php' class='function' rel='rdfs-seeAlso'>gettype()</a> - Get the type of a variable</li> <li class='member'><a href='http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting' class='link'>type-casting</a></li> <li class='member'><a href='http://www.php.net/manual/en/language.types.type-juggling.php' class='link'>type-juggling</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="setrawcookie" value="<div id='function.setrawcookie' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.setrawcookie.php'>setrawcookie</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>setrawcookie</span> &amp;mdash; <span class='dc-title'>Send a cookie without urlencoding the cookie value</span></p> </div> <a name='function.setrawcookie.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>setrawcookie</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$expire</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$domain</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$secure</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$httponly</tt><span class='initializer'> = false</span></span> ]]]]]] )</div> <p class='para rdfs-comment'> <b>setrawcookie()</b> is exactly the same as <a href='http://www.php.net/manual/en/function.setcookie.php' class='function'>setcookie()</a> except that the cookie value will not be automatically urlencoded when sent to the browser. </p> </div> <a name='function.setrawcookie.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> For parameter information, see the <a href='http://www.php.net/manual/en/function.setcookie.php' class='function'>setcookie()</a> documentation. </p> </div> <a name='function.setrawcookie.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.setrawcookie.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The <i><tt class='parameter'>httponly</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.setrawcookie.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.setcookie.php' class='function' rel='rdfs-seeAlso'>setcookie()</a> - Send a cookie</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="setlocale" value="<div id='function.setlocale' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.setlocale.php'>setlocale</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>setlocale</span> &amp;mdash; <span class='dc-title'>Set locale information</span></p> </div> <a name='function.setlocale.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>setlocale</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$category</tt></span> , <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$locale</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$...</tt></span> ] )</div> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>setlocale</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$category</tt></span> , <span class='methodparam'><span class='type'>array</span> <tt class='parameter'>$locale</tt></span> )</div> <p class='para rdfs-comment'> Sets locale information. </p> </div> <a name='function.setlocale.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>category</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <i><tt class='parameter'>category</tt></i> is a named constant specifying the category of the functions affected by the locale setting: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_ALL</tt></b> for all of the below </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_COLLATE</tt></b> for string comparison, see <a href='http://www.php.net/manual/en/function.strcoll.php' class='function'>strcoll()</a> </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_CTYPE</tt></b> for character classification and conversion, for example <a href='http://www.php.net/manual/en/function.strtoupper.php' class='function'>strtoupper()</a> </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_MONETARY</tt></b> for <a href='http://www.php.net/manual/en/function.localeconv.php' class='function'>localeconv()</a> </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_NUMERIC</tt></b> for decimal separator (See also <a href='http://www.php.net/manual/en/function.localeconv.php' class='function'>localeconv()</a>) </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_TIME</tt></b> for date and time formatting with <a href='http://www.php.net/manual/en/function.strftime.php' class='function'>strftime()</a> </span> </li> <li class='listitem'> <span class='simpara'> <b><tt class='constant'>LC_MESSAGES</tt></b> for system responses (available if PHP was compiled with <i>libintl</i>) </span> </li> </ul><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>locale</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>locale</tt></i> is <b><tt class='constant'>NULL</tt></b> or the empty string <i>&amp;quot;&amp;quot;</i>, the locale names will be set from the values of environment variables with the same names as the above categories, or from &amp;quot;LANG&amp;quot;. </p> <p class='para'> If <i><tt class='parameter'>locale</tt></i> is <i>&amp;quot;0&amp;quot;</i>, the locale setting is not affected, only the current setting is returned. </p> <p class='para'> If <i><tt class='parameter'>locale</tt></i> is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success. This is useful if a locale is known under different names on different systems or for providing a fallback for a possibly not available locale. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> (Optional string or array parameters to try as locale settings until success.) </p> </dd> </dl> <p> </p><blockquote><p><b class='note'>Note</b>: On Windows, setlocale(LC_ALL, &amp;#039;&amp;#039;) sets the locale names from the system&amp;#039;s regional/language settings (accessible via Control Panel). <br /> </p></blockquote><p> </p> </div> <a name='function.setlocale.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the new current locale, or <b><tt class='constant'>FALSE</tt></b> if the locale functionality is not implemented on your platform, the specified locale does not exist or the category name is invalid. </p> <p class='para'> An invalid category name also causes a warning message. Category/locale names can be found in <a href='http://www.faqs.org/rfcs/rfc1766' class='link external'>&amp;raquo; RFC 1766</a> and <a href='http://www.w3.org/WAI/ER/IG/ert/iso639.htm' class='link external'>&amp;raquo; ISO 639</a>. Different systems have different naming schemes for locales. </p> <blockquote><p><b class='note'>Note</b>: The return value of <b>setlocale()</b> depends on the system that PHP is running. It returns exactly what the system <i>setlocale</i> function returns. <br /> </p></blockquote> </div> <a name='function.setlocale.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> This function now throws an <b><tt class='constant'>E_DEPRECATED</tt></b> notice if a string is passed to the <i><tt class='parameter'>category</tt></i> parameter instead of one of the <i>LC_*</i> constants. </td> </tr> <tr valign='middle'> <td align='left'>4.3.0</td> <td align='left'> Passing multiple locales became possible. </td> </tr> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> Passing <i><tt class='parameter'>category</tt></i> as a string is now deprecated, use the above constants instead. Passing them as a string (within quotes) will result in a warning message. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.setlocale.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>setlocale()</b> Examples</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Set&amp;nbsp;locale&amp;nbsp;to&amp;nbsp;Dutch&amp;nbsp;*/<br /></span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_ALL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'nl_NL'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Output:&amp;nbsp;vrijdag&amp;nbsp;22&amp;nbsp;december&amp;nbsp;1978&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%A&amp;nbsp;%e&amp;nbsp;%B&amp;nbsp;%Y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>22</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1978</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;try&amp;nbsp;different&amp;nbsp;possible&amp;nbsp;locale&amp;nbsp;names&amp;nbsp;for&amp;nbsp;german&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$loc_de&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_ALL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de_DE@euro'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de_DE'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'ge'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Preferred&amp;nbsp;locale&amp;nbsp;for&amp;nbsp;german&amp;nbsp;on&amp;nbsp;this&amp;nbsp;system&amp;nbsp;is&amp;nbsp;'</span><span style='color: #0000BB'>$loc_de</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>setlocale()</b> Examples for Windows</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>/*&amp;nbsp;Set&amp;nbsp;locale&amp;nbsp;to&amp;nbsp;Dutch&amp;nbsp;*/<br /></span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_ALL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'nld_nld'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;Output:&amp;nbsp;vrijdag&amp;nbsp;22&amp;nbsp;december&amp;nbsp;1978&amp;nbsp;*/<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>strftime</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'%A&amp;nbsp;%d&amp;nbsp;%B&amp;nbsp;%Y'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>mktime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>12</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>22</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1978</span><span style='color: #007700'>));<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;try&amp;nbsp;different&amp;nbsp;possible&amp;nbsp;locale&amp;nbsp;names&amp;nbsp;for&amp;nbsp;german&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.3.0&amp;nbsp;*/<br /></span><span style='color: #0000BB'>$loc_de&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>setlocale</span><span style='color: #007700'>(</span><span style='color: #0000BB'>LC_ALL</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de_DE@euro'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'de_DE'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'deu_deu'</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Preferred&amp;nbsp;locale&amp;nbsp;for&amp;nbsp;german&amp;nbsp;on&amp;nbsp;this&amp;nbsp;system&amp;nbsp;is&amp;nbsp;'</span><span style='color: #0000BB'>$loc_de</span><span style='color: #DD0000'>''</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.setlocale.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The locale information is maintained per process, not per thread. If you are running PHP on a multithreaded server API like IIS or Apache on Windows, you may experience sudden changes in locale settings while a script is running, though the script itself never called <b>setlocale()</b>. This happens due to other scripts running in different threads of the same process at the same time, changing the process-wide locale using <b>setlocale()</b>. </p> </div> <div class='tip'><b class='tip'>Tip</b> <p class='para'> Windows users will find useful information about <i><tt class='parameter'>locale</tt></i> strings at Microsoft&amp;#039;s <acronym title='Microsoft Developer Network'>MSDN</acronym> website. Supported language strings can be found at <a href='http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_crt_language_strings.asp' class='link external'>&amp;raquo; http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_crt_language_strings.asp</a> and supported country/region strings at <a href='http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_crt_country_strings.asp' class='link external'>&amp;raquo; http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_crt_country_strings.asp</a>. Windows systems support the three letter codes for country/region specified by <i>ISO 3166-Alpha-3</i>, which can be found at this <a href='http://www.unicode.org/onlinedat/countries.html' class='link external'>&amp;raquo; Unicode website</a>. </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="setcookie" value="<div id='function.setcookie' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.setcookie.php'>setcookie</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>setcookie</span> &amp;mdash; <span class='dc-title'>Send a cookie</span></p> </div> <a name='function.setcookie.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>setcookie</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$value</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$expire</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$domain</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$secure</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$httponly</tt><span class='initializer'> = false</span></span> ]]]]]] )</div> <p class='para rdfs-comment'> <b>setcookie()</b> defines a cookie to be sent along with the rest of the HTTP headers. Like other headers, cookies must be sent <em class='emphasis'>before</em> any output from your script (this is a protocol restriction). This requires that you place calls to this function prior to any output, including <i>&amp;lt;html&amp;gt;</i> and <i>&amp;lt;head&amp;gt;</i> tags as well as any whitespace. </p> <p class='para'> Once the cookies have been set, they can be accessed on the next page load with the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.cookies.php' class='classname'>$_COOKIE</a></var> or <var class='varname'>$HTTP_COOKIE_VARS</var> arrays. Note, <a href='http://www.php.net/manual/en/language.variables.superglobals.php' class='link'>superglobals</a> such as <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.cookies.php' class='classname'>$_COOKIE</a></var> became available in PHP 4.1.0. Cookie values also exist in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.request.php' class='classname'>$_REQUEST</a></var>. </p> </div> <a name='function.setcookie.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> All the arguments except the <i><tt class='parameter'>name</tt></i> argument are optional. You may also replace an argument with an empty string (<em class='emphasis'>&amp;quot;&amp;quot;</em>) in order to skip that argument. Because the <i><tt class='parameter'>expire</tt></i> argument is integer, it cannot be skipped with an empty string, use a zero (<em class='emphasis'>0</em>) instead. </p> <p class='para'> See <a href='http://curl.haxx.se/rfc/cookie_spec.html' class='link external'>&amp;raquo; <i>Netscape cookie specification</i></a> for specifics on how each <b>setcookie()</b> parameter works </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The name of the cookie. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value of the cookie. This value is stored on the clients computer; do not store sensitive information. Assuming the <i><tt class='parameter'>name</tt></i> is &amp;#039;cookiename&amp;#039;, this value is retrieved through <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.cookies.php' class='classname'>$_COOKIE['cookiename']</a></var> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>expire</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The time the cookie expires. This is a Unix timestamp so is in number of seconds since the epoch. In other words, you&amp;#039;ll most likely set this with the <a href='http://www.php.net/manual/en/function.time.php' class='function'>time()</a> function plus the number of seconds before you want it to expire. Or you might use <a href='http://www.php.net/manual/en/function.mktime.php' class='function'>mktime()</a>. <i>time()+60*60*24*30</i> will set the cookie to expire in 30 days. If set to 0, or omitted, the cookie will expire at the end of the session (when the browser closes). </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: You may notice the <i><tt class='parameter'>expire</tt></i> parameter takes on a Unix timestamp, as opposed to the date format <i>Wdy, DD-Mon-YYYY HH:MM:SS GMT</i>, this is because PHP does this conversion internally. <br /> <i><tt class='parameter'>expire</tt></i> is compared to the client&amp;#039;s time which can differ from server&amp;#039;s time. <br /> </p></blockquote><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The path on the server in which the cookie will be available on. If set to <i>&amp;#039;/&amp;#039;</i>, the cookie will be available within the entire <i><tt class='parameter'>domain</tt></i> . If set to <i>&amp;#039;/foo/&amp;#039;</i>, the cookie will only be available within the <i>/foo/</i> directory and all sub-directories such as <i>/foo/bar/</i> of <i><tt class='parameter'>domain</tt></i> . The default value is the current directory that the cookie is being set in. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>domain</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The domain that the cookie is available. To make the cookie available on all subdomains of example.com then you&amp;#039;d set it to <i>&amp;#039;.example.com&amp;#039;</i>. The <i>.</i> is not required but makes it compatible with more browsers. Setting it to <i>www.example.com</i> will make the cookie only available in the <i>www</i> subdomain. Refer to tail matching in the <a href='http://curl.haxx.se/rfc/cookie_spec.html' class='link external'>&amp;raquo; spec</a> for details. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>secure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Indicates that the cookie should only be transmitted over a secure HTTPS connection from the client. When set to <b><tt class='constant'>TRUE</tt></b>, the cookie will only be set if a secure connection exists. The default is <b><tt class='constant'>FALSE</tt></b>. On the server-side, it&amp;#039;s on the programmer to send this kind of cookie only on secure connection (e.g. with respect to <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.server.php' class='classname'>$_SERVER['HTTPS']</a></var>). </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>httponly</tt></i> </span> </dt><dd class='listitem'> <p class='para'> When <b><tt class='constant'>TRUE</tt></b> the cookie will be made accessible only through the HTTP protocol. This means that the cookie won&amp;#039;t be accessible by scripting languages, such as JavaScript. This setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers). Added in PHP 5.2.0. <b><tt class='constant'>TRUE</tt></b> or <b><tt class='constant'>FALSE</tt></b> </p> </dd> </dl> <p> </p> </div> <a name='function.setcookie.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> If output exists prior to calling this function, <b>setcookie()</b> will fail and return <b><tt class='constant'>FALSE</tt></b>. If <b>setcookie()</b> successfully runs, it will return <b><tt class='constant'>TRUE</tt></b>. This does not indicate whether the user accepted the cookie. </p> </div> <a name='function.setcookie.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> Some examples follow how to send cookies: </p><div class='example'> <p><b>Example #1 <b>setcookie()</b> send example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$value&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'something&amp;nbsp;from&amp;nbsp;somewhere'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()+</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>);&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;expire&amp;nbsp;in&amp;nbsp;1&amp;nbsp;hour&amp;nbsp;*/<br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()+</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/~rasmus/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> Note that the value portion of the cookie will automatically be urlencoded when you send the cookie, and when it is received, it is automatically decoded and assigned to a variable by the same name as the cookie name. If you don&amp;#039;t want this, you can use <a href='http://www.php.net/manual/en/function.setrawcookie.php' class='function'>setrawcookie()</a> instead if you are using PHP 5. To see the contents of our test cookie in a script, simply use one of the following examples: </p> <p class='para'> </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Print&amp;nbsp;an&amp;nbsp;individual&amp;nbsp;cookie<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$_COOKIE</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>];<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$HTTP_COOKIE_VARS</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>];<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Another&amp;nbsp;way&amp;nbsp;to&amp;nbsp;debug/test&amp;nbsp;is&amp;nbsp;to&amp;nbsp;view&amp;nbsp;all&amp;nbsp;cookies<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_COOKIE</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 <b>setcookie()</b> delete example</b></p> <div class='example-contents para'><p> When deleting a cookie you should assure that the expiration date is in the past, to trigger the removal mechanism in your browser. Examples follow how to delete cookies sent in previous example: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;the&amp;nbsp;expiration&amp;nbsp;date&amp;nbsp;to&amp;nbsp;one&amp;nbsp;hour&amp;nbsp;ago<br /></span><span style='color: #0000BB'>setcookie&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setcookie&amp;nbsp;</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'TestCookie'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()&amp;nbsp;-&amp;nbsp;</span><span style='color: #0000BB'>3600</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/~rasmus/'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'.example.com'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #3 <b>setcookie()</b> and arrays</b></p> <div class='example-contents para'><p> You may also set array cookies by using array notation in the cookie name. This has the effect of setting as many cookies as you have array elements, but when the cookie is received by your script, the values are all placed in an array with the cookie&amp;#039;s name: </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;set&amp;nbsp;the&amp;nbsp;cookies<br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cookie[three]'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cookiethree'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cookie[two]'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cookietwo'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'cookie[one]'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cookieone'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;after&amp;nbsp;the&amp;nbsp;page&amp;nbsp;reloads,&amp;nbsp;print&amp;nbsp;them&amp;nbsp;out<br /></span><span style='color: #007700'>if&amp;nbsp;(isset(</span><span style='color: #0000BB'>$_COOKIE</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'cookie'</span><span style='color: #007700'>]))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>$_COOKIE</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'cookie'</span><span style='color: #007700'>]&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$name&amp;nbsp;</span><span style='color: #007700'>=&amp;gt;&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$name</span><span style='color: #DD0000'>&amp;nbsp;:&amp;nbsp;</span><span style='color: #0000BB'>$value</span><span style='color: #DD0000'>&amp;nbsp;&amp;lt;br&amp;nbsp;/&amp;gt;\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> three : cookiethree two : cookietwo one : cookieone </pre></div> </div> </div><p> </p> </div> <a name='function.setcookie.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The <i><tt class='parameter'>httponly</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.setcookie.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: As of PHP 4, you can use output buffering to send output prior to the call of this function, with the overhead of all of your output to the browser being buffered in the server until you send it. You can do this by calling <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a> and <a href='http://www.php.net/manual/en/function.ob-end-flush.php' class='function'>ob_end_flush()</a> in your script, or setting the <i>output_buffering</i> configuration directive on in your <var class='filename'>php.ini</var> or server configuration files. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: If the PHP directive <a href='http://www.php.net/manual/en/ini.core.php#ini.register-globals' class='link'>register_globals</a> is set to <i>on</i> then cookie values will also be made into variables. In our examples below, <var class='varname'>$TestCookie</var> will exist. It&amp;#039;s recommended to use <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.cookies.php' class='classname'>$_COOKIE</a></var>. <br /> </p></blockquote> <p class='para'> Common Pitfalls: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> Cookies will not become visible until the next loading of a page that the cookie should be visible for. To test if a cookie was successfully set, check for the cookie on a next loading page before the cookie expires. Expire time is set via the <i><tt class='parameter'>expire</tt></i> parameter. A nice way to debug the existence of cookies is by simply calling <i>print_r($_COOKIE);</i>. </span> </li> <li class='listitem'> <span class='simpara'> Cookies must be deleted with the same parameters as they were set with. If the value argument is an empty string, or <b><tt class='constant'>FALSE</tt></b>, and all other arguments match a previous call to setcookie, then the cookie with the specified name will be deleted from the remote client. This is internally achieved by setting value to &amp;#039;deleted&amp;#039; and expiration time to one year in past. </span> </li> <li class='listitem'> <span class='simpara'> Because setting a cookie with a value of <b><tt class='constant'>FALSE</tt></b> will try to delete the cookie, you should not use boolean values. Instead, use <em class='emphasis'>0</em> for <b><tt class='constant'>FALSE</tt></b> and <em class='emphasis'>1</em> for <b><tt class='constant'>TRUE</tt></b>. </span> </li> <li class='listitem'> <span class='simpara'> Cookies names can be set as array names and will be available to your PHP scripts as arrays but separate cookies are stored on the users system. Consider <a href='http://www.php.net/manual/en/function.explode.php' class='function'>explode()</a> to set one cookie with multiple names and values. It is not recommended to use <a href='http://www.php.net/manual/en/function.serialize.php' class='function'>serialize()</a> for this purpose, because it can result in security holes. </span> </li> </ul><p> </p> <p class='simpara'> Multiple calls to <b>setcookie()</b> are performed in the order called. </p> </div> <a name='function.setcookie.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.header.php' class='function' rel='rdfs-seeAlso'>header()</a> - Send a raw HTTP header</li> <li class='member'><a href='http://www.php.net/manual/en/function.setrawcookie.php' class='function' rel='rdfs-seeAlso'>setrawcookie()</a> - Send a cookie without urlencoding the cookie value</li> <li class='member'><a href='http://www.php.net/manual/en/features.cookies.php' class='link'>cookies section</a></li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc2109' class='link external'>&amp;raquo; RFC 2109</a></li> <li class='member'><a href='http://www.faqs.org/rfcs/rfc2965' class='link external'>&amp;raquo; RFC 2965</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_write_close" value="<div id='function.session-write-close' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-write-close.php'>session_write_close</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_write_close</span> &amp;mdash; <span class='dc-title'>Write session data and end session</span></p> </div> <a name='function.session-write-close.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>session_write_close</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> End the current session and store session data. </p> <p class='para'> Session data is usually stored after your script terminated without the need to call <b>session_write_close()</b>, but as session data is locked to prevent concurrent writes only one script may operate on a session at any time. When using framesets together with sessions you will experience the frames loading one by one due to this locking. You can reduce the time needed to load all the frames by ending the session as soon as all changes to session variables are done. </p> </div> <a name='function.session-write-close.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_unset" value="<div id='function.session-unset' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-unset.php'>session_unset</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_unset</span> &amp;mdash; <span class='dc-title'>Free all session variables</span></p> </div> <a name='function.session-unset.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>session_unset</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> The <b>session_unset()</b> function frees all session variables currently registered. </p> </div> <a name='function.session-unset.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.session-unset.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var> for PHP 4.0.6 or less) is used, use <a href='http://www.php.net/manual/en/function.unset.php' class='function'>unset()</a> to unregister a session variable, i.e. <i>unset ($_SESSION[&amp;#039;varname&amp;#039;]);</i>. <br /> </p></blockquote> <div class='caution'><b class='caution'>Caution</b> <p class='para'> Do NOT unset the whole <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> with <i>unset($_SESSION)</i> as this will disable the registering of session variables through the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> superglobal. </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_unregister" value="<div id='function.session-unregister' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-unregister.php'>session_unregister</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_unregister</span> &amp;mdash; <span class='dc-title'>Unregister a global variable from the current session</span></p> </div> <a name='function.session-unregister.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_unregister</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> <b>session_unregister()</b> unregisters the global variable named <i><tt class='parameter'>name</tt></i> from the current session. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.session-unregister.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable name. </p> </dd> </dl> <p> </p> </div> <a name='function.session-unregister.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-unregister.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var> for PHP 4.0.6 or less) is used, use <a href='http://www.php.net/manual/en/function.unset.php' class='function'>unset()</a> to unregister a session variable. Do not <a href='http://www.php.net/manual/en/function.unset.php' class='function'>unset()</a> <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> itself as this will disable the special function of the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> superglobal. <br /> </p></blockquote> <div class='caution'><b class='caution'>Caution</b> <p class='para'> This function does not unset the corresponding global variable for <i><tt class='parameter'>name</tt></i> , it only prevents the variable from being saved as part of the session. You must call <a href='http://www.php.net/manual/en/function.unset.php' class='function'>unset()</a> to remove the corresponding global variable. </p> </div> <div class='caution'><b class='caution'>Caution</b> <p class='para'> If you are using <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var>), do not use <a href='http://www.php.net/manual/en/function.session-register.php' class='function'>session_register()</a>, <a href='http://www.php.net/manual/en/function.session-is-registered.php' class='function'>session_is_registered()</a> and <b>session_unregister()</b>. </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_start" value="<div id='function.session-start' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-start.php'>session_start</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_start</span> &amp;mdash; <span class='dc-title'>Initialize session data</span></p> </div> <a name='function.session-start.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_start</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>session_start()</b> creates a session or resumes the current one based on the current session id that&amp;#039;s being passed via a request, such as GET, POST, or a cookie. </p> <p class='para'> If you want to use a named session, you must call <a href='http://www.php.net/manual/en/function.session-name.php' class='function'>session_name()</a> before calling <b>session_start()</b>. </p> <p class='para'> <b>session_start()</b> will register internal output handler for URL rewriting when <i>trans-sid</i> is enabled. If a user uses <i>ob_gzhandler</i> or like with <a href='http://www.php.net/manual/en/function.ob-start.php' class='function'>ob_start()</a>, the order of output handler is important for proper output. For example, user must register <i>ob_gzhandler</i> before session start. </p> </div> <a name='function.session-start.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> This function returns <b><tt class='constant'>TRUE</tt></b> if session was started with success otherwise <b><tt class='constant'>FALSE</tt></b>. </p> </div> <a name='function.session-start.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.3.0</td> <td align='left'> If session fails to start for some reason, then <b><tt class='constant'>FALSE</tt></b> is returned where previously <b><tt class='constant'>TRUE</tt></b> always was returned. </td> </tr> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> As of now, calling <b>session_start()</b> while the session has already been started will result in an error of level <b><tt class='constant'>E_NOTICE</tt></b>. Also, the second session start will simply be ignored. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-start.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A session example: <var class='filename'>page1.php</var></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;page1.php<br /><br /></span><span style='color: #0000BB'>session_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Welcome&amp;nbsp;to&amp;nbsp;page&amp;nbsp;#1'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'favcolor'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'green'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'animal'</span><span style='color: #007700'>]&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'cat'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'time'</span><span style='color: #007700'>]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Works&amp;nbsp;if&amp;nbsp;session&amp;nbsp;cookie&amp;nbsp;was&amp;nbsp;accepted<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/page2.php'&amp;gt;page&amp;nbsp;2&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Or&amp;nbsp;maybe&amp;nbsp;pass&amp;nbsp;along&amp;nbsp;the&amp;nbsp;session&amp;nbsp;id,&amp;nbsp;if&amp;nbsp;needed<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/page2.php?'&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #0000BB'>SID&amp;nbsp;</span><span style='color: #007700'>.&amp;nbsp;</span><span style='color: #DD0000'>''&amp;gt;page&amp;nbsp;2&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> After viewing <var class='filename'>page1.php</var>, the second page <var class='filename'>page2.php</var> will magically contain the session data. Read the <a href='http://www.php.net/manual/en/ref.session.php' class='link'>session reference</a> for information on <a href='http://www.php.net/manual/en/session.idpassing.php' class='link'>propagating session ids</a> as it, for example, explains what the constant <b><tt class='constant'>SID</tt></b> is all about. </p> <p class='para'> </p><div class='example'> <p><b>Example #2 A session example: <var class='filename'>page2.php</var></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;page2.php<br /><br /></span><span style='color: #0000BB'>session_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Welcome&amp;nbsp;to&amp;nbsp;page&amp;nbsp;#2&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /><br />echo&amp;nbsp;</span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'favcolor'</span><span style='color: #007700'>];&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;green<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'animal'</span><span style='color: #007700'>];&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>//&amp;nbsp;cat<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #0000BB'>date</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'Y&amp;nbsp;m&amp;nbsp;d&amp;nbsp;H:i:s'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'time'</span><span style='color: #007700'>]);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;You&amp;nbsp;may&amp;nbsp;want&amp;nbsp;to&amp;nbsp;use&amp;nbsp;SID&amp;nbsp;here,&amp;nbsp;like&amp;nbsp;we&amp;nbsp;did&amp;nbsp;in&amp;nbsp;page1.php<br /></span><span style='color: #007700'>echo&amp;nbsp;</span><span style='color: #DD0000'>'&amp;lt;br&amp;nbsp;/&amp;gt;&amp;lt;a&amp;nbsp;href='http://www.php.net/manual/en/page1.php'&amp;gt;page&amp;nbsp;1&amp;lt;/a&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-start.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If you are using cookie-based sessions, you must call <b>session_start()</b> before anything is outputted to the browser. <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: Use of <a href='http://www.php.net/manual/en/zlib.configuration.php#ini.zlib.output-compression' class='link'>zlib.output_compression</a> is recommended rather than <a href='http://www.php.net/manual/en/function.ob-gzhandler.php' class='function'>ob_gzhandler()</a> <br /> </p></blockquote> <blockquote><p><b class='note'>Note</b>: This function will send out several HTTP headers depending on the configuration. See <a href='http://www.php.net/manual/en/function.session-cache-limiter.php' class='function'>session_cache_limiter()</a> to customize these headers. <br /> </p></blockquote> </div> <a name='function.session-start.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var></li> <li class='member'> The <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.auto-start' class='link'>session.auto_start</a> configuration directive </li> <li class='member'><a href='http://www.php.net/manual/en/function.session-id.php' class='function' rel='rdfs-seeAlso'>session_id()</a> - Get and/or set the current session id</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_set_save_handler" value="<div id='function.session-set-save-handler' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-set-save-handler.php'>session_set_save_handler</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_set_save_handler</span> &amp;mdash; <span class='dc-title'>Sets user-level session storage functions</span></p> </div> <a name='function.session-set-save-handler.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_set_save_handler</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$open</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$close</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$read</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$write</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$destroy</tt></span> , <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.callback' class='type callback'>callback</a></span> <tt class='parameter'>$gc</tt></span> )</div> <p class='para rdfs-comment'> <b>session_set_save_handler()</b> sets the user-level session storage functions which are used for storing and retrieving data associated with a session. This is most useful when a storage method other than those supplied by PHP sessions is preferred. i.e. Storing the session data in a local database. </p> </div> <a name='function.session-set-save-handler.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>open</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Open function, this works like a constructor in classes and is executed when the session is being opened. The open function expects two parameters, where the first is the save path and the second is the session name. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>close</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Close function, this works like a destructor in classes and is executed when the session operation is done. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>read</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Read function must return string value always to make save handler work as expected. Return empty string if there is no data to read. Return values from other handlers are converted to boolean expression. <b><tt class='constant'>TRUE</tt></b> for success, <b><tt class='constant'>FALSE</tt></b> for failure. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>write</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: The &amp;quot;write&amp;quot; handler is not executed until after the output stream is closed. Thus, output from debugging statements in the &amp;quot;write&amp;quot; handler will never be seen in the browser. If debugging output is necessary, it is suggested that the debug output be written to a file instead. <br /> </p></blockquote><p> </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>destroy</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The destroy handler, this is executed when a session is destroyed with <a href='http://www.php.net/manual/en/function.session-destroy.php' class='function'>session_destroy()</a> and takes the session id as its only parameter. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>gc</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The garbage collector, this is executed when the session garbage collector is executed and takes the max session lifetime as its only parameter. </p> </dd> </dl> <p> </p> </div> <a name='function.session-set-save-handler.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-set-save-handler.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>session_set_save_handler()</b> example</b></p> <div class='example-contents para'><p> The following example provides file based session storage similar to the PHP sessions default save handler <i><tt class='parameter'>files</tt></i> . This example could easily be extended to cover database storage using your favorite PHP supported database engine. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>function&amp;nbsp;</span><span style='color: #0000BB'>open</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$save_path</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$session_name</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;global&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$save_path</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>close</span><span style='color: #007700'>()<br />{<br />&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>true</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>read</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;global&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sess_file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #DD0000'>/sess_</span><span style='color: #0000BB'>$id</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;return&amp;nbsp;(string)&amp;nbsp;@</span><span style='color: #0000BB'>file_get_contents</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sess_file</span><span style='color: #007700'>);<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>write</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sess_data</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;global&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sess_file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #DD0000'>/sess_</span><span style='color: #0000BB'>$id</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>$fp&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;@</span><span style='color: #0000BB'>fopen</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sess_file</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'w'</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$return&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>fwrite</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sess_data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>fclose</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$fp</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$return</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(</span><span style='color: #0000BB'>false</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;}<br /><br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>destroy</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$id</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;global&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$sess_file&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #DD0000'>/sess_</span><span style='color: #0000BB'>$id</span><span style='color: #DD0000'>'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;return(@</span><span style='color: #0000BB'>unlink</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$sess_file</span><span style='color: #007700'>));<br />}<br /><br />function&amp;nbsp;</span><span style='color: #0000BB'>gc</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$maxlifetime</span><span style='color: #007700'>)<br />{<br />&amp;nbsp;&amp;nbsp;global&amp;nbsp;</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;(</span><span style='color: #0000BB'>glob</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'</span><span style='color: #0000BB'>$sess_save_path</span><span style='color: #DD0000'>/sess_*'</span><span style='color: #007700'>)&amp;nbsp;as&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(</span><span style='color: #0000BB'>filemtime</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>)&amp;nbsp;+&amp;nbsp;</span><span style='color: #0000BB'>$maxlifetime&amp;nbsp;</span><span style='color: #007700'>&amp;lt;&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@</span><span style='color: #0000BB'>unlink</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>true</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>session_set_save_handler</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'open'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'close'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'read'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'write'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'destroy'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'gc'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>session_start</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;proceed&amp;nbsp;to&amp;nbsp;use&amp;nbsp;sessions&amp;nbsp;normally<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-set-save-handler.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='warning'><b class='warning'>Warning</b> <p class='para'> As of PHP 5.0.5 the <i><tt class='parameter'>write</tt></i> and <i><tt class='parameter'>close</tt></i> handlers are called after object destruction and therefore cannot use objects or throw exceptions. The object destructors can however use sessions. </p> <p class='para'> It is possible to call <a href='http://www.php.net/manual/en/function.session-write-close.php' class='function'>session_write_close()</a> from the destructor to solve this chicken and egg problem. </p> </div> <div class='warning'><b class='warning'>Warning</b> <p class='para'> Current working directory is changed with some SAPIs if session is closed in the script termination. It is possible to close the session earlier with <a href='http://www.php.net/manual/en/function.session-write-close.php' class='function'>session_write_close()</a>. </p> </div> </div> <a name='function.session-set-save-handler.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> The <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.save-handler' class='link'>session.save_handler</a> configuration directive </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_set_cookie_params" value="<div id='function.session-set-cookie-params' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-set-cookie-params.php'>session_set_cookie_params</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_set_cookie_params</span> &amp;mdash; <span class='dc-title'>Set the session cookie parameters</span></p> </div> <a name='function.session-set-cookie-params.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>session_set_cookie_params</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$lifetime</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> [, <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$domain</tt></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$secure</tt><span class='initializer'> = false</span></span> [, <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$httponly</tt><span class='initializer'> = false</span></span> ]]]] )</div> <p class='para rdfs-comment'> Set cookie parameters defined in the <var class='filename'>php.ini</var> file. The effect of this function only lasts for the duration of the script. Thus, you need to call <b>session_set_cookie_params()</b> for every request and before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> is called. </p> </div> <a name='function.session-set-cookie-params.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>lifetime</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime' class='link'>Lifetime</a> of the session cookie, defined in seconds. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-path' class='link'>Path</a> on the domain where the cookie will work. Use a single slash (&amp;#039;/&amp;#039;) for all paths on the domain. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>domain</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Cookie <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-domain' class='link'>domain</a>, for example &amp;#039;www.php.net&amp;#039;. To make cookies visible on all subdomains then the domain must be prefixed with a dot like &amp;#039;.php.net&amp;#039;. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>secure</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <b><tt class='constant'>TRUE</tt></b> cookie will only be sent over <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-secure' class='link'>secure</a> connections. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>httponly</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If set to <b><tt class='constant'>TRUE</tt></b> then PHP will attempt to send the <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-httponly' class='link'>httponly</a> flag when setting the session cookie. </p> </dd> </dl> <p> </p> </div> <a name='function.session-set-cookie-params.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='function.session-set-cookie-params.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The <i><tt class='parameter'>httponly</tt></i> parameter was added. </td> </tr> <tr valign='middle'> <td align='left'>4.0.4</td> <td align='left'> The <i><tt class='parameter'>secure</tt></i> parameter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-set-cookie-params.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime' class='link'>session.cookie_lifetime</a> </li> <li class='member'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-domain' class='link'>session.cookie_domain</a> </li> <li class='member'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-secure' class='link'>session.cookie_secure</a> </li> <li class='member'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-httponly' class='link'>session.cookie_httponly</a> </li> <li class='member'><a href='http://www.php.net/manual/en/function.session-get-cookie-params.php' class='function' rel='rdfs-seeAlso'>session_get_cookie_params()</a> - Get the session cookie parameters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_save_path" value="<div id='function.session-save-path' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-save-path.php'>session_save_path</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_save_path</span> &amp;mdash; <span class='dc-title'>Get and/or set the current session save path</span></p> </div> <a name='function.session-save-path.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_save_path</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$path</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_save_path()</b> returns the path of the current directory used to save session data. </p> </div> <a name='function.session-save-path.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>path</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Session data path. If specified, the path to which data is saved will be changed. <b>session_save_path()</b> needs to be called before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> for that purpose. </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: On some operating systems, you may want to specify a path on a filesystem that handles lots of small files efficiently. For example, on Linux, reiserfs may provide better performance than ext2fs. <br /> </p></blockquote><p> </p> </dd> </dl> <p> </p> </div> <a name='function.session-save-path.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the path of the current directory used for data storage. </p> </div> <a name='function.session-save-path.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> The <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.save-path' class='link'>session.save_path</a> configuration directive </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_register" value="<div id='function.session-register' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-register.php'>session_register</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_register</span> &amp;mdash; <span class='dc-title'>Register one or more global variables with the current session</span></p> </div> <a name='function.session-register.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_register</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$name</tt></span> [, <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$...</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_register()</b> accepts a variable number of arguments, any of which can be either a string holding the name of a variable or an array consisting of variable names or other arrays. For each name, <b>session_register()</b> registers the global variable with that name in the current session. </p> <p class='para'> You can also create a session variable by simply setting the appropriate member of the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> or <var class='varname'>$HTTP_SESSION_VARS</var> (PHP &amp;lt; 4.1.0) array. </p><div class='informalexample'> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Use&amp;nbsp;of&amp;nbsp;session_register()&amp;nbsp;is&amp;nbsp;deprecated<br /></span><span style='color: #0000BB'>$barney&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'A&amp;nbsp;big&amp;nbsp;purple&amp;nbsp;dinosaur.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>session_register</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'barney'</span><span style='color: #007700'>);<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Use&amp;nbsp;of&amp;nbsp;$_SESSION&amp;nbsp;is&amp;nbsp;preferred,&amp;nbsp;as&amp;nbsp;of&amp;nbsp;PHP&amp;nbsp;4.1.0<br /></span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'zim'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'An&amp;nbsp;invader&amp;nbsp;from&amp;nbsp;another&amp;nbsp;planet.'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;The&amp;nbsp;old&amp;nbsp;way&amp;nbsp;was&amp;nbsp;to&amp;nbsp;use&amp;nbsp;$HTTP_SESSION_VARS<br /></span><span style='color: #0000BB'>$HTTP_SESSION_VARS</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'spongebob'</span><span style='color: #007700'>]&amp;nbsp;=&amp;nbsp;</span><span style='color: #DD0000'>'He's&amp;nbsp;got&amp;nbsp;square&amp;nbsp;pants.'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> <p class='para'> If <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> was not called before this function is called, an implicit call to <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> with no parameters will be made. <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> does not mimic this behavior and requires <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> before use. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.session-register.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> A string holding the name of a variable or an array consisting of variable names or other arrays. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>...</tt></i> </span> </dt><dd class='listitem'> <p class='para'> </p> </dd> </dl> <p> </p> </div> <a name='function.session-register.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-register.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='caution'><b class='caution'>Caution</b> <p class='para'> If you want your script to work regardless of <a href='http://www.php.net/manual/en/ini.core.php#ini.register-globals' class='link'>register_globals</a>, you need to instead use the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> array as <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> entries are automatically registered. If your script uses <b>session_register()</b>, it will not work in environments where the PHP directive <a href='http://www.php.net/manual/en/ini.core.php#ini.register-globals' class='link'>register_globals</a> is disabled. </p> </div> <blockquote><p><b class='note'>Note</b>: <b>register_globals: important note</b><br />As of PHP 4.2.0, the default value for the PHP directive <a href='http://www.php.net/manual/en/ini.core.php#ini.register-globals' class='link'>register_globals</a> is <em class='emphasis'> off</em>, and it was completely removed as of PHP 6.0.0. The PHP community discourages developers from relying on this directive, and encourages the use of other means, such as the <a href='http://www.php.net/manual/en/language.variables.predefined.php' class='link'>superglobals</a>.<br /></p></blockquote> <div class='caution'><b class='caution'>Caution</b> <p class='para'> This registers a <em class='emphasis'>global</em> variable. If you want to register a session variable from within a function, you need to make sure to make it global using the <a href='http://www.php.net/manual/en/language.variables.scope.php' class='link'><strong class='command'>global</strong></a> keyword or the <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.globals.php' class='classname'>$GLOBALS[]</a></var> array, or use the special session arrays as noted below. </p> </div> <div class='caution'><b class='caution'>Caution</b> <p class='para'> If you are using <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var>), do not use <b>session_register()</b>, <a href='http://www.php.net/manual/en/function.session-is-registered.php' class='function'>session_is_registered()</a>, and <a href='http://www.php.net/manual/en/function.session-unregister.php' class='function'>session_unregister()</a>. </p> </div> <blockquote><p><b class='note'>Note</b>: It is currently impossible to register resource variables in a session. For example, you cannot create a connection to a database and store the connection id as a session variable and expect the connection to still be valid the next time the session is restored. PHP functions that return a resource are identified by having a return type of <i>resource</i> in their function definition. A list of functions that return resources are available in the <a href='http://www.php.net/manual/en/resource.php' class='link'>resource types</a> appendix. <br /> If <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var> for PHP 4.0.6 or less) is used, assign values to <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var>. For example: $_SESSION[&amp;#039;var&amp;#039;] = &amp;#039;ABC&amp;#039;; <br /> </p></blockquote> </div> <a name='function.session-register.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.session-is-registered.php' class='function' rel='rdfs-seeAlso'>session_is_registered()</a> - Find out whether a global variable is registered in a session</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-unregister.php' class='function' rel='rdfs-seeAlso'>session_unregister()</a> - Unregister a global variable from the current session</li> <li class='member'><var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_regenerate_id" value="<div id='function.session-regenerate-id' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-regenerate-id.php'>session_regenerate_id</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.3.2, PHP 5)</p><p class='refpurpose'><span class='refname'>session_regenerate_id</span> &amp;mdash; <span class='dc-title'> Update the current session id with a newly generated one </span></p> </div> <a name='function.session-regenerate-id.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_regenerate_id</b></span> ([ <span class='methodparam'><span class='type'>bool</span> <tt class='parameter'>$delete_old_session</tt><span class='initializer'> = false</span></span> ] )</div> <p class='para rdfs-comment'> <b>session_regenerate_id()</b> will replace the current session id with a new one, and keep the current session information. </p> </div> <a name='function.session-regenerate-id.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>delete_old_session</tt></i> </span> </dt><dd class='listitem'> <p class='para'> Whether to delete the old associated session file or not. Defaults to <b><tt class='constant'>FALSE</tt></b>. </p> </dd> </dl> <p> </p> </div> <a name='function.session-regenerate-id.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-regenerate-id.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.3.3</td> <td align='left'> Since then, if session cookies are enabled, use of <b>session_regenerate_id()</b> will also submit a new session cookie with the new session id. </td> </tr> <tr valign='middle'> <td align='left'>5.1.0</td> <td align='left'> Added the <i><tt class='parameter'>delete_old_session</tt></i> parameter. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-regenerate-id.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A <b>session_regenerate_id()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />session_start</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$old_sessionid&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_id</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>session_regenerate_id</span><span style='color: #007700'>();<br /><br /></span><span style='color: #0000BB'>$new_sessionid&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_id</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'Old&amp;nbsp;Session:&amp;nbsp;</span><span style='color: #0000BB'>$old_sessionid</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'New&amp;nbsp;Session:&amp;nbsp;</span><span style='color: #0000BB'>$new_sessionid</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$_SESSION</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-regenerate-id.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.session-id.php' class='function' rel='rdfs-seeAlso'>session_id()</a> - Get and/or set the current session id</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-start.php' class='function' rel='rdfs-seeAlso'>session_start()</a> - Initialize session data</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-name.php' class='function' rel='rdfs-seeAlso'>session_name()</a> - Get and/or set the current session name</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_name" value="<div id='function.session-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-name.php'>session_name</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_name</span> &amp;mdash; <span class='dc-title'>Get and/or set the current session name</span></p> </div> <a name='function.session-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_name</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_name()</b> returns the name of the current session. </p> <p class='para'> The session name is reset to the default value stored in <i>session.name</i> at request startup time. Thus, you need to call <b>session_name()</b> for every request (and before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> or <a href='http://www.php.net/manual/en/function.session-register.php' class='function'>session_register()</a> are called). </p> </div> <a name='function.session-name.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The session name references the session id in cookies and URLs. It should contain only alphanumeric characters; it should be short and descriptive (i.e. for users with enabled cookie warnings). If <i><tt class='parameter'>name</tt></i> is specified, the name of the current session is changed to its value. </p> <p class='para'> <div class='warning'><b class='warning'>Warning</b> <p class='para'> The session name can&amp;#039;t consist of digits only, at least one letter must be present. Otherwise a new session id is generated every time. </p> </div> </p> </dd> </dl> <p> </p> </div> <a name='function.session-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the current session. </p> </div> <a name='function.session-name.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>session_name()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;set&amp;nbsp;the&amp;nbsp;session&amp;nbsp;name&amp;nbsp;to&amp;nbsp;WebsiteID&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>$previous_name&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_name</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'WebsiteID'</span><span style='color: #007700'>);<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;previous&amp;nbsp;session&amp;nbsp;name&amp;nbsp;was&amp;nbsp;</span><span style='color: #0000BB'>$previous_name</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-name.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'> The <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.name' class='link'>session.name</a> configuration directive </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_module_name" value="<div id='function.session-module-name' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-module-name.php'>session_module_name</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_module_name</span> &amp;mdash; <span class='dc-title'>Get and/or set the current session module</span></p> </div> <a name='function.session-module-name.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_module_name</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$module</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_module_name()</b> gets the name of the current session module. </p> </div> <a name='function.session-module-name.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>module</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>module</tt></i> is specified, that module will be used instead. </p> </dd> </dl> <p> </p> </div> <a name='function.session-module-name.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the current session module. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_is_registered" value="<div id='function.session-is-registered' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-is-registered.php'>session_is_registered</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_is_registered</span> &amp;mdash; <span class='dc-title'>Find out whether a global variable is registered in a session</span></p> </div> <a name='function.session-is-registered.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_is_registered</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$name</tt></span> )</div> <p class='para rdfs-comment'> Finds out whether a global variable is registered in a session. </p> <div class='warning'><b class='warning'>Warning</b><p class='simpara'>This function has been <em class='emphasis'>DEPRECATED</em> as of PHP 5.3.0 and <em class='emphasis'>REMOVED</em> as of PHP 6.0.0. Relying on this feature is highly discouraged.</p></div> </div> <a name='function.session-is-registered.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>name</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The variable name. </p> </dd> </dl> <p> </p> </div> <a name='function.session-is-registered.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>session_is_registered()</b> returns <b><tt class='constant'>TRUE</tt></b> if there is a global variable with the name <i><tt class='parameter'>name</tt></i> registered in the current session, <b><tt class='constant'>FALSE</tt></b> otherwise. </p> </div> <a name='function.session-is-registered.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: If <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var> for PHP 4.0.6 or less) is used, use <a href='http://www.php.net/manual/en/function.isset.php' class='function'>isset()</a> to check a variable is registered in <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var>. <br /> </p></blockquote> <div class='caution'><b class='caution'>Caution</b> <p class='para'> If you are using <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var> (or <var class='varname'>$HTTP_SESSION_VARS</var>), do not use <a href='http://www.php.net/manual/en/function.session-register.php' class='function'>session_register()</a>, <b>session_is_registered()</b> and <a href='http://www.php.net/manual/en/function.session-unregister.php' class='function'>session_unregister()</a>. </p> </div> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_id" value="<div id='function.session-id' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-id.php'>session_id</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_id</span> &amp;mdash; <span class='dc-title'>Get and/or set the current session id</span></p> </div> <a name='function.session-id.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_id</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$id</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_id()</b> is used to get or set the session id for the current session. </p> <p class='para'> The constant <b><tt class='constant'>SID</tt></b> can also be used to retrieve the current name and session id as a string suitable for adding to URLs. See also <a href='http://www.php.net/manual/en/ref.session.php' class='link'>Session handling</a>. </p> </div> <a name='function.session-id.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>id</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>id</tt></i> is specified, it will replace the current session id. <b>session_id()</b> needs to be called before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> for that purpose. Depending on the session handler, not all characters are allowed within the session id. For example, the file session handler only allows characters in the range <i>a-z A-Z 0-9 , (comma) and - (minus)</i>! </p> <blockquote><p><b class='note'>Note</b>: <span class='simpara'> When using session cookies, specifying an <i><tt class='parameter'>id</tt></i> for <b>session_id()</b> will always send a new cookie when <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> is called, regardless if the current session id is identical to the one being set. </span> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.session-id.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> <b>session_id()</b> returns the session id for the current session or the empty string (<i>&amp;quot;&amp;quot;</i>) if there is no current session (no current session id exists). </p> </div> <a name='function.session-id.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.0.0</td> <td align='left'> The <i>,</i> (comma) and <i>-</i> (minus) characters are allowed in the file session handler. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-id.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.session-regenerate-id.php' class='function' rel='rdfs-seeAlso'>session_regenerate_id()</a> - Update the current session id with a newly generated one</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-start.php' class='function' rel='rdfs-seeAlso'>session_start()</a> - Initialize session data</li> <li class='member'><a href='http://www.php.net/manual/en/function.session-set-save-handler.php' class='function' rel='rdfs-seeAlso'>session_set_save_handler()</a> - Sets user-level session storage functions</li> <li class='member'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.save-handler' class='link'>session.save_handler</a> </li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_get_cookie_params" value="<div id='function.session-get-cookie-params' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-get-cookie-params.php'>session_get_cookie_params</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_get_cookie_params</span> &amp;mdash; <span class='dc-title'>Get the session cookie parameters</span></p> </div> <a name='function.session-get-cookie-params.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>session_get_cookie_params</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Gets the session cookie parameters. </p> </div> <a name='function.session-get-cookie-params.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an array with the current session cookie information, the array contains the following items: </p><ul class='itemizedlist'> <li class='listitem'> <span class='simpara'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime' class='link'>&amp;quot;lifetime&amp;quot;</a> - The lifetime of the cookie in seconds. </span> </li> <li class='listitem'> <span class='simpara'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-path' class='link'>&amp;quot;path&amp;quot;</a> - The path where information is stored. </span> </li> <li class='listitem'> <span class='simpara'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-domain' class='link'>&amp;quot;domain&amp;quot;</a> - The domain of the cookie. </span> </li> <li class='listitem'> <span class='simpara'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-secure' class='link'>&amp;quot;secure&amp;quot;</a> - The cookie should only be sent over secure connections. </span> </li> <li class='listitem'> <span class='simpara'> <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-httponly' class='link'>&amp;quot;httponly&amp;quot;</a> - The cookie can only be accessed through the HTTP protocol. </span> </li> </ul><p> </p> </div> <a name='function.session-get-cookie-params.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>5.2.0</td> <td align='left'> The &amp;quot;httponly&amp;quot; entry was added in the returned array. </td> </tr> <tr valign='middle'> <td align='left'>4.0.4</td> <td align='left'> The &amp;quot;secure&amp;quot; entry was added in the returned array. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-get-cookie-params.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime' class='link'>session.cookie_lifetime</a></li> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-path' class='link'>session.cookie_path</a></li> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-domain' class='link'>session.cookie_domain</a></li> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-secure' class='link'>session.cookie_secure</a></li> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cookie-httponly' class='link'>session.cookie_httponly</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.session-set-cookie-params.php' class='function' rel='rdfs-seeAlso'>session_set_cookie_params()</a> - Set the session cookie parameters</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_encode" value="<div id='function.session-encode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-encode.php'>session_encode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_encode</span> &amp;mdash; <span class='dc-title'>Encodes the current session data as a string</span></p> </div> <a name='function.session-encode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_encode</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> <b>session_encode()</b> returns a string with the contents of the current session encoded within. </p> </div> <a name='function.session-encode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the contents of the current session encoded. </p> </div> <a name='function.session-encode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.session-decode.php' class='function' rel='rdfs-seeAlso'>session_decode()</a> - Decodes session data from a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_destroy" value="<div id='function.session-destroy' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-destroy.php'>session_destroy</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_destroy</span> &amp;mdash; <span class='dc-title'>Destroys all data registered to a session</span></p> </div> <a name='function.session-destroy.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_destroy</b></span> ( <span class='methodparam'>void</span> )</div> <p class='simpara'> <b>session_destroy()</b> destroys all of the data associated with the current session. It does not unset any of the global variables associated with the session, or unset the session cookie. To use the session variables again, <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> has to be called. </p> <p class='para'> In order to kill the session altogether, like to log the user out, the session id must also be unset. If a cookie is used to propagate the session id (default behavior), then the session cookie must be deleted. <a href='http://www.php.net/manual/en/function.setcookie.php' class='function'>setcookie()</a> may be used for that. </p> </div> <a name='function.session-destroy.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-destroy.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 Destroying a session with <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;Initialize&amp;nbsp;the&amp;nbsp;session.<br />//&amp;nbsp;If&amp;nbsp;you&amp;nbsp;are&amp;nbsp;using&amp;nbsp;session_name('something'),&amp;nbsp;don't&amp;nbsp;forget&amp;nbsp;it&amp;nbsp;now!<br /></span><span style='color: #0000BB'>session_start</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Unset&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;session&amp;nbsp;variables.<br /></span><span style='color: #0000BB'>$_SESSION&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array();<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;If&amp;nbsp;it's&amp;nbsp;desired&amp;nbsp;to&amp;nbsp;kill&amp;nbsp;the&amp;nbsp;session,&amp;nbsp;also&amp;nbsp;delete&amp;nbsp;the&amp;nbsp;session&amp;nbsp;cookie.<br />//&amp;nbsp;Note:&amp;nbsp;This&amp;nbsp;will&amp;nbsp;destroy&amp;nbsp;the&amp;nbsp;session,&amp;nbsp;and&amp;nbsp;not&amp;nbsp;just&amp;nbsp;the&amp;nbsp;session&amp;nbsp;data!<br /></span><span style='color: #007700'>if&amp;nbsp;(isset(</span><span style='color: #0000BB'>$_COOKIE</span><span style='color: #007700'>[</span><span style='color: #0000BB'>session_name</span><span style='color: #007700'>()]))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>setcookie</span><span style='color: #007700'>(</span><span style='color: #0000BB'>session_name</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>''</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>time</span><span style='color: #007700'>()-</span><span style='color: #0000BB'>42000</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'/'</span><span style='color: #007700'>);<br />}<br /><br /></span><span style='color: #FF8000'>//&amp;nbsp;Finally,&amp;nbsp;destroy&amp;nbsp;the&amp;nbsp;session.<br /></span><span style='color: #0000BB'>session_destroy</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-destroy.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: Only use <a href='http://www.php.net/manual/en/function.session-unset.php' class='function'>session_unset()</a> for older deprecated code that does not use <var class='varname'><a href='http://www.php.net/manual/en/reserved.variables.session.php' class='classname'>$_SESSION</a></var>. <br /> </p></blockquote> </div> <a name='function.session-destroy.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.unset.php' class='function' rel='rdfs-seeAlso'>unset()</a> - Unset a given variable</li> <li class='member'><a href='http://www.php.net/manual/en/function.setcookie.php' class='function' rel='rdfs-seeAlso'>setcookie()</a> - Send a cookie</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_decode" value="<div id='function.session-decode' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-decode.php'>session_decode</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>session_decode</span> &amp;mdash; <span class='dc-title'>Decodes session data from a string</span></p> </div> <a name='function.session-decode.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>bool</span> <span class='methodname'><b>session_decode</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$data</tt></span> )</div> <p class='para rdfs-comment'> <b>session_decode()</b> decodes the session data in <i><tt class='parameter'>data</tt></i> , setting variables stored in the session. </p> </div> <a name='function.session-decode.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>data</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The encoded data to be stored. </p> </dd> </dl> <p> </p> </div> <a name='function.session-decode.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns <b><tt class='constant'>TRUE</tt></b> on success or <b><tt class='constant'>FALSE</tt></b> on failure. </p> </div> <a name='function.session-decode.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.session-encode.php' class='function' rel='rdfs-seeAlso'>session_encode()</a> - Encodes the current session data as a string</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_commit" value="<div id='function.session-commit' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-commit.php'>session_commit</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.4.0, PHP 5)</p><p class='refpurpose'><span class='refname'>session_commit</span> &amp;mdash; <span class='dc-title'>Alias of <a href='http://www.php.net/manual/en/function.session-write-close.php' class='function'>session_write_close()</a></span></p> </div> <a name='function.session-commit.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <p class='simpara'> This function is an alias of: <a href='http://www.php.net/manual/en/function.session-write-close.php' class='function'>session_write_close()</a>. </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_cache_limiter" value="<div id='function.session-cache-limiter' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-cache-limiter.php'>session_cache_limiter</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.0.3, PHP 5)</p><p class='refpurpose'><span class='refname'>session_cache_limiter</span> &amp;mdash; <span class='dc-title'>Get and/or set the current cache limiter</span></p> </div> <a name='function.session-cache-limiter.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>session_cache_limiter</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$cache_limiter</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_cache_limiter()</b> returns the name of the current cache limiter. </p> <p class='para'> The cache limiter defines which cache control HTTP headers are sent to the client. These headers determine the rules by which the page content may be cached by the client and intermediate proxies. Setting the cache limiter to <i>nocache</i> disallows any client/proxy caching. A value of <i>public</i> permits caching by proxies and the client, whereas <i>private</i> disallows caching by proxies and permits the client to cache the contents. </p> <p class='para'> In <i>private</i> mode, the Expire header sent to the client may cause confusion for some browsers, including <span class='productname'>Mozilla</span>. You can avoid this problem by using <i>private_no_expire</i> mode. The <i>Expire</i> header is never sent to the client in this mode. </p> <p class='para'> The cache limiter is reset to the default value stored in <a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cache-limiter' class='link'>session.cache_limiter</a> at request startup time. Thus, you need to call <b>session_cache_limiter()</b> for every request (and before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> is called). </p> </div> <a name='function.session-cache-limiter.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>cache_limiter</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>cache_limiter</tt></i> is specified, the name of the current cache limiter is changed to the new value. </p> <table class='doctable table'> <caption><b>Possible values</b></caption> <thead valign='middle'> <tr valign='middle'> <th>Value</th> <th>Headers sent</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'><i>public</i></td> <td align='left'> <div class='example-contents programlisting'> <div class='headercode'><pre class='headercode'>Expires: (sometime in the future, according session.cache_expires) Cache-Control: public, max-age=(sometime in the future, according to session.cache_expire Last-Modified: (the timestamp of when the session was last saved)</pre> </div> </div> </td> </tr> <tr valign='middle'> <td align='left'><i>private_no_expire</i></td> <td align='left'> <div class='example-contents programlisting'> <div class='headercode'><pre class='headercode'>Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future) Last-Modified: (the timestamp of when the session was last saved)</pre> </div> </div> </td> </tr> <tr valign='middle'> <td align='left'><i>private</i></td> <td align='left'> <div class='example-contents programlisting'> <div class='headercode'><pre class='headercode'>Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future) Last-Modified: (the timestamp of when the session was last saved)</pre> </div> </div> </td> </tr> <tr valign='middle'> <td align='left'><i>nocache</i></td> <td align='left'> <div class='example-contents programlisting'> <div class='headercode'><pre class='headercode'>Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache</pre> </div> </div> </td> </tr> </tbody> </table> </dd> </dl> <p> </p> </div> <a name='function.session-cache-limiter.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the name of the current cache limiter. </p> </div> <a name='function.session-cache-limiter.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.2.0</td> <td align='left'> The <i>private_no_expire</i> cache limiter was added. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.session-cache-limiter.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>session_cache_limiter()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;set&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;limiter&amp;nbsp;to&amp;nbsp;'private'&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>session_cache_limiter</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'private'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$cache_limiter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_cache_limiter</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;cache&amp;nbsp;limiter&amp;nbsp;is&amp;nbsp;now&amp;nbsp;set&amp;nbsp;to&amp;nbsp;</span><span style='color: #0000BB'>$cache_limiter</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-cache-limiter.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cache-limiter' class='link'>session.cache_limiter</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="session_cache_expire" value="<div id='function.session-cache-expire' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.session-cache-expire.php'>session_cache_expire</a></h1> <p class='verinfo'>(PHP 4 &amp;gt;= 4.2.0, PHP 5)</p><p class='refpurpose'><span class='refname'>session_cache_expire</span> &amp;mdash; <span class='dc-title'>Return current cache expire</span></p> </div> <a name='function.session-cache-expire.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>int</span> <span class='methodname'><b>session_cache_expire</b></span> ([ <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$new_cache_expire</tt></span> ] )</div> <p class='para rdfs-comment'> <b>session_cache_expire()</b> returns the current setting of <i>session.cache_expire</i>. </p> <p class='para'> The cache expire is reset to the default value of 180 stored in <i>session.cache_limiter</i> at request startup time. Thus, you need to call <b>session_cache_expire()</b> for every request (and before <a href='http://www.php.net/manual/en/function.session-start.php' class='function'>session_start()</a> is called). </p> </div> <a name='function.session-cache-expire.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>new_cache_expire</tt></i> </span> </dt><dd class='listitem'> <p class='para'> If <i><tt class='parameter'>new_cache_expire</tt></i> is given, the current cache expire is replaced with <i><tt class='parameter'>new_cache_expire</tt></i> . </p> <p class='para'> </p><blockquote><p><b class='note'>Note</b>: <span class='simpara'> Setting <i><tt class='parameter'>new_cache_expire</tt></i> is of value only, if <i>session.cache_limiter</i> is set to a value <em class='emphasis'>different</em> from <i>nocache</i>. </span> </p></blockquote><p> </p> </dd> </dl> <p> </p> </div> <a name='function.session-cache-expire.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the current setting of <i>session.cache_expire</i>. The value returned should be read in minutes, defaults to 180. </p> </div> <a name='function.session-cache-expire.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>session_cache_expire()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;set&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;limiter&amp;nbsp;to&amp;nbsp;'private'&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>session_cache_limiter</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'private'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$cache_limiter&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_cache_limiter</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;set&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;expire&amp;nbsp;to&amp;nbsp;30&amp;nbsp;minutes&amp;nbsp;*/<br /></span><span style='color: #0000BB'>session_cache_expire</span><span style='color: #007700'>(</span><span style='color: #0000BB'>30</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$cache_expire&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>session_cache_expire</span><span style='color: #007700'>();<br /><br /></span><span style='color: #FF8000'>/*&amp;nbsp;start&amp;nbsp;the&amp;nbsp;session&amp;nbsp;*/<br /><br /></span><span style='color: #0000BB'>session_start</span><span style='color: #007700'>();<br /><br />echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;cache&amp;nbsp;limiter&amp;nbsp;is&amp;nbsp;now&amp;nbsp;set&amp;nbsp;to&amp;nbsp;</span><span style='color: #0000BB'>$cache_limiter</span><span style='color: #DD0000'>&amp;lt;br&amp;nbsp;/&amp;gt;'</span><span style='color: #007700'>;<br />echo&amp;nbsp;</span><span style='color: #DD0000'>'The&amp;nbsp;cached&amp;nbsp;session&amp;nbsp;pages&amp;nbsp;expire&amp;nbsp;after&amp;nbsp;</span><span style='color: #0000BB'>$cache_expire</span><span style='color: #DD0000'>&amp;nbsp;minutes'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.session-cache-expire.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cache-expire' class='link'>session.cache_expire</a></li> <li class='member'><a href='http://www.php.net/manual/en/session.configuration.php#ini.session.cache-limiter' class='link'>session.cache_limiter</a></li> <li class='member'><a href='http://www.php.net/manual/en/function.session-cache-limiter.php' class='function' rel='rdfs-seeAlso'>session_cache_limiter()</a> - Get and/or set the current cache limiter</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="serialize" value="<div id='function.serialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.serialize.php'>serialize</a></h1> <p class='verinfo'>(PHP 4, PHP 5)</p><p class='refpurpose'><span class='refname'>serialize</span> &amp;mdash; <span class='dc-title'>Generates a storable representation of a value</span></p> </div> <a name='function.serialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>string</span> <span class='methodname'><b>serialize</b></span> ( <span class='methodparam'><span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <tt class='parameter'>$value</tt></span> )</div> <p class='para rdfs-comment'> Generates a storable representation of a value </p> <p class='para'> This is useful for storing or passing PHP values around without losing their type and structure. </p> <p class='para'> To make the serialized string into a PHP value again, use <a href='http://www.php.net/manual/en/function.unserialize.php' class='function'>unserialize()</a>. </p> </div> <a name='function.serialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>value</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The value to be serialized. <b>serialize()</b> handles all types, except the <a href='http://www.php.net/manual/en/language.types.resource.php' class='type resource'>resource</a>-type. You can even <b>serialize()</b> arrays that contain references to itself. Circular references inside the array/object you are serializing will also be stored. Any other reference will be lost. </p> <p class='para'> When serializing objects, PHP will attempt to call the member function <a href='http://www.php.net/manual/en/language.oop5.magic.php' class='link'>__sleep</a> prior to serialization. This is to allow the object to do any last minute clean-up, etc. prior to being serialized. Likewise, when the object is restored using <a href='http://www.php.net/manual/en/function.unserialize.php' class='function'>unserialize()</a> the <a href='http://www.php.net/manual/en/language.oop5.magic.php' class='link'>__wakeup</a> member function is called. </p> <blockquote><p><b class='note'>Note</b>: Object&amp;#039;s private members have the class name prepended to the member name; protected members have a &amp;#039;*&amp;#039; prepended to the member name. These prepended values have null bytes on either side. <br /> </p></blockquote> </dd> </dl> <p> </p> </div> <a name='function.serialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns a string containing a byte-stream representation of <i><tt class='parameter'>value</tt></i> that can be stored anywhere. </p> </div> <a name='function.serialize.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <b>serialize()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #FF8000'>//&amp;nbsp;$session_data&amp;nbsp;contains&amp;nbsp;a&amp;nbsp;multi-dimensional&amp;nbsp;array&amp;nbsp;with&amp;nbsp;session<br />//&amp;nbsp;information&amp;nbsp;for&amp;nbsp;the&amp;nbsp;current&amp;nbsp;user.&amp;nbsp;&amp;nbsp;We&amp;nbsp;use&amp;nbsp;serialize()&amp;nbsp;to&amp;nbsp;store<br />//&amp;nbsp;it&amp;nbsp;in&amp;nbsp;a&amp;nbsp;database&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;request.<br /><br /></span><span style='color: #0000BB'>$conn&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>odbc_connect</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'webdb'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'php'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'chicken'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>odbc_prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'UPDATE&amp;nbsp;sessions&amp;nbsp;SET&amp;nbsp;data&amp;nbsp;=&amp;nbsp;?&amp;nbsp;WHERE&amp;nbsp;id&amp;nbsp;=&amp;nbsp;?'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$sqldata&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array&amp;nbsp;(</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$session_data</span><span style='color: #007700'>),&amp;nbsp;</span><span style='color: #0000BB'>$_SERVER</span><span style='color: #007700'>[</span><span style='color: #DD0000'>'PHP_AUTH_USER'</span><span style='color: #007700'>]);<br />if&amp;nbsp;(!</span><span style='color: #0000BB'>odbc_execute</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqldata</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$stmt&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>odbc_prepare</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$conn</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'INSERT&amp;nbsp;INTO&amp;nbsp;sessions&amp;nbsp;(id,&amp;nbsp;data)&amp;nbsp;VALUES(?,&amp;nbsp;?)'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>odbc_execute</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$stmt</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>$sqldata</span><span style='color: #007700'>))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Something&amp;nbsp;went&amp;nbsp;wrong..&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>}<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> </div><p> </p> </div> <a name='function.serialize.changelog'></a><div class='refsect1 changelog'> <h3 class='title'>Changelog</h3> <p class='para'> </p><table class='doctable informaltable'> <thead valign='middle'> <tr valign='middle'> <th>Version</th> <th>Description</th> </tr> </thead> <tbody valign='middle' class='tbody'> <tr valign='middle'> <td align='left'>4.0.7</td> <td align='left'> The object serialization process was fixed. </td> </tr> <tr valign='middle'> <td align='left'>4.0.0</td> <td align='left'> When serializing an object, methods are not lost anymore. Please see the <a href='http://www.php.net/manual/en/language.oop.serialization.php' class='link'>Serializing Objects</a> for more information. </td> </tr> </tbody> </table> <p> </p> </div> <a name='function.serialize.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <blockquote><p><b class='note'>Note</b>: It is not possible to serialize PHP built-in objects. <br /> </p></blockquote> </div> <a name='function.serialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.unserialize.php' class='function' rel='rdfs-seeAlso'>unserialize()</a> - Creates a PHP value from a stored representation</li> <li class='member'><a href='http://www.php.net/manual/en/language.oop.serialization.php' class='link'>Serializing Objects</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Serializable::unserialize" value="<div id='serializable.unserialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/serializable.unserialize.php'>Serializable::unserialize</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Serializable::unserialize</span> &amp;mdash; <span class='dc-title'>Constructs the object</span></p> </div> <a name='serializable.unserialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><a href='http://www.php.net/manual/en/language.pseudo-types.php#language.types.mixed' class='type mixed'>mixed</a></span> <span class='methodname'><b>Serializable::unserialize</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$serialized</tt></span> )</div> <p class='para rdfs-comment'> Called during unserialization of the object. </p> <blockquote><p><b class='note'>Note</b>: This method acts as the <a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor' class='link'>constructor</a> of the object. The <b>__construct()</b> method will <em class='emphasis'>not</em> be called after this method. <br /> </p></blockquote> </div> <a name='serializable.unserialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>serialized</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The string representation of the object. </p> </dd> </dl> <p> </p> </div> <a name='serializable.unserialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the original value unserialized. </p> </div> <a name='serializable.unserialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.sleep' class='link'>__wakeup()</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Serializable::serialize" value="<div id='serializable.serialize' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/serializable.serialize.php'>Serializable::serialize</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>Serializable::serialize</span> &amp;mdash; <span class='dc-title'>String representation of object</span></p> </div> <a name='serializable.serialize.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><b>Serializable::serialize</b></span> ( <span class='methodparam'>void</span> )</div> <p class='para rdfs-comment'> Should return the string representation of the object. </p> <blockquote><p><b class='note'>Note</b>: This method acts as the <a href='http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.destructor' class='link'>destructor</a> of the object. The <b>__destruct()</b> method will <em class='emphasis'>not</em> be called after this method. <br /> </p></blockquote> </div> <a name='serializable.serialize.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'>This function has no parameters.</p> </div> <a name='serializable.serialize.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns the string representation of the object or <b><tt class='constant'>NULL</tt></b> </p> </div> <a name='serializable.serialize.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Throws <a href='http://www.php.net/manual/en/class.exception.php' class='classname'>Exception</a> when returning other types then strings and <b><tt class='constant'>NULL</tt></b> </p> </div> <a name='serializable.serialize.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.sleep' class='link'>__sleep()</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="Serializable" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.serializable.php'>The Serializable interface</a></h1> <div class='partintro'> <div id='serializable.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> Interface for customized serializing. </p> <p class='para'> Classes that implement this interface no longer support <a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.sleep' class='link'>__sleep()</a> and <a href='http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.sleep' class='link'>__wakeup()</a>. The method serialize is called whenever an instance needs to be serialized. This does not invoke __destruct() or has any other side effect unless programmed inside the method. When the data is unserialized the class is known and the appropriate unserialize() method is called as a constructor instead of calling __construct(). If you need to execute the standard constructor you may do so in the method. </p> </div> <div id='serializable.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>Serializable</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>Serializable</b> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>string</span> <span class='methodname'><a href='http://www.php.net/manual/en/serializable.serialize.php' class='function'>serialize</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/serializable.unserialize.php' class='function'>unserialize</a></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$serialized</tt></span> )</div> }</div> </div> <div id='serializable.examples' class='section'> <div class='example'> <p><b>Example #1 Basic usage</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>obj&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>Serializable&amp;nbsp;</span><span style='color: #007700'>{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'My&amp;nbsp;private&amp;nbsp;data'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$data</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>getData</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>data</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br /></span><span style='color: #0000BB'>$obj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>obj</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$ser&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>serialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$obj</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>$newobj&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>unserialize</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$ser</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>var_dump</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$newobj</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getData</span><span style='color: #007700'>());<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> string(15) &amp;quot;My private data&amp;quot; </pre></div> </div> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/serializable.serialize.php'>Serializable::serialize</a> &amp;acirc;&amp;#128;&amp;#148; String representation of object</li><li><a href='http://www.php.net/manual/en/serializable.unserialize.php'>Serializable::unserialize</a> &amp;acirc;&amp;#128;&amp;#148; Constructs the object</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SeekableIterator::seek" value="<div id='seekableiterator.seek' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/seekableiterator.seek.php'>SeekableIterator::seek</a></h1> <p class='verinfo'>(PHP 5 &amp;gt;= 5.1.0)</p><p class='refpurpose'><span class='refname'>SeekableIterator::seek</span> &amp;mdash; <span class='dc-title'>Seeks to a position</span></p> </div> <a name='seekableiterator.seek.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'><span class='type void'>void</span></span> <span class='methodname'><b>SeekableIterator::seek</b></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <p class='para rdfs-comment'> Seeks to a given position in the iterator. </p> </div> <a name='seekableiterator.seek.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>position</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The position to seek to. </p> </dd> </dl> <p> </p> </div> <a name='seekableiterator.seek.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> No value is returned. </p> </div> <a name='seekableiterator.seek.errors'></a><div class='refsect1 errors'> <h3 class='title'>Errors/Exceptions</h3> <p class='para'> Implementations should throw an <a href='http://www.php.net/manual/en/class.outofboundsexception.php' class='classname'>OutOfBoundsException</a> if the <i><tt class='parameter'>position</tt></i> is not seekable. </p> </div> <a name='seekableiterator.seek.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 <span class='methodname'><b>SeekableIterator::seek</b></span> example</b></p> <div class='example-contents para'><p> Seek to the item at position 3 in the iterator (<a href='http://www.php.net/manual/en/class.arrayiterator.php' class='classname'>ArrayIterator</a> implements <a href='http://www.php.net/manual/en/class.seekableiterator.php' class='classname'>SeekableIterator</a>). </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(</span><span style='color: #DD0000'>'apple'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'banana'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'cherry'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'damson'</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #DD0000'>'elderberry'</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>ArrayIterator</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$array</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>3</span><span style='color: #007700'>);<br />echo&amp;nbsp;</span><span style='color: #0000BB'>$iterator</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>();<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> damson </pre></div> </div> </div><p> </p> </div> <a name='seekableiterator.seek.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/class.seekableiterator.php' class='classname'>SeekableIterator</a></li> <li class='member'><a href='http://www.php.net/manual/en/class.iterator.php' class='classname'>Iterator</a></li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="SeekableIterator" value="<div> <h1 class='title'><a class='info-url' href='http://www.php.net/manual/en/class.seekableiterator.php'>The SeekableIterator interface</a></h1> <div class='partintro'> <div id='seekableiterator.intro' class='section'> <h2 class='title'>Introduction</h2> <p class='para'> The Seekable iterator. </p> </div> <div id='seekableiterator.synopsis' class='section'> <h2 class='title'>Interface synopsis</h2> <div class='classsynopsis'> <div class='ooclass'><b class='classname'>SeekableIterator</b></div> <div class='classsynopsisinfo'> <span class='ooclass'> <b class='classname'>SeekableIterator</b> </span> <span class='ooclass'> <span class='modifier'>extends</span> <a href='http://www.php.net/manual/en/class.iterator.php' class='classname'>Iterator</a> </span> {</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/seekableiterator.seek.php' class='function'>seek</a></span> ( <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$position</tt></span> )</div> <div class='classsynopsisinfo classsynopsisinfo_comment'>/* Inherited methods */</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>mixed</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.current.php' class='function'>Iterator::current</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>scalar</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.key.php' class='function'>Iterator::key</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.next.php' class='function'>Iterator::next</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>void</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.rewind.php' class='function'>Iterator::rewind</a></span> ( <span class='methodparam'>void</span> )</div> <div class='methodsynopsis dc-description'> <span class='modifier'>abstract</span> <span class='modifier'>public</span> <span class='type'>boolean</span> <span class='methodname'><a href='http://www.php.net/manual/en/iterator.valid.php' class='function'>Iterator::valid</a></span> ( <span class='methodparam'>void</span> )</div> }</div> </div> <div id='seekableiterator.examples' class='section'> <div class='example'> <p><b>Example #1 Basic usage</b></p> <div class='example-contents para'><p> This example demonstrates creating a custom <b class='classname'>SeekableIterator</b>, seeking to a position and handling an invalid position. </p></div> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br /></span><span style='color: #007700'>class&amp;nbsp;</span><span style='color: #0000BB'>MySeekableIterator&amp;nbsp;</span><span style='color: #007700'>implements&amp;nbsp;</span><span style='color: #0000BB'>SeekableIterator&amp;nbsp;</span><span style='color: #007700'>{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$position&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;</span><span style='color: #0000BB'>$array&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;array(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'first&amp;nbsp;element'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'second&amp;nbsp;element'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'third&amp;nbsp;element'</span><span style='color: #007700'>,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #DD0000'>'fourth&amp;nbsp;element'<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>);<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$position</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>$position</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>())&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>OutOfBoundsException</span><span style='color: #007700'>(</span><span style='color: #DD0000'>'invalid&amp;nbsp;seek&amp;nbsp;position&amp;nbsp;(</span><span style='color: #0000BB'>$position</span><span style='color: #DD0000'>)'</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #FF8000'>/*&amp;nbsp;Methods&amp;nbsp;required&amp;nbsp;for&amp;nbsp;Iterator&amp;nbsp;interface&amp;nbsp;*/<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>__construct</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>rewind</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>0</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>array</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position</span><span style='color: #007700'>];<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>key</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>next</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;++</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;</span><span style='color: #0000BB'>valid</span><span style='color: #007700'>()&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;isset(</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>array</span><span style='color: #007700'>[</span><span style='color: #0000BB'>$this</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>position</span><span style='color: #007700'>]);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br />}<br /><br />try&amp;nbsp;{<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$it&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;new&amp;nbsp;</span><span style='color: #0000BB'>MySeekableIterator</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>2</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>current</span><span style='color: #007700'>(),&amp;nbsp;</span><span style='color: #DD0000'>'\n'</span><span style='color: #007700'>;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$it</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>seek</span><span style='color: #007700'>(</span><span style='color: #0000BB'>10</span><span style='color: #007700'>);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />}&amp;nbsp;catch&amp;nbsp;(</span><span style='color: #0000BB'>OutOfBoundsException&amp;nbsp;$e</span><span style='color: #007700'>)&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo&amp;nbsp;</span><span style='color: #0000BB'>$e</span><span style='color: #007700'>-&amp;gt;</span><span style='color: #0000BB'>getMessage</span><span style='color: #007700'>();<br />}<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> first element third element second element invalid seek position (10) </pre></div> </div> </div> </div> </div> <h2>Table of Contents</h2><ul class='chunklist chunklist_reference'><li><a href='http://www.php.net/manual/en/seekableiterator.seek.php'>SeekableIterator::seek</a> &amp;acirc;&amp;#128;&amp;#148; Seeks to a position</li></ul> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
<string id="scandir" value="<div id='function.scandir' class='refentry'> <div class='refnamediv'> <h1 class='refname'><a class='info-url' href='http://www.php.net/manual/en/function.scandir.php'>scandir</a></h1> <p class='verinfo'>(PHP 5)</p><p class='refpurpose'><span class='refname'>scandir</span> &amp;mdash; <span class='dc-title'>List files and directories inside the specified path</span></p> </div> <a name='function.scandir.description'></a><div class='refsect1 description'> <h3 class='title'>Description</h3> <div class='methodsynopsis dc-description'> <span class='type'>array</span> <span class='methodname'><b>scandir</b></span> ( <span class='methodparam'><span class='type'>string</span> <tt class='parameter'>$directory</tt></span> [, <span class='methodparam'><span class='type'>int</span> <tt class='parameter'>$sorting_order</tt><span class='initializer'> = 0</span></span> [, <span class='methodparam'><span class='type'>resource</span> <tt class='parameter'>$context</tt></span> ]] )</div> <p class='para rdfs-comment'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of files and directories from the <i><tt class='parameter'>directory</tt></i> . </p> </div> <a name='function.scandir.parameters'></a><div class='refsect1 parameters'> <h3 class='title'>Parameters</h3> <p class='para'> </p><dl> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>directory</tt></i> </span> </dt><dd class='listitem'> <p class='para'> The directory that will be scanned. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>sorting_order</tt></i> </span> </dt><dd class='listitem'> <p class='para'> By default, the sorted order is alphabetical in ascending order. If the optional <i><tt class='parameter'>sorting_order</tt></i> is set to non-zero, then the sort order is alphabetical in descending order. </p> </dd> <dt class='varlistentry'> <span class='term'><i><tt class='parameter'>context</tt></i> </span> </dt><dd class='listitem'> <p class='para'> For a description of the <i><tt class='parameter'>context</tt></i> parameter, refer to <a href='http://www.php.net/manual/en/ref.stream.php' class='link'>the streams section</a> of the manual. </p> </dd> </dl> <p> </p> </div> <a name='function.scandir.returnvalues'></a><div class='refsect1 returnvalues'> <h3 class='title'>Return Values</h3> <p class='para'> Returns an <a href='http://www.php.net/manual/en/language.types.array.php' class='type array'>array</a> of filenames on success, or <b><tt class='constant'>FALSE</tt></b> on failure. If <i><tt class='parameter'>directory</tt></i> is not a directory, then boolean <b><tt class='constant'>FALSE</tt></b> is returned, and an error of level <b><tt class='constant'>E_WARNING</tt></b> is generated. </p> </div> <a name='function.scandir.examples'></a><div class='refsect1 examples'> <h3 class='title'>Examples</h3> <p class='para'> </p><div class='example'> <p><b>Example #1 A simple <b>scandir()</b> example</b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$files1&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>scandir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>$files2&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>scandir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>,&amp;nbsp;</span><span style='color: #0000BB'>1</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files1</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files2</span><span style='color: #007700'>);<br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; . [1] =&amp;gt; .. [2] =&amp;gt; bar.php [3] =&amp;gt; foo.txt [4] =&amp;gt; somedir ) Array ( [0] =&amp;gt; somedir [1] =&amp;gt; foo.txt [2] =&amp;gt; bar.php [3] =&amp;gt; .. [4] =&amp;gt; . ) </pre></div> </div> </div><p> </p> <p class='para'> </p><div class='example'> <p><b>Example #2 PHP 4 alternatives to <b>scandir()</b></b></p> <div class='example-contents programlisting'> <div class='phpcode'><code><span style='color: #000000'> <span style='color: #0000BB'>&amp;lt;?php<br />$dir&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #DD0000'>'/tmp'</span><span style='color: #007700'>;<br /></span><span style='color: #0000BB'>$dh&amp;nbsp;&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>opendir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dir</span><span style='color: #007700'>);<br />while&amp;nbsp;(</span><span style='color: #0000BB'>false&amp;nbsp;</span><span style='color: #007700'>!==&amp;nbsp;(</span><span style='color: #0000BB'>$filename&amp;nbsp;</span><span style='color: #007700'>=&amp;nbsp;</span><span style='color: #0000BB'>readdir</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$dh</span><span style='color: #007700'>)))&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span style='color: #0000BB'>$files</span><span style='color: #007700'>[]&amp;nbsp;=&amp;nbsp;</span><span style='color: #0000BB'>$filename</span><span style='color: #007700'>;<br />}<br /><br /></span><span style='color: #0000BB'>sort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>rsort</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>print_r</span><span style='color: #007700'>(</span><span style='color: #0000BB'>$files</span><span style='color: #007700'>);<br /><br /></span><span style='color: #0000BB'>?&amp;gt;</span> </span> </code></div> </div> <div class='example-contents para'><p>The above example will output something similar to:</p></div> <div class='example-contents screen'> <div class='cdata'><pre> Array ( [0] =&amp;gt; . [1] =&amp;gt; .. [2] =&amp;gt; bar.php [3] =&amp;gt; foo.txt [4] =&amp;gt; somedir ) Array ( [0] =&amp;gt; somedir [1] =&amp;gt; foo.txt [2] =&amp;gt; bar.php [3] =&amp;gt; .. [4] =&amp;gt; . ) </pre></div> </div> </div><p> </p> </div> <a name='function.scandir.notes'></a><div class='refsect1 notes'> <h3 class='title'>Notes</h3> <div class='tip'><b class='tip'>Tip</b><p class='simpara'>A URL can be used as a filename with this function if the <a href='http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen' class='link'>fopen wrappers</a> have been enabled. See <a href='http://www.php.net/manual/en/function.fopen.php' class='function'>fopen()</a> for more details on how to specify the filename. See the <a href='http://www.php.net/manual/en/wrappers.php' class='xref'>List of Supported Protocols/Wrappers</a> for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.</p></div> </div> <a name='function.scandir.seealso'></a><div class='refsect1 seealso'> <h3 class='title'>See Also</h3> <p class='para'> </p><ul class='simplelist'> <li class='member'><a href='http://www.php.net/manual/en/function.opendir.php' class='function' rel='rdfs-seeAlso'>opendir()</a> - Open directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.readdir.php' class='function' rel='rdfs-seeAlso'>readdir()</a> - Read entry from directory handle</li> <li class='member'><a href='http://www.php.net/manual/en/function.glob.php' class='function' rel='rdfs-seeAlso'>glob()</a> - Find pathnames matching a pattern</li> <li class='member'><a href='http://www.php.net/manual/en/function.is-dir.php' class='function' rel='rdfs-seeAlso'>is_dir()</a> - Tells whether the filename is a directory</li> <li class='member'><a href='http://www.php.net/manual/en/function.sort.php' class='function' rel='rdfs-seeAlso'>sort()</a> - Sort an array</li> </ul><p> </p> </div> </div><div class='copyright-info'>PHP Documentation is licensed under the <a class='copyright-url' href='http://creativecommons.org/licenses/by/3.0/legalcode'>Creative Commons  Attribution 3.0 License</a>. &copy; 2001-2009 the PHP  Documentation Group.</div> " />
</strings>
